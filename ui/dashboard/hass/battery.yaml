###################################################################################################
## Batteries Subview
#TODO replace now button, colour battery
###################################################################################################
title: "Batteries"
path: hass-battery
icon: mdi:battery
type: sections
max_columns: 4
sections:
  - type: grid
    cards:
      - type: grid
        columns: 1
        square: false
        cards:
          - type: horizontal-stack
            cards:
              - type: entities
                title: "Settings"
                entities:
                  - type: custom:template-entity-row
                    entity: input_number.battery_alert_threshold
                    name: "Low Battery Threshold"
                    state: "{{ states('input_number.battery_alert_threshold') | int(0) }} %"
                    tap_action:
                      action: more-info

                  - entity: alert.low_battery

                  - type: custom:hui-element
                    card_type: markdown
                    content: |-
                      {%- set ns_batteries = namespace(batteries={}) %}
                      {%- for entity_id in integration_entities('battery_notes')
                            if entity_id is search('_battery_type$', ignorecase=False) -%}
                      {%- set battery_type = states[entity_id].state %}
                      {%- set battery_split = battery_type.split('Ã—') %}
                      {%- if battery_split | length > 1 %}
                      {%- set battery_type = battery_split[-1] | trim %}
                      {%- set battery_count = battery_split[0] | int(1) %}
                      {%- else %}
                      {%- set battery_count = 1 %}
                      {%- endif %}
                      {%- if battery_type not in ns_batteries.batteries %}
                      {%- set ns_batteries.batteries = dict(ns_batteries.batteries,
                            **{battery_type: battery_count}) %}
                      {%- else %}
                      {%- set ns_batteries.batteries = dict(ns_batteries.batteries,
                            **{battery_type: ns_batteries.batteries[battery_type] + battery_count}) %}
                      {%- endif %}
                      {%- endfor -%}
                      <table width="90%" align="center"><tr><th align="left">Battery Type</th><th align="left">Count</th></tr>
                      {%- for bt in ns_batteries.batteries | dictsort(False, 'value') | reverse -%}
                        <tr><td>{{ bt[0] }}</td><td>{{ [bt][0][1] }}</td>
                      {%- endfor -%}
                      </table>
                    card_mod:
                      style: |
                        ha-card {
                          border: none !important;
                        }

          - type: entities
            title: "Search"
            entities:
              - entity: select.battery_types
                name: "Battery Type Device Search"
                icon: mdi:magnify

              - type: custom:hui-element
                card_type: markdown
                content: |-
                  {% set search_term = states('select.battery_types') %}
                  {% if search_term not in ['', 'unknown', 'unavailable'] %}
                    {% set devices = states
                      | selectattr('attributes.battery_type', 'defined')
                      | selectattr('entity_id', 'search', '_battery_type$') | list %}
                    {% set matching_devices = devices
                      | selectattr('attributes.battery_type', 'string')
                      | selectattr('attributes.battery_type', 'eq', search_term)
                      | map(attribute='name') | unique | list %}
                    {% if matching_devices | count > 0 %}
                      - {{ matching_devices  | join('\n- ') | replace('Battery type','') }}
                    {% endif %}
                  {% endif %}
                card_mod:
                  style: |
                    ha-card {
                      border: none !important;
                    }

  - type: grid
    column_span: 3
    cards:
      - type: vertical-stack
        grid_options:
          columns: full
        cards:
          - type: custom:auto-entities
            filter:
              include:
                - entity_id: "/sensor.*battery_plus/"
              exclude:
                - entity_id: "/sensor.*battery_plus_low/"
            sort:
              method: state
              reverse: true
            card:
              type: custom:flex-table-card
              title: "Battery Details"
              clickable: true
              columns:
                - data: device_name
                  name: "Device"
                  modify: if (x == "" ) {{ "-" }} else {{ x }}
                - data: area
                  name: "Area"
                - data: state
                  name: "State"
                  suffix: "%"
                  modify: parseFloat(x).toFixed(0)
                - data: battery_type
                  name: "Type"
                  modify: if (x == "" ) {{ "-" }} else {{ x }}
                - data: battery_quantity
                  name: "Qty"
                  modify: if (x == "" ) {{ "-" }} else {{ x }}
                - data: battery_last_reported
                  name: "Last Report"
                  modify: |-
                    if(x.length == 0)
                    {"-"}
                    else {
                      var date = new Date(x);
                      String(date.getDate()).padStart(2,'0')+"/"+
                      (String(date.getMonth()+ 1).padStart(2,'0'))+"/"+
                      date.getFullYear()
                    }
                - data: battery_last_replaced
                  name: "Replaced"
                  modify: |-
                    if(x.length == 0)
                    {"-"}
                    else {
                      var date = new Date(x);
                      String(date.getDate()).padStart(2,'0')+"/"+
                      (String(date.getMonth()+ 1).padStart(2,'0'))+"/"+
                      date.getFullYear()
                    }
              css:
                table+: 'padding-top: 5px;'
                'tbody tr:nth-child(even)': 'background-color: #a2542f6;'
                td.left: 'padding: 10px 10px 10px 10px'
