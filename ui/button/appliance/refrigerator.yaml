###################################################################################################
## Refrigerator Button
###################################################################################################
type: custom:button-card
template: menu_button
entity: sensor.refrigerator
icon: mdi:fridge-outline
show_state: true
state_display: >
  [[[
    if (states['binary_sensor.wan'].state == 'off'
          || isNaN(states['sensor.refrigerator_fridge_temp'].state)
          || isNaN(states['sensor.refrigerator_freezer_temp'].state))
      return 'OFFLINE';
    else
      var fridge = parseFloat(states['sensor.refrigerator_fridge_temp'].state).toFixed(1);
      var freeze = parseFloat(states['sensor.refrigerator_freezer_temp'].state).toFixed(1);
      return fridge + '°' + ' / ' + freeze + '°';
  ]]]
styles:
  icon:
    - color: >
        [[[
          if (states['binary_sensor.wan'].state == 'off')
            return 'var(--disabled-color)';
          else if (states['binary_sensor.refrigerator_door_open'].state == 'on')
            return 'var(--entity-active-color)';
          else if (states['switch.refrigerator_ice_plus'].state == 'on')
            return 'var(--state-climate-cool-color)';
          else
            return 'var(--entity-icon-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['binary_sensor.lg_thinq_integration_connected'].state == 'off'
              || states['binary_sensor.wan'].state == 'off')
            return 'var(--background-critical-color)';
          else if (states['sensor.refrigerator'].state == 'unknown'
              || states['sensor.refrigerator'].state == 'unavailable')
            return 'var(--background-severe-color)';
          else
            return 'var(--card-background-color)';
        ]]]
tap_action:
  action: navigate
  navigation_path: /config/devices/device/3bb526202bd05392cf605e1b2f3d2aa9
hold_action:
  action: perform-action
  perform_action: switch.toggle
  target:
    entity_id: switch.refrigerator_ice_plus
