###############################################################################
## Camera Button
###############################################################################
type: custom:button-card
template: menu_button
entity: binary_sensor.camera_event_detected
icon: >
  [[[
    if (states['input_boolean.camera_event_detection'].state == 'off')
      return 'mdi:cctv-off';
    else
      return 'mdi:cctv';
  ]]]
styles:
  icon:
    - color: >
        [[[
          if (states['binary_sensor.offline_cameras_alert'].state == 'on')
            return 'var(--entity-critical-color)';
          else if (states['input_boolean.camera_event_detection'].state == 'off')
            return 'var(--entity-severe-color)';
          else if (states['binary_sensor.camera_event_detected'].state == 'on')
            return 'var(--state-active-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['sensor.frigate_status'].state == 'error'
              || states['sensor.frigate_status'].state == 'unknown'
              || states['sensor.frigate_status'].state == 'unavailable')
            return 'var(--entity-button-critical-color)';
          else if (states['input_boolean.camera_event_notifications'].state == 'off'
              || states['input_boolean.camera_event_tts'].state == 'off')
            return 'var(--entity-button-warning-color)';
          else if (states['alert.offline_cameras'].state == 'off')
            return 'var(--entity-button-alert-off-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: navigate
  navigation_path: security-cameras
double_tap_action:
  action: navigate
  navigation_path: !secret FRIGATE_URL
hold_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      timeout: 100000
      content: !include /config/ui/card/camera/camera_settings.yaml
      card_mod:
        style:
          ha-dialog$: >
            {% from 'style.jinja' import popup_style %}
            {{ popup_style() }}
