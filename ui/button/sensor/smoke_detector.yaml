###############################################################################
## Smoke Detector Button
###############################################################################
type: custom:button-card
template: menu_button
entity: binary_sensor.smoke_alarm
icon: mdi:smoke-detector-variant
show_name: false
show_state: true
state_display: >
  [[[
    if (states['binary_sensor.nest_protect_upstairs_smoke_status'].state == 'on'
        || states['binary_sensor.nest_protect_downstairs_smoke_status'].state == 'on')
      return 'SMOKE!';
    else if (states['binary_sensor.nest_protect_upstairs_co_status'].state == 'on'
        || states['binary_sensor.nest_protect_downstairs_co_status'].state == 'on')
      return 'CO';
    else if (states['binary_sensor.nest_protect_upstairs_heat_status'].state == 'on'
        || states['binary_sensor.nest_protect_downstairs_heat_status'].state == 'on')
      return 'FIRE';
    else if (states['binary_sensor.nest_protect_upstairs_co_test'].state == 'on'
        || states['binary_sensor.nest_protect_downstairs_co_test'].state == 'on')
      return 'CO TEST';
    else if (states['binary_sensor.nest_protect_upstairs_smoke_test'].state == 'on'
        || states['binary_sensor.nest_protect_downstairs_smoke_test'].state == 'on')
      return 'SMOKE TEST';
    else if (states['binary_sensor.nest_protect_upstairs_speaker_test'].state == 'on'
        || states['binary_sensor.nest_protect_downstairs_speaker_test'].state == 'on')
      return 'SPEAKER TEST';
    else if (states['binary_sensor.nest_protect_upstairs_battery_health'].state == 'on'
        || states['binary_sensor.nest_protect_downstairs_battery_health'].state == 'on')
      return 'LOW BATTERY';
    else
      return ' ';
  ]]]
styles:
  icon:
    - color: >
        [[[
          if (states['binary_sensor.nest_protect_upstairs_smoke_status'].state == 'on'
            || states['binary_sensor.nest_protect_downstairs_smoke_status'].state == 'on')
            return 'var(--entity-critical-color)';
          else if (states['binary_sensor.nest_protect_upstairs_co_status'].state == 'on'
            || states['binary_sensor.nest_protect_downstairs_co_status'].state == 'on')
            return 'var(--entity-critical-color)';
          else if (states['binary_sensor.nest_protect_upstairs_heat_status'].state == 'on'
            || states['binary_sensor.nest_protect_downstairs_heat_status'].state == 'on')
            return 'var(--entity-critical-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['binary_sensor.nest_protect_upstairs_connected'].state == 'off'
              || states['binary_sensor.nest_protect_downstairs_connected'].state == 'off'
              || states['binary_sensor.wan'].state == 'off')
            return 'var(--entity-button-critical-color)';
          else if (states['binary_sensor.nest_protect_upstairs_co_test'].state == 'on'
              || states['binary_sensor.nest_protect_downstairs_co_test'].state == 'on')
            return 'var(--entity-button-minor-color)';
          else if (states['binary_sensor.nest_protect_upstairs_smoke_test'].state == 'on'
              || states['binary_sensor.nest_protect_downstairs_smoke_test'].state == 'on')
            return 'var(--entity-button-minor-color)';
          else if (states['binary_sensor.nest_protect_upstairs_speaker_test'].state == 'on'
              || states['binary_sensor.nest_protect_downstairs_smoke_test'].state == 'on')
            return 'var(--entity-button-minor-color)';
          else if (states['binary_sensor.nest_protect_upstairs_battery_health'].state == 'on'
              || states['binary_sensor.nest_protect_downstairs_battery_health'].state == 'on')
            return 'var(--entity-button-severe-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      content: !include /config/ui/card/sensor/smoke_detectors.yaml
      timeout: 100000
      card_mod:
        style:
          ha-dialog$: |
            div.mdc-dialog__scrim {
              backdrop-filter: grayscale(100%) brightness(25%) !important;
              -webkit-backdrop-filter: grayscale(100%) brightness(25%) !important;
            }
            div.mdc-dialog div.mdc-dialog__container div.mdc-dialog__surface {
              background: transparent !important;
            }
