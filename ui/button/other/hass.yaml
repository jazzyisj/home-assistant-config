###############################################################################
## Hass Button
###############################################################################
type: custom:button-card
template: menu_button
entity: sensor.hass_status
styles:
  icon:
    - color: >
        [[[
          var hass = states['sensor.hass_status'].state;
          var device = states['sensor.device_status'].state;
          var server = states['sensor.server_status'].state;
          var network = states['sensor.network_status'].state;
          var zwave = states['sensor.zwave_status'].state;
          var pihole = states['sensor.pi_hole_status'].state;

          if (hass == 'critical'
              || device == 'critical'
              || server == 'critical'
              || network == 'critical'
              || zwave == 'critical'
              || pihole == 'critical'
              || states['binary_sensor.kiosk_online'].state == 'off')
            return 'var(--entity-critical-color)';
          else if (hass == 'severe'
              || device == 'severe'
              || server == 'severe'
              || network == 'severe'
              || zwave == 'severe'
              || pihole == 'severe')
            return 'var(--entity-severe-color)';
          else if (hass == 'warning'
              || device == 'warning'
              || server == 'warning'
              || network == 'warning'
              || zwave == 'warning'
              || pihole == 'warning'
              || states['binary_sensor.low_battery_alert'].state == 'on')
            return 'var(--entity-warning-color)';
          else if (hass == 'minor'
              || device == 'minor'
              || server == 'minor'
              || network == 'minor'
              || zwave == 'minor'
              || pihole == 'minor')
            return 'var(--entity-minor-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['input_boolean.startup_pending'].state == 'on')
            return 'var(--entity-button-warning-color)';
          else if (states['binary_sensor.disabled_hass_alerts'].state == 'on')
            return 'var(--entity-button-alert-off-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: navigate
  navigation_path: hass
double_tap_action:
  action: call-service
  service: script.reset_hass_alerts
