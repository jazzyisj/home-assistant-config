###############################################################################
## Light Button
###############################################################################
type: custom:button-card
template: menu_button
entity: binary_sensor.lights_on
styles:
  icon:
    - color: >
        [[[
          if (states['binary_sensor.lights_on'].state == 'on'
              && states['switch.adaptive_lighting_rgb_lights'].state == 'on')
            return 'rgb(' + states['switch.adaptive_lighting_rgb_lights'].attributes['rgb_color'] + ')';
          else if (states['binary_sensor.lights_on'].state == 'on')
            return 'var(--state-active-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['binary_sensor.unavailable_lights'].state == 'on')
            return 'var(--entity-button-critical-color)';
          else if (states['switch.adaptive_lighting'].state == 'off')
            return 'var(--entity-button-minor-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: navigate
  navigation_path: lights
double_tap_action:
  action: perform-action
  perform_action: script.turn_light_off
  data:
    activate_timer: false
    reset: true
hold_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      content: !include /config/ui/card/light/light_settings.yaml
      timeout: 100000
      card_mod:
        style:
          ha-dialog$: >
            {% from 'style.jinja' import popup_style %}
            {{ popup_style() }}
