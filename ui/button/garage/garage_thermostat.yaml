###############################################################################
## Garage Thermostat Button
###############################################################################
type: custom:button-card
template: thermostat_button
entity: switch.garage_heat
state_display: >
  [[[
    if (isNaN(states['climate.garage_thermostat'].attributes['current_temperature']))
      return 'N/A';
    else
      return (Math.round(states['climate.garage_thermostat'].attributes['current_temperature'] * 10) / 10) + '°';
  ]]]
label: >
  [[[
    if (states['binary_sensor.garage_furnace'].state == 'unknown'
          || states['binary_sensor.garage_furnace'].state == 'unavailable')
      return 'OFFLINE';
    else if (states['climate.garage_thermostat'].state == 'off')
      return 'OFF';
    else if (states['climate.garage_thermostat'].attributes['preset_mode'] == 'away')
      return 'FREEZE: ' + states['climate.garage_thermostat'].attributes['temperature'] + '°';
    else
      return states['climate.garage_thermostat'].state.toUpperCase() + ': '
        + states['climate.garage_thermostat'].attributes['temperature'] + '°';
  ]]]
styles:
  label:
    - color: >
        [[[
          if (states['binary_sensor.garage_furnace'].state == 'unknown'
              || states['binary_sensor.garage_furnace'].state == 'unavailable')
            return 'var(--entity-warning-color)';
          else if (states['climate.garage_thermostat'].attributes['preset_mode'] == 'away'
              && states['climate.garage_thermostat'].state == 'heat')
            return 'var(--state-climate-cool-color)';
          else if (states['climate.garage_thermostat'].state == 'heat')
            return 'var(--state-climate-heat-color)';
          else
            return 'var(--primary-text-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['binary_sensor.garage_furnace_connected'].state == 'off')
            return 'var(--entity-button-critical-color)';
          else if (states['binary_sensor.garage_furnace_cloud'].state == 'off')
            return 'var(--entity-button-warning-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      content: !include /config/ui/card/garage/garage_climate_settings.yaml
      timeout: 120000
      card_mod:
        style:
          ha-dialog$: |
            div.mdc-dialog__scrim {
              backdrop-filter: grayscale(100%) brightness(25%) !important;
              -webkit-backdrop-filter: grayscale(100%) brightness(25%) !important;
            }
            div.mdc-dialog div.mdc-dialog__container div.mdc-dialog__surface {
              background: transparent !important;
            }
double_tap_action:
  action: call-service
  service: switch.turn_off
  data:
    entity_id: switch.garage_heat
hold_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      content: !include /config/ui/card/garage/garage_climate_settings.yaml
      timeout: 120000
      card_mod:
        style:
          ha-dialog$: |
            div.mdc-dialog__scrim {
              backdrop-filter: grayscale(100%) brightness(25%) !important;
              -webkit-backdrop-filter: grayscale(100%) brightness(25%) !important;
            }
            div.mdc-dialog div.mdc-dialog__container div.mdc-dialog__surface {
              background: transparent !important;
            }
