###############################################################################
## Power Use Button
###############################################################################
type: custom:button-card
entity: sensor.current_power_use_kw
template: power_button
name: "POWER"
state_display: >
  [[[
    if (states['sensor.current_power_use_kw'].state == 'unknown'
        || states['sensor.current_power_use_kw'].state == 'unavailable')
      return "OFFLINE";
    else
      return states['sensor.current_power_use_kw'].state + ' kW';
  ]]]
label: >
  [[[
    if (states['sensor.current_energy_tarrif_display'].state == 'unknown'
        || states['sensor.current_energy_tarrif_display'].state == 'unavailable')
      return "OFFLINE";
    else
      return states['sensor.current_energy_tarrif_display'].state;
  ]]]
styles:
  state:
    - color: >
        [[[
          var power = states['sensor.current_power_use_kw'].state;
          if (power < 8)
            return 'var(--entity-ok-color)';
          else if (power < 9)
            return 'var(--entity-minor-color)';
          else if (power < 10)
            return 'var(--entity-warning-color)';
          else if (power < 11)
            return 'var(--entity-severe-color)';
          else
            return 'var(--entity-critical-color)';
        ]]]
  label:
    - color: >
        [[[
          var tariff = states['select.daily_energy_consumption'].state;
          if (tariff == 'on_peak')
            return 'var(--entity-critical-color)';
          else if (tariff == 'mid_peak')
            return 'var(--entity-warning-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['binary_sensor.house_energy_monitor_connected'].state == 'off')
            return 'var(--entity-button-critical-color)';
          else if (states['binary_sensor.house_energy_monitor_cloud'].state == 'off')
            return 'var(--entity-button-warning-color)';
          else if (states['alert.power_use'].state == 'off')
            return 'var(--entity-button-alert-off-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      content: !include /config/ui/card/energy/home_energy_monitor.yaml
      timeout: 100000
      card_mod:
        style:
          ha-dialog$: >
            {% from 'style.jinja' import popup_style %}
            {{ popup_style() }}
double_tap_action:
  action: navigate
  navigation_path: /config/devices/device/a5364d8d9a10ca8a4459fc184b7812a6
hold_action:
  action: navigate
  navigation_path: /energy
