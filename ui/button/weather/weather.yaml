###################################################################################################
## Weather Button
###################################################################################################
type: custom:button-card
entity: sensor.current_condition
size: 60%
show_name: true
name: "[[[ return states['sensor.outdoor_temperature'].state + 'Â°' ]]]"
show_entity_picture: true
entity_picture: "[[[ return 'https://weather.gc.ca/weathericons/' + states['sensor.windsor_icon_code'].state + '.gif' ]]]"
show_state: false
show_label: true
label: "[[[ return states['sensor.windsor_current_condition'].state.toUpperCase(); ]]]"
styles:
  grid:
    - grid-template-areas: '"i n" "i l"'
    - grid-template-rows: 50% 50%
    - grid-template-columns: 40% 60%
  name:
    - font-size: 2em
    - font-weight: bold
    - color: >
        [[[
          if (states['binary_sensor.outdoor_high_temperature_alert'].state == 'on')
            return 'var(--high-temp-color)';
          else if (states['binary_sensor.outdoor_low_temperature_alert'].state == 'on')
            return 'var(--low-temp-color)';
          else
            return 'var(--primary-text-color)';
        ]]]
  label:
    - font-size: 1em
tap_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      title: "Weather Forecast"
      size: wide
      content: !include /config/ui/card/weather/weather_forecast.yaml
double_tap_action:
  action: navigate
  navigation_path: storm-radar
hold_action:
  action: perform-action
  perform_action: button.press
  target:
    entity_id: button.weather_report
