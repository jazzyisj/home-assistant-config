###################################################################################################
## Outdoor Temperature Button
###################################################################################################
type: custom:button-card
template: weather_button
entity: sensor.outdoor_temperature_trend
state_display: >
  [[[
    var temp = parseFloat(states['sensor.outdoor_temperature'].state);
    if (isNaN(temp))
      return 'OFFLINE';
    else
      return temp + ' Â°C';
  ]]]
styles:
  icon:
    - color: >
        [[[
          var temp = parseFloat(states['sensor.outdoor_temperature'].state);
          if (isNaN(temp))
            return 'var(--entity-disabled-color)';
          else if (temp < -20)
            return 'rgb(143, 89, 169)';
          else if (temp < -15)
            return 'rgb(157, 219, 217)';
          else if (temp < -10)
            return 'rgb(106, 191, 181)';
          else if (temp < -5)
            return 'rgb(100, 166, 189)';
          else if (temp < -0)
            return 'rgb(93, 133, 198)';
          else if (temp < 5)
            return 'rgb(68, 125, 99)';
          else if (temp < 10)
            return 'rgb(128, 147, 24)';
          else if (temp < 15)
            return 'rgb(209, 212, 78)';
          else if (temp < 20)
            return 'rgb(243, 183, 4)';
          else if (temp < 25)
            return 'rgb(250, 223, 86)';
          else if (temp < 30)
            return 'rgb(232, 83, 25)';
          else if (temp < 35)
            return 'rgb(209, 54, 54)';
          else if (temp < 40)
            return 'rgb(177,  67,  45)';
          else
            return 'rgb(71, 14, 0)';
        ]]]
  card:
    - background-color: >
        [[[
          var temp = parseFloat(states['sensor.outdoor_temperature'].state);
          if (isNaN(temp))
            return 'var(--entity-button-critical-color)';
          else if (states['binary_sensor.outdoor_high_temperature_alert'].state == 'on')
            return 'var(--entity-button-high-temp-color)';
          else if (states['binary_sensor.outdoor_low_temperature_alert'].state == 'on')
            return 'var(--entity-button-low-temp-color)';
          else if (states['binary_sensor.outdoor_temperature_above_normal'].state == 'on')
            return 'rgba(249, 183, 0, 0.2)';
          else if (states['binary_sensor.outdoor_temperature_below_normal'].state == 'on')
            return 'rgba(13, 171, 211, 0.2)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: navigate
  navigation_path: outdoor-temperature
double_tap_action:
  action: perform-action
  perform_action: alert.turn_on
  target:
    entity_id:
      - alert.outdoor_high_temperature
      - alert.outdoor_low_temperature
hold_action:
  action: navigate
  navigation_path: temperature-map
