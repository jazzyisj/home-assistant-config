###################################################################################################
## Cloud Coverage Button
###################################################################################################
type: custom:button-card
template: weather_button
entity: sensor.cloud_coverage
icon: >
  [[[
    var cloud = parseInt(states['sensor.cloud_coverage'].state);
    if (isNaN(cloud))
      return 'mdi:cloud';
    else if (cloud < 20)
      return 'mdi:cloud-outline';
    else if (cloud < 50)
      return 'mdi:weather-partly-cloudy';
    else if (cloud < 80)
      return 'mdi:clouds';
    else
      return 'mdi:cloud';
  ]]]
state_display: >
  [[[
    var cloud = parseInt(states['sensor.cloud_coverage'].state);
    if (isNaN(cloud))
      return 'OFFLINE';
    else
      return cloud + ' %';
  ]]]
styles:
  icon:
    - color: >
        [[[
          var cloud = parseInt(states['sensor.cloud_coverage'].state);
          if (isNaN(cloud))
            return 'var(--disabled-color)';
          else if (cloud < 10)
            return 'var(--entity-inactive-color)';
          else if (cloud < 20)
            return 'rgb(146, 208, 239)';
          else if (cloud < 30)
            return 'rgb(144, 192, 223)';
          else if (cloud < 40)
            return 'rgb(140, 179, 206)';
          else if (cloud < 50)
            return 'rgb(136, 165, 189)';
          else if (cloud < 60)
            return 'rgb(131, 151, 172)';
          else if (cloud < 70)
            return 'rgb(125, 138, 155)';
          else if (cloud < 80)
            return 'rgb(117, 125, 138)';
          else if (cloud < 90)
            return 'rgb(109, 113, 121)';
          else
            return 'rgb(100, 101, 104)';
        ]]]
  card:
    - background-color: >
        [[[
          var cloud = parseInt(states['sensor.cloud_coverage'].state);
          if (isNaN(cloud))
            return 'var(--background-critical-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: navigate
  navigation_path: atmospheric-conditions
double_tap_action:
  action: none
hold_action:
  action: navigate
  navigation_path: cloud-radar
