###################################################################################################
## Holiday Day Button
###################################################################################################
type: custom:button-card
template: menu_button
entity: sensor.next_holiday
show_state: true
state_display: >
  [[[
    if (states['binary_sensor.wan'].state == 'off'
        || states['binary_sensor.google_calendar_connected_alert'].state == 'on')
      return ' ';
    else
      return states['sensor.next_holiday'].attributes['holiday'].toUpperCase();
  ]]]
show_label: true
label: >
  [[[
    if (states['binary_sensor.wan'].state == 'off'
        || states['binary_sensor.google_calendar_connected_alert'].state == 'on')
      return 'OFFLINE';
    else
      return states['sensor.next_holiday'].attributes['display'].toUpperCase();
  ]]]
styles:
  icon:
    - color: >
        [[[
          var day = states['sensor.next_holiday'].attributes['display'];
          if (states['binary_sensor.wan'].state == 'off'
              || states['binary_sensor.google_calendar_connected_alert'].state == 'on')
            return 'var(--entity-disabled-color)';
          else if (day == 'Today' || day == 'Tomorrow')
            return 'var(--calendar-holiday-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['binary_sensor.wan'].state == 'off'
              || states['binary_sensor.google_calendar_connected_alert'].state == 'on')
            return 'var(--entity-button-critical-color)';
          else if (states['sensor.next_holiday'].attributes['display'] == 'unknown')
            return 'var(--entity-button-severe-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: navigate
  navigation_path: schedule-settings
