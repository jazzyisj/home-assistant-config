###############################################################################
## Alarm Clock Auto Button
###############################################################################
type: custom:button-card
entity: input_boolean.alarm_clock_launcher_auto
template: alarm_clock_button
show_name: true
name: "AUTO"
icon: "[[[ return states['sensor.alarm_clock_auto_next_alarm'].attributes.icon; ]]]"
show_state: true
state_display: >
  [[[
    if (states['sensor.alarm_clock_auto_next_alarm'].attributes['status'] == 'pending')
      return states['sensor.alarm_clock_auto_next_alarm'].attributes['12hour'].toUpperCase();
    else
      return states['sensor.alarm_clock_auto_next_alarm'].attributes['status'].toUpperCase();
  ]]]
styles:
  icon:
    - color: >
        [[[
          if (states['sensor.alarm_clock_auto_next_alarm'].attributes['status'] == 'failed')
            return 'var(--entity-critical-color)';
          else if (states['sensor.alarm_clock_auto_next_alarm'].attributes.status == 'snoozed')
            return 'var(--entity-severe-color)';
          else if (states['sensor.alarm_clock_auto_next_alarm'].attributes.status == 'playing')
            return 'var(--primary-color)';
          else if (states['sensor.alarm_clock_auto_next_alarm'].attributes.status != 'off')
            return 'var(--state-active-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['input_boolean.alarm_clock_launcher_auto'].state == 'on'
                && states['input_boolean.media_launcher_lock'].state == 'on')
            return 'var(--entity-button-severe-color)';
          else if (states['input_boolean.alarm_clock_launcher_auto'].state == 'on')
            return 'var(--entity-button-selected-color)';
          else
            return 'var(--ha-card-background)';
        ]]]

tap_action:
  action: toggle
double_tap_action:
  action: call-service
  service: script.alarm_clock_stop
hold_action:
  action: call-service
  service: script.alarm_clock_auto_toggle
