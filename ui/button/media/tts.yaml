###############################################################################
## TTS Announcement Button
###############################################################################
type: custom:button-card
template: menu_button
entity: input_boolean.tts
show_state: >
  [[[
    if (states['sensor.tts_saved_messages'].state != '0')
      return true;
    else
      return false;
  ]]]
state_display: >
  [[[
      if (states['sensor.tts_saved_messages'].state != '0')
        return states['sensor.tts_saved_messages'].state + ' MESSAGES';
      else
        return ' ';
  ]]]
icon: >
  [[[
    if (states['input_boolean.tts_enabled'].state == 'off')
      return 'mdi:account-voice-off';
    else
      return 'mdi:account-voice';
  ]]]
styles:
  card:
    - background-color: >
        [[[
          if (states['binary_sensor.wan'].state == 'off')
            return 'var(--entity-button-critical-color)';
          else if (states['input_boolean.media_launcher_tts'].state == 'on'
              && states['input_boolean.media_launcher_lock'].state == 'on')
            return 'var(--entity-button-severe-color)';
          else if (states['input_boolean.media_launcher_tts'].state == 'on')
            return 'var(--entity-button-selected-color)';
          else if (states['sensor.tts_saved_messages'].state != '0')
            return 'var(--entity-button-primary-color)';
          else if (states['input_boolean.tts_override'].state == 'on')
            return 'var(--entity-button-minor-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
  icon:
    - color: >
        [[[
          if (states['input_boolean.tts'].state == 'on')
            return 'var(--state-active-color)';
          else if (states['switch.system_mute'].state == 'on')
            return 'var(--entity-warning-color)';
          else if (states['input_boolean.tts_enabled'].state == 'off')
            return 'var(--entity-warning-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
    - animation: >
        [[[
          if (states['input_boolean.tts'].state == 'on')
            return 'blink 3s linear infinite';
          else
            return 'none';
        ]]]
tap_action:
  action: call-service
  service: input_boolean.toggle
  data:
    entity_id: input_boolean.media_launcher_tts
double_tap_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      content: !include /config/ui/card/media/tts_saved_messages.yaml
      timeout: 100000
      card_mod:
        style:
          ha-dialog$: >
            {% from 'style.jinja' import popup_style %}
            {{ popup_style() }}
hold_action:
  action: call-service
  service: input_boolean.toggle
  data:
    entity_id: input_boolean.tts_enabled
