###################################################################################################
## Thermostat Button
###################################################################################################
type: custom:button-card
template: thermostat_button
entity: climate.house
name: "HOUSE"
state_display: >
  [[[
    if (states['binary_sensor.nest_integration_connected'].state != 'on')
      return ' ';
    else
      return parseFloat(states['sensor.thermostat_temperature'].state).toFixed(1);
  ]]]
label: >
  [[[
    if (states['binary_sensor.nest_integration_connected'].state != 'on')
      return 'OFFLINE';
    else
      var hvac_mode = states['climate.house'].state;
      var hvac_state = states['sensor.thermostat_hvac_state'].state;
      var temp = parseFloat(states['sensor.indoor_temperature_target'].state).toFixed(1);

      if ((hvac_mode == 'heat_cool' && hvac_state == 'heating')
          || (hvac_mode == 'heat_cool' && hvac_state == 'cooling')
          || (hvac_mode == 'heat' || hvac_mode == 'cool'))
        return temp + 'Â°';
      else
        return hvac_mode.toUpperCase();
  ]]]
styles:
  label:
    - color: >
        [[[
          var hvac_mode = states['climate.house'].state;
          if (hvac_mode == 'heat')
            return 'var(--state-climate-heat-color)';
          else if (hvac_mode == 'cool')
            return 'var(--state-climate-cool-color)';
          else if (hvac_mode == 'heat_cool')
            return 'var(--state-climate-auto-color)';
          else
            return 'var(--primary-text-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['binary_sensor.nest_integration_connected'].state != 'on'
              || states['binary_sensor.wan'].state == 'off')
            return 'var(--background-critical-color)';
          else
            var hvac_state = states['sensor.thermostat_hvac_state'].state;
            if (states['binary_sensor.climate_window_door_open_alert'].state == 'on')
              return 'var(--entity-warning-color)';
            else if (hvac_state == 'heating')
              return 'var(--background-heating-color)';
            else if (hvac_state == 'cooling')
              return 'var(--background-cooling-color)';
            else if (states['input_boolean.climate_manual_mode'].state == 'on')
              return 'var(--background-active-color)';
            else
              return 'var(--card-background-color)';
        ]]]
tap_action:
  action: more-info
hold_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      title: "Climate Settings"
      content: !include /config/ui/card/climate/climate_settings.yaml
