###############################################################################
## Atmospheric Conditions Detail Graph
###############################################################################
type: custom:apexcharts-card
config_templates: weather_detail
apex_config:
  title:
    text: "7 Day History - 5 Day Forecast"
    align: center
    margin: 24
    offsetY: 12
    style:
      fontSize: 20px
graph_span: 2w
span:
  offset: +5d
now:
  show: true
  color: red
  label: "Now"
yaxis:
  - id: pressure
    show: true
    min: 980
    max: 1035
    apex_config:
      tickAmount: 5
      decimalsInFloat: 0
      forceNiceScale: true
      title:
        text: "Barmetric Pressure (hPa)"
        rotate: -90
        style:
          fontSize: 20px
          fontFamily: Roboto
          fontWeight: normal
      labels:
        style:
          fontSize: 16px
          fontWeight: normal

  - id: clouds
    show: false
    min: 0
    max: 100
    apex_config:
      tickAmount: 5
      decimalsInFloat: 0

  - id: uv_index
    show: true
    min: 0
    max: 12
    apex_config:
      tickAmount: 5
      decimalsInFloat: 0
      forceNiceScale: true
      title:
        text: "UV Index"
        rotate: -90
        style:
          fontSize: 20px
          fontFamily: Roboto
          fontWeight: normal
      labels:
        style:
          fontSize: 16px
          fontWeight: normal

  - id: aqi
    show: true
    opposite: true
    min: 0
    max: ~50
    apex_config:
      tickAmount: 5
      decimalsInFloat: 0
      forceNiceScale: true
      title:
        text: "Ozone Index (AQI)"
        rotate: -90
        style:
          fontSize: 20px
          fontFamily: Roboto
          fontWeight: normal
      labels:
        style:
          fontSize: 16px
          fontWeight: normal

series:
  - entity: sensor.barometric_pressure
    name: "Pressure"
    yaxis_id: pressure
    extend_to: now
    group_by:
      duration: 6h
    color: rgb(242, 235, 36)

  - entity: sensor.hourly_weather
    name: " "
    yaxis_id: pressure
    group_by:
      duration: 6h
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.pressure];
          });
    color: rgb(242, 235, 36)

  - entity: sensor.cloud_coverage
    name: "Clouds"
    yaxis_id: clouds
    extend_to: now
    stroke_width: 1
    opacity: 0.8
    color: rgb(150, 150, 150)
    color_threshold: !include /config/ui/graph/include/cloud_cover_line_color.yaml

  - entity: sensor.hourly_weather
    name: " "
    yaxis_id: clouds
    stroke_width: 1
    opacity: 0.8
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.cloud_coverage];
          });
    color: rgb(150, 150, 150)
    color_threshold: !include /config/ui/graph/include/cloud_cover_line_color.yaml

  - entity: sensor.cloud_coverage
    name: " "
    yaxis_id: clouds
    extend_to: now
    type: area
    show:
      legend_value: false
    stroke_width: 0
    color: rgb(20, 20, 20)
    color_threshold: !include /config/ui/graph/include/cloud_cover_area_color.yaml

  - entity: sensor.hourly_weather
    name: " "
    yaxis_id: clouds
    type: area
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.cloud_coverage];
          });
    stroke_width: 0
    color: rgb(20, 20, 20)
    color_threshold: !include /config/ui/graph/include/cloud_cover_area_color.yaml

  - entity: sensor.ozone
    name: "Ozone"
    yaxis_id: aqi
    extend_to: now

  - entity: sensor.uv_index
    name: "UV Index"
    yaxis_id: uv_index
    extend_to: now
    color: rgb(53, 117, 21)
    color_threshold: !include /config/ui/graph/include/uv_index_line_color.yaml

  - entity: sensor.hourly_weather
    name: " "
    yaxis_id: uv_index
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.uv_index];
          });
    color: rgb(53, 117, 21)
    color_threshold: !include /config/ui/graph/include/uv_index_line_color.yaml

  - entity: sensor.uv_index
    name: " "
    yaxis_id: uv_index
    type: area
    extend_to: now
    show:
      legend_value: false
    stroke_width: 0
    color: rgb(20, 20, 20)
    color_threshold: !include /config/ui/graph/include/uv_index_area_color.yaml

  - entity: sensor.hourly_weather
    name: " "
    yaxis_id: uv_index
    type: area
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.uv_index];
          });
    show:
      legend_value: false
    stroke_width: 0
    color: rgb(20, 20, 20)
    color_threshold: !include /config/ui/graph/include/uv_index_area_color.yaml
