###############################################################################
## Precipitation Detail Graph
###############################################################################
type: custom:apexcharts-card
config_templates: weather_detail
apex_config:
  title:
    text: "7 Day History - 5 Day Forecast"
    align: center
    margin: 24
    offsetY: 12
    style:
      fontSize: 20px
stacked: true
graph_span: 2w
span:
  offset: +5d
now:
  show: true
  color: red
  label: "Now"
yaxis:
  - id: pressure
    show: true
    min: ~1000
    max: ~1035
    apex_config:
      tickAmount: 5
      decimalsInFloat: 0
      forceNiceScale: true
      title:
        text: "Barometric Pressure (hPa)"
        rotate: -90
        style:
          fontSize: 20px
          fontFamily: Roboto
          fontWeight: normal
      labels:
        style:
          fontSize: 16px
          fontWeight: normal

  - id: probability
    show: false
    min: 0
    max: 100
    apex_config:
      tickAmount: 5

  - id: clouds
    show: false
    min: 0
    max: 100
    apex_config:
      tickAmount: 5
      decimalsInFloat: 0

  - id: precip_rate
    show: true
    opposite: true
    min: 0
    max: ~50
    apex_config:
      tickAmount: 5
      decimalsInFloat: 1
      forceNiceScale: true
      title:
        text: "Precipitation Rate (mm/h)"
        rotate: -90
        style:
          fontSize: 20px
          fontFamily: Roboto
          fontWeight: normal
      labels:
        style:
          fontSize: 16px
          fontWeight: normal

  - id: precip
    show: false
    min: 0
    max: ~20
    apex_config:
      tickAmount: 5
      decimalsInFloat: 0
series:
  - entity: sensor.barometric_pressure
    name: "Pressure"
    yaxis_id: pressure
    extend_to: now
    group_by:
      duration: 6h
    float_precision: 0
    stroke_width: 2
    color: rgb(242, 235, 36)

  - entity: sensor.hourly_weather
    name: "Pressure Forecast"
    yaxis_id: pressure
    group_by:
      duration: 6h
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.pressure];
          });
    stroke_width: 2
    color: rgb(242, 235, 36)

  - entity: sensor.cloud_coverage
    name: "Clouds"
    yaxis_id: clouds
    extend_to: now
    stroke_width: 1
    opacity: 0.8
    color: rgb(150, 150, 150)
    color_threshold: !include /config/ui/graph/include/cloud_cover_line_color.yaml

  - entity: sensor.hourly_weather
    name: " "
    yaxis_id: clouds
    stroke_width: 1
    opacity: 0.8
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.cloud_coverage];
          });
    color: rgb(20, 20, 20)
    color_threshold: !include /config/ui/graph/include/cloud_cover_line_color.yaml

  - entity: sensor.cloud_coverage
    name: " "
    yaxis_id: clouds
    extend_to: now
    type: area
    show:
      legend_value: false
    stroke_width: 0
    color: rgb(20, 20, 20)
    color_threshold: !include /config/ui/graph/include/cloud_cover_area_color.yaml

  - entity: sensor.hourly_weather
    name: " "
    yaxis_id: clouds
    type: area
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.cloud_coverage];
          });
    stroke_width: 0
    color: rgb(20, 20, 20)
    color_threshold: !include /config/ui/graph/include/cloud_cover_area_color.yaml

  - entity: sensor.precipitation_probability
    name: "Probability"
    yaxis_id: probability
    extend_to: now
    stroke_width: 1
    color: rgb(117, 43, 181)
    color_threshold: !include /config/ui/graph/include/precipitation_probability_line_color.yaml

  - entity: sensor.hourly_weather
    name: " "
    yaxis_id: probability
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.precipitation_probability];
          });
    stroke_width: 1
    color: rgb(117, 43, 181)
    color_threshold: !include /config/ui/graph/include/precipitation_probability_line_color.yaml

  - entity: sensor.precipitation_probability
    name: " "
    yaxis_id: probability
    type: area
    extend_to: now
    stroke_width: 0
    color_threshold: !include /config/ui/graph/include/precipitation_probability_area_color.yaml

  - entity: sensor.hourly_weather
    name: " "
    yaxis_id: probability
    type: area
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.precipitation_probability];
          });
    stroke_width: 0
    color: rgb(20, 20, 20)
    color_threshold: !include /config/ui/graph/include/precipitation_probability_area_color.yaml

  - entity: sensor.rain_accumulation_today
    name: "Rain"
    yaxis_id: precip
    type: column
    float_precision: 1
    offset: +1h # template resets just past midnight, offset to avoid duplicate values
    group_by:
      duration: 1d
    stack_group: precip
    show:
      datalabels: true
    stroke_width: 5
    color: rgb(15, 45, 191)

  - entity: sensor.daily_weather
    name: "Expected"
    yaxis_id: precip
    type: column
    float_precision: 1
    group_by:
      duration: 1d
    stack_group: precip
    data_generator: |
      return entity.attributes.forecast.map((entry) => {
            return [new Date(entry.datetime).getTime(), entry.precipitation];
          });
    show:
      datalabels: true
    stroke_width: 5
    color: rgb(49, 14, 115)

  - entity: sensor.snow_accumulation_today
    name: "Snow"
    yaxis_id: precip
    type: column
    float_precision: 1
    extend_to: now
    group_by:
      duration: 1d
    stack_group: precip
    show:
      datalabels: true
    stroke_width: 5
    color: rgb(27, 147, 227)

  - entity: sensor.ice_accumulation_today
    name: "Ice Today"
    yaxis_id: precip
    type: column
    float_precision: 1
    extend_to: now
    group_by:
      duration: 1d
    stack_group: precip
    show:
      datalabels: true
    stroke_width: 5
    color: rgb(120, 48, 116)

  - entity: sensor.precipitation_intensity
    name: "Rate"
    yaxis_id: precip_rate
    type: line
    float_precision: 3
    extend_to: now
    stroke_width: 1
    color_threshold: !include /config/ui/graph/include/precipitation_rate_line_color.yaml

  - entity: sensor.precipitation_intensity
    name: " "
    yaxis_id: precip_rate
    type: area
    float_precision: 3
    extend_to: now
    stroke_width: 0
    color: rgb(20, 20, 20)
    color_threshold: !include /config/ui/graph/include/precipitation_rate_area_color.yaml
