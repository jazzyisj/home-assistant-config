###############################################################################
## Disk Use Bar Entity
###############################################################################
type: custom:fold-entity-row
padding: 5
head:
  type: custom:bar-card
  name: "Disk Use"
  entity: sensor.disk_use_percent_home
  entity_row: true
  icon: mdi:harddisk
  positions:
    icon: outside
    name: outside
    indicator: inside
    value: outside
  direction: right
  height: 15px
  width: 56%
  decimal: 0
  min: 0
  max: 100
  severity: !include /config/ui/bar/include/disk_use_bar_color.yaml
  card_mod:
    class: bar_sub_card
    style: |
      :host {
        --paper-item-icon-color:
          {% if states('sensor.disk_use_status') == 'critical'
              or states('sensor.hass_files_status') == 'critical' %} var(--entity-critical-color)
          {% elif states('sensor.disk_use_status') == 'severe'
              or states('sensor.hass_files_status') == 'severe' %} var(--entity-severe-color)
          {% elif states('sensor.disk_use_status') == 'warning'
              or states('sensor.hass_files_status') == 'warning' %} var(--entity-warning-color)
          {% elif states('sensor.disk_use_status') == 'minor'
              or states('sensor.hass_files_status') == 'minor' %} var(--entity-minor-color)
          {% else %} var(--state-icon-color)
          {% endif %}
        ;
      }
entities:
  - entity: sensor.home_assistant_log_size
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set status = states('sensor.hass_log_size_status') %}
            {% if status == 'critical' %} var(--entity-critical-color)
            {% elif status == 'severe' %} var(--entity-severe-color)
            {% elif status == 'warning' %} var(--entity-warning-color)
            {% elif status == 'minor' %} var(--entity-minor-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - type: custom:template-entity-row
    name: "Backup Disk Use"
    icon: mdi:folder-sync
    state: "{{ state_attr('sensor.backup_state', 'size_in_home_assistant') }}"
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set status = states('sensor.backup_size_status') %}
            {% if status == 'critical' %} var(--entity-critical-color)
            {% elif status == 'severe' %} var(--entity-severe-color)
            {% elif status == 'warning' %} var(--entity-warning-color)
            {% elif status == 'minor' %} var(--entity-minor-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: sensor.clips # frigate clips
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set status = states('sensor.frigate_clips_size_status') %}
            {% if status == 'critical' %} var(--entity-critical-color)
            {% elif status == 'severe' %} var(--entity-severe-color)
            {% elif status == 'warning' %} var(--entity-warning-color)
            {% elif status == 'minor' %} var(--entity-minor-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: sensor.home_assistant_v2_db_size
      name: "Hassio Database"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set status = states('sensor.hass_db_size_status') %}
              {% if status == 'critical' %} var(--entity-critical-color)
              {% elif status == 'severe' %} var(--entity-severe-color)
              {% elif status == 'warning' %} var(--entity-warning-color)
              {% elif status == 'minor' %} var(--entity-minor-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - type: call-service
        service: script.purge_database
        name: "Purge HASS Database"
        action_name: "PURGE"

  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: sensor.alarm_snapshots
      name: "Alarm Snapshot Disk Use"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set status = states('sensor.alarm_snapshots_size_status') %}
              {% if status == 'critical' %} var(--entity-critical-color)
              {% elif status == 'severe' %} var(--entity-severe-color)
              {% elif status == 'warning' %} var(--entity-warning-color)
              {% elif status == 'minor' %} var(--entity-minor-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - type: call-service
        service: shell_command.alarm_snapshots_purge_all
        icon: mdi:delete-sweep
        name: "Purge Camera Snapshots"
        action_name: "PURGE"

  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: sensor.tts
      name: "TTS Cache Disk Use"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set status = states('sensor.tts_size_status') %}
              {% if status == 'critical' %} var(--entity-critical-color)
              {% elif status == 'severe' %} var(--entity-severe-color)
              {% elif status == 'warning' %} var(--entity-warning-color)
              {% elif status == 'minor' %} var(--entity-minor-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - type: call-service
        service: shell_command.tts_purge_all
        icon: mdi:delete-sweep
        name: "Purge TTS Cache"
        action_name: "PURGE"
