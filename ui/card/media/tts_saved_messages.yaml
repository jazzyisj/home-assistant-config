###############################################################################
## TTS Saved Messages
###############################################################################
type: custom:vertical-stack-in-card
cards:
  - type: entities
    title: "Saved Messages"
    entities:
      - entity: sensor.tts_saved_messages
        name: "Saved Messages"

      - type: buttons
        entities:
          - entity: script.tts_play_saved_messages
            name: Play Saved
            tap_action:
              action: call-service
              service: script.tts_play_saved_messages
              service_data:
                skip_none: false

          - entity: script.tts_clear_saved_messages
            name: Clear Saved
            tap_action:
              action: call-service
              service: script.tts_clear_saved_messages

          - entity: script.tts_play_last_message
            name: Repeat Last
            tap_action:
              action: call-service
              service: script.tts_play_last_message
        card_mod:
          style:
            hui-buttons-base $: |
              .ha-scrollbar {
                justify-content: center;
              }

  - type: conditional
    conditions:
      - entity: sensor.tts_saved_messages
        state_not: 0
    card:
      type: markdown
      content: |
        {%- set msgnum = namespace(value=0) %}
        {%- if states.sensor.tts_saved_messages.attributes is defined -%}
        {%- for key,value in states.sensor.tts_saved_messages.attributes.items()
              if key not in ['icon','friendly_name'] %}
        {%- if loop.index % 2 == 1 %}
        {%- set msgnum.value = msgnum.value + 1 %}
        - **{{ value }}**
        <sup>{{ as_datetime(state_attr('sensor.tts_saved_messages','msg_time' ~ msgnum.value)).strftime('%A, %B %-d at %-I:%M %p') }}</sup>

        {% endif -%}
        {%- endfor -%}
        {%- endif -%}
card_mod:
  class: basic
