###############################################################################
## TTS Settings
###############################################################################
type: entities
title: "TTS Announcement Settings"
show_header_toggle: false
state_color: true
entities:
  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: input_boolean.tts_enabled
    entities:
      - entity: input_boolean.hass_tts_enabled
      - entity: input_boolean.kiosk_tts_enabled
      - entity: input_boolean.jason_phone_tts_enabled
      - entity: input_boolean.tts

  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: sensor.tts_saved_messages
      name: "Saved Messages"
      tap_action:
        action: fire-dom-event
        browser_mod:
          service: browser_mod.popup
          data:
            content: !include /config/ui/card/media/tts_saved_messages.yaml
            timeout: 100000
            card_mod:
              style:
                ha-dialog$: >
                  {% from 'style.jinja' import popup_style %}
                  {{ popup_style() }}
    entities:
      - entity: button.tts_play_saved_messages
      - entity: button.tts_clear_saved_messages

      - type: conditional
        conditions:
          - entity: sensor.tts_saved_messages
            state_not: 0
          - entity: sensor.tts_saved_messages
            state_not: unknown
          - entity: sensor.tts_saved_messages
            state_not: unavailable
        row:
          type: custom:hui-element
          card_type: markdown
          content: |
            {%- set msgnum = namespace(value=0) %}
            {%- if states.sensor.tts_saved_messages.attributes is defined -%}
            {%- for key, value in states.sensor.tts_saved_messages.attributes.items()
                  if key not in ['icon', 'friendly_name'] %}
            {%- if loop.index % 2 == 1 %}
            {%- set msgnum.value = msgnum.value + 1 %}
            - **{{ value }}**
            <sup>{{ as_datetime(state_attr('sensor.tts_saved_messages', 'msg_time' ~ msgnum.value)).strftime('%A, %B %-d at %-I:%M %p') }}</sup>

            {% endif -%}
            {%- endfor -%}
            {%- endif -%}
          card_mod:
            class: sub_card

  - entity: button.tts_play_last_message
  - entity: input_boolean.tts_override

  - type: conditional
    conditions:
      - entity: input_boolean.tts_override
        state: "on"
    row:
      entity: input_select.tts_service_override
      name: "TTS Service"

  - type: conditional
    conditions:
      - entity: input_boolean.tts_override
        state: "on"
      - entity: input_select.tts_service_override
        state: "HASS Cloud"
    row:
      entity: input_select.hass_cloud_language_override

  - type: conditional
    conditions:
      - entity: input_boolean.tts_override
        state: "on"
      - entity: input_select.tts_service_override
        state: "HASS Cloud"
    row:
      entity: select.hass_cloud_voice_override

  - type: conditional
    conditions:
      - entity: input_boolean.tts_override
        state: "on"
    row:
      entity: select.tts_media_player_override
      name: "Media Player"

  - type: conditional
    conditions:
      - entity: input_boolean.tts_override
        state: "on"
    row:
      entity: input_number.tts_volume_override
      name: "Volume"

  - type: conditional
    conditions:
      - entity: input_boolean.tts_override
        state: "off"
    row:
      type: custom:fold-entity-row
      padding: 5
      head:
        type: custom:template-entity-row
        name: "Day Time"
        icon: mdi:volume-high
        state: ""
      entities:
        - entity: input_select.tts_service
          name: "TTS Service"

        - type: conditional
          conditions:
            - entity: input_select.tts_service
              state: "HASS Cloud"
          row:
            entity: input_select.hass_cloud_language

        - type: conditional
          conditions:
            - entity: input_select.tts_service
              state: "HASS Cloud"
          row:
            entity: select.hass_cloud_voice

        - entity: select.tts_media_player
          name: "Media Player"

        - entity: input_number.tts_volume
          name: "Volume"

  - type: conditional
    conditions:
      - entity: input_boolean.tts_override
        state: "off"
    row:
      type: custom:fold-entity-row
      padding: 5
      head:
        type: custom:template-entity-row
        name: "Quiet Time"
        icon: mdi:volume-medium
        state: ""
      entities:
        - entity: input_select.tts_service_quiet
          name: "TTS Service"

        - type: conditional
          conditions:
            - entity: input_select.tts_service_quiet
              state: "HASS Cloud"
          row:
            entity: input_select.hass_cloud_language_quiet

        - type: conditional
          conditions:
            - entity: input_select.tts_service
              state: "HASS Cloud"
          row:
            entity: select.hass_cloud_voice_quiet

        - entity: select.tts_media_player_quiet
          name: "Media Player"

        - entity: input_number.tts_volume_quiet
          name: "Volume"

  - type: conditional
    conditions:
      - entity: input_boolean.tts_override
        state: "off"
    row:
      type: custom:fold-entity-row
      padding: 5
      head:
        type: custom:template-entity-row
        name: "Night Time"
        icon: mdi:weather-night
        state: ""
      entities:
        - entity: input_select.tts_service_night
          name: "TTS Service Night"

        - type: conditional
          conditions:
            - entity: input_select.tts_service_night
              state: "HASS Cloud"
          row:
            entity: input_select.hass_cloud_language_night

        - type: conditional
          conditions:
            - entity: input_select.tts_service
              state: "HASS Cloud"
          row:
            entity: select.hass_cloud_voice_night

        - entity: select.tts_media_player_night
          name: "Media Player"

        - entity: input_number.tts_volume_night
          name: "Volume"

  - type: conditional
    conditions:
      - entity: input_boolean.tts_override
        state: "off"
    row:
      type: custom:fold-entity-row
      padding: 5
      head:
        type: custom:template-entity-row
        name: "Alert"
        icon: mdi:alert
        state: ""
      entities:
        - entity: input_select.hass_cloud_language_alert
          name: "Language"

        - entity: select.hass_cloud_voice_alert
          name: "Voice"

        - entity: select.tts_media_player_alert
          name: "Media Player"

        - entity: input_number.tts_volume_alert
          name: "Volume"

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert | selectattr('attributes.category', 'eq', 'tts') | map(attribute='entity_id') | list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.tts_alerts
        card_mod:
          style: |
            {% from 'style.jinja' import alert_switch %}
            {{ alert_switch('input_boolean.tts_alerts') }}
card_mod:
  class: basic
