###############################################################################
## Light Settings
###############################################################################
type: entities
title: "Light Settings"
icon: mdi:lightbulb
show_header_toggle: false
state_color: true
entities:
  - type: custom:auto-entities
    filter:
      include:
        - domain: light
          attributes:
            type: dimmer
        - domain: light
          attributes:
            type: switch
        - domain: light
          attributes:
            type: bulb
      exclude:
        - state: "off"
        - attributes:
            rgb_light: control
        - attributes:
            rgb_light: slave
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.lights_on

  - type: custom:auto-entities
    filter:
      include:
        - domain: timer
          attributes:
            type: light
          options:
            double_tap_action:
              action: perform-action
              perform_action: timer.cancel
              target:
                entity_id: this.entity_id
            hold_action:
              action: perform-action
              perform_action: timer.start
              target:
                entity_id: this.entity_id
      exclude:
        - state: idle
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.light_in_use
      group_config:
        secondary_info: last-changed

  - type: custom:auto-entities
    filter:
      template: "{{ state_attr('binary_sensor.unavailable_lights', 'entity_id') }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.unavailable_lights
      group_config:
        secondary_info: last-changed

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: binary_sensor.nighttime_illuminance_lights
      name: "Illuminance Settings"
      state: >
        {% if is_state('binary_sensor.nighttime_illuminance_lights', 'on') %} Nightime
        {% elif is_state('binary_sensor.daytime_illuminance_lights', 'on') %} Daytime
        {% elif is_state('binary_sensor.bathroom_illuminance_lights', 'on') %} Bathroom
        {% else %} Off
        {% endif %}
      active: >
        {{ is_state('binary_sensor.nighttime_illuminance_lights', 'on')
            or is_state('binary_sensor.daytime_illuminance_lights', 'on')
            or is_state('binary_sensor.bathroom_illuminance_lights', 'on') }}
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('input_boolean.night_lights_enabled', 'off')
                  or is_state('input_boolean.night_lights_override', 'on')
                  or is_state('input_boolean.day_lights_enabled', 'off') %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }

    entities:
      - type: custom:fold-entity-row
        padding: 10
        head:
          entity: binary_sensor.nighttime_illuminance_lights
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state('input_boolean.night_lights_enabled', 'off')
                      or is_state('input_boolean.night_lights_override', 'on') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
              }
        entities:
          - entity: input_boolean.night_lights_enabled
            card_mod:
              style: |
                :host {
                  --switch-unchecked-button-color: var(--entity-warning-color);
                  --switch-unchecked-track-color: var(--entity-warning-color);
                  ;
                }

          - entity: input_boolean.night_lights_override
            card_mod:
              style: |
                :host {
                  --switch-checked-button-color: var(--entity-warning-color);
                  --switch-checked-track-color: var(--entity-warning-color);
                  ;
                }

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: "on"
            row:
              entity: input_number.night_illuminance_threshold
              name: "Night Lux Threshold"

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: "on"
            row:
              entity: input_number.lights_on_sun_elevation
              name: "Night Lux On Elevation"

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: "on"
            row:
              entity: input_number.lights_off_sun_elevation
              name: "Night Lux Off Elevation"

      - type: custom:fold-entity-row
        padding: 10
        head:
          entity: binary_sensor.daytime_illuminance_lights
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state('input_boolean.day_lights_enabled', 'off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
              }
        entities:
          - entity: input_boolean.day_lights_enabled
            card_mod:
              style: |
                :host {
                  --switch-unchecked-button-color: var(--entity-warning-color);
                  --switch-unchecked-track-color: var(--entity-warning-color);
                  ;
                }

          - type: conditional
            conditions:
              - entity: input_boolean.day_lights_enabled
                state: "on"
            row:
              entity: input_number.day_illuminance_threshold
              name: "Day Lux Threshold"

          - type: conditional
            conditions:
              - entity: input_boolean.day_lights_enabled
                state: "on"
            row:
              entity: input_number.day_illuminance_cloud_factor
              name: "Cloud Cover Factor"

      - type: custom:fold-entity-row
        padding: 10
        head:
          entity: binary_sensor.bathroom_illuminance_lights
        entities:
          - entity: input_number.bathroom_illuminance_threshold
            name: "Illuminance Threshold"

      - type: custom:fold-entity-row
        padding: 10
        head:
          entity: binary_sensor.office_illuminance_lights
        entities:
          - entity: input_number.office_illuminance_threshold
            name: "Illuminance Threshold"

      - type: custom:fold-entity-row
        padding: 10
        head:
          entity: binary_sensor.side_entrance_illuminance_lights
        entities:
          - entity: input_number.side_entrance_illuminance_threshold
            name: "Illuminance Threshold"

  - type: custom:fold-entity-row
    padding: 10
    head:
      entity: switch.adaptive_lighting
      card_mod:
        style: |
          :host {
            --switch-unchecked-button-color: var(--entity-warning-color);
            --switch-unchecked-track-color: var(--entity-warning-color);
            ;
          }
    entities:
      - type: custom:fold-entity-row
        head:
          entity: switch.adaptive_lighting_main_lights
        entities:
          - entity: switch.adaptive_lighting_adapt_brightness_main_lights
            name: "Brightness Control"
          - entity: switch.adaptive_lighting_sleep_mode_main_lights
            name: "Sleep Mode"

      - type: custom:fold-entity-row
        head:
          entity: switch.adaptive_lighting_rgb_lights
        entities:
          - entity: switch.adaptive_lighting_adapt_brightness_rgb_lights
            name: "Brightness Control"
          - entity: switch.adaptive_lighting_adapt_color_rgb_lights
            name: "RGB Colour Control"
          - entity: switch.adaptive_lighting_sleep_mode_rgb_lights
            name: "Sleep Mode"

      - type: custom:fold-entity-row
        head:
          entity: switch.adaptive_lighting_bedroom_lights
        entities:
          - entity: switch.adaptive_lighting_adapt_brightness_bedroom_lights
            name: "Brightness Control"
          - entity: switch.adaptive_lighting_sleep_mode_bedroom_lights
            name: "Sleep Mode"

      - type: custom:fold-entity-row
        head:
          entity: switch.adaptive_lighting_outside_lights
        entities:
          - entity: switch.adaptive_lighting_adapt_brightness_outside_lights
            name: "Brightness Control"
          - entity: switch.adaptive_lighting_sleep_mode_outside_lights
            name: "Sleep Mode"

      - type: custom:fold-entity-row
        head:
          entity: switch.adaptive_lighting_bathroom_lights
        entities:
          - entity: switch.adaptive_lighting_adapt_brightness_bathroom_lights
            name: "Brightness Control"
          - entity: switch.adaptive_lighting_adapt_color_bathroom_lights
            name: "RGB Colour Control"
          - entity: switch.adaptive_lighting_sleep_mode_bathroom_lights
            name: "Sleep Mode"

      - type: custom:fold-entity-row
        head:
          entity: switch.adaptive_lighting_cabinet_lights
        entities:
          - entity: switch.adaptive_lighting_adapt_brightness_cabinet_lights
            name: "Brightness Control"
          - entity: switch.adaptive_lighting_sleep_mode_cabinet_lights
            name: "Sleep Mode"

  - entity: button.reset_notification_leds

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert | selectattr('attributes.category', 'eq', 'light') | map(attribute='entity_id') | list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.light_alerts
        card_mod:
          style: |
            {% from 'style.jinja' import alert_switch %}
            {{ alert_switch('input_boolean.light_alerts') }}

  - type: button
    entity: script.turn_light_on
    name: "Lights On"
    action_name: "TURN ON"
    tap_action:
      action: perform-action
      perform_action: script.turn_light_on
      data:
        activate_timer: false
        bypass_timer: true

  - type: button
    entity: script.turn_light_off
    name: "Lights Off"
    action_name: "TURN OFF"
    tap_action:
      action: perform-action
      perform_action: script.turn_light_off
      data:
        bypass_timer: true
        reset: true
card_mod:
  class: basic
