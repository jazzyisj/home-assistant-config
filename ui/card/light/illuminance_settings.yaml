###################################################################################################
## Light Settings
###################################################################################################
type: entities
show_header_toggle: false
state_color: true
entities:
  - type: custom:template-entity-row
    entity: binary_sensor.nighttime_illuminance
    name: "Illuminance Settings"
    state: >
      {% if is_state('binary_sensor.nighttime_illuminance', 'on') %} Nightime
      {% elif is_state('binary_sensor.daytime_illuminance', 'on') %} Daytime
      {% elif is_state('binary_sensor.bathroom_illuminance', 'on') %} Bathroom
      {% else %} Off
      {% endif %}
    active: > #BUG not working
      {{ is_state('binary_sensor.nighttime_illuminance', 'on')
          or is_state('binary_sensor.daytime_illuminance', 'on')
          or is_state('binary_sensor.bathroom_illuminance', 'on') }}
    card_mod: #BUGFIX
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.night_lights_enabled', 'off')
                or is_state('input_boolean.night_lights_override', 'on')
                or is_state('input_boolean.day_lights_enabled', 'off') %} var(--entity-warning-color)
            {% elif is_state('binary_sensor.nighttime_illuminance', 'on')
                or is_state('binary_sensor.daytime_illuminance', 'on')
                or is_state('binary_sensor.bathroom_illuminance', 'on') %} var(--entity-active-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - type: custom:fold-entity-row
    padding: 10
    head:
      entity: binary_sensor.nighttime_illuminance
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('input_boolean.night_lights_enabled', 'off')
                  or is_state('input_boolean.night_lights_override', 'on') %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: input_boolean.night_lights_enabled
        card_mod:
          style: |
            :host {
              --switch-unchecked-button-color: var(--entity-warning-color);
              --switch-unchecked-track-color: var(--entity-warning-color);
              ;
            }

      - entity: input_boolean.night_lights_override
        card_mod:
          style: |
            :host {
              --switch-checked-button-color: var(--entity-warning-color);
              --switch-checked-track-color: var(--entity-background-warning-color);
              ;
            }

      - type: conditional
        conditions:
          - condition: state
            entity: input_boolean.night_lights_enabled
            state: "on"
        row:
          entity: input_number.night_illuminance_threshold
          name: "Night Lux Threshold"

      - type: conditional
        conditions:
          - condition: state
            entity: input_boolean.night_lights_enabled
            state: "on"
        row:
          entity: input_number.lights_on_sun_elevation
          name: "Night Lux On Elevation"

      - type: conditional
        conditions:
          - condition: state
            entity: input_boolean.night_lights_enabled
            state: "on"
        row:
          entity: input_number.lights_off_sun_elevation
          name: "Night Lux Off Elevation"

  - type: custom:fold-entity-row
    padding: 10
    head:
      entity: binary_sensor.daytime_illuminance
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('input_boolean.day_lights_enabled', 'off') %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: input_boolean.day_lights_enabled
        card_mod:
          style: |
            :host {
              --switch-unchecked-button-color: var(--entity-warning-color);
              --switch-unchecked-track-color: var(--entity-warning-color);
              ;
            }

      - type: conditional
        conditions:
          - condition: state
            entity: input_boolean.day_lights_enabled
            state: "on"
        row:
          entity: input_number.day_illuminance_threshold
          name: "Day Lux Threshold"

      - type: conditional
        conditions:
          - condition: state
            entity: input_boolean.day_lights_enabled
            state: "on"
        row:
          entity: input_number.day_illuminance_cloud_factor
          name: "Cloud Coverage Factor"

  - type: custom:fold-entity-row
    padding: 10
    head:
      entity: binary_sensor.bathroom_illuminance
    entities:
      - entity: input_number.bathroom_illuminance_threshold
        name: "Illuminance Threshold"

  - type: custom:fold-entity-row
    padding: 10
    head:
      entity: binary_sensor.office_illuminance
    entities:
      - entity: input_number.office_illuminance_threshold
        name: "Illuminance Threshold"

  - type: custom:fold-entity-row
    padding: 10
    head:
      entity: binary_sensor.side_entrance_illuminance
    entities:
      - entity: input_number.side_entrance_illuminance_threshold
        name: "Illuminance Threshold"

card_mod:
  style: |
    ha-card {
      border-width: 0px important!
    }
    :host {
      --ha-card-background: var(--card-background-color) !important;
    }
