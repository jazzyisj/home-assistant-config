###################################################################################################
# Jason Mobile
###################################################################################################
type: entities
state_color: true
show_header_toggle: false
entities:
  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: binary_sensor.jason_phone_connected
      name: "Phone Connected"
      state: "{{ states('binary_sensor.jason_phone_connected') | title }}"
      secondary: >
        {%- from 'schedule.jinja' import updated %}
        {{ updated(states('sensor.jason_phone_last_update')) }}
      tap_action:
        action: more-info
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {%- if is_state('binary_sensor.jason_phone_connected', 'on') %} var(--entity-active-color)
              {%- else %} var(--entity-warning-color)
              {%- endif -%}
            ;
          }
    entities:
      - entity: sensor.jphone_phone_state
        name: "Phone State"

      - type: custom:fold-entity-row
        head:
          entity: sensor.jphone_network_type
          name: "Active Network"
        entities:
          - type: custom:fold-entity-row
            head:
              entity: binary_sensor.jphone_wi_fi_state
              name: "WIFI"
            group_config:
            entities:
              - entity: sensor.jphone_wi_fi_connection
                name: "WIFI Connection"
                card_mod:
                  style: |
                    :host {
                      --paper-item-icon-color:
                        {% if not is_state('sensor.jphone_wi_fi_connection', '<not connected>') %} var(--entity-active-color)
                        {% else %} var(--state-icon-color)
                        {% endif %}
                      ;
                    }

              - entity: sensor.jphone_wi_fi_ip_address
                name: "WIFI IP Address"

          - type: custom:fold-entity-row
            head:
              entity: binary_sensor.jphone_mobile_data
              name: "Mobile Data"
              secondary_info: last-updated
            group_config:
              secondary_info: last-updated
            entities:
              - entity: sensor.jphone_public_ip_address
                name: "Public IP"

      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.jphone_bluetooth_state
          name: "Bluetooth"
        entities:
          - entity: sensor.jphone_bluetooth_connection
            name: "Connected Devices(s)"

      - type: custom:fold-entity-row
        head:
          entity: input_boolean.jason_phone_volume_control
          name: "Volume Control"
        entities:
          - entity: sensor.jphone_audio_mode
            name: "Audio Mode"

          - entity: binary_sensor.jphone_speakerphone
            name: "Speakerphone"

          - entity: binary_sensor.jphone_mic_muted
            name: "Mic Muted"

          - entity: binary_sensor.jphone_music_active
            name: "Music Active"

          - entity: sensor.jphone_media_session
            name: "Media Session"

          - entity: binary_sensor.jphone_headphones
            name: "Headphones"

          - entity: select.jason_phone_dnd
            name: "Do Not Disturb"

          - entity: select.jason_phone_ringer_mode
            name: "Ringer Mode"

          - entity: sensor.jphone_volume_level_accessibility
            name: "Accessibility Volume"

          - entity: number.jason_phone_ringer_volume
            name: "Ringer Volume"

          - entity: number.jason_phone_call_volume
            name: "Call Volume"

          - entity: number.jason_phone_notification_volume
            name: "Notification Volume"

          - entity: number.jason_phone_system_volume
            name: "System Volume"

          - entity: number.jason_phone_dtmf_volume
            name: "DTMF Volume"

          - entity: number.jason_phone_media_volume
            name: "Media Volume"

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          entity: sensor.jason_phone_next_alarm
          name: "Next Alarm"
          state: "{{ state_attr('sensor.jason_phone_next_alarm', '12hour') }}"
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {%- if not is_state('sensor.jason_phone_next_alarm', 'off') %} var(--entity-active-color)
                  {%- else %} var(--state-icon-color)
                  {%- endif -%}
                ;
              }
        entities:
          - entity: input_boolean.jason_phone_alarm_clock_enabled
            name: "Alarm Clock"

          - entity: input_boolean.alarm_clock_notifications
            name: "Alarm Clock Notifications"

          - entity: input_number.mobile_waketime_volume_jason
            name: "Waketime Volume"

          - entity: number.jason_phone_alarm_volume
            name: "Alarm Volume"

      - entity: button.jason_phone_open_mobile_app
        name: "Mobile App"

      - entity: button.jason_phone_update_sensors
        name: "Update Sensors"

  - type: custom:battery-state-entity
    entity: sensor.jphone_battery_level
    name: "Battery Level"
    secondary_info: "{charging}"
    charging_state:
      entity_id: binary_sensor.jphone_is_charging
      state: "on"
      secondary_info_text: "Charging"

  - type: button
    name: "Jason Phone"
    icon: mdi:devices
    action_name: "VIEW"
    tap_action:
      action: navigate
      navigation_path: /config/devices/device/7af76f7c427863afa91dce82495e034f

  - type: custom:auto-entities
    filter:
      template: >
        {% from 'alert.jinja' import alert_entities %}
        {{ alert_entities('mobile') }}
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.mobile_alerts
        card_mod:
          style: |
            {% from 'alert.jinja' import alert_switch_style %}
            {{ alert_switch_style('input_boolean.mobile_alerts') }}
