###############################################################################
# Jason Mobile
###############################################################################
type: entities
title: "Mobile Settings"
icon: mdi:cellphone-settings
state_color: true
show_header_toggle: false
entities:
  - type: custom:template-entity-row
    entity: binary_sensor.jason_phone_connected
    state: "{{ states('binary_sensor.jason_phone_connected') | title }}"
    secondary: >
      Last Update:
        {% if has_value('sensor.jason_phone_last_update') %}
          {% set last = states('sensor.jason_phone_last_update') | as_datetime | as_local %}
          {{ ' ' ~ last.strftime('Today at %-I:%M %p') if now().day == last.day else last.strftime('%A, %-I:%M %p') }}
        {% else %} unknown
        {% endif %}
    tap_action:
      action: none
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {%- if is_state('binary_sensor.jason_phone_connected', 'on') %} var(--state-active-color)
            {%- else %} var(--entity-warning-color)
            {%- endif -%}
          ;
        }

  - type: custom:fold-entity-row
    head:
      entity: sensor.jphone_network_type
      name: "Active Network"
    entities:
      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.jphone_wifi_state
          name: "WIFI Connection"
        group_config:
        entities:
          - entity: sensor.jphone_wifi_connection
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if not is_state('sensor.jphone_wifi_connection', '<not connected>') %} var(--state-active-color)
                    {% else %} var(--state-icon-color)
                    {% endif %}
                  ;
                }

          - entity: sensor.jphone_wifi_ip_address
            name: "WIFI IP Address"

      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.jphone_mobile_data
          name: "Mobile Data"
          secondary_info: last-updated
        group_config:
          secondary_info: last-updated
        entities:
          - entity: sensor.jphone_public_ip_address
            name: "Public IP"

  - type: custom:fold-entity-row
    head:
      entity: binary_sensor.jphone_bluetooth_state
      name: "Bluetooth"
    entities:
      - entity: sensor.jphone_bluetooth_connection
        name: "Connected Devices(s)"

  - entity: sensor.jphone_phone_state
    name: "Phone State"

  - type: custom:fold-entity-row
    head:
      entity: sensor.jphone_audio_mode
      name: "Audio"
    entities:
      - entity: binary_sensor.jphone_speakerphone
      - entity: binary_sensor.jphone_mic_muted
      - entity: sensor.jphone_volume_level_accessibility
      - entity: select.jason_phone_ringer_mode
      - entity: number.jason_phone_ringer_volume
      - entity: number.jason_phone_call_volume
      - entity: number.jason_phone_notification_volume
      - entity: number.jason_phone_system_volume
      - entity: number.jason_phone_dtmf_volume
      - entity: select.jason_phone_dnd
        name: "Do Not Disturb"
      - entity: binary_sensor.jphone_music_active
      - entity: sensor.jphone_media_session
      - entity: binary_sensor.jphone_headphones
      - entity: number.jason_phone_media_volume

  - type: custom:fold-entity-row
    head:
      type: custom:battery-state-entity
      entity: sensor.jphone_battery_level
      name: "Battery Level"
      secondary_info: "{charging}"
      charging_state:
        entity_id: binary_sensor.jphone_is_charging
        state: "on"
        secondary_info_text: "Charging"
      tap_action:
        action: more-info
    entities:
      - entity: sensor.jphone_battery_power
      - entity: binary_sensor.jphone_is_charging

      - entity: sensor.jphone_battery_temperature
        name: "Battery Temperature"

      - entity: sensor.jphone_battery_state
        name: "Battery State"

      - entity: sensor.jphone_charger_type
        name: "Charger Type"

      - entity: sensor.jphone_battery_health
        name: "Battery Health"

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: sensor.jason_phone_next_alarm
      state: "{{ state_attr('sensor.jason_phone_next_alarm', '12hour') }}"
      name: "Next Alarm"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {%- if not is_state('sensor.jason_phone_next_alarm', 'off') %} var(--state-active-color)
              {%- else %} var(--state-icon-color)
              {%- endif -%}
            ;
          }
    entities:
      - entity: input_boolean.jason_phone_alarm_clock_enabled
      - entity: input_boolean.jason_phone_alarm_clock_notifications
      - entity: input_number.mobile_waketime_volume_jason
      - entity: sensor.jphone_volume_level_alarm
      - entity: number.jason_phone_alarm_volume

  - entity: button.jason_phone_open_mobile_app
  - entity: button.jason_phone_update_sensors

  - type: button
    icon: mdi:devices
    name: "Device Settings"
    action_name: "VIEW"
    tap_action:
      action: navigate
      navigation_path: /config/devices/device/fde79d7d5bd2e1907a1227f3b6ed4910

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert | selectattr('attributes.category', 'eq', 'mobile') | map(attribute='entity_id') | list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.mobile_alerts
        card_mod:
          style: |
            {% from 'style.jinja' import alert_switch %}
            {{ alert_switch('input_boolean.mobile_alerts') }}
card_mod:
  class: basic
