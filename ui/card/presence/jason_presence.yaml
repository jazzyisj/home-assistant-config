###################################################################################################
# Presence Jason
###################################################################################################
type: entities
title: "Presence & Location"
state_color: true
show_header_toggle: false
entities:
  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: person.jason
      entity_picture: "{{ state_attr('person.jason', 'entity_picture') }}"
      state: >
        {% set state = states('person.jason') %}
        {{ iif(state == 'not_home', 'Away', state | title) }}
      secondary: >
        {% from 'schedule.jinja' import day_and_time %}
        Updated: {{ day_and_time(states.person.jason.last_reported) }}
      double_tap_action:
        action: fire-dom-event
        browser_mod:
          service: browser_mod.popup
          data:
            content: !include /config/ui/card/presence/jason_location.yaml
            timeout: 100000
          card_mod:
            style:
              ha-dialog$: >
                {% from 'style.jinja' import popup_style %}
                {{ popup_style() }}
    entities:
      - type: custom:multiple-entity-row
        entity: input_boolean.jason_home
        name: "Toggle Home"
        state_header: Home
        toggle: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {%- if is_state('input_boolean.home_override_jason', 'on') %} var(--entity-warning-color)
                {%- elif is_state('input_boolean.jason_home', 'on') %} var(--entity-active-color)
                {%- else %} var(--state-icon-color)
                {%- endif -%}
              ;
            }
        entities:
          - entity: input_boolean.home_override_jason
            name: "Override"
            toggle: true
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {%- if is_state('input_boolean.home_override_jason', 'on') %} var(--entity-warning-color)
                    {%- else %} var(--state-icon-color)
                    {%- endif -%}
                  ;
                }

          - entity: input_boolean.jason_almost_home
            name: "Almost Home"
            toggle: true

      - entity: binary_sensor.jason_home
        name: "Jason Home"
        secondary_info: last-updated
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {%- if is_state('input_boolean.home_override_jason', 'on') %} var(--entity-warning-color)
                {%- else %} var(--state-icon-color)
                {%- endif -%}
              ;
            }

      - type: custom:template-entity-row
        entity: device_tracker.jphone
        name: "Phone GPS"
        state: "{{ states('device_tracker.jphone') | title }}"
        secondary: >
          {% from 'schedule.jinja' import day_and_time %}
          Updated: {{ day_and_time(states.device_tracker.jphone.last_reported) }}

      - type: custom:template-entity-row
        entity: device_tracker.jason_phone_ping
        name: "Phone Ping"
        state: "{{ states('device_tracker.jason_phone_ping') | title }}"
        secondary: >
          {% from 'schedule.jinja' import day_and_time %}
          Updated: {{ day_and_time(states.device_tracker.jason_phone_ping.last_reported) }}

      - type: custom:template-entity-row
        entity: device_tracker.jason_phone_wifi
        name: "Phone WIFI (Router)"
        state: "{{ states('device_tracker.jason_phone_wifi') | title }}"
        secondary: >
          {% from 'schedule.jinja' import day_and_time %}
          Updated: {{ day_and_time(states.device_tracker.jason_phone_wifi.last_reported) }}

      - type: custom:template-entity-row
        entity: device_tracker.jason_phone_wifi_unifi
        name: "Phone WIFI (AP)"
        state: "{{ states('device_tracker.jason_phone_wifi_unifi') | title }}"
        secondary: >
          {% from 'schedule.jinja' import day_and_time %}
          Updated: {{ day_and_time(states.device_tracker.jason_phone_wifi_unifi.last_reported) }}

      # - type: custom:template-entity-row
      #   entity: device_tracker.jason_phone_bt #DISABLED
      #   name: "Phone Bluetooth"
      #   state: "{{ states('device_tracker.jason_phone_bt') | title }}"
      #   secondary: >
      #     {% from 'schedule.jinja' import day_and_time %}
      #     Updated: {{ day_and_time(states.device_tracker.jason_phone_bt.last_reported) }}

  - type: custom:fold-entity-row
    head:
      entity: switch.jason_phone_high_accuracy
      name: "Phone High Accuracy"
    entities:
      - entity: binary_sensor.jphone_high_accuracy_mode
        name: "High Accuracy Mode"

      - entity: sensor.jphone_high_accuracy_update_interval
        name: "High Accuracy Interval"

  - entity: sensor.jphone_detected_activity
    name: "Current Activity"
    secondary_info: last-updated

  - entity: sensor.home_jason_distance
    name: "Distance From Home"
    secondary_info: last-updated

  - type: custom:template-entity-row
    name: "Current Address"
    icon: mdi:map-marker-radius
    state: ""
    secondary: "{{ states('sensor.jphone_geocoded_location') }}"
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if states('sensor.jphone_geocoded_location') == 'unknown' %} var(--entity-warning-color)
            {% else %} var(--entity-active-color)
            {% endif %}
          ;
        }

  - entity: button.jason_phone_update_location
    name: "Update Location"