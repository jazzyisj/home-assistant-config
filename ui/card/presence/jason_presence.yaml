###############################################################################
# Presence Jason
###############################################################################
type: entities
title: "Presence & Location"
state_color: true
show_header_toggle: false
entities:
  - type: custom:template-entity-row
    entity: person.jason
    entity_picture: "{{ state_attr('person.jason', 'entity_picture') }}"
    state: >
      {% set state = states('person.jason') %}
      {{ iif(state == 'not_home', 'Away', state | title) }}
    secondary: >
      {% if states.device_tracker.jphone != none %}
        {% set time = states.device_tracker.jphone.last_updated | as_local %}
        Last Update: {{ time.strftime('Today at %-I:%M %p') if now().day == time.day else time.strftime('%A, %-I:%M %p') }}
      {% endif %}
    double_tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/presence/jason_location.yaml
          timeout: 100000
        card_mod:
          style:
            ha-dialog$: >
              {% from 'style.jinja' import popup_style %}
              {{ popup_style() }}

  - entity: binary_sensor.jason_home
    name: "Jason Home"
    secondary_info: last-updated
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {%- if is_state('input_boolean.home_override_jason', 'on') %} var(--entity-warning-color)
            {%- else %} var(--state-icon-color)
            {%- endif -%}
          ;
        }

  - entity: device_tracker.jphone
    name: "Phone Tracker"

  - entity: device_tracker.jason_phone_bt
    name: "Phone Bluetooth"

  - entity: device_tracker.jason_phone_wifi
    name: "Phone WIFI"

  - entity: device_tracker.jason_phone_ping
    name: "Phone Ping"

  - type: custom:fold-entity-row
    head:
      entity: switch.jason_phone_high_accuracy
      name: "Phone High Accuracy"
    entities:
      - entity: binary_sensor.jphone_high_accuracy_mode
        name: "High Accuracy Mode"

      - entity: sensor.jphone_high_accuracy_update_interval
        name: "High Accuracy Interval"

  - entity: button.jason_phone_update_location
    name: "Update Location"

  - type: custom:multiple-entity-row
    entity: input_boolean.jason_home
    name: "Toggle Home"
    state_header: Home
    toggle: true
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {%- if is_state('input_boolean.home_override_jason', 'on') %} var(--entity-warning-color)
            {%- elif is_state('input_boolean.jason_home', 'on') %} var(--state-active-color)
            {%- else %} var(--state-icon-color)
            {%- endif -%}
          ;
        }
    entities:
      - entity: input_boolean.home_override_jason
        name: "Override"
        toggle: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {%- if is_state('input_boolean.home_override_jason', 'on') %} var(--entity-warning-color)
                {%- else %} var(--state-icon-color)
                {%- endif -%}
              ;
            }

      - entity: input_boolean.jason_almost_home
        name: "Almost Home"
        toggle: true

  - !include /config/ui/bar/jason_work_time.yaml
  - !include /config/ui/bar/jason_home_time.yaml

  - type: conditional
    conditions:
      - condition: state
        entity: binary_sensor.jason_home
        state: "off"
    row:
      entity: sensor.home_jason_distance
      name: "Distance From Home"
      secondary_info: last-updated
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if not has_value('sensor.home_jason_distance') %} var(--entity-warning-color)
              {% else %} var(--state-active-color)
              {% endif %}
            ;
          }

  - type: conditional
    conditions:
      - condition: state
        entity: binary_sensor.jason_home
        state: "off"
    row:
      entity: sensor.jphone_detected_activity
      name: "Detected Activity"
      secondary_info: last-updated

  - type: conditional
    conditions:
      - condition: state
        entity: binary_sensor.jason_home
        state: "off"
    row:
      type: custom:template-entity-row
      name: "Current Address"
      icon: mdi:map-marker-radius
      state: ""
      secondary: "{{ states('sensor.jphone_geocoded_location') }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.jphone_geocoded_location') == 'unknown' %} var(--entity-warning-color)
              {% else %} var(--state-active-color)
              {% endif %}
            ;
          }
