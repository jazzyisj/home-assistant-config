###############################################################################
## Smoke Sensors
###############################################################################
type: grid
columns: 2
square: false
cards:
  - type: custom:mushroom-template-card
    entity: binary_sensor.nest_protect_upstairs_smoke_status
    icon: >
      {% if is_state('binary_sensor.nest_protect_upstairs_smoke_status', 'on') %} mdi:smoke-detector-variant-alert
      {% elif is_state('binary_sensor.nest_protect_upstairs_co_status', 'on') %} mdi:molecule-co
      {% elif is_state('binary_sensor.nest_protect_upstairs_heat_status', 'on') %} mdi:fire-alert
      {% else %} mdi:smoke-detector-variant
      {% endif %}
    icon_color: >
      {% if not has_value('binary_sensor.nest_protect_upstairs_smoke_status') %} grey
      {% elif is_state('binary_sensor.nest_protect_upstairs_smoke_status', 'on')
          or is_state('binary_sensor.nest_protect_upstairs_co_status', 'on')
          or is_state('binary_sensor.nest_protect_upstairs_heat_status', 'on') %} red
      {% else %} white
      {% endif %}
    badge_icon: >
      {% if not has_value('binary_sensor.nest_protect_upstairs_smoke_status') %} mdi:exclamation-thick
      {% elif is_state('binary_sensor.nest_protect_upstairs_smoke_status', 'on')
          or is_state('binary_sensor.nest_protect_upstairs_co_status', 'on')
          or is_state('binary_sensor.nest_protect_upstairs_heat_status', 'on') %} mdi:alert
      {% elif states('sensor.nest_protect_upstairs_battery_level') | int(0) <=
          states('input_number.battery_alert_threshold') | int %} mdi:battery-alert
      {% endif %}
    badge_color: >
      {% if not has_value('binary_sensor.nest_protect_upstairs_smoke_status') %} orange
      {% elif is_state('binary_sensor.nest_protect_upstairs_smoke_status', 'on')
          or is_state('binary_sensor.nest_protect_upstairs_co_status', 'on')
          or is_state('binary_sensor.nest_protect_upstairs_heat_status', 'on') %} red
      {% elif states('sensor.nest_protect_upstairs_battery_level') | int(0) <=
          states('input_number.battery_alert_threshold') | int %} orange
      {% endif %}
    primary: >
      {% if is_state('binary_sensor.nest_protect_upstairs_smoke_status', 'on') %} UPSTAIRS - SMOKE
      {% elif is_state('binary_sensor.nest_protect_upstairs_co_status', 'on') %} UPSTAIRS - CARBON DIOXIDE
      {% elif is_state('binary_sensor.nest_protect_upstairs_heat_status', 'on') %} UPSTAIRS - HEAT
      {% else %} Upstairs Protect
      {% endif %}
    layout: horizontal
    fill_container: true
    secondary: >
      {%- set sensor = 'binary_sensor.nest_protect_upstairs_smoke_status' %}
      {%- if not has_value(sensor) %} OFFLINE
      {% else %}
        {{ iif(is_state('binary_sensor.nest_protect_upstairs_smoke_status', 'on')
            or is_state('binary_sensor.nest_protect_upstairs_co_status', 'on')
            or is_state('binary_sensor.nest_protect_upstairs_heat_status', 'on'), 'ALERT' , 'Safe') }}
        {%- from 'easy_time.jinja' import easy_relative_time %}
        - {{ easy_relative_time(states.binary_sensor.danger_alarm.last_updated) }}
      {% endif %}
    multiline_secondary: false
    tap_action:
      action: more-info
    card_mod:
      style: |
        ha-card {
          background:
          {%- set sensor = 'binary_sensor.nest_protect_upstairs_smoke_status' %}
          {%- set trigger = state_attr('alarm_control_panel.master', 'open_sensors') if state_attr('alarm_control_panel.master', 'open_sensors') else '' %}
          {%- if not has_value(sensor) or is_state('input_boolean.alarm_triggered', 'on') and sensor in trigger %} var(--entity-button-critical-color)
          {%- elif is_state(sensor, 'on') %} var(--entity-button-severe-color)
          {%- else %} var(--ha-card-background)
          {%- endif -%}
          ;
        }

  - type: custom:mushroom-template-card
    entity: binary_sensor.nest_protect_downstairs_smoke_status
    icon: >
      {% if is_state('binary_sensor.nest_protect_downstairs_smoke_status', 'on') %} mdi:smoke-detector-variant-alert
      {% elif is_state('binary_sensor.nest_protect_downstairs_co_status', 'on') %} mdi:molecule-co
      {% elif is_state('binary_sensor.nest_protect_downstairs_heat_status', 'on') %} mdi:fire-alert
      {% else %} mdi:smoke-detector-variant
      {% endif %}
    icon_color: >
      {% if not has_value('binary_sensor.nest_protect_downstairs_smoke_status') %} grey
      {% elif is_state('binary_sensor.nest_protect_downstairs_smoke_status', 'on')
          or is_state('binary_sensor.nest_protect_downstairs_co_status', 'on')
          or is_state('binary_sensor.nest_protect_downstairs_heat_status', 'on') %} red
      {% else %} white
      {% endif %}
    badge_icon: >
      {% if not has_value('binary_sensor.nest_protect_downstairs_smoke_status') %} mdi:exclamation-thick
      {% elif is_state('binary_sensor.nest_protect_downstairs_smoke_status', 'on')
          or is_state('binary_sensor.nest_protect_downstairs_co_status', 'on')
          or is_state('binary_sensor.nest_protect_downstairs_heat_status', 'on') %} mdi:alert
      {% elif states('sensor.nest_protect_downstairs_battery_level') | int(0) <=
          states('input_number.battery_alert_threshold') | int %} mdi:battery-alert
      {% endif %}
    badge_color: >
      {% if not has_value('binary_sensor.nest_protect_downstairs_smoke_status') %} orange
      {% elif is_state('binary_sensor.nest_protect_downstairs_smoke_status', 'on')
          or is_state('binary_sensor.nest_protect_downstairs_co_status', 'on')
          or is_state('binary_sensor.nest_protect_downstairs_heat_status', 'on') %} red
      {% elif states('sensor.nest_protect_downstairs_battery_level') | int(0) <=
          states('input_number.battery_alert_threshold') | int %} orange
      {% endif %}
    primary: >
      {% if is_state('binary_sensor.nest_protect_downstairs_smoke_status', 'on') %} DOWNSTAIRS - SMOKE
      {% elif is_state('binary_sensor.nest_protect_downstairs_co_status', 'on') %} DOWNSTAIRS - CARBON DIOXIDE
      {% elif is_state('binary_sensor.nest_protect_downstairs_heat_status', 'on') %} DOWNSTAIRS - HEAT
      {% else %} Downstairs Protect
      {% endif %}
    layout: horizontal
    fill_container: true
    secondary: >
      {%- set sensor = 'binary_sensor.nest_protect_downstairs_smoke_status' %}
      {%- if not has_value(sensor) %} OFFLINE
      {% else %}
        {{ iif(is_state('binary_sensor.nest_protect_downstairs_smoke_status', 'on')
            or is_state('binary_sensor.nest_protect_downstairs_co_status', 'on')
            or is_state('binary_sensor.nest_protect_downstairs_heat_status', 'on'), 'ALERT' , 'Safe') }}
        {%- from 'easy_time.jinja' import easy_relative_time %}
        - {{ easy_relative_time(states.binary_sensor.danger_alarm.last_updated) }}
      {% endif %}
    multiline_secondary: false
    tap_action:
      action: more-info
    card_mod:
      style: |
        ha-card {
          background:
          {%- set sensor = 'binary_sensor.nest_protect_downstairs_smoke_status' %}
          {%- set trigger = state_attr('alarm_control_panel.master', 'open_sensors') if state_attr('alarm_control_panel.master', 'open_sensors') else '' %}
          {%- if not has_value(sensor) or is_state('input_boolean.alarm_triggered', 'on') and sensor in trigger %} var(--entity-button-critical-color)
          {%- elif is_state(sensor, 'on') %} var(--entity-button-severe-color)
          {%- else %} var(--ha-card-background)
          {%- endif -%}
          ;
        }
