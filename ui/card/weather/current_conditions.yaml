###############################################################################
## Current Conditions
###############################################################################
type: entities
title: "Current Conditions"
state_color: true
entities:
  - type: custom:template-entity-row
    entity: sensor.current_condition
    name: "Condition"
    state: "{{ states('sensor.current_condition') | title }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import condition_icon_color %}
        {{ condition_color(states('sensor.current_condition')) }}

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      name: "Temperature"
      entity: sensor.outdoor_temperature
      icon: >
        {% if is_state('sensor.outdoor_temperature', 'Rising') %} mdi:thermometer-chevron-up
        {% elif is_state('sensor.outdoor_temperature', 'Falling') %} mdi:thermometer-chevron-down
        {% else %} mdi:thermometer
        {% endif %}
      state: "{{ states('sensor.outdoor_temperature_level') | title }}"
      secondary: >
        {{- states('sensor.outdoor_temperature', with_unit=true) }}
        {%- if states('sensor.outdoor_temperature') | int(-1) != states('sensor.outdoor_apparent_temperature') | int(-1) %}
        ({{ states('sensor.outdoor_apparent_temperature') }})
        {%- endif %}
        {{- ' Trend: ' ~ states('sensor.outdoor_temperature_trend') }}
      card_mod:
        style: >
          {% from 'weather.jinja' import temp_icon %}
          {{ temp_color(states('sensor.outdoor_temperature')) }}
    entities: !include /config/ui/card/weather/include/outdoor_temperature_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.outdoor_humidity
      name: "Humidity"
      state: "{{ states('sensor.dew_point_comfort_level') | title }}"
      secondary: "{{ states('sensor.outdoor_humidity', with_unit=true) }}"
      card_mod:
        style: >
          {% from 'weather.jinja' import humidity_icon %}
          {{ humidity_color(states('sensor.outdoor_humidity')) }}
    entities: !include /config/ui/card/weather/include/outdoor_humidity_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.barometric_pressure
      name: "Barometric Pressure"
      state: "{{ states('sensor.barometric_pressure_description') | title }}"
      secondary: "{{ states('sensor.barometric_pressure', with_unit=true) ~ ': ' ~ states('sensor.pressure_trend') }}"
      card_mod:
        style: >
          {% from 'weather.jinja' import pressure_icon %}
          {{ pressure_color(states('sensor.barometric_pressure')) }}
    entities: !include /config/ui/card/weather/include/barometric_pressure_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.precipitation_type
      name: "Precipitation"
      state: > #HACK 'None' contains ALT-0173 (blank char to prevent render as none)
        {% set type = states('sensor.precipitation_type') %}
        {{ 'NoneÂ­' if type == 'none' else type | title }}
      secondary: "Probability: {{ states('sensor.precipitation_probability', with_unit = true) }}"
      card_mod:
        style: >
          {% from 'weather.jinja' import pop_icon %}
          {{ pop_color(states('sensor.precipitation_probability')) }}
    entities: !include /config/ui/card/weather/include/precipitation_entities.yaml

  - type: conditional
    conditions:
      - condition: or
        conditions:
          - condition: numeric_state
            entity: sensor.nearest_storm_distance
            above: 0

          - condition: state
            entity: sensor.nearest_storm_bearing
            state_not: unknown
    row:
      type: custom:fold-entity-row
      padding: 10
      head: !include /config/ui/card/weather/include/nearest_storm_entity.yaml
      entities:
        - !include /config/ui/card/weather/include/storm_radar.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: binary_sensor.lightning
      name: "Lightning"
      state: "{{ iif(is_state('binary_sensor.lightning', 'on'), 'Yes', 'No') }}"
      secondary: >
        {%- set strikes = states('sensor.lightning_count') | int(-1) %}
        {%- set distance = states('sensor.lightning_last_strike_distance') | int(-1) %}
        {%- if strikes > 0 -%}
          Strikes: {{ strikes }}
        {%- endif %}
        {%- if distance > 0 -%}
          {{- ' | ' if strikes > 0 -}} Distance: {{ distance }}
        {%- endif %}
      active: "{{ is_state('binary_sensor.lightning', 'on') }}" #BUG not working
      card_mod: #BUGFIX
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('binary_sensor.lightning', 'on') %} var(--state-active-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities: !include /config/ui/card/weather/include/lightning_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.wind_speed
      name: "Wind Conditions"
      state: "{{ states('sensor.wind_beaufort_display') }}"
      secondary: >
        {{ states('sensor.wind_direction') ~ ' (' ~ states('sensor.wind_speed') ~ '/' ~ states('sensor.wind_gust', with_unit=true) }})
      card_mod:
        style: >
          {% from 'weather.jinja' import wind_icon %}
          {{ wind_color(states('sensor.wind_gust')) }}
    entities: !include /config/ui/card/weather/include/wind_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.cloud_coverage
      state: "{{ states('sensor.cloud_coverage_description') }}"
      secondary: "{{ states('sensor.cloud_coverage', with_unit=true) }}"
      card_mod:
        style: >
          {% from 'weather.jinja' import cloud_icon %}
          {{ cloud_color(states('sensor.cloud_coverage')) }}
    entities: !include /config/ui/card/weather/include/cloud_entities.yaml

  - type: custom:template-entity-row
    entity: sensor.uv_index
    name: "UV Risk"
    state: "{{ states('sensor.uv_risk') }}"
    secondary: "UV Index: {{ states('sensor.uv_index') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import uv_index_icon %}
        {{ uv_index_color(states('sensor.uv_index')) }}

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.aqi_risk_level
      name: "Air Quality"
      state: "{{ states('sensor.aqi_risk_level') | title }}"
      secondary: "AQI: {{ states('sensor.air_quality_index') }}"
      card_mod:
        style: >
          {% from 'weather.jinja' import aqi_index_icon %}
          {{ aqi_index_color(states('sensor.air_quality_index')) }}
    entities: !include /config/ui/card/weather/include/air_quality_entities.yaml

  - type: custom:template-entity-row
    entity: sensor.fire_risk
    name: "Fire Risk"
    state: "{{ states('sensor.fire_risk') }}"
    secondary: "Fire Index: {{ states('sensor.fire_index') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import fire_index_icon %}
        {{ fire_index_color(states('sensor.fire_index')) }}

  - type: custom:template-entity-row
    entity: sensor.atmospheric_smoke
    name: "Smoke Risk"
    state: "{{ states('sensor.smoke_risk') }}"
    secondary: "Smoke Level: {{ states('sensor.atmospheric_smoke', with_unit=true) }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import smoke_level_icon %}
        {{ smoke_level_color(states('sensor.atmospheric_smoke')) }}

  - type: custom:template-entity-row
    entity: sensor.allergy_index_today
    name: "Allergy Risk"
    state: "{{ states('sensor.allergy_risk_today') | title }}"
    secondary: "Allergy Index: {{ states('sensor.allergy_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_color(states('sensor.allergy_index_today')) }}

  - type: custom:template-entity-row
    entity: sensor.asthma_index_today
    name: "Asthma Risk"
    state: "{{ states('sensor.asthma_risk_today') | title }}"
    secondary: "Asthma Index: {{ states('sensor.asthma_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_color(states('sensor.asthma_index_today')) }}

  - type: custom:template-entity-row
    entity: sensor.cold_flu_index_today
    name: "Cold & Flu Risk"
    state: "{{ states('sensor.flu_risk_today') | title }}"
    secondary: "Flu Index: {{ states('sensor.cold_flu_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_color(states('sensor.cold_flu_index_today')) }}

  - entity: sensor.pirateweather_time
    name: "Forecast Updated"
    format: relative

