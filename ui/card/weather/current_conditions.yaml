###############################################################################
## Current Conditions
###############################################################################
type: entities
title: "Current Conditions"
state_color: true
entities:
  - type: custom:template-entity-row
    entity: sensor.current_condition
    name: "Condition"
    state: "{{ states('sensor.current_condition') | title }}"

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      name: "Temperature"
      entity: sensor.outdoor_temperature
      icon: >
        {% if is_state('sensor.outdoor_temperature', 'Rising') %} mdi:thermometer-chevron-up
        {% elif is_state('sensor.outdoor_temperature', 'Falling') %} mdi:thermometer-chevron-down
        {% else %} mdi:thermometer
        {% endif %}
      state: "{{ states('sensor.outdoor_temperature_level') | title }}"
      secondary: >
        {{ states('sensor.outdoor_temperature', with_unit=true) }}
        {%- if states('sensor.outdoor_temperature') | int(-1) != states('sensor.outdoor_apparent_temperature') | int(-1) %}
        / {{ states('sensor.outdoor_apparent_temperature', with_unit=true) }}
        {% endif %}
        -  {{ states('sensor.outdoor_temperature_trend') }}
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if not is_state('alert.outdoor_high_temperature', 'idle') %} var(--entity-high-temp-color)
              {% elif not is_state('alert.outdoor_low_temperature', 'idle') %} var(--entity-low-temp-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities: !include /config/ui/card/weather/include/outdoor_temperature_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.outdoor_humidity
      name: "Humidity"
      state: "{{ states('sensor.dew_point_comfort_level') | title }}"
      secondary: "{{ states('sensor.outdoor_humidity', with_unit=true) }}"
    entities: !include /config/ui/card/weather/include/outdoor_humidity_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.barometric_pressure
      name: "Barometric Pressure"
      state: "{{ states('sensor.barometric_pressure_description') | title }}"
      secondary: "{{ states('sensor.barometric_pressure', with_unit=true) ~ ': ' ~ states('sensor.pressure_trend') }}"
    entities: !include /config/ui/card/weather/include/barometric_pressure_entities.yaml

  - !include /config/ui/card/weather/include/precipitation_inactive_entity.yaml
  - !include /config/ui/card/weather/include/precipitation_active_entity.yaml
  - !include /config/ui/card/weather/include/precipitation_soon_entity.yaml
  - !include /config/ui/card/weather/include/precipitation_today_entity.yaml

  - sensor.pirateweather_current_day_liquid_accumulation #TODO
  - sensor.pirateweather_current_day_snow_accumulation #TODO
  - sensor.pirateweather_current_day_ice_accumulation #TODO

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: binary_sensor.lightning
      name: "Lightning"
      state: "{{ iif(is_state('binary_sensor.lightning', 'on'), 'Yes', 'No') }}"
      secondary: "Strikes: {{ states('sensor.lightning_count') }} - Distance: {{ states('sensor.lightning_distance', with_unit=true) }}"
      active: "{{ is_state('binary_sensor.lightning', 'on') }}" #BUG not working
      card_mod: #BUGFIX
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('binary_sensor.lightning', 'on') %} var(--state-active-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities: !include /config/ui/card/weather/include/lightning_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head: !include /config/ui/card/weather/include/nearest_storm_entity.yaml
    entities:
      - !include /config/ui/card/weather/include/storm_radar.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.wind_speed
      name: "Wind Conditions"
      state: "{{ states('sensor.wind_beaufort_display') }}"
      secondary: "{{ states('sensor.wind_speed') ~ ' - ' ~ states('sensor.wind_gust', with_unit=true) }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if not is_state('alert.wind', 'idle') %} var(--entity-severe-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities: !include /config/ui/card/weather/include/wind_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.cloud_coverage
      state: "{{ states('sensor.cloud_coverage_description') }}"
      secondary: "{{ states('sensor.cloud_coverage', with_unit=true) }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set level = states('sensor.cloud_coverage_description') %}
              {% if level == 'Cloudy' %} var(--state-icon-color)
              {% elif level == 'Mostly Cloudy' %} var(--state-icon-color)
              {% elif level == 'Partly Cloudy' %} var(--state-icon-color)
              {% elif level == 'Clear' %} var(--state-icon-color)
              {% else %} var(--entity-disabled-color)
              {% endif %}
            ;
          }
    entities: !include /config/ui/card/weather/include/atmospheric_condition_entities.yaml

  - type: custom:fold-entity-row
    padding: 10
    head:
      type: custom:template-entity-row
      entity: sensor.aqi_risk_level
      name: "Air Quality"
      state: "{{ states('sensor.aqi_risk_level') | title }}"
      secondary: "AQI: {{ states('sensor.air_quality_index') }}"
      card_mod:
        style: >
          {% from 'weather.jinja' import aqi_index_icon %}
          {{ aqi_index_icon(states('sensor.air_quality_index')) }}
    entities: !include /config/ui/card/weather/include/air_quality_entities.yaml

  - type: custom:template-entity-row
    entity: sensor.fire_risk
    name: "Fire Risk"
    state: "{{ states('sensor.fire_risk') }}"
    secondary: "Fire Index: {{ states('sensor.fire_index') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import fire_index_icon %}
        {{ fire_index_icon(states('sensor.fire_index')) }}

  - type: custom:template-entity-row
    entity: sensor.atmospheric_smoke
    name: "Smoke Risk"
    state: "{{ states('sensor.smoke_risk') }}"
    secondary: "Smoke Level: {{ states('sensor.atmospheric_smoke', with_unit=true) }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import smoke_level_icon %}
        {{ smoke_level_icon(states('sensor.atmospheric_smoke')) }}

  - type: custom:template-entity-row
    entity: sensor.uv_index
    name: "UV Risk"
    state: "{{ states('sensor.uv_risk') }}"
    secondary: "UV Index: {{ states('sensor.uv_index') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import uv_index_icon %}
        {{ uv_index_icon(states('sensor.uv_index')) }}

  - type: custom:template-entity-row
    entity: sensor.allergy_index_today
    name: "Allergy Risk"
    state: "{{ states('sensor.allergy_risk_today') | title }}"
    secondary: "Allergy Index: {{ states('sensor.allergy_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_icon(states('sensor.allergy_index_today')) }}

  - type: custom:template-entity-row
    entity: sensor.asthma_index_today
    name: "Asthma Risk"
    state: "{{ states('sensor.asthma_risk_today') | title }}"
    secondary: "Asthma Index: {{ states('sensor.asthma_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_icon(states('sensor.asthma_index_today')) }}

  - type: custom:template-entity-row
    entity: sensor.cold_flu_index_today
    name: "Cold & Flu Risk"
    state: "{{ states('sensor.flu_risk_today') | title }}"
    secondary: "Flu Index: {{ states('sensor.cold_flu_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_icon(states('sensor.cold_flu_index_today')) }}
