###############################################################################
## Current Conditions
###############################################################################
type: entities
title: "Current Conditions"
icon: mdi:weather-partly-snowy-rainy
state_color: true
entities:
  - entity: weather.home_daily
    name: "Home"

  - entity: sensor.current_condition
    name: "Current Condition"

  - entity: sensor.windsor_condition #TEST

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      name: "Temperature"
      entity: sensor.outdoor_temperature
      icon: mdi:thermometer
      # icon: > #ISSUE template not working
      #   # {% if is_state(this.entity_id, 'rising') %} mdi:thermometer-chevron-up
      #   # {% elif is_state(this.entity_id, 'falling') %} mdi:thermometer-chevron-down
      #   # {% else %} mdi:thermometer
      #   # {% endif %}
      state: "{{ states('sensor.outdoor_temperature_level') | title }}"
      secondary: "{{ states('sensor.outdoor_temperature', with_unit=true) ~ ' (Feels Like ' ~ states('sensor.outdoor_apparent_temperature', with_unit=true) ~ ')' }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if not is_state('alert.outdoor_high_temperature','idle') %} var(--entity-high-temp-color)
              {% elif not is_state('alert.outdoor_low_temperature','idle') %} var(--entity-low-temp-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.outdoor_temperature
        name: "Temperature"
      - entity: sensor.outdoor_apparent_temperature
        name: "Feels Like"
      - entity: sensor.outdoor_temperature_trend
        name: "Temperature Trend"

      - type: conditional
        conditions:
          - entity: alert.outdoor_high_temperature
            state_not: idle
        row:
          entity: alert.outdoor_high_temperature
          name: "High Temperature Alert"

      - type: conditional
        conditions:
          - entity: alert.outdoor_low_temperature
            state_not: idle
        row:
          entity: alert.outdoor_low_temperature
          name: "Low Temperature Alert"

      - type: button
        icon: mdi:thermometer
        name: "Temperature Detail"
        action_name: "VIEW"
        tap_action:
          action: navigate
          navigation_path: outdoor-temperature

      - type: button
        name: "Temperature Map"
        icon: mdi:thermometer
        action_name: "VIEW"
        tap_action:
          action: navigate
          navigation_path: temperature-radar

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.outdoor_humidity
      name: "Humidity"
      state: "{{ states('sensor.dew_point_comfort_level') | title }}"
      secondary: "{{ states('sensor.outdoor_humidity', with_unit=true) }}"
    entities:
      - entity: sensor.outdoor_humidity
        name: "Humidity"
      - entity: sensor.dew_point

      - type: button
        name: "Humidity Map"
        icon: mdi:water-percent
        action_name: "VIEW"
        tap_action:
          action: navigate
          navigation_path: humidity-radar

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.barometric_pressure
      name: "Barometric Pressure"
      state: "{{ states('sensor.barometric_pressure_description') | title }}"
      secondary: "{{ states('sensor.barometric_pressure', with_unit=true) ~ ' - ' ~ states('sensor.pressure_trend') | title }}"
    entities:
      - entity: sensor.barometric_pressure

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.precipitation_type
      name: "Precipitation"
      state: >
        {% if states('sensor.precipitation_type') | lower == 'none' %} Dry
        {% else %} {{  states('sensor.precipitation_type') | title }}
        {% endif %}
      secondary: "Probability: {{ states('sensor.precipitation_probability', with_unit=true) }}"
      active: "{{  states('sensor.precipitation_type') | lower != 'none' }}" #ISSUE not working
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.precipitation_type') | lower != 'none' %} var(--state-active-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: binary_sensor.rain
      - entity: binary_sensor.snow
      - entity: sensor.precipitation_intensity
      - entity: sensor.precipitation_intensity_text
      - entity: sensor.nearest_storm_distance
      - entity: sensor.nearest_storm_bearing
      - entity: sensor.precipitation_probability
      - entity: sensor.snow_probability
      - entity: sensor.precipitation_today
      - entity: sensor.precipitation_24_hours
      - entity: sensor.precipitation_yesterday
      - entity: sensor.precipitation_duration_today
      - entity: sensor.precipitation_duration_24_hours
      - entity: sensor.precipitation_duration_yesterday

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: binary_sensor.home_binary_sensors_is_lightning
      name: "Lightning"
      state: "{{ iif(is_state('binary_sensor.home_binary_sensors_is_lightning','on'), 'Yes', 'No') }}" #IDEA template
      secondary: "Last Hour: {{ states('sensor.home_sensors_lightning_strikes_last_hour') }}"
      active: "{{ is_state('binary_sensor.home_binary_sensors_is_lightning','off') }}" #ISSUE not working
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('binary_sensor.home_binary_sensors_is_lightning','on') %} var(--state-active-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.lightning_count

      - entity: sensor.home_sensors_lightnings_strikes
        name: "Lightning Strike Count (WF)"

      - entity: sensor.home_sensors_lightning_strikes_last_hour
        name: "Lightning Strikes Last Hour"

      - entity: sensor.home_sensors_lightning_strikes_last_3_hours
        name: "Lightning Strikes Last 3 Hours"

      - entity: sensor.home_sensors_time_of_last_lightning_strike
        name: "Last Lightning Strike"
        format: relative

      - entity: sensor.home_sensors_distance_last_lightning_strike
        name: "Last Lightning Strike Distance"

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.wind_speed
      name: "Wind Conditions"
      state: "{{ states('sensor.wind_beaufort_display') }}"
      secondary: "{{ states('sensor.wind_speed') ~ ' - ' ~ states('sensor.wind_gust', with_unit=true) }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if not is_state('alert.wind','idle') %} var(--entity-severe-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.wind_speed
      - entity: sensor.wind_gust
      - entity: sensor.wind_lull
      - entity: sensor.wind_bearing

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.cloud_cover
      state: "{{ states('sensor.cloud_cover_description') }}"
      secondary: "{{ states('sensor.cloud_cover', with_unit=true) }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set level = states('sensor.cloud_cover_description') %}
              {% if level == 'Cloudy' %} var(--state-icon-color)
              {% elif level == 'Mostly Cloudy' %} var(--state-icon-color)
              {% elif level == 'Partly Cloudy' %} var(--state-icon-color)
              {% elif level == 'Clear' %} var(--state-icon-color)
              {% else %} var(--entity-disabled-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.cloud_cover
      - entity: sensor.fog_probability
      - entity: sensor.visibility

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.air_quality_index
      name: "Air Quality"
      state: "{{ states('sensor.aqi_risk_level') | title }}"
      secondary: "AQI: {{ states('sensor.air_quality_index') }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set risk = states('sensor.aqi_risk_level') %}
              {% if risk == 'Hazardous' %} var(--entity-critical-color)
              {% elif level in ['Unhealthy', 'Very Unhealthy'] %} var(--entity-severe-color)
              {% elif risk == 'Unhealthy Sensitive Groups' %} var(--entity-warning-color)
              {% elif risk == 'Moderate' %} var(--entity-minor-color)
              {% elif risk == 'Good' %} var(--state-icon-color)
              {% else %} var(--entity-disabled-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.air_quality_index
      - entity: sensor.ozone
      - entity: sensor.nitrogen_dioxide
      - entity: sensor.sulphur_dioxide
      - entity: sensor.particulate_matter_2_5

      - entity: alert.air_quality
        name: "Air Quality Alert"

      - type: button
        icon: mdi:smog
        name: "AQI Map"
        action_name: "VIEW"
        tap_action:
          action: navigate
          navigation_path: waqi

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.uv_index
      name: "UV Risk"
      state: "{{ states('sensor.current_uv_level') | title }}"
      secondary: "UVI: {{ states('sensor.uv_index') }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set level = states('sensor.current_uv_level') %}
              {% if level == 'very high' %} var(--entity-critical-color)
              {% elif level == 'high' %} var(--entity-severe-color)
              {% elif level == 'moderate high' %} var(--entity-warning-color)
              {% elif level == 'moderate' %} var(--entity-minor-color)
              {% elif level == 'low' %} var(--state-icon-color)
              {% else %} var(--entity-disabled-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.current_uv_index

      - entity: alert.uv_risk
        name: "UV Risk Alert"

      - type: button
        entity: sensor.current_uv_level
        name: "UV Map"
        action_name: "VIEW"
        tap_action:
          action: url
          url_path: !secret WINDY_UV

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.allergy_index_today
      name: "Allergy Risk Today"
      state: "{{ states('sensor.allergy_risk_today') | title }}"
      secondary: "Allergy Index: {{ states('sensor.allergy_index_today') }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set risk = states('sensor.allergy_risk_today') %}
              {% if risk == 'High' %} var(--entity-critical-color)
              {% elif risk == 'Medium-High' %} var(--entity-severe-color)
              {% elif risk == 'Medium' %} var(--entity-warning-color)
              {% elif risk == 'Low-Medium' %} var(--entity-minor-color)
              {% elif risk == 'Low' %} var(--state-icon-color)
              {% else %} var(--entity-disabled-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.allergy_index_today
        name: "Allergy Index"

      - entity: alert.allergy_risk
        name: "Allergy Risk Alert"

      - type: button
        entity: sensor.allergy_risk_today
        name: "Allergy Index Map"
        action_name: "VIEW"
        tap_action:
          action: url
          url_path: !secret POLLEN

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.asthma_index_today
      name: "Asthma Risk Today"
      state: "{{ states('sensor.asthma_risk_today') | title }}"
      secondary: "Asthma Index: {{ states('sensor.asthma_index_today') }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set risk = states('sensor.asthma_risk_today') %}
              {% if risk == 'High' %} var(--entity-critical-color)
              {% elif risk == 'Medium-High' %} var(--entity-severe-color)
              {% elif risk == 'Medium' %} var(--entity-warning-color)
              {% elif risk == 'Low-Medium' %} var(--entity-minor-color)
              {% elif risk == 'Low' %} var(--state-icon-color)
              {% else %} var(--entity-disabled-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.asthma_index_today
        name: "Asthma Index"

      - entity: alert.asthma_risk
        name: "Asthma Risk Alert"

      - type: button
        entity: sensor.asthma_risk_today
        name: "Asthma Index Map"
        action_name: "VIEW"
        tap_action:
          action: url
          url_path: !secret ASTHMA

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.cold_flu_index_today
      name: "Flu Risk Today"
      state: "{{ states('sensor.flu_risk_today') | title }}"
      secondary: "Flu Index: {{ states('sensor.cold_flu_index_today') }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% set risk = states('sensor.flu_risk_today') %}
              {% if risk == 'High' %} var(--entity-critical-color)
              {% elif risk == 'Medium-High' %} var(--entity-severe-color)
              {% elif risk == 'Medium' %} var(--entity-warning-color)
              {% elif risk == 'Low-Medium' %} var(--entity-minor-color)
              {% elif risk == 'Low' %} var(--state-icon-color)
              {% else %} var(--entity-disabled-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.cold_flu_index_today
        name: "Flu Index"

      - entity: alert.flu_risk
        name: "Flu Risk Alert"

      - type: button
        entity: sensor.flu_risk_today
        name: "Flu Index Map"
        action_name: "VIEW"
        tap_action:
          action: url
          url_path: !secret FLU
card_mod:
  class: basic
