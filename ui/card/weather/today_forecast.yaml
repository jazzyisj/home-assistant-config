###############################################################################
## Today Forecast
###############################################################################
type: entities
title: "Today's Forecast"
state_color: true
entities:
  - type: custom:template-entity-row
    entity: sensor.condition_today
    name: "Condition"
    icon: mdi:weather-snowy-rainy
    state: "{{ states('sensor.condition_today') | title }}"

  - type: custom:template-entity-row
    entity: sensor.outdoor_high_temperature
    name: "High Temperature"
    state: "{{ states('sensor.outdoor_high_temperature', with_unit=true) }}"
    secondary: >
      {{ state_attr('sensor.outdoor_high_temperature_time', '12hour') }}
      {%- set diff = states('sensor.outdoor_high_temperature_differential') | int(0) %}
      {%- if diff != 0 %}
        -  {{ diff | abs }}° {{ iif(diff > 0, 'above', 'below') }} than normal
      {%- endif %}

  - type: custom:template-entity-row
    entity: sensor.outdoor_low_temperature
    name: "Low Temperature"
    state: "{{ states('sensor.outdoor_low_temperature', with_unit=true) }}"
    secondary: >
      {{ state_attr('sensor.outdoor_low_temperature_time', '12hour') }}
      {%- set diff = states('sensor.outdoor_low_temperature_differential') | int(0) %}
      {%- if diff != 0 %}
        - {{ diff | abs }}° {{ iif(diff > 0, 'above', 'below') }} normal
      {%- endif %}

  - entity: sensor.outdoor_humidity_today
    name: "Humidity"

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: sensor.precipitation_probability_today
      name: "Precipitation Probability"
      state: "{{ states('sensor.precipitation_probability_today', with_unit=true) }}"
      secondary: >
        {% set rain = states('sensor.precipitation_expected_today') | int(-1) %}
        {%- if rain > 0 %}
          Accumulation: {{ states('sensor.precipitation_expected_today', with_unit=true) }}
        {%- endif %}
    entities:
      - entity: sensor.rain_expected_today
        name: "Rain"
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if states('sensor.rain_expected_today') | float(-1) > 0 %} var(--entity-rain-color)
                {% endif %}
              ;
            }

      - entity: sensor.snow_expected_today
        name: "Snow"
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if states('sensor.snow_expected_today') | float(-1) > 0 %} var(--entity-snow-color)
                {% endif %}
              ;
            }

      - entity: sensor.ice_expected_today
        name: "Ice"
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if states('sensor.ice_expected_today') | float(-1) > 0 %} var(--entity-ice-color)
                {% endif %}
              ;
            }

      - entity: sensor.max_precipitation_intensity_today
        name: "Maximum Precipitation Rate"

  - type: custom:template-entity-row
    entity: sensor.wind_speed_today
    name: "Wind Speed"
    icon: mdi:weather-windy
    state: "{{ states('sensor.wind_speed_today', with_unit=true) }}"
    secondary: "Gusts: {{ states('sensor.wind_gust_today', with_unit=true) }}"

  - entity: sensor.cloud_coverage_today
    name: "Cloud Coverage"

  - type: custom:template-entity-row
    entity: sensor.uv_risk_today
    name: "UV Risk"
    state: "{{ states('sensor.uv_risk_today') | title }}"
    secondary: "UV Index: {{ states('sensor.uv_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import uv_index_icon %}
        {{ uv_index_icon(states('sensor.uv_index_today')) }}

  - type: custom:template-entity-row
    entity: sensor.fire_index_today
    name: "Fire Risk"
    state: "{{ states('sensor.fire_risk_today') }}"
    secondary: "Fire Index: {{ states('sensor.fire_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import fire_index_icon %}
        {{ fire_index_icon(states('sensor.fire_index_today')) }}

  - type: custom:template-entity-row
    entity: sensor.smoke_level_today
    name: "Smoke Risk"
    state: "{{ states('sensor.smoke_risk_today') }}"
    secondary: "Smoke Level: {{ states('sensor.smoke_level_today', with_unit=true) }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import smoke_level_icon %}
        {{ smoke_level_icon(states('sensor.smoke_level_today')) }}

  - type: custom:template-entity-row
    entity: sensor.allergy_index_today
    name: "Allergy Risk"
    state: "{{ states('sensor.allergy_risk_today') | title }}"
    secondary: "Allergy Index: {{ states('sensor.allergy_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_icon(states('sensor.allergy_index_today')) }}

  - type: custom:template-entity-row
    entity: sensor.asthma_index_today
    name: "Asthma Risk"
    state: "{{ states('sensor.asthma_risk_today') | title }}"
    secondary: "Asthma Index: {{ states('sensor.asthma_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_icon(states('sensor.asthma_index_today')) }}

  - type: custom:template-entity-row
    entity: sensor.cold_flu_index_today
    name: "Cold & Flu Risk"
    state: "{{ states('sensor.flu_risk_today') | title }}"
    secondary: "Flu Index: {{ states('sensor.cold_flu_index_today') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_icon(states('sensor.cold_flu_index_today')) }}

  - type: attribute
    name: "Forecast Updated"
    entity: sensor.daily_weather
    attribute: updated
    format: relative

  - type: custom:hui-element
    card_type: custom:multiline-entity-card
    name: "Windsor Forecast"
    show_name: false
    show_icon: false
    entity: sensor.windsor_summary
    card_mod:
      class: sub_card
