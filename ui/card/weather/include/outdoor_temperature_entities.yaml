###############################################################################
## Outdoor Temperature Entities
###############################################################################
- type: custom:template-entity-row
  entity: sensor.outdoor_temperature
  name: "Temperature"
  icon: mdi:thermometer
  state: "{{ states('sensor.outdoor_temperature', with_unit=true) }}"
  secondary: "{{ states('sensor.outdoor_temperature_level') }}"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_color %}
      {{ temp_color(states('sensor.outdoor_temperature')) }}

- type: custom:template-entity-row
  entity: sensor.outdoor_apparent_temperature
  name: >
    {% set temp = states('sensor.outdoor_temperature') | int(none) %}
    {% set app = states('sensor.outdoor_apparent_temperature') | int(none) %}
    {% if temp != none and app != none %}
      {% if app >= temp %} Humidex
      {% else %} Wind Chill
      {% endif %}
    {% else %} Apparent Temperature
    {% endif %}
  state: "{{ states('sensor.outdoor_apparent_temperature', with_unit=true) }}"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_color %}
      {{ temp_color(states('sensor.outdoor_apparent_temperature')) }}

- entity: sensor.outdoor_temperature_trend
  name: "Temperature Trend"
  card_mod:
    style: |
      :host {
        --paper-item-icon-color:
          {% if has_value('sensor.outdoor_temperature_trend') %}
            {% set trend = states('sensor.outdoor_temperature_trend') %}
            {% if trend == 'Rising' %} var(--entity-heating-color)
            {% elif trend == 'Falling' %} var(--entity-cooling-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          {% else %} var(--entity-disabled-color)
          {% endif %}
        ;
      }

- type: custom:template-entity-row
  entity: sensor.dew_point
  name: "Dew Point"
  state: "{{ states('sensor.dew_point', with_unit=true) }}"
  secondary: "Comfort Level: {{ states('sensor.dew_point_comfort_level') }}"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_color %}
      {{ temp_color(states('sensor.dew_point')) }}

- entity: sensor.outdoor_temperature_24_hour_average
  name: "Average (Last 24)"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_color %}
      {{ temp_color(states('sensor.outdoor_temperature_24_hour_average')) }}

- type: custom:template-entity-row
  entity: sensor.outdoor_temperature_daily_high
  name: "High Temp (Last 24)"
  icon: mdi:sun-thermometer
  state: "{{ states('sensor.outdoor_temperature_daily_high', with_unit=true) }}"
  secondary: >
    {% if has_value('sensor.outdoor_temperature_daily_high_time') %}
      {%- set time = states('sensor.outdoor_temperature_daily_high_time') | as_datetime -%}
      {{- iif(time.day == now().day, 'Today at ', 'Yesterday at ') }}
      {{- time | as_timestamp('unknown') | timestamp_custom('%-I:%M %p', true, 'unknown') }}
    {%- endif %}
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_color %}
      {{ temp_color(states('sensor.outdoor_temperature_daily_high')) }}

- type: custom:template-entity-row
  entity: sensor.outdoor_temperature_daily_low
  name: "Low Temp (Last 24)"
  icon: mdi:snowflake-thermometer
  state: "{{ states('sensor.outdoor_temperature_daily_low', with_unit=true) }}"
  secondary: >
    {% if has_value('sensor.outdoor_temperature_daily_low_time') %}
      {%- set time = states('sensor.outdoor_temperature_daily_low_time') | as_datetime -%}
      {{- iif(time.day == now().day, 'Today at ', 'Yesterday at ') }}
      {{- time | as_timestamp('unknown') | timestamp_custom('%-I:%M %p', true, 'unknown') }}
    {%- endif %}
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_color %}
      {{ temp_color(states('sensor.outdoor_temperature_daily_low')) }}

- type: conditional
  conditions:
    - condition: state
      entity: alert.outdoor_high_temperature
      state_not: idle
  row:
    entity: alert.outdoor_high_temperature
    name: "High Temperature Alert"

- type: conditional
  conditions:
    - condition: state
      entity: alert.outdoor_low_temperature
      state_not: idle
  row:
    entity: alert.outdoor_low_temperature
    name: "Low Temperature Alert"

- type: button
  entity: sensor.outdoor_temperature
  name: "Temperature Map"
  action_name: "VIEW"
  tap_action:
    action: navigate
    navigation_path: temperature-map
