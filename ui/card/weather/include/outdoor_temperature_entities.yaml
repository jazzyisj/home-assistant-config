###############################################################################
## Outdoor Temperature Entities
###############################################################################
- type: custom:template-entity-row
  entity: sensor.outdoor_temperature
  name: "Temperature"
  icon: mdi:thermometer
  state: "{{ states('sensor.outdoor_temperature', with_unit=true) }}"
  secondary: "{{ states('sensor.outdoor_temperature_trend') | title }}"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(states('sensor.outdoor_temperature')) }}

- entity: sensor.outdoor_temperature_level
  name: "Relative Temperature"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(states('sensor.outdoor_temperature')) }}

- entity: sensor.outdoor_apparent_temperature
  name: "Feels Like"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(states('sensor.outdoor_apparent_temperature')) }}

- entity: sensor.dew_point
  name: "Dew Point"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(states('sensor.dew_point')) }}

- entity: sensor.dew_point_comfort_level
  name: "Dew Point Comfort"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(states('sensor.dew_point')) }}

- entity: sensor.outdoor_temperature_daily_average
  name: "Daily Average"
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(states('sensor.outdoor_temperature_daily_average')) }}

- type: custom:template-entity-row
  entity: sensor.outdoor_temperature_daily_high
  name: "High Temp (Last 24)"
  icon: mdi:sun-thermometer
  state: "{{ states('sensor.outdoor_temperature_daily_high', with_unit=true) }}"
  secondary: >
    {% if has_value('sensor.outdoor_temperature_daily_high_time') %}
      {%- set time = states('sensor.outdoor_temperature_daily_high_time') | as_datetime -%}
      {{- iif(time.day == now().day, 'Today at ', 'Yesterday at ') }}
      {{- time | as_timestamp('unknown') | timestamp_custom('%-I:%M %p', true, 'unknown') }}
    {%- endif %}
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(states('sensor.outdoor_temperature_daily_high')) }}

- type: custom:template-entity-row
  entity: sensor.outdoor_temperature_daily_low
  name: "Low Temp (Last 24)"
  icon: mdi:snowflake-thermometer
  state: "{{ states('sensor.outdoor_temperature_daily_low', with_unit=true) }}"
  secondary: >
    {% if has_value('sensor.outdoor_temperature_daily_low_time') %}
      {%- set time = states('sensor.outdoor_temperature_daily_low_time') | as_datetime -%}
      {{- iif(time.day == now().day, 'Today at ', 'Yesterday at ') }}
      {{- time | as_timestamp('unknown') | timestamp_custom('%-I:%M %p', true, 'unknown') }}
    {%- endif %}
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(states('sensor.outdoor_temperature_daily_low')) }}

- type: custom:template-entity-row
  entity: sensor.tempest_st_00057689_temperature
  name: "High Temp (All Time)"
  icon: mdi:sun-thermometer
  state: "{{ state_attr('sensor.tempest_st_00057689_temperature', 'max_all') }} °C"
  secondary: >
    {{ state_attr('sensor.tempest_st_00057689_temperature', 'max_all_time') | as_timestamp('unknown')
        | timestamp_custom('%Y-%m-%d at %-I:%M %p', true, 'unknown') }}
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(state_attr('sensor.tempest_st_00057689_temperature', 'max_all')) }}

- type: custom:template-entity-row
  entity: sensor.tempest_st_00057689_temperature
  name: "Low Temp (All Time)"
  icon: mdi:sun-thermometer
  state: "{{ state_attr('sensor.tempest_st_00057689_temperature', 'min_all') }} °C"
  secondary: >
    {{ state_attr('sensor.tempest_st_00057689_temperature', 'min_all_time') | as_timestamp('unknown')
        | timestamp_custom('%Y-%m-%d at %-I:%M %p', true, 'unknown') }}
  card_mod:
    style: >
      {% from 'weather.jinja' import temp_icon %}
      {{ temp_color(state_attr('sensor.tempest_st_00057689_temperature', 'min_all')) }}

- type: conditional
  conditions:
    - condition: state
      entity: binary_sensor.freezing
      state: "on"
  row:
    entity: binary_sensor.freezing

- type: conditional
  conditions:
    - condition: state
      entity: alert.outdoor_high_temperature
      state_not: idle
  row:
    entity: alert.outdoor_high_temperature
    name: "High Temperature Alert"

- type: conditional
  conditions:
    - condition: state
      entity: alert.outdoor_low_temperature
      state_not: idle
  row:
    entity: alert.outdoor_low_temperature
    name: "Low Temperature Alert"

- type: button
  entity: sensor.outdoor_temperature
  name: "Temperature Map"
  action_name: "VIEW"
  tap_action:
    action: navigate
    navigation_path: temperature-map
