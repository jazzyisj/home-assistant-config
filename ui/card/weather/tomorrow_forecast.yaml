###################################################################################################
## Tomorrow Forecast
###################################################################################################
type: entities
title: "Tomorrow's Forecast"
state_color: true
entities:
  - type: custom:template-entity-row
    entity: sensor.condition_tomorrow
    name: "Condition"
    state: "{{ states('sensor.condition_tomorrow') | title }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import condition_color %}
        {{ condition_color(states('sensor.condition_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.outdoor_high_temperature_tomorrow
    name: "High Temperature"
    state: "{{ states('sensor.outdoor_high_temperature_tomorrow', with_unit=true) }}"
    secondary: "{{ state_attr('sensor.outdoor_high_temperature_time_tomorrow', '12hour') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import temp_color %}
        {{ temp_color(states('sensor.outdoor_high_temperature_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.outdoor_low_temperature_tomorrow
    name: "Low Temperature"
    state: "{{ states('sensor.outdoor_low_temperature_tomorrow', with_unit=true) }}"
    secondary: "{{ state_attr('sensor.outdoor_low_temperature_time_tomorrow', '12hour') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import temp_color %}
        {{ temp_color(states('sensor.outdoor_low_temperature_tomorrow')) }}

  - entity: sensor.dew_point_tomorrow
    name: "Dew Point"
    card_mod:
      style: >
        {% from 'weather.jinja' import temp_color %}
        {{ temp_color(states('sensor.dew_point_tomorrow')) }}

  - entity: sensor.outdoor_humidity_tomorrow
    name: "Humidity"
    card_mod:
      style: >
        {% from 'weather.jinja' import humidity_color %}
        {{ humidity_color(states('sensor.outdoor_humidity_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.wind_speed_tomorrow
    name: "Wind Speed"
    icon: mdi:weather-windy
    state: "{{ states('sensor.wind_speed_tomorrow', with_unit=true) }}"
    secondary: "Gusts: {{ states('sensor.wind_gust_tomorrow', with_unit=true) }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import wind_color %}
        {{ wind_color(states('sensor.wind_gust_tomorrow')) }}

  - entity: sensor.cloud_coverage_tomorrow
    name: "Cloud Coverage"
    card_mod:
      style: >
        {% from 'weather.jinja' import cloud_color %}
        {{ cloud_color(states('sensor.cloud_coverage_tomorrow')) }}

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: sensor.precipitation_probability_tomorrow
      name: "Precipitation Probability"
      state: "{{ states('sensor.precipitation_probability_tomorrow', with_unit=true) }}"
      secondary: >
        {% set rain = states('sensor.precipitation_expected_tomorrow') | int(-1) %}
        {%- if rain > 0 %}
          Accumulation: {{ states('sensor.precipitation_expected_tomorrow', with_unit=true) }}
        {%- endif %}
      card_mod:
        style: >
          {% from 'weather.jinja' import pop_color %}
          {{ pop_color(states('sensor.precipitation_probability_tomorrow')) }}
    entities:
      - type: conditional
        conditions:
          - condition: numeric_state
            entity: sensor.max_precipitation_intensity_tomorrow
            above: 0
        row:
          entity: sensor.max_precipitation_intensity_tomorrow
          name: "Maximum Precipitation Rate"
          card_mod:
            style: >
              {% from 'weather.jinja' import precipitation_intensity_color %}
              {{ precipitation_intensity_color(states('sensor.max_precipitation_intensity_tomorrow')) }}

      - type: conditional
        conditions:
          - condition: numeric_state
            entity: sensor.rain_expected_tomorrow
            above: 0
        row:
          entity: sensor.rain_expected_tomorrow
          name: "Rain"
          card_mod:
            style: |
              :host {
                --paper-item-icon-color: var(--entity-rain-color);
              }

      - type: conditional
        conditions:
          - condition: numeric_state
            entity: sensor.snow_expected_tomorrow
            above: 0
        row:
          entity: sensor.snow_expected_tomorrow
          name: "Snow"
          card_mod:
            style: |
              :host {
                --paper-item-icon-color: var(--entity-snow-color);
              }

      - type: conditional
        conditions:
          - condition: numeric_state
            entity: sensor.ice_expected_tomorrow
            above: 0
        row:
          entity: sensor.ice_expected_tomorrow
          name: "Ice"
          card_mod:
            style: |
              :host {
                --paper-item-icon-color: var(--entity-ice-color);
              }

  - type: custom:template-entity-row
    entity: sensor.fire_index_tomorrow
    name: "Fire Risk"
    state: "{{ states('sensor.fire_risk_tomorrow') }}"
    secondary: "Fire Index: {{ states('sensor.fire_index_tomorrow') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import fire_index_color %}
        {{ fire_index_color(states('sensor.fire_index_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.smoke_level_tomorrow
    name: "Smoke Risk"
    state: "{{ states('sensor.smoke_risk_tomorrow') }}"
    secondary: "Smoke Level: {{ states('sensor.smoke_level_tomorrow', with_unit=true) }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import smoke_level_color %}
        {{ smoke_level_color(states('sensor.smoke_level_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.allergy_index_tomorrow
    name: "Allergy Risk"
    state: "{{ states('sensor.allergy_risk_tomorrow') | title }}"
    secondary: "Allergy Index: {{ states('sensor.allergy_index_tomorrow') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_color %}
        {{ iqvia_index_color(states('sensor.allergy_index_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.asthma_risk_tomorrow
    name: "Asthma Risk"
    state: "{{ states('sensor.asthma_risk_tomorrow') | title }}"
    secondary: "Asthma Index: {{ states('sensor.asthma_index_tomorrow') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_color %}
        {{ iqvia_index_color(states('sensor.asthma_index_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.cold_flu_forecasted_average
    name: "Cold & Flu Risk"
    state: "{{ states('sensor.flu_risk_tomorrow') | title }}"
    secondary: "Flu Index: {{ states('sensor.cold_flu_forecasted_average') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_color %}
        {{ iqvia_index_color(states('sensor.cold_flu_forecasted_average')) }}

  - type: attribute
    name: "Forecast Updated"
    entity: sensor.daily_weather
    attribute: updated
    format: relative
