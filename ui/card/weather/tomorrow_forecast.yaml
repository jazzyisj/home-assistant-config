###############################################################################
## Tomorrow Forecast
###############################################################################
type: entities
title: "Tomorrow's Forecast"
state_color: true
entities:
  - type: custom:template-entity-row
    entity: sensor.condition_tomorrow
    name: "Condition"
    icon: mdi:weather-snowy-rainy
    state: "{{ states('sensor.condition_tomorrow') | title }}"

  - entity: sensor.outdoor_high_temperature_tomorrow
    name: "High Temperature"

  - entity: sensor.outdoor_low_temperature_tomorrow
    name: "Low Temperature"

  - type: custom:template-entity-row
    entity: sensor.precipitation_probability_tomorrow
    name: "Precipitation Probability"
    state: "{{ states('sensor.precipitation_probability_tomorrow', with_unit=true) | title }}"
    secondary: >
      {% if has_value('sensor.precipitation_expected_tomorrow')
          and states('sensor.precipitation_expected_tomorrow') | int(-1) > 0 %}
        Accumulation: {{ '%0.2f' | format(states('sensor.precipitation_expected_tomorrow') | float(-1)) }} mm
      {% endif %}

  - type: custom:template-entity-row
    entity: sensor.wind_speed_tomorrow
    name: "Wind Speed"
    icon: mdi:weather-windy
    state: "{{ states('sensor.wind_speed_tomorrow', with_unit=true) }}"
    secondary: "Gusts: {{ states('sensor.wind_gust_tomorrow', with_unit=true) }}"

  - entity: sensor.cloud_coverage_tomorrow
    name: "Cloud Coverage"

  - type: custom:template-entity-row
    entity: sensor.fire_index_tomorrow
    name: "Fire Risk"
    state: "{{ states('sensor.fire_risk_tomorrow') }}"
    secondary: "Fire Index: {{ states('sensor.fire_index_tomorrow') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import fire_index_icon %}
        {{ fire_index_icon(states('sensor.fire_index_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.smoke_level_tomorrow
    name: "Smoke Risk"
    state: "{{ states('sensor.smoke_risk_tomorrow') }}"
    secondary: "Smoke Level: {{ states('sensor.smoke_level_tomorrow', with_unit=true) }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import smoke_level_icon %}
        {{ smoke_level_icon(states('sensor.smoke_level_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.allergy_index_tomorrow
    name: "Allergy Risk"
    state: "{{ states('sensor.allergy_risk_tomorrow') | title }}"
    secondary: "Allergy Index: {{ states('sensor.allergy_index_tomorrow') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_icon(states('sensor.allergy_index_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.asthma_risk_tomorrow
    name: "Asthma Risk"
    state: "{{ states('sensor.asthma_risk_tomorrow') | title }}"
    secondary: "Asthma Index: {{ states('sensor.asthma_index_tomorrow') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_icon(states('sensor.asthma_index_tomorrow')) }}

  - type: custom:template-entity-row
    entity: sensor.cold_flu_forecasted_average
    name: "Cold & Flu Risk"
    state: "{{ states('sensor.flu_risk_tomorrow') | title }}"
    secondary: "Flu Index: {{ states('sensor.cold_flu_forecasted_average') }}"
    card_mod:
      style: >
        {% from 'weather.jinja' import iqvia_index_icon %}
        {{ iqvia_index_icon(states('sensor.cold_flu_forecasted_average')) }}

  - type: attribute
    name: "Forecast Updated"
    entity: sensor.daily_weather
    attribute: updated
    format: relative
