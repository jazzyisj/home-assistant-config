###############################################################################
## NVR Cameras
###############################################################################
type: entities
title: "Lorex Camera Settings"
state_color: true
show_header_toggle: false
entities:
  - type: custom:fold-entity-row
    head:
      entity: binary_sensor.lorex_nvr_connected
      card_mod:
        style: |
          :host {
            --paper-item-icon-color: var(--entity-critical-color);
          }
    padding: 0
    entities:
      - entity: device_tracker.lorex_nvr
      - entity: binary_sensor.frigate_full_access_running

  - type: button
    name: "View Cameras"
    icon: mdi:cctv
    action_name: "VIEW"
    tap_action:
      action: navigate
      navigation_path: security-cameras

  - type: custom:auto-entities
    filter:
      template: "{{ state_attr('binary_sensor.camera_offline_alert', 'entity_id') }}"
    sort:
      method: name
      ignore_case: true
    show_empty: true
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.camera_offline_alert
        name: "Camera Offline Alert"
        card_mod:
          style: |
            :host {
              --state-binary_sensor-problem-on-color: var(--entity-critical-color);
            }
      padding: 0

  - type: custom:auto-entities
    filter:
      template: "{{ state_attr('binary_sensor.camera_stream_alert', 'entity_id') }}"
    sort:
      method: name
      ignore_case: true
    show_empty: true
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.camera_stream_alert
        name: "Stream Offline Alert"
        card_mod:
          style: |
            :host {
              --state-binary_sensor-problem-on-color: var(--entity-critical-color);
            }
      padding: 0

  - type: custom:auto-entities
    filter:
      template: "{{ state_attr('binary_sensor.camera_tamper_alert', 'entity_id') }}"
    sort:
      method: name
      ignore_case: true
    show_empty: true
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.camera_tamper_alert
        name: "Tamper Detection Alert"
        card_mod:
          style: |
            :host {
              --state-binary_sensor-tamper-on-color: var(--entity-critical-color);
              --paper-item-icon-color:
                  {% if is_state('input_boolean.camera_tamper_detection', 'off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
            }
      padding: 0
    entities:
      - entity: input_boolean.camera_tamper_detection
        card_mod:
          style: |
            :host {
              --switch-unchecked-button-color: var(--entity-warning-color);
              --switch-unchecked-track-color: var(--entity-warning-color);
            }

  - type: custom:fold-entity-row
    head:
      entity: sensor.frigate_status
      state_color: true
    padding: 10
    entities:
      - entity: sensor.frigate_coral_inference_speed
      - entity: sensor.frigate_detection_fps
      - entity: sensor.clips
      - entity: switch.frigate_detection_control
      - entity: switch.frigate_motion_control
      - entity: switch.frigate_snapshot_control
      - entity: switch.frigate_recording_control
      - entity: switch.frigate_contrast_control

  - entity: input_boolean.object_tts_announcements
  - entity: input_boolean.object_mobile_notifications

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category', 'eq', 'camera')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.camera_alerts
card_mod:
  class: basic
