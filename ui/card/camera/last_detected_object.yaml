###################################################################################################
## Last Detected Object
###################################################################################################
type: tile
entity: sensor.last_detected_object
state_content:
  - camera
  - object
tap_action:
  action: navigate
  navigation_path: security-cameras
double_tap_action:
  action: navigate
  navigation_path: !secret FRIGATE_URL
hold_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      title: "Camera Settings"
      content: !include /config/ui/card/camera/camera_settings.yaml
icon_tap_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      title: "Detected Objects"
      content: !include /config/ui/card/camera/detected_object_images.yaml
card_mod:
  style: |-
    ha-card {
      --tile-color:
        {% if is_state('binary_sensor.indoor_camera_alert', 'on') %} var(--pink-color)
        {% elif is_state('binary_sensor.offline_cameras_alert', 'on') %} var(--entity-critical-color)
        {% elif is_state('input_boolean.camera_object_detection', 'off') %} var(--entity-warning-color)
        {% elif is_state('binary_sensor.camera_object_detected', 'on') %} var(--entity-active-color)
        {% else %} var(--state-icon-color)
        {% endif %} !important;
      background:
        {% if is_state('sensor.frigate_status', ['error', 'unknown', 'unavailable']) %} var(--entity-background-critical-color)
        {% elif is_state('input_boolean.camera_object_announcements', 'off')
            or is_state('input_boolean.camera_object_notifications', 'off') %} var(--entity-background-warning-color)
        {% else %} var(--ha-card-background)
        {% endif %} !important;
    }
