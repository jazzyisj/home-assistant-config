###################################################################################################
## Devices and Integration Monitor
###################################################################################################
type: entities
title: "Devices and Integrations"
show_header_toggle: false
entities:
  - entity: binary_sensor.zwave_network

  - type: custom:auto-entities
    filter:
      template: "{{ state_attr('sensor.offline_zwave_devices', 'entity_id') }}"
    show_empty: true
    unique: true
    sort:
      method: name
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.offline_zwave_devices
        card_mod:
          style: |
            {% from 'alert.jinja' import alert_non_zero_style %}
            {{ alert_non_zero_style('sensor.offline_zwave_devices') }}

  - type: custom:auto-entities
    filter:
      include:
        - group: group.integration_connected_sensors
          options:
            secondary_info: last-changed
            card_mod:
              style: |
                :host {
                  --state-icon-color:
                      {{ iif(states('group.integration_connected_sensors') == 'unknown',
                        'var(--disabled-color)', 'var(--entity-warning-color)') }}
                    ;
                }
      exclude:
        - state: "on"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.offline_integrations
        card_mod:
          style: |
            {% from 'alert.jinja' import alert_non_zero_style %}
            {{ alert_non_zero_style('sensor.offline_integrations') }}

  - type: custom:auto-entities
    show_empty: true
    unique: true
    filter:
      template: "{{ state_attr('group.unavailable_entities', 'entity_id') }}"
    sort:
      method: state
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.unavailable_entities

  - type: custom:auto-entities
    filter:
      template: >
        {% from 'alert.jinja' import alert_entities %}
        {{ alert_entities('zwave') }}
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.zwave_alerts
        card_mod:
          style: |
            {% from 'alert.jinja' import alert_switch_style %}
            {{ alert_switch_style('input_boolean.zwave_alerts') }}