###############################################################################
## Integration and Device Monitor
###############################################################################
type: entities
title: "Integrations and Devices"
icon: mdi:devices
show_header_toggle: false
entities:
  - type: custom:auto-entities
    filter:
      include:
        - group: group.cloud_integrations
          options:
            secondary_info: last-changed
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                      {{ iif(states('group.cloud_integrations') == 'unknown',
                        'var(--entity-disabled-color)', 'var(--entity-warning-color)') }}
                    ;
                }
      exclude:
        - state: "on"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.offline_integrations
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if states('sensor.offline_integrations')|int(-1) > 0 %} var(--entity-severe-color);
                {% else %} var(--state-icon-color);
                {% endif %}
            }

  - type: custom:auto-entities
    show_empty: true
    unique: true
    filter:
      template: "{{ state_attr('sensor.unavailable_entities_filtered', 'entity_id') }}"
    sort:
      method: state
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.unavailable_entities_filtered
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if states('sensor.unavailable_entities_filtered')|int(-1) > 0 %} var(--entity-warning-color)
                {% elif states('sensor.unavailable_entities_filtered')|int(-1) == 0 %} var(--state-icon-color)
                {% else %} var(--entity-disabled-color)
                {% endif %}
              ;
            }

  - type: custom:auto-entities
    show_empty: true
    unique: true
    filter:
      template: "{{ state_attr('sensor.unavailable_entities', 'entity_id') }}"
    sort:
      method: state
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.unavailable_entities

  - type: custom:fold-entity-row
    padding: 0
    head:
      entity: sensor.watchman_last_updated
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.watchman_missing_entities')|int(-1) > 0
                  or states('sensor.watchman_missing_services')|int(-1) > 0 %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: sensor.watchman_missing_entities
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if states('sensor.watchman_missing_entities')|int(-1) > 0 %} var(--entity-warning-color)
                {% elif states('sensor.watchman_missing_entities')|int(-1) == 0 %} var(--state-icon-color)
                {% else %} var(--entity-disabled-color)
                {% endif %}
              ;
            }

      - entity: sensor.watchman_missing_services
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if states('sensor.watchman_missing_services')|int(-1) > 0 %} var(--entity-warning-color)
                {% elif states('sensor.watchman_missing_services')|int(-1) == 0 %} var(--state-icon-color)
                {% else %} var(--entity-disabled-color)
                {% endif %}
              ;
            }
  - type: custom:fold-entity-row
    padding: 0
    head:
      entity: binary_sensor.low_battery_alert
      state_color: true
      card_mod:
        style: |
          :host {
            --state-binary_sensor-active-color: var(--entity-warning-color);
          }
    entities:
      - entity: input_number.battery_alert_threshold
card_mod:
  class: basic
