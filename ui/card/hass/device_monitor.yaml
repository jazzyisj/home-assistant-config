###############################################################################
## Device and Sensor Monitor
###############################################################################
type: entities
title: "Integrations and Devices"
icon: mdi:devices
show_header_toggle: false
state_color: true
entities:
  - type: custom:auto-entities
    filter:
      include:
        - group: group.integration_connected_sensors
          options:
            secondary_info: last-changed
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                      {{ iif(states('group.integration_connected_sensors') == 'unknown',
                        'var(--entity-disabled-color)','var(--entity-warning-color)') }}
                    ;
                }
      exclude:
        - state: "on"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.offline_integrations
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if states('sensor.offline_integrations')|int(-1) > 0 %} var(--entity-severe-color);
                {% else %} var(--state-icon-color);
                {% endif %}
            }

  - !include /config/ui/card/network/include/network_connected_devices.yaml
  
  - type: custom:auto-entities
    show_empty: true
    unique: true
    sort:
      method: state
    filter:
      template: "{{ state_attr('sensor.offline_zwave_devices','entity_id') }}"
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.offline_zwave_devices
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% set status = states('sensor.zwave_status') %}
                {% if status == 'critical' %} var(--entity-critical-color)
                {% elif status == 'severe' %} var(--entity-severe-color)
                {% elif status == 'warning' %} var(--entity-warning-color)
                {% elif status == 'minor' %} var(--entity-minor-color)
                {% elif status == 'ok' %} var(--state-icon-color)
                {% else %} var(--entity-disabled-color)
                {% endif %}
              ;
            }

  - type: custom:auto-entities
    show_empty: true
    unique: true
    filter:
      template: "{{ state_attr('sensor.unavailable_entities_filtered','entity_id') }}"
    sort:
      method: state
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.unavailable_entities_filtered
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.unavailable_entities_filtered')|int(-1) > 0 %} var(--entity-warning-color)
              {% elif states('sensor.unavailable_entities_filtered')|int(-1) == 0 %} var(--state-icon-color)
              {% else %} var(--entity-disabled-color)
              {% endif %}
            ;
          }

  - type: custom:auto-entities
    show_empty: true
    unique: true
    filter:
      template: "{{ state_attr('sensor.unavailable_entities','entity_id') }}"
    sort:
      method: state
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.unavailable_entities
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.unavailable_entities')|int(-1) > 0 %} var(--entity-warning-color)
              {% elif states('sensor.unavailable_entities')|int(-1) == 0 %} var(--state-icon-color)
              {% else %} var(--entity-disabled-color)
              {% endif %}
            ;
          }

  - entity: sensor.watchman_last_updated

  - entity: sensor.watchman_missing_entities
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if states('sensor.watchman_missing_entities')|int(-1) > 0 %} var(--entity-warning-color)
            {% elif states('sensor.watchman_missing_entities')|int(-1) == 0 %} var(--state-icon-color)
            {% else %} var(--entity-disabled-color)
            {% endif %}
          ;
        }

  - entity: sensor.watchman_missing_services
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if states('sensor.watchman_missing_services')|int(-1) > 0 %} var(--entity-warning-color)
            {% elif states('sensor.watchman_missing_services')|int(-1) == 0 %} var(--state-icon-color)
            {% else %} var(--entity-disabled-color)
            {% endif %}
          ;
        }
card_mod:
  class: basic_swipe
