###############################################################################
## Integration and Device Monitor
###############################################################################
type: entities
title: "Integrations and Devices"
show_header_toggle: false
entities:
  - type: custom:auto-entities
    filter:
      include:
        - group: group.integration_connected_sensors
          options:
            secondary_info: last-changed
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                      {{ iif(states('group.integration_connected_sensors') == 'unknown',
                        'var(--entity-disabled-color)', 'var(--entity-warning-color)') }}
                    ;
                }
      exclude:
        - state: "on"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.offline_integrations
        card_mod:
          style: |
            {% from 'style.jinja' import alert_non_zero_style %}
            {{ alert_non_zero_style('sensor.offline_integrations') }}

  - type: custom:auto-entities
    show_empty: true
    unique: true
    filter:
      template: "{{ state_attr('group.unavailable_entities_filtered', 'entity_id') }}"
    sort:
      method: state
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.unavailable_entities_filtered
        card_mod:
          style: |
            {% from 'style.jinja' import alert_non_zero_style %}
            {{ alert_non_zero_style('sensor.unavailable_entities_filtered') }}

  - type: custom:auto-entities
    show_empty: true
    unique: true
    filter:
      template: "{{ state_attr('group.unavailable_entities', 'entity_id') }}"
    sort:
      method: state
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: sensor.unavailable_entities

  - type: custom:fold-entity-row
    padding: 0
    head:
      entity: sensor.watchman_last_updated
      card_mod:
        style: |
          {% from 'style.jinja' import alert_non_zero_style %}
          {{ alert_non_zero_style('sensor.watchman_missing_entities') }}
    entities:
      - entity: sensor.watchman_missing_entities
        card_mod:
          style: |
            {% from 'style.jinja' import alert_non_zero_style %}
            {{ alert_non_zero_style('sensor.watchman_missing_entities') }}

      - entity: sensor.watchman_missing_services
        card_mod:
          style: |
            {% from 'style.jinja' import alert_non_zero_style %}
            {{ alert_non_zero_style('sensor.watchman_missing_services') }}

  - type: custom:fold-entity-row
    padding: 0
    head:
      entity: binary_sensor.low_battery_alert
      state_color: true
      card_mod:
        style: |
          :host {
            --state-binary_sensor-active-color: var(--entity-warning-color);
          }
    entities:
      - entity: input_number.battery_alert_threshold

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert | selectattr('attributes.category', 'eq', 'appliance') | map(attribute='entity_id') | list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.appliance_alerts #TEMP to settings dashboard
        card_mod:
          style: |
            {% from 'style.jinja' import alert_switch %}
            {{ alert_switch('input_boolean.appliance_alerts') }}

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert | selectattr('attributes.category', 'eq', 'energy') | map(attribute='entity_id') | list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.energy_alerts #TEMP to settings dashboard
        card_mod:
          style: |
            {% from 'style.jinja' import alert_switch %}
            {{ alert_switch('input_boolean.energy_alerts') }}
