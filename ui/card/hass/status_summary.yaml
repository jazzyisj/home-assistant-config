###############################################################################
## HASS Status Summary
###############################################################################
type: glance
title: "System Status"
icon: mdi:gauge-low
show_state: false
columns: 4
entities:
  - entity: sensor.hass_status
    name: "HASS"
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/hass/hass_monitor.yaml
          timeout: 100000
          card_mod:
            style:
              ha-dialog$: >
                {% from 'style.jinja' import popup_style %}
                {{ popup_style() }}
    double_tap_action:
      action: navigate
      navigation_path: hass-system
    hold_action:
      action: navigate
      navigation_path: hass
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set status = states('sensor.hass_status') %}
            {% if status == 'critical' %} var(--entity-critical-color)
            {% elif status == 'severe' %} var(--entity-severe-color)
            {% elif status == 'warning' %} var(--entity-warning-color)
            {% elif status == 'minor' %} var(--entity-minor-color)
            {% else %} var(--entity-ok-color)
            {% endif %}
          ;
        }

  - entity: sensor.device_status
    name: "Devices"
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/hass/device_monitor.yaml
          timeout: 100000
          card_mod:
            style:
              ha-dialog$: >
                {% from 'style.jinja' import popup_style %}
                {{ popup_style() }}
    hold_action:
      action: navigate
      navigation_path: hass
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set status = states('sensor.device_status') %}
            {% if status == 'critical' %} var(--entity-critical-color)
            {% elif status == 'severe' %} var(--entity-severe-color)
            {% elif status == 'warning' %} var(--entity-warning-color)
            {% elif status == 'minor' %} var(--entity-minor-color)
            {% else %} var(--entity-ok-color)
            {% endif %}
          ;
        }

  - entity: sensor.server_status
    name: "Server"
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/hass/server_monitor.yaml
          size: normal
          timeout: 100000
          card_mod:
            style:
              ha-dialog$: >
                {% from 'style.jinja' import popup_style %}
                {{ popup_style() }}
    double_tap_action:
      action: navigate
      navigation_path: hass-system
    hold_action:
      action: navigate
      navigation_path: hass
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set status = states('sensor.server_status') %}
            {% if status == 'critical' %} var(--entity-critical-color)
            {% elif status == 'severe' %} var(--entity-severe-color)
            {% elif status == 'warning' %} var(--entity-warning-color)
            {% elif status == 'minor' %} var(--entity-minor-color)
            {% else %} var(--entity-ok-color)
            {% endif %}
          ;
        }

  - entity: sensor.network_status
    name: "Network"
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/network/network_monitor.yaml
          timeout: 100000
          card_mod:
            style:
              ha-dialog$: >
                {% from 'style.jinja' import popup_style %}
                {{ popup_style() }}
    double_tap_action:
      action: navigate
      navigation_path: network
    hold_action:
      action: navigate
      navigation_path: hass
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set status = states('sensor.network_status') %}
            {% if status == 'critical' %} var(--entity-critical-color)
            {% elif status == 'severe' %} var(--entity-severe-color)
            {% elif status == 'warning' %} var(--entity-warning-color)
            {% elif status == 'minor' %} var(--entity-minor-color)
            {% else %} var(--entity-ok-color)
            {% endif %}
          ;
        }

  - entity: sensor.zwave_status
    name: "Z-Wave"
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/hass/zwave_network.yaml
          timeout: 100000
          card_mod:
            style:
              ha-dialog$: >
                {% from 'style.jinja' import popup_style %}
                {{ popup_style() }}
    double_tap_action:
      action: navigate
      navigation_path: /config/integrations/integration/zwave_js
    hold_action:
      action: navigate
      navigation_path: /hassio/addon/a0d7b954_zwavejs2mqtt/info
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set status = states('sensor.zwave_status') %}
            {% if status == 'critical' %} var(--entity-critical-color)
            {% elif status == 'severe' %} var(--entity-severe-color)
            {% elif status == 'warning' %} var(--entity-warning-color)
            {% elif status == 'minor' %} var(--entity-minor-color)
            {% else %} var(--entity-ok-color)
            {% endif %}
          ;
        }

  - entity: sensor.pi_hole_status
    name: "Pi-Hole"
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/network/pi_hole.yaml
          timeout: 100000
          card_mod:
            style:
              ha-dialog$: >
                {% from 'style.jinja' import popup_style %}
                {{ popup_style() }}
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set status = states('sensor.pi_hole_status') %}
            {% if status == 'critical' %} var(--entity-critical-color)
            {% elif status == 'severe' %} var(--entity-severe-color)
            {% elif status == 'warning' %} var(--entity-warning-color)
            {% elif status == 'minor' %} var(--entity-minor-color)
            {% else %} var(--entity-ok-color)
            {% endif %}
          ;
        }
    hold_action:
      action: navigate
      navigation_path: hass

  - entity: binary_sensor.kiosk_online
    name: "Kiosk"
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/hass/kiosk_monitor.yaml
          timeout: 100000
          card_mod:
            style:
              ha-dialog$: >
                {% from 'style.jinja' import popup_style %}
                {{ popup_style() }}
    hold_action:
      action: navigate
      navigation_path: hass
    card_mod:
      style: |
        :host {
          --paper-item-icon-color: var(--entity-critical-color);
          --state-binary_sensor-active-color: var(--entity-ok-color);
        }

  - entity: binary_sensor.low_battery_alert
    name: "Battery"
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/hass/battery_monitor.yaml
          timeout: 100000
          card_mod:
            style:
              ha-dialog$: >
                {% from 'style.jinja' import popup_style %}
                {{ popup_style() }}
    hold_action:
      action: navigate
      navigation_path: hass
    card_mod:
      style: |
        :host {
          --paper-item-icon-color: var(--entity-ok-color);
          --state-binary_sensor-active-color: var(--entity-warning-color);
        }
card_mod:
  class: basic #STYLE doesn't work on title
