###############################################################################
## Hass Monitor
###############################################################################
type: entities
title: "Home Assistant"
icon: mdi:home-assistant
state_color: true
show_header_toggle: false
entities:
  - entity: sensor.uptime
    format: total

  - type: custom:fold-entity-row
    padding: 5
    head:
      type: custom:template-entity-row
      entity: sensor.dummy #BUG icon not displaying
      name: "HASS Connections"
      icon: mdi:lan-disconnect
      state: " "
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('binary_sensor.unknown_browsers_alert','on') %} var(--entity-severe-color)
              {% elif is_state('binary_sensor.remote_ui','off') %} var(--entity-severe-color)
              {% elif not is_state('sensor.hassio','up') %} var(--entity-warning-color)
              {% elif states('sensor.connected_clients')|int(-1) == 0 %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - type: custom:fold-entity-row
        padding: 5
        head:
          entity: sensor.hassio
          name: "Uptime Robot Status"
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state('binary_sensor.uptime_robot_connected','off') %} var(--entity-severe-color)
                  {% elif states('sensor.hassio') == 'unknown' %} var(--entity-disabled-color)
                  {% elif is_state('sensor.hassio','up') %} var(--state-icon-color)
                  {% else %} var(--entity-warning-color)
                  {% endif %}
                ;
              }
        entities:
          - entity: switch.hassio_active

      - entity: binary_sensor.remote_ui
        double_tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: "Home Assistant Status"
              content:
                type: iframe
                aspect_ratio: 100%
                url: "https://status.home-assistant.io/#"
              size: fullscreen
              timeout: 60000

        card_mod:
          style: |
            :host {
              --paper-item-icon-color: var(--entity-severe-color);
              --paper-item-icon-active-color: var(--entity-ok-color);
            }

      - type: custom:auto-entities
        show_empty: true
        unique: true
        filter:
          include:
            - entity_id: "sensor.*_browser_user"
              attributes:
                type: "browser_mod"
              options:
                secondary_info: last-changed
                card_mod:
                  style: |
                    :host {
                      --paper-item-icon-color:
                        {% if is_state_attr(config.entity,'authorized',true) %}
                          {{ 'var(--state-active-color)' if states(config.entity)|int(0) > 0 else 'var(--state-icon-color)' }}
                        {% else %} var(--entity-severe-color)
                        {% endif %}
                      ;
                    }
          exclude:
            - state: unavailable
        sort:
          method: name # don't sort by attribute: last_seen - constantly updating
        card:
          type: custom:fold-entity-row
          padding: 10
          head:
            entity: sensor.connected_browsers
            style: |
              :host {
                --paper-item-icon-color:
                  {% set state = states('binary_sensor.unknown_browsers_alert') %}
                  {% if state == 'on' %} var(--entity-severe-color)
                  {% elif state == 'off' %} var(--state-icon-color)
                  {% else %} var(--entity-disabled-color)
                  {% endif %}
                ;
              }

      - entity: sensor.connected_clients
        icon: mdi:console-network
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% set state = states('sensor.connected_clients') %}
                {% if state|int(-1) > 0 %} var(--state-icon-color)
                {% elif state|int(-1) == 0 %} var(--entity-warning-color)
                {% else %} var(--entity-disabled-color)
                {% endif %}
              ;
            }

  - entity: sensor.available_updates
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/hass/hass_updates.yaml
          timeout: 60000
    double_tap_action:
      action: more-info
    hold_action:
      action: navigate
      navigation_path: /hassio/dashboard
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set state = states('sensor.available_updates') %}
            {% if state|int(-1) > 0 %} var(--entity-warning-color)
            {% elif state|int(-1) == 0 %} var(--state-icon-color)
            {% else %} var(--entity-disabled-color)
            {% endif %}
          ;
        }

  - type: custom:template-entity-row
    entity: sensor.backup_state
    name: "Hass Backups"
    icon: mdi:folder-sync
    state: >
      {{ 'Problem' if is_state('binary_sensor.backups_stale','on')
        else states('sensor.backup_state')|replace('_',' ')|title }}
    secondary: >
      Backups: {{ state_attr('sensor.backup_state','backups_in_home_assistant') }}
      - Last: {{ state_attr('sensor.backup_state','last_backup')|as_timestamp(none)|timestamp_custom('%b %-d, %H:%M %p',true,none) }}
    tap_action:
      action: more-info
    double_tap_action:
      action: navigate
      navigation_path: /hassio/backups
    hold_action:
      action: navigate
      navigation_path: /hassio/ingress/cebe7a76_hassio_google_drive_backup
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% set state = states('sensor.backup_state') %}
            {% if is_state('binary_sensor.backups_stale','on') %} var(--entity-critical-color)
            {% elif state == 'unknown' %} var(--entity-disabled-color)
            {% elif is_state('sensor.backup_state','backed_up') %} var(--state-icon-color)
            {% else %} var(--entity-warning-color)
            {% endif %}
          ;
        }

  - !include /config/ui/card/include/disk_use_entity.yaml

  - entity: sensor.home_assistant_alerts
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if 'persistent_notification.hass_alert' in states.persistent_notification|map(attribute='entity_id')|list %} var(--entity-warning-color)
            {% elif states('sensor.home_assistant_alerts') == 'unknown' %} var(--entity-disabled-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }
    tap_action:
      action: fire-dom-event
      browser_mod:
        service: browser_mod.popup
        data:
          content: !include /config/ui/card/hass/hass_alerts_markdown.yaml
          timeout: 60000

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: sensor.dummy #BUG icon not displaying
      name: "HASS Settings"
      icon: mdi:sync-alert
      state: ""
      tap_action:
        action: none
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if not is_state('input_select.log_level','warn') %} var(--entity-warning-color)
              {% elif is_state('input_boolean.startup_pending','on') %} var(--entity-warning-color)
              {% elif is_state('input_boolean.hass_alerts','off') %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: input_select.log_level

      - entity: input_boolean.startup_pending
        card_mod:
          style: | #STYLE
            :host {
              --state-switch-active-color: red;
              --state-binary_sensor-active-color: blue;
              --switch-checked-button-color: var(--entity-warning-color);
              --switch-checked-track-color: var(--entity-warning-color);
            }

      - type: custom:auto-entities
        filter:
          template: "{{ states.alert|selectattr('attributes.category','eq','hass')|map(attribute='entity_id')|list }}"
        sort:
          method: name
          ignore_case: true
        card:
          type: custom:fold-entity-row
          padding: 5
          head:
            entity: input_boolean.hass_alerts
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color: var(--entity-warning-color);
                  --paper-item-icon-active-color:
                    {% if states.alert|selectattr('attributes.category','eq','hass')
                        |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                    {% else %} var(--state-active-color)
                    {% endif %}
                  ;
                }

      - type: custom:auto-entities
        filter:
          include:
            - entity_id: "automation.hass_*"
        sort:
          method: name
          ignore_case: true
        card:
          type: custom:fold-entity-row
          padding: 5
          head:
            type: custom:template-entity-row
            entity: sensor.dummy #BUG icon not displaying
            name: "HASS Automations"
            icon: mdi:sync-alert
            state: ""
            tap_action:
              action: none

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: "*jazzyisj_home_assistant*"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        type: custom:github-entity-row
        repo: jazzyisj/home-assistant-config
        hold_action:
          action: url
          url_path: !secret GITHUB_HASS_CONFIG
card_mod:
  class: basic_swipe
