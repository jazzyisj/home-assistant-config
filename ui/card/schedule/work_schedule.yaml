###################################################################################################
## Work Schedule Settings
###################################################################################################
type: entities
state_color: true
show_header_toggle: false
entities:
  - type: custom:fold-entity-row
    head:
      entity: input_boolean.work_schedule
      card_mod:
        style: |
          :host {
            --paper-item-icon-color: var(--entity-disabled-color);
            --state-active-color:
              {% if is_state('input_boolean.work_schedule_lock', 'on') %} var(--entity-warning-color)
              {% else %} var(--entity-active-color)
              {% endif %}
            ;
            --switch-unchecked-button-color: var(--entity-warning-color);
            --switch-unchecked-track-color: var(--entity-warning-color);
          }
    entities:
      - entity: input_boolean.work_schedule_lock
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.work_schedule', 'off') %} var(--entity-disabled-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

  - type: custom:fold-entity-row
    head:
      entity: sensor.work_shift_today
      name: "Work Shift Today"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('input_boolean.work_schedule', 'off') %} var(--entity-disabled-color)
              {% elif is_state('input_boolean.work_shift_override', 'on') %} var(--entity-warning-color)
              {% elif is_state('sensor.work_shift_today', 'Days') %} var(--calendar-dayshift-color)
              {% elif is_state('sensor.work_shift_today', 'Afternoons') %} var(--calendar-afternoonshift-color)
              {% endif %}
            ;
          }
    entities:
      - entity: input_boolean.work_shift_override
        card_mod:
          style: |
            {% from 'schedule.jinja' import schedule_switch_style %}
            {{ schedule_switch_style() }}

      - entity: input_select.current_work_shift
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.work_schedule', 'off') %} var(--entity-disabled-color)
                {% elif is_state('input_select.current_work_shift', 'Days') %} var(--calendar-dayshift-color)
                {% elif is_state('input_select.current_work_shift', 'Afternoons') %} var(--calendar-afternoonshift-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: sensor.work_shift_tomorrow
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.work_schedule', 'off') %} var(--entity-disabled-color)
                  {% elif is_state('input_boolean.work_shift_override', 'on') %} var(--entity-warning-color)
                  {% elif is_state('sensor.work_shift_tomorrow', 'Days') %} var(--calendar-dayshift-color)
                  {% elif is_state('sensor.work_shift_tomorrow', 'Afternoons') %} var(--calendar-afternoonshift-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
              ;
            }

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: binary_sensor.work_today
      state: "{{ states('binary_sensor.work_today') | title }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('input_boolean.work_schedule', 'off') %} var(--entity-disabled-color)
              {% elif is_state('binary_sensor.work_today', 'on') %}
                {% if is_state('input_boolean.work_today_on', 'on') %} var(--entity-warning-color)
                {% elif is_state('sensor.work_shift_today', 'Days') %} var(--calendar-dayshift-color)
                {% elif is_state('sensor.work_shift_today', 'Afternoons') %} var(--calendar-afternoonshift-color)
                {% else %} var(--entity-warning-color)
                {% endif %}
              {% elif is_state('input_boolean.work_today_off', 'on') %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: input_boolean.work_today_on
        card_mod:
          style: |
            {% from 'schedule.jinja' import schedule_switch_style %}
            {{ schedule_switch_style() }}

      - entity: input_boolean.work_today_off
        card_mod:
          style: |
            {% from 'schedule.jinja' import schedule_switch_style %}
            {{ schedule_switch_style() }}

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: binary_sensor.work_tomorrow
      state: "{{ states('binary_sensor.work_tomorrow') | title }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('input_boolean.work_schedule', 'off') %} var(--entity-disabled-color)
              {% elif is_state('binary_sensor.work_tomorrow', 'on') %}
                {% if is_state('input_boolean.work_tomorrow_on', 'on') %} var(--entity-warning-color)
                {% elif is_state('sensor.work_shift_tomorrow', 'Days') %} var(--calendar-dayshift-color)
                {% elif is_state('sensor.work_shift_tomorrow', 'Afternoons') %} var(--calendar-afternoonshift-color)
                {% else %} var(--entity-warning-color)
                {% endif %}
              {% elif is_state('input_boolean.work_tomorrow_off', 'on') %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: input_boolean.work_tomorrow_on
        card_mod:
          style: |
            {% from 'schedule.jinja' import schedule_switch_style %}
            {{ schedule_switch_style() }}

      - entity: input_boolean.work_tomorrow_off
        card_mod:
          style: |
            {% from 'schedule.jinja' import schedule_switch_style %}
            {{ schedule_switch_style() }}

  - type: custom:fold-entity-row
    head:
      entity: binary_sensor.work_holiday
      card_mod:
        style: |
          {% from 'schedule.jinja' import schedule_cal_sensor_style %}
          {{ schedule_cal_sensor_style() }}
    entities:
      - type: attribute
        entity: sensor.next_work_holiday
        attribute: display

  - entity: binary_sensor.work_vacation
    card_mod:
      style: |
        {% from 'schedule.jinja' import schedule_cal_sensor_style %}
        {{ schedule_cal_sensor_style() }}

  - entity: binary_sensor.work_layoff
    card_mod:
      style: |
        {% from 'schedule.jinja' import schedule_cal_sensor_style %}
        {{ schedule_cal_sensor_style() }}

  - entity: input_boolean.saturday_workday
    card_mod:
      style: |
        {% from 'schedule.jinja' import schedule_switch_style %}
        {{ schedule_switch_style() }}

  - entity: input_boolean.sunday_workday
    card_mod:
      style: |
        {% from 'schedule.jinja' import schedule_switch_style %}
        {{ schedule_switch_style() }}

  - entity: input_boolean.holiday_workday
    card_mod:
      style: |
        {% from 'schedule.jinja' import schedule_switch_style %}
        {{ schedule_switch_style() }}
