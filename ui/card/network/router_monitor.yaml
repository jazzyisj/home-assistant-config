###############################################################################
## Router Monitor
###############################################################################
type: entities
title: "Router Monitor"
icon: mdi:router-wireless
state_color: true
show_header_toggle: false
entities:
  - type: custom:bar-card
    name: "Processor Use"
    entity: sensor.rt_ax58u_cpu
    entity_row: true
    icon: mdi:cpu-32-bit
    positions:
      icon: outside
      name: outside
      indicator: inside
      value: outside
    direction: right
    height: 15px
    width: 60%
    decimal: 0
    min: 0
    max: 100
    severity: !include /config/ui/bar/include/processor_use_bar_color.yaml
    card_mod:
      class: bar_sub_card

  - type: custom:bar-card
    name: "Processor Temp"
    entity: sensor.rt_ax58u_temperature_cpu
    entity_row: true
    icon: mdi:thermometer
    positions:
      icon: outside
      name: outside
      indicator: inside
      value: outside
    direction: right
    height: 15px
    width: 60%
    decimal: 0
    min: 15
    max: 70
    severity: !include /config/ui/bar/include/cpu_temp_bar_color.yaml
    card_mod:
      class: bar_sub_card

  - type: custom:bar-card
    name: "Memory Use"
    entity: sensor.rt_ax58u_ram
    entity_row: true
    icon: mdi:memory
    positions:
      icon: outside
      name: outside
      indicator: inside
      value: outside
    direction: right
    height: 15px
    width: 60%
    decimal: 0
    min: 0
    max: 100
    severity: !include /config/ui/bar/include/memory_use_bar_color.yaml
    card_mod:
      class: bar_sub_card

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: binary_sensor.rt_ax58u_port_status_lan
      name: "LAN Status"
      state: "{{ iif(is_state('binary_sensor.rt_ax58u_port_status_lan','on'),'Connected','Disconnected') }}"
      secondary: "{{ iif(states('sensor.unknown_devices')|int(-1) > 0,'Unknown Device Detected','') }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.unknown_devices')|int(-1) > 0 %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
              ;
            --secondary-text-color: var(--entity-warning-color);
          }
    padding: 0
    entities:
      - entity: sensor.rt_ax58u_connected_devices
        name: "Connected Devices"

      - !include /config/ui/card/network/include/network_devices_unknown.yaml
      - !include /config/ui/card/network/include/network_devices_wired.yaml
      - !include /config/ui/card/network/include/network_devices_wireless.yaml

      - entity: sensor.rt_ax58u_latest_connected
        name: "Latest Connected"

  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: binary_sensor.rt_ax58u_port_status_wan
      name: "WAN Port Status"
    entities:
      - entity: binary_sensor.rt_ax58u_wan
        name: "WAN"

      - entity: sensor.rt_ax58u_wan_ip
        name: "WAN IP"

  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: switch.rt_ax58u_wireless_2_4_ghz
      name: Wireless 2.4 GHz
    entities:
      - entity: switch.rt_ax58u_guest_2_4_ghz_1
        name: Guest 2.4 GHz 1
      - entity: switch.rt_ax58u_guest_2_4_ghz_2
        name: Guest 2.4 GHz 2
      - entity: switch.rt_ax58u_guest_2_4_ghz_3
        name: Guest 2.4 GHz 3

  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: switch.rt_ax58u_wireless_5_ghz
      name: Wireless 5 GHz
    entities:
      - entity: switch.rt_ax58u_guest_5_ghz_1
        name: Guest 5 GHz 1
      - entity: switch.rt_ax58u_guest_5_ghz_2
        name: Guest 5 GHz 2
      - entity: switch.rt_ax58u_guest_5_ghz_3
        name: Guest 5 GHz 3

  - type: button
    name: "Speedtest"
    icon: mdi:speedometer
    tap_action:
      action: call-service
      service: script.wan_speedtest

  - entity: sensor.rt_ax58u_boot_time
    name: Boot Time

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','network')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.network_alerts
        card_mod:
          style: |
            {% from 'style.jinja' import alert_switch %}
            {{ alert_switch('input_boolean.network_alerts') }}

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: "automation.network_*"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        type: custom:template-entity-row
        name: "Network Automations"
        icon: mdi:sync-alert
        state: ""

  - type: buttons
    entities:
      - entity: binary_sensor.rt_ax58u_wan
        name: "Int Admin"
        tap_action:
          action: url
          url_path: !secret ROUTER_ADMIN_INT

      - entity: binary_sensor.rt_ax58u_wan
        name: "Ext Admin"
        tap_action:
          action: url
          url_path: !secret ROUTER_ADMIN_EXT
    card_mod:
      style:
        hui-buttons-base $: |
          .ha-scrollbar {
            justify-content: center;
          }
card_mod:
  class: basic_swipe
