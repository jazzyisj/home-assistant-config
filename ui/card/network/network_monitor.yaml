###############################################################################
## Network Monitor
###############################################################################
type: entities
title: "Network"
state_color: true
show_header_toggle: false
entities:
  - type: custom:bar-card
    name: "Processor Use"
    entity: sensor.rt_ax58u_cpu
    entity_row: true
    icon: mdi:cpu-32-bit
    positions:
      icon: outside
      name: outside
      indicator: inside
      value: outside
    direction: right
    height: 15px
    width: 60%
    decimal: 0
    min: 0
    max: 100
    severity: !include /config/ui/bar/include/processor_use_bar_color.yaml
    card_mod:
      class: bar_sub_card
      style: |
        {% from 'hass.jinja' import status_sensor_style %}
        {{ status_sensor_style(states('sensor.rt_ax58u_cpu'), 0, 45, 55, 65, 75) }}

  - type: custom:bar-card
    name: "Processor Temp"
    entity: sensor.rt_ax58u_temperature_cpu
    entity_row: true
    icon: mdi:thermometer
    positions:
      icon: outside
      name: outside
      indicator: inside
      value: outside
    direction: right
    height: 15px
    width: 60%
    decimal: 0
    min: 15
    max: 70
    severity: !include /config/ui/bar/include/processor_temp_bar_color.yaml
    card_mod:
      class: bar_sub_card
      style: |
        {% from 'hass.jinja' import status_sensor_style %}
        {{ status_sensor_style(states('sensor.rt_ax58u_temperature_cpu'), 0, 50, 60, 70, 80) }}

  - type: custom:bar-card
    name: "Memory Use"
    entity: sensor.rt_ax58u_ram
    entity_row: true
    icon: mdi:memory
    positions:
      icon: outside
      name: outside
      indicator: inside
      value: outside
    direction: right
    height: 15px
    width: 60%
    decimal: 0
    min: 0
    max: 100
    severity: !include /config/ui/bar/include/memory_use_bar_color.yaml
    card_mod:
      class: bar_sub_card
      style: |
        {% from 'hass.jinja' import status_sensor_style %}
        {{ status_sensor_style(states('sensor.rt_ax58u_ram'), 0, 60, 75, 85, 95) }}

  - type: conditional
    conditions:
      - condition: state
        entity: binary_sensor.wan
        state: "on"
    row:
      type: custom:hui-element
      card_type: grid
      square: true
      columns: 3
      cards:
        - type: conditional
          conditions:
            - condition: state
              entity: sensor.speedtest_download
              state_not:
                - unknown
                - unavailable
          card: !include /config/ui/gauge/speedtest_download.yaml

        - type: conditional
          conditions:
            - condition: state
              entity: sensor.speedtest_upload
              state_not:
                - unknown
                - unavailable
          card: !include /config/ui/gauge/speedtest_upload.yaml

        - type: conditional
          conditions:
            - condition: state
              entity: sensor.speedtest_ping
              state_not:
                - unknown
                - unavailable
          card: !include /config/ui/gauge/speedtest_ping.yaml

  - entity: sensor.speedtest_last_update

  - type: conditional
    conditions:
      - condition: state
        entity: binary_sensor.wan
        state: "on"
    row:
      type: button
      entity: script.wan_speedtest
      name: "Speedtest"
      tap_action:
        action: perform-action
        perform_action: script.wan_speedtest

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: binary_sensor.rt_ax58u_port_status_lan
      name: "LAN Status"
      state: "{{ iif(is_state('binary_sensor.rt_ax58u_port_status_lan', 'on'), 'Connected', 'Disconnected') }}"
      secondary: "{{ iif(is_state('binary_sensor.unknown_device_alert', 'on'), 'Unknown Device Detected', '') }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('binary_sensor.unknown_device_alert', 'on') %} var(--entity-warning-color)
              {% elif is_state('binary_sensor.rt_ax58u_port_status_lan', 'on') %} var(--state-active-color)
              {% else %} var(--state-icon-color)
              {% endif %}
              ;
            --secondary-text-color: var(--entity-warning-color);
          }
    padding: 0
    entities:
      - entity: sensor.rt_ax58u_connected_devices
        name: "Connected Devices"

      - !include /config/ui/card/network/include/network_devices_wired.yaml
      - !include /config/ui/card/network/include/network_devices_wireless.yaml
      - !include /config/ui/card/network/include/network_devices_unknown.yaml

      - entity: sensor.rt_ax58u_latest_connected
        name: "Latest Connected"

      - entity: switch.rt_ax58u_wireless_2_4_ghz
        name: Wireless 2.4 GHz

      - entity: switch.rt_ax58u_wireless_5_ghz
        name: Wireless 5 GHz

      - entity: switch.rt_ax58u_guest_2_4_ghz_1
        name: "Guest - 2 Ghz"

      - entity: switch.rt_ax58u_guest_5_ghz_1
        name: "Guest - 5 Ghz"

  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: binary_sensor.wan
      name: "WAN Connected"
      card_mod:
        style: >
          :host {
            --paper-item-icon-color:
              {% if is_state('binary_sensor.wan', 'off') %} var(--entity-critical-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: switch.rt_ax58u_block_internet
        name: "Disable Internet"
        card_mod:
          style: >
            :host {
              --paper-item-icon-color: var(--state-icon-color);
              --state-switch-active-color: var(--entity-critical-color);
              --switch-checked-button-color: var(--entity-critical-color);
              --switch-checked-track-color: var(--entity-button-critical-color);
            }

      - entity: binary_sensor.rt_ax58u_port_status_wan
        name: "WAN Port Status"
        card_mod:
          style: >
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.rt_ax58u_port_status_wan', 'off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: binary_sensor.rt_ax58u_wan
        name: "RT-AX58u WAN"
        card_mod:
          style: >
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.rt_ax58u_wan', 'off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: binary_sensor.wan_ping
        name: "WAN Ping"
        card_mod:
          style: >
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.wan_ping', 'off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: binary_sensor.rt_ax58u_internet
        name: "Internet Connected"
        card_mod:
          style: >
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.rt_ax58u_internet', 'off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: sensor.rt_ax58u_wan_ip
        name: "WAN IP"

      - entity: sensor.rt_ax58u_wan_ip_extra
        name: "Modem IP"

  - entity: sensor.rt_ax58u_boot_time
    name: Boot Time

  - type: custom:auto-entities
    filter:
      template: >
        {% from 'alert.jinja' import alert_entities %}
        {{ alert_entities('network') }}
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.network_alerts
        state_color: true
        card_mod:
          style: |
            {% from 'alert.jinja' import alert_switch %}
            {{ alert_switch('input_boolean.network_alerts') }}
