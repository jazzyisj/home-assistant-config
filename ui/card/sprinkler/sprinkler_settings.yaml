###############################################################################
## Sprinkler Settings
###############################################################################
type: entities
title: "Sprinkler Settings"
icon: mdi:sprinkler-variant
show_header_toggle: false
state_color: true
entities:
  - entity: binary_sensor.hydrawise_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.hydrawise_connected','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: binary_sensor.sprinklers_status
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.sprinklers_status','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','sprinkler')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.sprinkler_alerts
        card_mod:
          style: |
            {% from 'style.jinja' import alert_switch %}
            {{ alert_switch('input_boolean.sprinkler_alerts') }}

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: "automation.sprinkler_*"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        type: custom:template-entity-row
        name: "Sprinkler Automations"
        icon: mdi:sync-alert
        state: ""
card_mod:
  class: basic_swipe
