###############################################################################
## Sprinkler Settings
###############################################################################
type: entities
title: "Sprinkler Settings"
icon: mdi:sprinkler-variant
show_header_toggle: false
state_color: true
entities:
  - entity: binary_sensor.hydrawise_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color: var(--entity-critical-color);
        }

  - entity: binary_sensor.sprinkler_active

  - type: custom:template-entity-row
    entity: sensor.current_watering_zone
    state: "{{ states('sensor.current_watering_zone') | replace('_', ' ') | title }}"
    secondary: >
      {% if is_state('binary_sensor.hydrawise_connected', 'on') %}
        {% if not is_state('sensor.current_watering_zone', 'not_watering') %}
          Remaining: {{ state_attr('sensor.current_watering_zone', 'minutes_left') }} minutes
        {% endif %}
      {% endif %}
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if states('sensor.current_watering_zone') == 'unknown' %} var(--entity-critical-color)
            {% elif states('sensor.current_watering_zone') == 'not_watering' %} var(--state-icon-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - type: custom:template-entity-row
    entity: sensor.next_watering_zone
    state: "{{ states('sensor.next_watering_zone') | title }}"
    secondary: >
      {% if not is_state('sensor.next_watering_zone', 'suspended') %}
        {{ state_attr('sensor.next_watering_zone', 'start_time') }}
      {% endif %}
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if states('sensor.next_watering_zone') == 'unknown' %} var(--entity-critical-color)
            {% elif is_state('sensor.next_watering_zone', 'suspended') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: switch.sprinkler_automatic_watering

  - type: button
    icon: mdi:devices
    name: "Device Settings"
    action_name: "VIEW"
    tap_action:
      action: navigate
      navigation_path: /config/integrations/integration/hydrawise

  - type: button
    icon: mdi:devices
    name: "Hydrawise App"
    action_name: "VIEW"
    tap_action:
      action: url
      url_path: !secret HYDRAWISE

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert | selectattr('attributes.category', 'eq', 'sprinkler') | map(attribute='entity_id') | list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.sprinkler_alerts
        card_mod:
          style: |
            {% from 'style.jinja' import alert_switch %}
            {{ alert_switch('input_boolean.sprinkler_alerts') }}
card_mod:
  class: basic
