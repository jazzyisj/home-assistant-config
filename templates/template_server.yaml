###############################################################################
## Template - System
###############################################################################
- binary_sensor:
    - name: 'CPU Temperature Alert'
      unique_id: cpu_temperature_alert
      device_class: heat
      delay_on: 600
      state: >
        {{ is_state('binary_sensor.cpu_temp_status','severe')
            and is_state('input_boolean.system_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Processor Use Alert'
      unique_id: processor_use_alert
      device_class: problem
      delay_on: 600
      state: >
        {{ is_state('binary_sensor.processor_use_status','severe')
            and is_state('input_boolean.system_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Memory Use Alert'
      unique_id: memory_use_alert
      device_class: problem
      delay_on: 600
      state: >
        {{ is_state('binary_sensor.memory_use_status','severe')
            and is_state('input_boolean.system_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Swap Use Alert'
      unique_id: swap_use_alert
      device_class: problem
      delay_on: 600
      state: >
        {{ is_state('binary_sensor.swap_use_status','severe')
            and is_state('input_boolean.system_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Disk Use Alert'
      unique_id: disk_use_alert
      device_class: problem
      state: >
        {{ is_state('binary_sensor.disk_status','severe')
            and is_state('input_boolean.system_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

- sensor:
    - name: 'Memory Use Status'
      unique_id: memory_use_status
      icon: mdi:memory
      state: >
        {% set mem = states('sensor.memory_use_percent')|int(-1) %}
        {% if mem > 90 %} critical
        {% elif mem > 80 %} severe
        {% elif mem > 70 %} warning
        {% elif mem > 60 %} minor
        {% else %} ok
        {% endif %}

    - name: 'Swap Use Status'
      unique_id: swap_use_status
      icon: mdi:memory
      state:
        ok #QUESTION does it matter? >
        # {% set swap = states('sensor.swap_use_percent')|int(-1) %}
        # {% if swap > 95 %} critical
        # {% elif swap > 90 %} severe
        # {% elif swap > 85 %} warning
        # {% elif swap > 80 %} minor
        # {% else %} ok
        # {% endif %}

    - name: 'Processor Use Status'
      unique_id: processor_use_status
      icon: mdi:developer-board
      state: >
        {% set procuse = states('sensor.processor_use_percent')|int(-1) %}
        {% if procuse > 75 %} critical
        {% elif procuse > 65 %} severe
        {% elif procuse > 55 %} warning
        {% elif procuse > 45 %} minor
        {% else %} ok
        {% endif %}

    - name: 'CPU Temp Status'
      unique_id: cpu_temp_status
      icon: mdi:thermometer
      state: >
        {% set temp = states('sensor.cpu_temperature')|int(-1) %}
        {% if temp > 70 %} critical
        {% elif temp > 60 %} severe
        {% elif temp > 50 %} warning
        {% elif temp > 40 %} minor
        {% else %} ok
        {% endif %}

    - name: 'Disk Use Status'
      unique_id: disk_use_status
      icon: mdi:database
      state: >
        {% set size = states('sensor.disk_use_percent_home')|int(-1) %}
        {% if size > 80 %} critical
        {% elif size > 70 %} severe
        {% elif size > 60 %} warning
        {% elif size > 50 %} minor
        {% else %} ok
        {% endif %}

    - name: 'Server Status'
      unique_id: server_status
      icon: mdi:server
      state: >
        {% if is_state('sensor.disk_use_status','critical')
            or is_state('sensor.cpu_temp_status','critical')
            or is_state('sensor.processor_use_status','critical')
            or is_state('sensor.swap_use_status','critical')
            or is_state('sensor.memory_use_status','critical') %} critical
        {% elif is_state('sensor.disk_use_status','severe')
            or is_state('sensor.cpu_temp_status','severe')
            or is_state('sensor.processor_use_status','severe')
            or is_state('sensor.swap_use_status','severe')
            or is_state('sensor.memory_use_status','severe') %} severe
        {% elif is_state('sensor.disk_use_status','warning')
            or is_state('sensor.cpu_temp_status','warning')
            or is_state('sensor.processor_use_status','warning')
            or is_state('sensor.swap_use_status','warning')
            or is_state('sensor.memory_use_status','warning') %} warning
        {% elif is_state('sensor.disk_use_status','minor')
            or is_state('sensor.cpu_temp_status','minor')
            or is_state('sensor.processor_use_status','minor')
            or is_state('sensor.swap_use_status','minor')
            or is_state('sensor.memory_use_status','minor') %} minor
        {% else %} ok
        {% endif %}

    - name: 'Server Uptime'
      unique_id: server_uptime
      icon: mdi:clock-start
      state: >
        {% if states('sensor.last_boot') not in ['unknown','unavailable'] %}
          {% set uptime = now().timestamp() - states('sensor.last_boot')|as_timestamp %}
          {% set minutes = (uptime // 60)|int(0) %}
          {% set hours = (minutes // 60) %}
          {% set days = (hours // 24) %}
          {% set weeks = (days // 7) %}
          {% set minutes = (minutes % 60) %}
          {% set hours =  (hours % 24) %}
          {% set days = (days % 7) %}
          {% macro phrase(value, name) %}
            {%- set value = value %}
            {%- set end = 's' if value > 1 else '' %}
            {{- '{} {}{}'.format(value, name, end) if value|int(0) > 0 else '' }}
          {%- endmacro %}
          {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ]|select('!=','')|list|join(', ') %}
          {% set last_comma = text.rfind(',') %}
          {% if last_comma != -1 %}
            {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
          {% endif %}
          {{ text }}
        {% endif %}

    - name: 'Last Boot Date Time'
      unique_id: last_boot_date_time
      icon: mdi:clock-start
      state: >
        {% if states('sensor.last_boot') not in ['unknown','unavailable'] %}
          {% set last_boot = states('sensor.last_boot')|as_datetime|as_local %}
          {% set date = last_boot.strftime('%d') %}
          {% set date = '{:01}'.format(date|int(0)) %}
          {% if date in ('1','21','31') %}{% set date = date ~ 'st' %}
          {% elif now().day in ('2','22') %}{% set date = date ~ 'nd' %}
          {% elif now().day in ('3','23') %}{% set date = date ~ 'rd' %}
          {% else %}{% set date = date ~ 'th' %}
          {% endif %}
          {{ last_boot.strftime('%a') }} {{ date }} {{ last_boot.strftime('%b %Y') }} {{ last_boot.strftime('at %-I:%M %p') }}
        {% endif %}
