###############################################################################
## Templates - Sprinkler
###############################################################################
- binary_sensor:
    - name: 'Hydrawise Connected'
      unique_id: hydrawise_connected
      device_class: connectivity
      icon: "{{ 'mdi:sprinkler-variant' if is_state('binary_sensor.hydrawise_connected','on') else 'mdi:alert-circle' }}"
      state: "{{ not states('binary_sensor.sprinklers_status')|lower in ['unknown','unavailable','none'] }}"

    - name: 'Hydrawise Connected Alert'
      unique_id: hydrawise_connected_alert
      icon: mdi:sprinkler-variant
      state: >
        {{ is_state('binary_sensor.hydrawise_connected','off')
            and is_state('input_boolean.hass_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Hydrawise Controller Connected Alert'
      unique_id: hydrawise_controller_connected_alert
      icon: mdi:sprinkler-variant
      state:
        > #NOTE sprinkler_status provided by integration, unavailable if offline
        {{ is_state('binary_sensor.sprinklers_status','off')
            and is_state('binary_sensor.hydrawise_connected','on')
            and is_state('input_boolean.hass_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - unique_id: sprinkler_active
      state: >
        {{ states('sensor.current_watering_zone')|lower not in ['not watering','unknown','unavailable','none'] }}

- sensor:
    - name: 'Current Watering Zone'
      unique_id: current_watering_zone
      icon: mdi:sprinkler-variant
      state: > # zone name, only one enity in group can ever be on at once
        {% set sensors = expand('group.sprinkler_current_cycle') %}
        {% set count = sensors|selectattr('state','eq','on')|list|count %}
        {{ (sensors|selectattr('state','eq','on')|map(attribute='attributes.zone_name')
              |list)[0] if count == 1 else 'Not Watering' }}
      attributes:
        start_time: >
          {% set sensors = expand('group.sprinkler_current_cycle') %}
          {{ (sensors|selectattr('state','eq','on')|map(attribute='last_changed')|join(''))
                |as_timestamp('unknown')|timestamp_custom('%-I:%M %p',true,'unknown')
              if sensors|selectattr('state','eq','on')|list|count == 1 else 'not_set' }}
        minutes_left: >
          {% set sensors = expand('group.sprinkler_current_cycle') %}
          {% set current = sensors|selectattr('state','eq','on')|map(attribute='entity_id')|join('') %}
          {% if current == '' %} not_set
          {% else %}{{ states('sensor.' ~ current[14:-9] ~ '_watering_time') }}
          {% endif %}
      availability: "{{ is_state('binary_sensor.hydrawise_connected','on') }}"

    ## reject current watering zone to get next
    ## if more than 1 entity is min value then all zones are suspended
    ## state is zone name
    - name: 'Next Watering Zone'
      unique_id: next_watering_zone
      device_class: timestamp
      icon: mdi:sprinkler-variant
      state: > #TODO
        {% set zone_on = state_attr(expand('group.sprinkler_current_cycle')
            |selectattr('state','eq','on')|map(attribute='entity_id')|join(''),'identifier') %}
        {% set sensors = expand('group.sprinkler_next_cycle') %}
        {% set next = sensors|rejectattr('attributes.identifier','eq',zone_on)|map(attribute='state')|list|min %}
        {% set suspended = next|as_timestamp - now().timestamp() > 31536000 %}
        {% if suspended %} Watering Suspended
        {% else %}{{ sensors|selectattr('state','eq',next)|map(attribute='attributes.zone_name')|join('') }}
        {% endif %}
      attributes:
        start_time: >
          {% set zone_on = state_attr(expand('group.sprinkler_current_cycle')
              |selectattr('state','eq','on')|map(attribute='entity_id')|join(''),'identifier') %}
          {% set sensors = expand('group.sprinkler_next_cycle') %}
          {% set next = sensors|rejectattr('attributes.identifier','eq',zone_on)|map(attribute='state')|list|min %}
          {% set suspended = next|as_timestamp - now().timestamp() > 31536000 %}
          {% if suspended %} not_set
          {% else %}{{ next|as_timestamp('unknown')|timestamp_custom('%a, %B %d %Y, %-I:%M %p',true,'unknown') }}
          {% endif %}
      availability: "{{ is_state('binary_sensor.hydrawise_connected','on') }}"
