- binary_sensor:
    - unique_id: balboa_connected
      name: Balboa Connected
      icon: "{{ 'mdi:spa' if is_state('binary_sensor.balboa_connected','on') else 'mdi:spa-outline' }}"
      device_class: connectivity
      delay_off:
        minutes: 30
      state: "{{ not states('climate.spa')|lower in ['unknown','unavailable','none'] }}"

    - unique_id: balboa_connected_alert
      name: Balboa Connected Alert
      icon: mdi:spa
      state: >
        {{ is_state('binary_sensor.balboa_connected','off')
            and is_state('input_boolean.spa_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - unique_id: spa_low_temperature_alert
      delay_on:
        minutes: 15 # let temp stabalize, avoid false alerts
      state: >
        {{ states('sensor.current_temperature')|lower not in ['unknown','unavailable','none']
            and states('sensor.spa_temperature')|int < states('input_number.spa_low_temperature_threshold')|int
            and is_state('input_boolean.spa_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

- sensor:
    - unique_id: spa_temperature
      name: Spa Temperature
      icon: mdi:thermometer
      device_class: temperature
      unit_of_measurement: 'Â°F'
      state: "{{ state_attr('climate.spa','current_temperature') }}"
      availability: "{{ state_attr('climate.spa','current_temperature')|lower not in ['unknown','unavailable','none'] }}"

    - unique_id: spa_target_temperature
      name: Spa Target Temperature
      icon: mdi:thermometer
      device_class: temperature
      unit_of_measurement: 'Â°F'
      state: "{{ state_attr('climate.spa','temperature') }}"
      availability: "{{ state_attr('climate.spa','temperature')|lower not in ['unknown','unavailable','none'] }}"