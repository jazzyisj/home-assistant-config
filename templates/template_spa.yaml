- binary_sensor:
    - name: 'Balboa Connected'
      unique_id: balboa_connected
      icon: "{{ 'mdi:hot-tub' if is_state('binary_sensor.balboa_connected','on') else 'mdi:alert-circle' }}"
      device_class: connectivity
      # balboa controller goes off line periodically by design
      delay_off: "{{ 0 if is_state('binary_sensor.balboa_connected','unknown') else 600 }}"
      state: "{{ not states('climate.spa')|lower in ['unknown','unavailable','none'] }}"

    - name: 'Balboa Connected Alert'
      unique_id: balboa_connected_alert
      icon: mdi:hot-tub
      state: >
        {{ is_state('binary_sensor.balboa_connected','off')
            and is_state('input_boolean.spa_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Spa Low Temperature Alert'
      unique_id: spa_low_temperature_alert
      # let temp stabalize
      delay_on: "{{ 0 if is_state('binary_sensor.spa_low_temperature_alert','unknown') else 900 }}"
      state: >
        {{ states('sensor.current_temperature')|lower not in ['unknown','unavailable','none']
            and states('sensor.spa_temperature')|int(0) < states('input_number.spa_low_temperature_threshold')|int(0)
            and is_state('input_boolean.spa_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

- sensor:
    - name: 'Spa Temperature'
      unique_id: spa_temperature
      icon: mdi:thermometer
      device_class: temperature
      unit_of_measurement: 'Â°C'
      state: "{{ state_attr('climate.spa','current_temperature') }}"
      availability: "{{ state_attr('climate.spa','current_temperature') != none }}"

    - name: 'Spa Target Temperature'
      unique_id: spa_target_temperature
      icon: mdi:thermometer
      device_class: temperature
      unit_of_measurement: 'Â°C'
      state: "{{ state_attr('climate.spa','temperature') }}"
      availability: "{{ state_attr('climate.spa','temperature') != none }}"
