###################################################################################################
## Template - System
###################################################################################################
- binary_sensor:
    - name: "Processor Temperature Alert"
      unique_id: processor_temperature_alert
      device_class: heat
      delay_on: 600
      state: >
        {{ is_state('sensor.processor_temp_status', ['severe', 'critical'])
            and is_state('input_boolean.system_alerts', 'on') }}

    - name: "Processor Use Alert"
      unique_id: processor_use_alert
      device_class: problem
      delay_on: 600
      state: >
        {{ is_state('sensor.processor_use_status', ['severe', 'critical'])
            and is_state('input_boolean.system_alerts', 'on') }}

    - name: "Memory Use Alert"
      unique_id: memory_use_alert
      device_class: problem
      delay_on: 600
      state: >
        {{ is_state('sensor.memory_use_status', ['severe', 'critical'])
            and is_state('input_boolean.system_alerts', 'on') }}

    - name: "Swap Use Alert"
      unique_id: swap_use_alert
      device_class: problem
      delay_on: 600
      state: >
        {{ is_state('sensor.swap_use_status', ['severe', 'critical'])
            and is_state('input_boolean.system_alerts', 'on') }}

    - name: "Disk Use Alert"
      unique_id: disk_use_alert
      device_class: problem
      state: >
        {{ is_state('sensor.disk_use_status', ['severe', 'critical'])
            and is_state('input_boolean.system_alerts', 'on') }}

- sensor:
    - name: "Memory Use Status"
      unique_id: memory_use_status
      icon: mdi:memory
      device_class: enum
      state: >
        {% set mem = states('sensor.system_monitor_memory_usage') | float(-1) | round %}
        {% if mem > 95 %} critical
        {% elif mem > 90 %} severe
        {% elif mem > 80 %} warning
        {% elif mem > 70 %} minor
        {% else %} ok
        {% endif %}
      attributes:
        options: >
          {% from 'hass.jinja' import status_options %}
          {{ status_options() }}

    - name: "Swap Use Status"
      unique_id: swap_use_status
      icon: mdi:memory
      device_class: enum
      state: >
        {% set swap = states('sensor.system_monitor_swap_usage') | float(-1) | round %}
        {% if swap > 99 %} critical
        {% elif swap > 94 %} severe
        {% elif swap > 84 %} warning
        {% elif swap > 74 %} minor
        {% else %} ok
        {% endif %}
      attributes:
        options: >
          {% from 'hass.jinja' import status_options %}
          {{ status_options() }}

    - name: "Processor Use Status"
      unique_id: processor_use_status
      icon: mdi:developer-board
      device_class: enum
      state: >
        {% set cpu = states('sensor.system_monitor_processor_use') | float(-1) | round %}
        {% if cpu > 74 %} critical
        {% elif cpu > 64 %} severe
        {% elif cpu > 54 %} warning
        {% elif cpu > 44 %} minor
        {% else %} ok
        {% endif %}
      attributes:
        options: >
          {% from 'hass.jinja' import status_options %}
          {{ status_options() }}

    - name: "Processor Temp Status"
      unique_id: processor_temp_status
      icon: mdi:thermometer
      device_class: enum
      state: >
        {% set temp = states('sensor.system_monitor_processor_temperature') | float(-1) | round %}
        {% if temp > 80 %} critical
        {% elif temp > 75 %} severe
        {% elif temp > 70 %} warning
        {% elif temp > 60 %} minor
        {% else %} ok
        {% endif %}
      attributes:
        options: >
          {% from 'hass.jinja' import status_options %}
          {{ status_options() }}

    - name: "Disk Use Status"
      unique_id: disk_use_status
      icon: mdi:database
      device_class: enum
      state: >
        {% set size = states('sensor.system_monitor_disk_usage') | float(-1) | round %}
        {% if size > 95 %} critical
        {% elif size > 90 %} severe
        {% elif size > 80 %} warning
        {% elif size > 70 %} minor
        {% else %} ok
        {% endif %}
      attributes:
        options: >
          {% from 'hass.jinja' import status_options %}
          {{ status_options() }}

    - name: "Server Status"
      unique_id: server_status
      icon: mdi:server
      device_class: enum
      state: >
        {% if is_state('sensor.disk_use_status', 'critical')
            or is_state('sensor.processor_temp_status', 'critical')
            or is_state('sensor.processor_use_status', 'critical')
            or is_state('sensor.swap_use_status', 'critical')
            or is_state('sensor.memory_use_status', 'critical') %} critical
        {% elif is_state('sensor.disk_use_status', 'severe')
            or is_state('sensor.processor_temp_status', 'severe')
            or is_state('sensor.processor_use_status', 'severe')
            or is_state('sensor.swap_use_status', 'severe')
            or is_state('sensor.memory_use_status', 'severe') %} severe
        {% elif is_state('sensor.disk_use_status', 'warning')
            or is_state('sensor.processor_temp_status', 'warning')
            or is_state('sensor.processor_use_status', 'warning')
            or is_state('sensor.swap_use_status', 'warning')
            or is_state('sensor.memory_use_status', 'warning') %} warning
        {% elif is_state('sensor.disk_use_status', 'minor')
            or is_state('sensor.processor_temp_status', 'minor')
            or is_state('sensor.processor_use_status', 'minor')
            or is_state('sensor.swap_use_status', 'minor')
            or is_state('sensor.memory_use_status', 'minor') %} minor
        {% else %} ok
        {% endif %}
      attributes:
        options: >
          {% from 'hass.jinja' import status_options %}
          {{ status_options() }}
