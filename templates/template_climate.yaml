###############################################################################
## Templates - Climate
###############################################################################
- binary_sensor:
    - name: 'Indoor Low Temperatature Alert'
      unique_id: indoor_low_temperature_alert
      delay_on:
        minutes: 30 # let temp stabilize, avoid false alerts
      state: >
        {{ ((states('sensor.thermostat_temperature')|int(0) < states('input_number.low_temperature_threshold')|int(0))
              and not states('sensor.thermostat_temperature')|lower in ['unknown','unavailable','none'])
            or ((states('sensor.bathroom_sensor_air_temperature')|int(0) < states('input_number.low_temperature_threshold')|int(0) )
              and not states('sensor.bathroom_sensor_air_temperature')|lower in ['unknown','unavailable','none'])
            and is_state('input_boolean.climate_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    # add bathroom temp differential to temp threshold to reduce false alerts
    # can't use availability template because of separate sensors
    - name: 'Indoor High Temperature Alert'
      unique_id: indoor_high_temperature_alert
      delay_on:
        minutes: 30 # let temp stabilize, avoid false alerts
      state: >
        {{ (states('sensor.thermostat_temperature')|int(0) > states('input_number.high_temperature_threshold')|int(0)
              and not states('sensor.thermostat_temperature')|lower in ['unknown','unavailable','none'])
            or (( states('sensor.bathroom_sensor_air_temperature')|int(0) > (states('input_number.high_temperature_threshold')|int(0)
                  + states('input_number.bathroom_temperature_differential')|int(0) ))
              and not states('sensor.bathroom_sensor_air_temperature')|lower in ['unknown','unavailable','none'])
            and is_state('input_boolean.climate_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Indoor High Humidity Alert'
      unique_id: indoor_high_humidity_alert # can't use availability template because of separate sensors
      delay_on:
        minutes: 60 # let humidity stabilize, avoid false alerts
      state: >
        {{ (states('sensor.thermostat_humidity')|int(0) > states('input_number.high_humidity_threshold')|int(0)
              and not states('sensor.thermostat_humidity')|lower in ['unknown','unavailable','none'] )
            or (states('sensor.bathroom_sensor_humidity')|int(0) > states('input_number.high_humidity_threshold')|int(0)
              and not states('sensor.bathroom_sensor_humidity')|lower in ['unknown','unavailable','none'])
            and is_state('input_boolean.climate_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Bathroom Mold Risk Alert'
      unique_id: bathroom_mold_risk_alert
      delay_on:
        minutes: 60 # let temp/humidity stabilize, avoid false alerts
      state: >
        {{ states('sensor.bathroom_mold_risk')|int(0) > states('input_number.mold_risk_threshold')|int(0)
            and is_state('input_boolean.climate_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'HVAC Window Door Open Alert'
      unique_id: hvac_window_door_open_alert
      delay_on:
        minutes: 15 # allow temporary open
      state: >
        {% if state_attr('binary_sensor.hvac_window_door_open_alert','entities')|lower not in ['unknown','unavailable','none'] %}
          {{ state_attr('binary_sensor.hvac_window_door_open_alert','entities')|count > 0
              and not is_state('input_select.hvac_mode','off')
              and is_state('input_boolean.climate_alerts','on')
              and is_state('input_boolean.startup_pending','off') }}
        {% endif %}
      attributes:
        entities: >
          {{ expand('group.door_alert_sensors')|rejectattr('entity_id','eq','binary_sensor.garage_side_door_open_alert')
              |selectattr('state','eq','on')|map(attribute='entity_id')|list
            + expand('group.window_alert_sensors')|selectattr('state','eq','on')
              |map(attribute='entity_id')|list }}

- sensor:
    - name: 'Thermostat Mode'
      unique_id: thermostat_mode
      icon: mdi:hvac
      state: >
        {% if is_state('climate.thermostat','heat') %} Heat
        {% elif is_state('climate.thermostat','cool') %} Cool
        {% elif is_state('climate.thermostat','heat_cool') %} Auto
        {% elif is_state('climate.thermostat','fan_only') %} Fan
        {% elif is_state('climate.thermostat','off') %} Off
        {% else %} {{ none }}
        {% endif %}

    - name: 'Thermostat Target Temperature'
      unique_id: thermostat_target_temperature
      icon: mdi:hvac
      state: >
        {% if states('climate.thermostat') in ['heat','cool'] %}{{ state_attr('climate.thermostat','temperature') }}
        {% elif states('climate.thermostat') == 'heat_cool' %}
          {% if states('sensor.outside_temperature')|int(0)
              > state_attr('climate.thermostat','target_temp_high')|int %}
            {{ state_attr('climate.thermostat','target_temp_high') }}
          {% else %}
            {{ state_attr('climate.thermostat','target_temp_low') }}
          {% endif %}
        {% else %} off
        {% endif %}

    - name: 'Thermostat HVAC State'
      unique_id: thermostat_hvac_state
      state: "{{ state_attr('climate.thermostat','hvac_action') }}"

    # overload climate integration sensors
    - name: 'Indoor Temperature'
      unique_id: indoor_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: >
        {% if is_number(states('sensor.thermostat_temperature')) %}
          {{ '%0.1f'|format(states('sensor.thermostat_temperature')|float('unknown')) }}
        {% endif %}
      availability: "{{ is_number(states('sensor.thermostat_temperature')) }}"

    - name: 'Indoor Humidity'
      unique_id: indoor_humidity
      device_class: humidity
      state_class: measurement
      unit_of_measurement: '%'
      state: >
        {% if is_number(states('sensor.thermostat_humidity')) %}
          {{ states('sensor.thermostat_humidity')|int('unknown') }}
        {% endif %}
      availability: "{{ is_number(states('sensor.thermostat_humidity')) }}"

    - name: 'HVAC Boost'
      unique_id: hvac_boost
      icon: "{{ 'mdi:thermometer-plus' if states('sensor.hvac_boost')|int(0) > -1 else  'mdi:thermometer-minus' }}"
      unit_of_measurement: '°C'
      state: >
        {% set cool = true if is_state('climate.thermostat','cool')
            or (states('climate.thermostat') == 'heat_cool'
              and (states('sensor.outside_temperature')|int(0)
              >= state_attr('climate.thermostat','target_temp_high')|int)) else false %}
        {% if is_state('input_boolean.hvac_boost','on') %}
          {% if is_state('binary_sensor.outdoor_low_temperature_alert','on')
              and states('sensor.outdoor_humidity')|int(0) > 65 %} 2
          {% elif is_state('binary_sensor.outdoor_high_temperature_alert','on')
              and states('sensor.outdoor_humidity')|int(0) > 65 %} -2
          {% elif states('sensor.outdoor_humidity')|int(0) > 80 %}{{ -1 if cool else 1 }}
          {% else %} 0
          {% endif %}
        {% else %} 0
        {% endif %}
