- binary_sensor:
    - unique_id: indoor_low_temperature_alert # can't use availability template because of separate sensors
      name: Indoor Low Temperatature Alert
      delay_on:
        minutes: 30 # let temp stabalize, avoid false alerts
      state: >
        {{ ((states('sensor.upstairs_thermostat_temperature')|int < states('input_number.low_temperature_threshold')|int)
              and not states('sensor.upstairs_thermostat_temperature')|lower in ['unknown','unavailable','none'])
            or ((states('sensor.upstairs_bathroom_sensor_temperature')|int < states('input_number.low_temperature_threshold')|int )
              and not states('sensor.upstairs_bathroom_sensor_temperature')|lower in ['unknown','unavailable','none'])
            and is_state('input_boolean.climate_alerts','on') }}

    # add bathroom temp differential to temp threshold to reduce false alerts
    # can't use availability template because of separate sensors
    - unique_id: indoor_high_temperature_alert
      name: Indoor High Temperature Alert
      delay_on:
        minutes: 30 # let temp stabalize, avoid false alerts
      state: >
        {{ (states('sensor.upstairs_thermostat_temperature')|int > states('input_number.high_temperature_threshold')|int
              and not states('sensor.upstairs_thermostat_temperature')|lower in ['unknown','unavailable','none'])
            or (( states('sensor.upstairs_bathroom_sensor_temperature')|int > (states('input_number.high_temperature_threshold')|int
                  + states('input_number.bathroom_temperature_differential')|int ))
              and not states('sensor.upstairs_bathroom_sensor_temperature')|lower in ['unknown','unavailable','none'])
            and is_state('input_boolean.climate_alerts','on') }}

    - unique_id: indoor_high_humidity_alert # can't use availability template because of separate sensors
      name: Indoor High Humidity Alert
      delay_on:
        minutes: 60 # let humidity stabalize, avoid false alerts
      state: >
        {{ (states('sensor.upstairs_thermostat_humidity')|int > states('input_number.high_humidity_threshold')|int
              and not states('sensor.upstairs_thermostat_humidity')|lower in ['unknown','unavailable','none'] )
            or (states('sensor.upstairs_bathroom_sensor_humidity')|int > states('input_number.high_humidity_threshold')|int
              and not states('sensor.upstairs_bathroom_sensor_humidity')|lower in ['unknown','unavailable','none'])
            and is_state('input_boolean.climate_alerts','on') }}

    - unique_id: upstairs_bathroom_mold_risk_alert
      name: Upstairs Bathroom Mold Risk Alert
      delay_on:
        minutes: 60 # let temp/humidity stabalize, avoid false alerts
      state: >
        {{ states('sensor.upstairs_bathroom_mold_indicator')|int > states('input_number.mold_risk_threshold')|int
            and is_state('input_boolean.climate_alerts','on') }}

    - unique_id: hvac_window_door_open_alert
      name: HVAC Window Door Open Alert
      delay_on:
        minutes: 15 # allow temporary open
      state: >
        {{ is_state('binary_sensor.window_open','on') or is_state('binary_sensor.door_open','on')
            and not is_state('input_select.set_hvac_mode','off') and is_state('input_boolean.climate_alerts','on') }}

- sensor:
    - unique_id: climate_hvac_action
      name: Climate HVAC Action
      icon: mdi:hvac
      state: "{{ state_attr('climate.upstairs_thermostat','hvac_action') }}"
