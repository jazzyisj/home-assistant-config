###############################################################################
## Templates - Network
###############################################################################
- binary_sensor:
    - name: 'WIFI AP Upstairs Connected'
      unique_id: wifi_ap_upstairs_connected
      icon: mdi:wifi
      device_class: connectivity
      state: "{{ is_state('device_tracker.wifi_ap_upstairs','home') }}"

    - name: 'WIFI AP Upstairs Connected Alert'
      unique_id: wifi_ap_upstairs_connected_alert
      icon: mdi:wifi
      delay_on:
        minutes: 1 # allow for temporary disconnections before alerting
      state: >
        {{ is_state('binary_sensor.wifi_ap_upstairs_connected','off')
            and is_state('input_boolean.network_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Speedtest Connected'
      unique_id: speedtest_connected
      icon: mdi:speedometer
      device_class: connectivity
      state: "{{ states('sensor.speedtest_download')|lower not in ['unknown','unavailable','none'] }}"

    - name: 'Speedtest Connected Alert'
      unique_id: speedtest_connected_alert
      icon: mdi:speedometer
      state: >
        {{ is_state('binary_sensor.speedtest_connected','off')
            and is_state('input_boolean.network_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'WAN Connected Alert'
      unique_id: wan_connected_alert
      icon: mdi:wan
      delay_on:
        minutes: 5 # allow for temporary disconnections before alerting
      state: >
        {{ is_state('binary_sensor.wan_connected','off')
            and is_state('input_boolean.network_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Unknown Network Device Alert'
      unique_id: unknown_network_device_alert
      state: >
        {{ states('sensor.unknown_network_devices')|int(0) > 0
            and is_state('input_boolean.network_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Bluetooth Alert' #NOTE this doesn't really detect if bluetooth actually running
      unique_id: bluetooth_alert
      icon: mdi:bluetooth-off
      state: >
        {{ state_attr('device_tracker.jlaptop_bt','source_type')|lower == 'none'
            and state_attr('device_tracker.jphone_bt','source_type')|lower == 'none'
            and state_attr('device_tracker.sphone_bt','source_type')|lower == 'none'
            and state_attr('device_tracker.stablet_bt','source_type')|lower == 'none'
            and is_state('input_boolean.startup_pending','off') }}
- sensor:
    - name: 'Network Status'
      unique_id: network_status
      icon: mdi:home-assistant
      state: >
        {% if is_state('binary_sensor.wan_connected','off')
            or is_state('sensor.pi_hole_status','Disconnected') %} critical
        {% elif is_state('sensor.pi_hole_status','Disabled')
            or states('sensor.speedtest_download')|int(-1) < 100
            or states ('sensor.speedtest_upload')|int(-1) < 100
            or states('sensor.speedtest_ping')|int(-1) > 50
            or is_state('binary_sensor.unknown_network_device_alert','on') %} warning
        {% elif states('sensor.speedtest_download')|int(-1) < 150
            or states ('sensor.speedtest_upload')|int(-1) < 150
            or states('sensor.speedtest_ping')|int(-1) > 25
            or is_state('binary_sensor.pi_hole_ftl_update_available','on')
            or is_state('binary_sensor.pi_hole_core_update_available','on')
            or is_state('binary_sensor.pi_hole_web_update_available','on') %} minor
        {% else %} normal
        {% endif %}

    - name: 'Unknown Network Devices'
      unique_id: unknown_network_devices
      icon: mdi:devices
      unit_of_measurement: devices
      state: "{{ states.device_tracker|selectattr('attributes.device_type','eq',null)|selectattr('state','eq','home')|list|count }}"
      attributes:
        total: "{{ states.device_tracker|selectattr('attributes.device_type','eq',null)|list|count }}"
        entities: "{{ states.device_tracker|selectattr('attributes.device_type','eq',null)|map(attribute='entity_id')|list }}"

    - name: 'Wireless Network Devices'
      unique_id: wireless_network_devices
      icon: mdi:access-point-network
      unit_of_measurement: devices
      state: "{{ states.device_tracker|selectattr('attributes.source_type','eq','router')|selectattr('attributes.device_type','eq','wireless')|selectattr('state','eq','home')|list|count }}"
      attributes:
        total: "{{ states.device_tracker|selectattr('attributes.source_type','eq','router')|selectattr('attributes.device_type','eq','wireless')|list|count }}"
        entities: "{{ states.device_tracker|selectattr('attributes.source_type','eq','router')|selectattr('attributes.device_type','eq','wireless')|map(attribute='entity_id')|list }}"

    - name: 'Wired Network Devices'
      unique_id: wired_network_devices
      icon: mdi:router-network
      unit_of_measurement: devices
      state: "{{ states.device_tracker|selectattr('attributes.source_type','eq','router')|selectattr('attributes.device_type','eq','wired')|selectattr('state','eq','home')|list|count }}"
      attributes:
        total: "{{ states.device_tracker|selectattr('attributes.source_type','eq','router')|selectattr('attributes.device_type','eq','wired')|list|count }}"
        entities: "{{ states.device_tracker|selectattr('attributes.source_type','eq','router')|selectattr('attributes.device_type','eq','wired')|map(attribute='entity_id')|list }}"

    - name: 'Bluetooth Devices'
      unique_id: bluetooth_devices
      icon: mdi:bluetooth-settings
      unit_of_measurement: devices
      state: "{{ states.device_tracker|selectattr('attributes.device_type','eq','bluetooth')|selectattr('state','eq','home')|list|count }}"
      attributes:
        total: "{{ states.device_tracker|selectattr('attributes.device_type','eq','bluetooth')|list|count }}"
        entities: "{{ states.device_tracker|selectattr('attributes.device_type','eq','bluetooth')|map(attribute='entity_id')|list }}"

    - name: 'JNET Router Uptime Verbose'
      unique_id: jnet_router_uptime_verbose
      icon: mdi:wifi
      state: > # sensor.jnet_router_uptime is seconds
        {%- set uptime = states('sensor.jnet_router_uptime')|int(-1) -%}
        {% if uptime > -1 %}
          {%- set TIME_MAP = {
              'w': (uptime / 604800) % 604800,
              'd': (uptime / 86400) % 7,
              'h': (uptime / 3600) % 24,
              'm': (uptime / 60) % 60,
              's': (uptime % 60) } -%}
          {%- if TIME_MAP.w|int > 0 %}{{ TIME_MAP.w|int ~ ' weeks'}}, {% endif %}
          {%- if TIME_MAP.d|int > 0 %}{{ TIME_MAP.d|int ~ ' days'}}, {% endif %}
          {%- if TIME_MAP.h|int > 0 %}{{ TIME_MAP.h|int ~ ' hours'}}, {% endif %}
          {%- if TIME_MAP.m|int > 0 %}{{ TIME_MAP.m|int ~ ' minutes'}}{% endif %}
        {% endif %}
      availability: "{{ is_number(states('sensor.jnet_router_uptime')) }}"

    - name: 'JNET Router Last Boot'
      unique_id: jnet_router_last_boot
      icon: mdi:wifi
      state: > # sensor.jnet_router_uptime is seconds
        {% set uptime = states('sensor.jnet_router_uptime')|int(-1) %}
          {% if uptime > -1 %}
          {% set last_boot = (now().timestamp() - uptime)|as_datetime|as_local %}
          {% set date = last_boot.strftime('%d') %}
          {% set date = '{:01}'.format(date|int(0)) %}
          {% if date in ('1','21','31') %}{% set date = date ~ 'st' %}
          {% elif now().day in ('2','22') %}{% set date = date ~ 'nd' %}
          {% elif now().day in ('3','23') %}{% set date = date ~ 'rd' %}
          {% else %}{% set date = date ~ 'th' %}
          {% endif %}
          {{ last_boot.strftime('%a') }} {{ date }} {{ last_boot.strftime('%b %Y') }} {{ last_boot.strftime('at %-I:%M %p') }}
        {% endif %}
      availability: "{{ is_number(states('sensor.jnet_router_uptime')) }}"
