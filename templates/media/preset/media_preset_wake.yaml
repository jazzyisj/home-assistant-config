###############################################################################
## Media Speaker Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_wake
      to:
  condition:
    - condition: template
      value_template: >
        {{ state_attr('group.media_preset_media_players', 'entity_id')
            not in ['', '[]', none] }}
  select:
    - name: "Media Speaker Wake"
      unique_id: media_speaker_wake
      state: "{{ states('input_text.media_speaker_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_wake
          data:
            value: "{{ option }}"
      options: >
        {{ expand('group.media_preset_media_players')
            | map(attribute='name') | list | sort }}

###############################################################################
## Media Video Display Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_play
      to:
  condition:
    - condition: template
      value_template: >
        {{ state_attr('group.cast_media_players', 'entity_id')
            not in ['', '[]', none] }}
  select:
    - name: "Media Video Display Wake"
      unique_id: media_video_display_wake
      state: "{{ states('input_text.media_video_display_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_wake
          data:
            value: "{{ option }}"
      options: >
        {{ expand('group.cast_media_players')
            | map(attribute='name') | list | sort }}

###############################################################################
## Media Artist Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id:
        - input_text.media_artist_wake
        - button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 30 # sync with library every hour at 30 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG78VERDDPB4JB2BA6W0Z4WM
        media_type: artist
        favorite: true
        limit: 50
      response_variable: mass_artists

    - variables:
        artists: >
          {% set artist_list = namespace(names=[]) %}
          {% for artist in mass_artists['items'] %}
            {% set artist_list.names = artist_list.names + [artist.name] %}
          {% endfor %}
          {{ artist_list.names | unique | list }}
  select:
    - name: "Media Artist Wake"
      unique_id: media_artist_wake
      state: "{{ states('input_text.media_artist_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_wake
          data:
            value: "{{ option }}"
      options: "{{ artists }}"

###############################################################################
## Media Album Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id:
        - input_text.media_album_wake
        - button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 30 # sync with library every hour at 30 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG78VERDDPB4JB2BA6W0Z4WM
        media_type: album
        favorite: true
        limit: 100
      response_variable: mass_albums

    - variables:
        albums: >
          {% set album_list = namespace(names=[]) %}
          {% for album in mass_albums['items'] %}
            {% set album_list.names = album_list.names + [album.name] %}
          {% endfor %}
          {{ album_list.names | unique | list }}
  select:
    - name: "Media Album Wake"
      unique_id: media_album_wake
      state: "{{ states('input_text.media_album_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_wake
          data:
            value: "{{ option }}"
      options: "{{ albums }}"

###############################################################################
## Media Track Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_wake
      to:

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 30 # sync with library every hour at 30 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG78VERDDPB4JB2BA6W0Z4WM
        media_type: track
        favorite: true
        limit: 100
      response_variable: mass_tracks

    - variables:
        tracks: >
          {% set track_list = namespace(names=[]) %}
          {% for track in mass_tracks['items'] %}
            {% set track_list.names = track_list.names + [track.name] %}
          {% endfor %}
          {{ track_list.names | unique | list }}
  select:
    - name: "Media Track Wake"
      unique_id: media_track_wake
      state: "{{ states('input_text.media_track_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_wake
          data:
            value: "{{ option }}"
      options: "{{ tracks }}"

###############################################################################
## Media Playlist Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_wake
      to:

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 30 # sync with library every hour at 30 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG78VERDDPB4JB2BA6W0Z4WM
        media_type: playlist
        favorite: true
        limit: 100
      response_variable: mass_playlists

    - variables:
        playlists: >
          {% set playlist_list = namespace(names=[]) %}
          {% for playlist in mass_playlists['items'] %}
            {% set playlist_list.names = playlist_list.names + [playlist.name] %}
          {% endfor %}
          {{ playlist_list.names | unique | list }}
  select:
    - name: "Media Playlist Wake"
      unique_id: media_playlist_wake
      state: "{{ states('input_text.media_playlist_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_wake
          data:
            value: "{{ option }}"
      options: "{{ playlists }}"

###############################################################################
## Media Radio Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_wake
      to:

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 30 # sync with library every hour at 30 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG78VERDDPB4JB2BA6W0Z4WM
        media_type: radio
        favorite: true
        limit: 100
      response_variable: mass_radios

    - variables:
        radios: >
          {% set radio_list = namespace(names=[]) %}
          {% for radio in mass_radios['items'] %}
            {% set radio_list.names = radio_list.names + [radio.name] %}
          {% endfor %}
          {{ radio_list.names | unique | list }}
  select:
    - name: "Media Radio Wake"
      unique_id: media_radio_wake
      state: "{{ states('input_text.media_radio_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_wake
          data:
            value: "{{ option }}"
      options: "{{ radios }}"

###############################################################################
## Media Artist Filter Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id:
        - input_select.media_type_wake
        - input_text.media_artist_filter_wake
        - select.media_track_wake
        - select.media_album_wake
        - select.media_album_filter_wake
        - button.update_mass_media
      to:
      not_from:
        - unknown
        - unavailable
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG78VERDDPB4JB2BA6W0Z4WM
        media_type: track
        favorite: true
        limit: 100
      response_variable: mass_tracks

    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG78VERDDPB4JB2BA6W0Z4WM
        media_type: album
        favorite: true
        limit: 100
      response_variable: mass_albums

    - variables:
        artists: >
          {% set artist_list = namespace(names=['']) %}
          {% if states('input_select.media_type_wake') == 'Track' %}
            {% for track in mass_tracks['items'] %}
              {% if track.name == states('select.media_track_wake')
                  and states('select.media_album_filter_wake')
                    in ['', 'unknown', track.album.name] %}
                {% set artist_list.names = artist_list.names + [track.artists[0].name] %}
              {% endif %}
            {% endfor %}
          {% elif states('input_select.media_type_wake') == 'Album' %}
            {% for album in mass_albums['items'] %}
              {% if album.name == states('select.media_album_wake') %}
                {% set artist_list.names = artist_list.names + [album.artists[0].name] %}
              {% endif %}
            {% endfor %}
          {% endif %}
          {{ artist_list.names | unique | list }}
  select:
    - name: "Media Artist Filter Wake"
      unique_id: media_artist_filter_wake
      state: "{{ states('input_text.media_artist_filter_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_filter_wake
          data:
            value: "{{ option }}"
      options: "{{ artists }}"

###############################################################################
## Media Album Filter Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id:
        - input_select.media_type_wake
        - input_text.media_album_filter_wake
        - select.media_track_wake
        - select.media_artist_filter_wake
        - button.update_mass_media
      to:
      not_from:
        - unknown
        - unavailable
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG78VERDDPB4JB2BA6W0Z4WM
        media_type: track
        favorite: true
        limit: 100
      response_variable: mass_tracks

    - variables:
        albums: >
          {% set album_list = namespace(names=['']) %}
          {% if states('input_select.media_type_wake') == 'Track' %}
            {% for track in mass_tracks['items'] %}
              {% if track.name == states('select.media_track_wake')
                  and states('select.media_artist_filter_wake')
                    in ['', 'unknown', track.artists[0].name] %}
                {% set album_list.names = album_list.names + [track.album.name] %}
              {% endif %}
            {% endfor %}
          {% endif %}
          {{ album_list.names | unique | list }}
  select:
    - name: "Media Album Filter Wake"
      unique_id: media_album_filter_wake
      state: "{{ states('input_text.media_album_filter_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_filter_wake
          data:
            value: "{{ option }}"
      options: "{{ albums }}"

###############################################################################
## Media Video Wake
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_video_wake
      to:

    - trigger: state
      entity_id: button.update_mass_media
      to:
    #DISABLED not required until automatic video list
    # - trigger: time_pattern
    #   minutes: 30 # sync with library every hour at 30 min after
  select:
    - name: "Media Video Wake"
      unique_id: media_video_wake
      state: "{{ states('input_text.media_video_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_wake
          data:
            value: "{{ option }}"
      options: !include /config/include/media_preset_videos.yaml
