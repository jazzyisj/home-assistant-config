###################################################################################################
## Templates - Media
###################################################################################################
- switch:
    - name: "Media Mute"
      unique_id: media_mute
      icon: mdi:volume-off
      turn_on:
        - action: script.media_players_mute
          data:
            mute: true
      turn_off:
        - action: script.media_players_mute
          data:
            mute: false

- trigger:
    - platform: event
      id: save
      event_type: save_media_player

    - platform: event
      id: clear
      event_type: clear_saved_media_player

    - platform: state
      id: save # calculate attributes
      entity_id: sensor.saved_media_player
      from: unknown
      not_to: unavailable

    - platform: state
      id: clear # calculate attributes
      entity_id: sensor.saved_media_player
      to: unknown
      not_from: unavailable
  sensor:
    - name: "Saved Media Player"
      unique_id: saved_media_player
      icon: mdi:television-speaker
      state: > # picks first group or first single speaker #IDEA prioritize?
        {% if trigger.id == 'save' and is_state('binary_sensor.speaker', 'on') %}
          {% set groups = expand(state_attr('binary_sensor.speaker', 'entity_id'))
              | selectattr('attributes.type', 'eq', 'group')
              | map(attribute='entity_id') | list %}
          {% set speakers = expand(state_attr('binary_sensor.speaker', 'entity_id'))
              | selectattr('attributes.type', 'eq', 'single')
              | map(attribute='entity_id') | list %}
          {% if groups | count > 0 %} {{ groups[0] }}
          {% elif speakers | count > 0 %} {{ speakers[0] }}
          {% endif %}
        {% else %} unknown
        {% endif %}
      attributes:
        entity_id: >
          {% if has_value(this.entity_id) %}
            {% set player = states(this.entity_id) %}
            {{ state_attr('sensor.' ~ states[player].object_id, 'entity_id')
              if is_state_attr(player, 'type', 'group') else [player] }}
          {% else %} {{ none }}
          {% endif %}
        volume_level: >
          {% if has_value(this.entity_id) %}
            {{ state_attr(states(this.entity_id), 'volume_level') | float | round(1) }}
          {% else %} {{ none }}
          {% endif %}

- binary_sensor:
    - name: "Media"
      unique_id: media
      icon: mdi:monitor-speaker
      device_class: power
      state: >
        {% set entities = state_attr(this.entity_id, 'entity_id') %}
        {{ entities | count > 0 if entities != none else false }}
      attributes:
        entity_id: >
          {{ expand('group.media_players')
              | rejectattr('state', 'in', ['off', 'idle', 'standby', 'unknown', 'unavailable'])
              | map(attribute='entity_id') | sort }}

    - name: "Speaker"
      unique_id: speaker
      icon: mdi:music-circle
      delay_off: 5 # avoid changing cards in ui between tracks
      device_class: power
      state: >
        {% set entities = state_attr(this.entity_id, 'entity_id') %}
        {{ ((entities | count > 0 if entities != none else false)
              and is_state('input_boolean.tts', 'off'))
              or is_state('input_boolean.resume_media', 'on') }}
      attributes:
        entity_id: >
          {{ expand('group.speaker_media_players')
              | rejectattr('state', 'in', ['off', 'idle', 'standby', 'unknown', 'unavailable'])
              | map(attribute='entity_id') | sort }}

    - name: "Media LED Alert"
      unique_id: media_led_alert
      state: >
        {{ is_state('switch.media_mute', 'on')
            or states('sensor.saved_tts_messages') | int(0) > 0
            or is_state('binary_sensor.scene_active', 'on') }}

- sensor:
    - name: "Media Light Color"
      unique_id: media_light_color
      state: >
        {% if is_state('input_boolean.media_color_light_sync', 'on') %}
            {% if is_state('light.dining_room_light_rgb', 'on') %}
              rgb{{ state_attr('light.dining_room_light_rgb', 'rgb_color') }}
            {% else %} var(--state-inactive-color)
            {% endif %}
        {% else %} var(--state-inactive-color)
        {% endif %}
