###############################################################################
## Templates - Spotify
###############################################################################
- trigger:
    - platform: state
      entity_id: sensor.playlists_sensor
      attribute: playlists
      to: ~

    - platform: state
      entity_id: sensor.spotify_hassio_playlists
      attribute: playlist_names
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  sensor:
    - name: 'Spotify Hassio Playlists'
      unique_id: spotify_hassio_playlists
      icon: mdi:spotify
      state: >
        {% set playlist = state_attr('sensor.spotify_hassio_playlists','playlist_names') %}
        {{ 0 if playlist == none else playlist|count }}
      attributes:
        playlist_names: >
          {% set options = namespace(value=[]) %}
          {% set playlists = state_attr('sensor.playlists_sensor','playlists') %}
          {% if playlists != none %}
            {% for item in playlists -%}
              {% set options.value = options.value + [item.name] %}
            {% endfor %}
          {% endif %}
          {{ options.value }}

- trigger:
    - platform: state #SPOTIFY sensor from integration
      entity_id: sensor.spotify_jason_playlists
      attribute: playlists
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  sensor:
    - name: 'Spotify Jason Playlists'
      unique_id: spotify_jason_playlists
      icon: mdi:spotify
      state: >
        {% set playlists = state_attr('sensor.spotify_jason_playlists','playlists') %}
        {{ 0 if playlists == none else playlists|count }}
      attributes:
        playlists: >
          {{
            [
              {
                "name":"Funk Outta Here",
                "uri":"spotify:playlist:37i9dQZF1DX70TzPK5buVf"
              },
              {
                "name":"70s Road Trip",
                "uri":"spotify:playlist:37i9dQZF1DWWiDhnQ2IIru"
              },
              {
                "name":"2000's Hip Hop",
                "uri":"spotify:playlist:01pNIDYGqmeawppy32wr3D"
              }
            ]
          }}
        playlist_names: >
          {% set options = namespace(value=[]) %}
          {% set playlists = state_attr('sensor.spotify_jason_playlists','playlists') %}
          {% if playlists != none %}
            {% for item in playlists -%}
              {% set options.value = options.value + [item.name] %}
            {% endfor %}
          {% endif %}
          {{ options.value }}

- trigger:
    - platform: state #SPOTIFY sensor from integration
      entity_id: sensor.spotify_sheri_playlists
      attribute: playlists
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  sensor:
    - name: 'Spotify Sheri Playlists'
      unique_id: spotify_sheri_playlists
      icon: mdi:spotify
      state: >
        {% set playlists = state_attr('sensor.spotify_sheri_playlists','playlists') %}
        {{ 0 if playlists == none else playlists|count }}
      attributes:
        playlists: >
          {{
            [
              {
                "name":"Mega Hit Mix",
                "uri":"spotify:playlist:37i9dQZF1DXbYM3nMM0oPk"
              },
              {
                "name":"This Is Keith Urban",
                "uri":"spotify:playlist:37i9dQZF1DX75bySfirAbH"
              },
              {
                "name":"This Is Eric Church",
                "uri":"spotify:playlist:37i9dQZF1DX2FZ3fas1D61"
              }
            ]
          }}
        playlist_names: >
          {% set options = namespace(value=[]) %}
          {% set playlists = state_attr('sensor.spotify_sheri_playlists','playlists') %}
          {% if playlists != none %}
            {% for item in playlists -%}
              {% set options.value = options.value + [item.name] %}
            {% endfor %}
          {% endif %}
          {{ options.value }}

- trigger:
    - platform: state
      entity_id: sensor.spotify_hassio_playlists
      attribute: playlist_names
      to: ~

    - platform: state
      entity_id: sensor.spotify_categories
      attribute: category_names
      to: ~

    - platform: state
      entity_id: input_text.spotify_hassio_playlist
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'Spotify Hassio Playlist'
      unique_id: spotify_hassio_playlist
      state: "{{ states('input_text.spotify_hassio_playlist') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.spotify_hassio_playlist
          data:
            value: '{{ option }}'
      options: >
        {% set playlists = state_attr('sensor.spotify_hassio_playlists','playlist_names') %}
        {% set categories = state_attr('sensor.spotify_categories','category_names') %}
        {% if playlists != none and categories != none %}
          {{ playlists + categories }}
        {% endif %}

- trigger:
    - platform: state
      entity_id: sensor.spotify_jason_playlists
      attribute: playlist_names
      to: ~

    - platform: state
      entity_id: sensor.spotify_categories
      attribute: category_names
      to: ~

    - platform: state
      entity_id: input_text.spotify_jason_playlist
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'Spotify Jason Playlist'
      unique_id: spotify_jason_playlist
      state: "{{ states('input_text.spotify_jason_playlist') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.spotify_jason_playlist
          data:
            value: '{{ option }}'
      options: >
        {% set playlists = state_attr('sensor.spotify_jason_playlists','playlist_names') %}
        {% set categories = state_attr('sensor.spotify_categories','category_names') %}
        {% if playlists != none and categories != none %}
          {{ playlists + categories }}
        {% endif %}

- trigger:
    - platform: state
      entity_id: sensor.spotify_sheri_playlists
      attribute: playlist_names
      to: ~

    - platform: state
      entity_id: sensor.spotify_categories
      attribute: category_names
      to: ~

    - platform: state
      entity_id: input_text.spotify_sheri_playlist
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'Spotify Sheri Playlist'
      unique_id: spotify_sheri_playlist
      state: "{{ states('input_text.spotify_sheri_playlist') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.spotify_sheri_playlist
          data:
            value: '{{ option }}'
      options: >
        {% set playlists = state_attr('sensor.spotify_sheri_playlists','playlist_names') %}
        {% set categories = state_attr('sensor.spotify_categories','category_names') %}
        {% if playlists != none and categories != none %}
          {{ playlists + categories }}
        {% endif %}

- trigger:
    - platform: state
      entity_id: sensor.cast_audio_media_players
      attribute: player_names
      to: ~

    - platform: state
      entity_id: input_text.spotify_hassio_media_player
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'Spotify Hassio Media Player'
      unique_id: spotify_hassio_media_player
      state: "{{ states('input_text.spotify_hassio_media_player') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.spotify_hassio_media_player
          data:
            value: '{{ option }}'
      options: "{{ state_attr('sensor.cast_audio_media_players','player_names') }}"

- trigger:
    - platform: state
      entity_id: sensor.cast_audio_media_players
      attribute: player_names
      to: ~

    - platform: state
      entity_id: input_text.spotify_jason_media_player
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'Spotify Jason Media Player'
      unique_id: spotify_jason_media_player
      state: "{{ states('input_text.spotify_jason_media_player') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.spotify_jason_media_player
          data:
            value: '{{ option }}'
      options: "{{ state_attr('sensor.cast_audio_media_players','player_names') }}"

- trigger:
    - platform: state
      entity_id: sensor.cast_audio_media_players
      attribute: player_names
      to: ~

    - platform: state
      entity_id: input_text.spotify_sheri_media_player
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'Spotify Sheri Media Player'
      unique_id: spotify_sheri_media_player
      state: "{{ states('input_text.spotify_sheri_media_player') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.spotify_sheri_media_player
          data:
            value: '{{ option }}'
      options: "{{ state_attr('sensor.cast_audio_media_players','player_names') }}"

- binary_sensor:
    # if any account connected spotify is connected
    - name: 'Spotify Connected'
      unique_id: spotify_connected
      icon: mdi:spotify
      device_class: connectivity
      state: >
        {{ states('media_player.spotify_hassio')|lower not in ['unknown','unavailable','none']
            or states('media_player.spotify_jason')|lower not in ['unknown','unavailable','none']
            or states('media_player.spotify_sheri')|lower not in ['unknown','unavailable','none'] }}

    - name: 'Spotify Connected Alert'
      unique_id: spotify_connected_alert
      icon: mdi:spotify
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.spotify_connected','off')
            and is_state('input_boolean.media_alerts','on')
            and is_state('input_boolean.startup_pending','off')
            and is_state('binary_sensor.wan_connected','on') }}

    - name: 'Spotify Hassio'
      unique_id: spotify_hassio
      icon: mdi:spotify
      state: >
        {{ is_state('input_boolean.spotify_hassio','on')
             or is_state('input_boolean.resume_spotify_hassio','on') }}

    - name: 'Spotify Jason'
      unique_id: spotify_jason
      icon: mdi:spotify
      state: >
        {% set source = state_attr('media_player.spotify_jason','source') %}
        {% set spotify_players = state_attr('sensor.cast_audio_media_players','player_names') %}
        {% if source != none and spotify_players != none %}
        {{ (states('media_player.spotify_jason') in ['playing','paused']
            and state_attr('media_player.spotify_jason','source')
              in state_attr('sensor.cast_audio_media_players','player_names'))
            or is_state('input_boolean.spotify_jason','on')
            or is_state('input_boolean.resume_spotify_jason','on') }}
        {% else %}
          {{ is_state('input_boolean.spotify_jason','on')
              or is_state('input_boolean.resume_spotify_jason','on') }}
        {% endif %}

    - name: 'Spotify Sheri'
      unique_id: spotify_sheri
      icon: mdi:spotify
      state: >
        {% set source = state_attr('media_player.spotify_sheri','source') %}
        {% set spotify_players = state_attr('sensor.cast_audio_media_players','player_names') %}
        {% if source != none and spotify_players != none %}
        {{ (states('media_player.spotify_sheri') in ['playing','paused']
            and state_attr('media_player.spotify_sheri','source')
              in state_attr('sensor.cast_audio_media_players','player_names'))
            or is_state('input_boolean.spotify_sheri','on')
            or is_state('input_boolean.resume_spotify_sheri','on') }}
        {% else %}
          {{ is_state('input_boolean.spotify_sheri','on')
              or is_state('input_boolean.resume_spotify_sheri','on') }}
        {% endif %}

- sensor:
    - name: 'Spotify Hassio Media Player'
      unique_id: spotify_hassio_media_player
      icon: mdi:spotify
      state: >
        {% set active = states('input_text.active_spotify_hassio_media_player') %}
        {% set selected = expand('group.cast_audio_media_players')
            |selectattr('name','eq',states('select.spotify_hassio_media_player'))
            |map(attribute='entity_id')|join('') %}
        {{ iif(is_state('script.media_play','off') and active != 'off',active,selected) }}
      attributes:
        entity_id: >
          {% set player = states('sensor.spotify_hassio_media_player') %}
          {% if player not in ['unknown','unavailable'] %}
          {{ state_attr('sensor.' ~ player.split('.')[1],'entity_id')
              if is_state_attr(player,'type','group') else [player] }}
          {% endif %}

    - name: 'Spotify Jason Media Player '
      unique_id: spotify_jason_media_player
      icon: mdi:spotify
      state: >
        {% set active = states('input_text.active_spotify_jason_media_player') %}
        {% set selected = expand('group.cast_audio_media_players')
            |selectattr('name','eq',states('select.spotify_jason_media_player'))
            |map(attribute='entity_id')|list|join('') %}
        {% set source = expand('group.cast_audio_media_players')
            |selectattr('name','eq',state_attr('media_player.spotify_jason','source'))
            |map(attribute='entity_id')|list|join('') %}
        {% set player = active if is_state('script.media_play','off') and active != 'off'
            else source if source != '' else selected %}
        {% set content_id = state_attr(player,'media_content_id') %}
        {% if not is_state_attr(player,'type','group') %}
          {% set matching = expand('group.cast_audio_media_players')
              |selectattr('attributes.type','eq','group')
              |selectattr('attributes.media_content_id','eq',content_id)
              |map(attribute='entity_id')|list %}
          {% if matching|count > 0 %}{% set player = matching[0] %}{% endif %}
        {% endif %}
        {{ player }}
      attributes:
        entity_id: >
          {% set player = states('sensor.spotify_jason_media_player') %}
          {% if player not in ['unknown','unavailable'] %}
          {{ state_attr('sensor.' ~ player.split('.')[1],'entity_id')
              if is_state_attr(player,'type','group') else [player] }}
          {% endif %}

    - name: 'Spotify Sheri Media Player '
      unique_id: spotify_sheri_media_player
      icon: mdi:spotify
      state: >
        {% set active = states('input_text.active_spotify_sheri_media_player') %}
        {% set selected = expand('group.cast_audio_media_players')
            |selectattr('name','eq',states('select.spotify_sheri_media_player'))
            |map(attribute='entity_id')|list|join('') %}
        {% set source = expand('group.cast_audio_media_players')
            |selectattr('name','eq',state_attr('media_player.spotify_sheri','source'))
            |map(attribute='entity_id')|list|join('') %}
        {% set player = active if is_state('script.media_play','off') and active != 'off'
            else source if source != '' else selected %}
        {% set content_id = state_attr(player,'media_content_id') %}
        {% if not is_state_attr(player,'type','group') %}
          {% set matching = expand('group.cast_audio_media_players')
              |selectattr('attributes.type','eq','group')
              |selectattr('attributes.media_content_id','eq',content_id)
              |map(attribute='entity_id')|list %}
          {% if matching|count > 0 %}{% set player = matching[0] %}{% endif %}
        {% endif %}
        {{ player }}
      attributes:
        entity_id: >
          {% set player = states('sensor.spotify_sheri_media_player') %}
          {% if player not in ['unknown','unavailable'] %}
          {{ state_attr('sensor.' ~ player.split('.')[1],'entity_id')
              if is_state_attr(player,'type','group') else [player] }}
          {% endif %}

    #SPOTIFY https://developer.spotify.com/console/get-browse-categories/
    - name: 'Spotify Categories'
      unique_id: spotify_categories
      icon: mdi:spotify
      state: >
        {% set categories = state_attr('sensor.spotify_categories','categories') %}
        {{ 0 if categories == none else categories|count }}
      attributes:
        category_names: >
          {% if state_attr('sensor.spotify_categories','categories') != none %}
            {% set names = namespace(value=[]) %}
            {% for item in state_attr('sensor.spotify_categories','categories') %}
              {% set names.value = names.value + [item.name] %}
            {% endfor %}
            {{ names.value }}
          {% else %} {{ none }}
          {% endif %}
        categories: >
          {{
            [
              {
                "name":"Alternative",
                "category":"alternative"
              },
              {
                "name":"American Folk",
                "category":"folk_americana"
              },
              {
                "name":"Chill",
                "category":"chill"
              },
              {
                "name":"Classical",
                "category":"classical"
              },
              {
                "name":"Country",
                "category":"country"
              },
              {
                "name":"Dance",
                "category":"edm_dance"
              },
              {
                "name":"Decades",
                "category":"decades"
              },
              {
                "name":"Dinner",
                "category":"dinner"
              },
              {
                "name":"Focus",
                "category":"focus"
              },
              {
                "name":"Hip Hop",
                "category":"hiphop"
              },
              {
                "name":"Indie Alternative",
                "category":"indie_alt"
              },
              {
                "name":"Jazz",
                "category":"jazz"
              },
              {
                "name":"Metal",
                "category":"metal"
              },
              {
                "name":"Mood",
                "category":"mood"
              },
              {
                "name":"Party",
                "category":"party"
              },
              {
                "name":"R & B",
                "category":"rnb"
              },
              {
                "name":"Rock",
                "category":"rock"
              },
              {
                "name":"Sleep",
                "category":"sleep"
              },
              {
                "name":"Soul",
                "category":"soul"
              },
              {
                "name":"Toplists",
                "category":"toplists"
              },
              {
                "name":"Travel",
                "category":"travel"
              },
              {
                "name":"Workout",
                "category":"workout"
              }
            ]
          }}
