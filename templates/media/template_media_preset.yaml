###############################################################################
## Templates - Media Preset
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.media_preset_speaker_play
      to: ~
  select:
    - name: "Media Preset Speaker Play"
      unique_id: media_preset_speaker_play
      state: "{{ states('input_text.media_preset_speaker_play') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_speaker_play
          data:
            value: "{{ option }}"
      options: >
        {{ expand(state_attr('group.media_preset_media_players','entity_id'))
            |map(attribute='name')|list|sort }}

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.media_preset_speaker_chill
      to: ~
  select:
    - name: "Media Preset Speaker Chill"
      unique_id: media_preset_speaker_chill
      state: "{{ states('input_text.media_preset_speaker_chill') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_speaker_chill
          data:
            value: "{{ option }}"
      options: &preset_names >
        {{ expand(state_attr('group.media_preset_media_players','entity_id'))
            |map(attribute='name')|list|sort }}

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.media_preset_speaker_company
      to: ~
  select:
    - name: "Media Preset Speaker Company"
      unique_id: media_preset_speaker_company
      state: "{{ states('input_text.media_preset_speaker_company') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_speaker_company
          data:
            value: "{{ option }}"
      options: *preset_names

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.media_preset_speaker_guest
      to: ~
  select:
    - name: "Media Preset Speaker Guest"
      unique_id: media_preset_speaker_guest
      state: "{{ states('input_text.media_preset_speaker_guest') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_speaker_guest
          data:
            value: "{{ option }}"
      options: *preset_names

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.media_preset_speaker_jason
      to: ~
  select:
    - name: "Media Preset Speaker Jason"
      unique_id: media_preset_speaker_jason
      state: "{{ states('input_text.media_preset_speaker_jason') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_speaker_jason
          data:
            value: "{{ option }}"
      options: *preset_names

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.media_preset_speaker_morning
      to: ~
  select:
    - name: "Media Preset Speaker Morning"
      unique_id: media_preset_speaker_morning
      state: "{{ states('input_text.media_preset_speaker_morning') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_speaker_morning
          data:
            value: "{{ option }}"
      options: *preset_names

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.media_preset_speaker_shower
      to: ~
  select:
    - name: "Media Preset Speaker Shower"
      unique_id: media_preset_speaker_shower
      state: "{{ states('input_text.media_preset_speaker_shower') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_speaker_shower
          data:
            value: "{{ option }}"
      options: "{{ ['Bathroom Speaker'] }}"

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.media_preset_speaker_sleep
      to: ~
  select:
    - name: "Media Preset Speaker Sleep"
      unique_id: media_preset_speaker_sleep
      state: "{{ states('input_text.media_preset_speaker_sleep') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_speaker_sleep
          data:
            value: "{{ option }}"
      options: *preset_names

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.media_preset_speaker_wake
      to: ~
  select:
    - name: "Media Preset Speaker Wake"
      unique_id: media_preset_speaker_wake
      state: "{{ states('input_text.media_preset_speaker_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_speaker_wake
          data:
            value: "{{ option }}"
      options: *preset_names

###############################################################################
## Media Preset
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: input_text.media_preset_play
      to: ~
  select:
    - name: "Media Preset Play"
      unique_id: media_preset_play
      state: "{{ states('input_text.media_preset_play') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_play
          data:
            value: "{{ option }}"
      #MASS - need ability to load playlist names into select
      options: &media_playlists >
        {{ [
          "Hell Raisin Country",
          "All-Time Hip Hop Hits",
          "Best Country Music Last 25 Years",
          "Swamp Blues",
          "Feelin Good in the 80s",
          "Dancing to the Oldies",
          "Epic Classic Rock",
          "Hard Rock Headbangers",
          "90s Aggro Anthems",
          "Top 100 Songs Canada",
          "My Top Favorites",
          "Oldies but Goldies",
          "Classic Oldies",
          "All About Country",
          "2000s Country",
          "Country Hits 2022",
          "Todays Top Hits",
          "80s Hits",
          "Classic Rock Radio",
          "Classic Rock Greatest Hits",
          "Old School Hip-Hop House Party",
          "HipHop Hurray",
          "I Love My 90s Hip-Hop",
          "Hip Hop 90s",
          "Rock Classics",
          "All Out 80s",
          "All Out 90s",
          "All Out 70s",
          "All Out 2000s",
          "magic_80",
        ] }}

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: input_text.media_preset_wake
      to: ~
  select:
    - name: "Media Preset Wake"
      unique_id: media_preset_wake
      state: "{{ states('input_text.media_preset_wake') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_wake
          data:
            value: "{{ option }}"
      #MASS - need ability to load playlist names into select
      options: *media_playlists

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: input_text.media_preset_morning
      to: ~
  select:
    - name: "Media Preset Morning"
      unique_id: media_preset_morning
      state: "{{ states('input_text.media_preset_morning') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_morning
          data:
            value: "{{ option }}"
      options: *media_playlists

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: input_text.media_preset_sleep
      to: ~
  select:
    - name: "Media Preset Sleep"
      unique_id: media_preset_sleep
      state: "{{ states('input_text.media_preset_sleep') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_sleep
          data:
            value: "{{ option }}"
      options: *media_playlists

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: input_text.media_preset_jason
      to: ~
  select:
    - name: "Media Preset Jason"
      unique_id: media_preset_jason
      state: "{{ states('input_text.media_preset_jason') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_jason
          data:
            value: "{{ option }}"
      options: *media_playlists

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: input_text.media_preset_guest
      to: ~
  select:
    - name: "Media Preset Guest"
      unique_id: media_preset_guest
      state: "{{ states('input_text.media_preset_guest') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_guest
          data:
            value: "{{ option }}"
      options: *media_playlists

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: input_text.media_preset_shower
      to: ~
  select:
    - name: "Media Preset Shower"
      unique_id: media_preset_shower
      state: "{{ states('input_text.media_preset_shower') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_shower
          data:
            value: "{{ option }}"
      options: *media_playlists

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: input_text.media_preset_chill
      to: ~
  select:
    - name: "Media Preset Chill"
      unique_id: media_preset_chill
      state: "{{ states('input_text.media_preset_chill') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_chill
          data:
            value: "{{ option }}"
      options: *media_playlists

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: input_text.media_preset_company
      to: ~
  select:
    - name: "Media Preset Company"
      unique_id: media_preset_company
      state: "{{ states('input_text.media_preset_company') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.media_preset_company
          data:
            value: "{{ option }}"
      options: *media_playlists
