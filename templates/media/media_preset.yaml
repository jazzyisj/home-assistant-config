###################################################################################################
## Update MASS Media Button
###################################################################################################
- button:
    - name: "Update MASS Media"
      unique_id: udpate_mass_media
      icon: mdi:multimedia
      press: []

###################################################################################################
## Media Library
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 55 # sync with library every hour at 55 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG86QY33GS4K1FFQJ18SREYP
        media_type: artist
        favorite: true
        limit: 250
      response_variable: mass_artists

    - variables:
        artists: >
          {% set artist_list = namespace(names=[]) %}
          {% for artist in mass_artists['items'] %}
            {% set artist_list.names = artist_list.names + [artist.name] %}
          {% endfor %}
          {{ artist_list.names | unique | sort }}
  sensor:
    - name: "Media Artists"
      unique_id: media_artists
      device_class: timestamp
      state: "{{ now() }}"
      attributes:
        artists: "{{ artists }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 55 # sync with library every hour at 55 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG86QY33GS4K1FFQJ18SREYP
        media_type: album
        favorite: true
        limit: 100
      response_variable: mass_albums

    - variables:
        albums: >
          {% set album_list = namespace(names=[]) %}
          {% for album in mass_albums['items'] %}
            {% set album_list.names = album_list.names + [album.name] %}
          {% endfor %}
          {{ album_list.names | unique | sort }}
  sensor:
    - name: "Media Albums"
      unique_id: media_albums
      device_class: timestamp
      state: "{{ now() }}"
      attributes:
        albums: "{{ albums }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 55 # sync with library every hour at 55 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG86QY33GS4K1FFQJ18SREYP
        media_type: track
        favorite: true
        limit: 100
      response_variable: mass_tracks

    - variables:
        tracks: >
          {% set track_list = namespace(names=[]) %}
          {% for track in mass_tracks['items'] %}
            {% set track_list.names = track_list.names + [track.name] %}
          {% endfor %}
          {{ track_list.names | unique | sort }}
  sensor:
    - name: "Media Tracks"
      unique_id: media_tracks
      device_class: timestamp
      state: "{{ now() }}"
      attributes:
        tracks: "{{ tracks }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 55 # sync with library every hour at 55 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG86QY33GS4K1FFQJ18SREYP
        media_type: playlist
        favorite: true
        limit: 100
      response_variable: mass_playlists

    - variables:
        playlists: >
          {% set playlist_list = namespace(names=[]) %}
          {% for playlist in mass_playlists['items'] %}
            {% set playlist_list.names = playlist_list.names + [playlist.name] %}
          {% endfor %}
          {{ playlist_list.names | unique | sort }}
  sensor:
    - name: "Media Playlists"
      unique_id: media_playlists
      device_class: timestamp
      state: "{{ now() }}"
      attributes:
        playlists: "{{ playlists }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: time_pattern
      minutes: 55 # sync with library every hour at 55 min after
  action:
    - action: music_assistant.get_library
      data:
        config_entry_id: 01JG86QY33GS4K1FFQJ18SREYP
        media_type: radio
        favorite: true
        limit: 100
      response_variable: mass_radios

    - variables:
        radios: >
          {% set radio_list = namespace(names=[]) %}
          {% for radio in mass_radios['items'] %}
            {% set radio_list.names = radio_list.names + [radio.name] %}
          {% endfor %}
          {{ radio_list.names | unique | sort }}
  sensor:
    - name: "Media Radios"
      unique_id: media_radios
      device_class: timestamp
      state: "{{ now() }}"
      attributes:
        radios: "{{ radios }}"

###################################################################################################
## Media Speaker
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_charlie
      to:
  condition:
    - condition: template
      value_template: &valid_speakers >
        {{ state_attr('group.media_preset_media_players', 'entity_id') != none }}
  select:
    - name: "Media Speaker Charlie"
      unique_id: media_speaker_charlie
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_charlie') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: &option_test "{{ option not in ['', none] }}"

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_charlie
          data:
            value: "{{ option }}"
      options: &speaker_options >
        {{ expand('group.media_preset_media_players')
            | map(attribute='name') | sort }}

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_chill
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Chill"
      unique_id: media_speaker_chill
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_chill') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_chill
          data:
            value: "{{ option }}"
      options: *speaker_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_company
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Company"
      unique_id: media_speaker_company
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_company') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_company
          data:
            value: "{{ option }}"
      options: *speaker_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_guest
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Guest"
      unique_id: media_speaker_guest
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_guest') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_guest
          data:
            value: "{{ option }}"
      options: *speaker_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_hot_tub
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Hot Tub"
      unique_id: media_speaker_hot_tub
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_hot_tub') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_hot_tub
          data:
            value: "{{ option }}"
      options: *speaker_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_jason
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Jason"
      unique_id: media_speaker_jason
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_jason') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_jason
          data:
            value: "{{ option }}"
      options: *speaker_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_morning
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Morning"
      unique_id: media_speaker_morning
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_morning') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_morning
          data:
            value: "{{ option }}"
      options: *speaker_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_play
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Play"
      unique_id: media_speaker_play
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_play') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_play
          data:
            value: "{{ option }}"
      options: *speaker_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_shower
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Shower"
      unique_id: media_speaker_shower
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_shower') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_shower
          data:
            value: "{{ option }}"
      options: *speaker_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_sleep
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Sleep"
      unique_id: media_speaker_sleep
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_sleep') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_sleep
          data:
            value: "{{ option }}"
      options: *speaker_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.media_preset_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_speaker_wake
      to:
  condition:
    - condition: template
      value_template: *valid_speakers
  select:
    - name: "Media Speaker Wake"
      unique_id: media_speaker_wake
      icon: mdi:speaker-play
      state: "{{ states('input_text.media_speaker_wake') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_speaker_wake
          data:
            value: "{{ option }}"
      options: *speaker_options

###################################################################################################
## Media Artist
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_charlie
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Charlie"
      unique_id: media_artist_charlie
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_charlie') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_charlie
          data:
            value: "{{ option }}"
      options: &artist_options "{{ state_attr('sensor.media_artists', 'artists') }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_chill
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Chill"
      unique_id: media_artist_chill
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_chill') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_chill
          data:
            value: "{{ option }}"
      options: *artist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_company
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Company"
      unique_id: media_artist_company
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_company') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_company
          data:
            value: "{{ option }}"
      options: *artist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_guest
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Guest"
      unique_id: media_artist_guest
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_guest') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_guest
          data:
            value: "{{ option }}"
      options: *artist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_hot_tub
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Hot Tub"
      unique_id: media_artist_hot_tub
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_hot_tub') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_hot_tub
          data:
            value: "{{ option }}"
      options: *artist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_jason
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Jason"
      unique_id: media_artist_jason
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_jason') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_jason
          data:
            value: "{{ option }}"
      options: *artist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_morning
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Morning"
      unique_id: media_artist_morning
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_morning') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_morning
          data:
            value: "{{ option }}"
      options: *artist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_play
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Play"
      unique_id: media_artist_play
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_play') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_play
          data:
            value: "{{ option }}"
      options: *artist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_shower
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Shower"
      unique_id: media_artist_shower
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_shower') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_shower
          data:
            value: "{{ option }}"
      options: *artist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_sleep
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Sleep"
      unique_id: media_artist_sleep
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_sleep') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_sleep
          data:
            value: "{{ option }}"
      options: *artist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_wake
      to:

    - trigger: state
      entity_id: sensor.media_artists
      attribute: artists
      to:
  select:
    - name: "Media Artist Wake"
      unique_id: media_artist_wake
      icon: mdi:account-music
      state: "{{ states('input_text.media_artist_wake') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_artist_wake
          data:
            value: "{{ option }}"
      options: *artist_options

###################################################################################################
## Media Album
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_artist_wake
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Charlie"
      unique_id: media_album_charlie
      icon: mdi:album
      state: "{{ states('input_text.media_album_charlie') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_charlie
          data:
            value: "{{ option }}"
      options: &album_options "{{ state_attr('sensor.media_albums', 'albums') }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_chill
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Chill"
      unique_id: media_album_chill
      icon: mdi:album
      state: "{{ states('input_text.media_album_chill') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_chill
          data:
            value: "{{ option }}"
      options: *album_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_company
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Company"
      unique_id: media_album_company
      icon: mdi:album
      state: "{{ states('input_text.media_album_company') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_company
          data:
            value: "{{ option }}"
      options: *album_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_guest
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Guest"
      unique_id: media_album_guest
      icon: mdi:album
      state: "{{ states('input_text.media_album_guest') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_guest
          data:
            value: "{{ option }}"
      options: *album_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_hot_tub
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Hot Tub"
      unique_id: media_album_hot_tub
      icon: mdi:album
      state: "{{ states('input_text.media_album_hot_tub') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_hot_tub
          data:
            value: "{{ option }}"
      options: *album_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_jason
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Jason"
      unique_id: media_album_jason
      icon: mdi:album
      state: "{{ states('input_text.media_album_jason') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_jason
          data:
            value: "{{ option }}"
      options: *album_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_morning
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Morning"
      unique_id: media_album_morning
      icon: mdi:album
      state: "{{ states('input_text.media_album_morning') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_morning
          data:
            value: "{{ option }}"
      options: *album_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_play
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Play"
      unique_id: media_album_play
      icon: mdi:album
      state: "{{ states('input_text.media_album_play') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_play
          data:
            value: "{{ option }}"
      options: *album_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_shower
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Shower"
      unique_id: media_album_shower
      icon: mdi:album
      state: "{{ states('input_text.media_album_shower') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_shower
          data:
            value: "{{ option }}"
      options: *album_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_sleep
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Sleep"
      unique_id: media_album_sleep
      icon: mdi:album
      state: "{{ states('input_text.media_album_sleep') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_sleep
          data:
            value: "{{ option }}"
      options: *album_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_wake
      to:

    - trigger: state
      entity_id: sensor.media_albums
      attribute: albums
      to:
  select:
    - name: "Media Album Wake"
      unique_id: media_album_wake
      icon: mdi:album
      state: "{{ states('input_text.media_album_wake') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_album_wake
          data:
            value: "{{ option }}"
      options: *album_options

###################################################################################################
## Media Track
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_album_wake
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Charlie"
      unique_id: media_track_charlie
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_charlie') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_charlie
          data:
            value: "{{ option }}"
      options: &track_options "{{ state_attr('sensor.media_tracks', 'tracks') }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_chill
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Chill"
      unique_id: media_track_chill
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_chill') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_chill
          data:
            value: "{{ option }}"
      options: *track_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_company
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Company"
      unique_id: media_track_company
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_company') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_company
          data:
            value: "{{ option }}"
      options: *track_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_guest
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Guest"
      unique_id: media_track_guest
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_guest') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_guest
          data:
            value: "{{ option }}"
      options: *track_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_hot_tub
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Hot Tub"
      unique_id: media_track_hot_tub
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_hot_tub') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_hot_tub
          data:
            value: "{{ option }}"
      options: *track_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_jason
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Jason"
      unique_id: media_track_jason
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_jason') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_jason
          data:
            value: "{{ option }}"
      options: *track_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_morning
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Morning"
      unique_id: media_track_morning
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_morning') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_morning
          data:
            value: "{{ option }}"
      options: *track_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_play
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Play"
      unique_id: media_track_play
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_play') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_play
          data:
            value: "{{ option }}"
      options: *track_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_shower
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Shower"
      unique_id: media_track_shower
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_shower') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_shower
          data:
            value: "{{ option }}"
      options: *track_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_sleep
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Sleep"
      unique_id: media_track_sleep
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_sleep') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_sleep
          data:
            value: "{{ option }}"
      options: *track_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_wake
      to:

    - trigger: state
      entity_id: sensor.media_tracks
      attribute: tracks
      to:
  select:
    - name: "Media Track Wake"
      unique_id: media_track_wake
      icon: mdi:file-music-outline
      state: "{{ states('input_text.media_track_wake') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_track_wake
          data:
            value: "{{ option }}"
      options: *track_options

###################################################################################################
## Media Playlist
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_charlie
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Charlie"
      unique_id: media_playlist_charlie
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_charlie') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_charlie
          data:
            value: "{{ option }}"
      options: &playlist_options "{{ state_attr('sensor.media_playlists', 'playlists') }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_chill
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Chill"
      unique_id: media_playlist_chill
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_chill') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_chill
          data:
            value: "{{ option }}"
      options: *playlist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_company
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Company"
      unique_id: media_playlist_company
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_company') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_company
          data:
            value: "{{ option }}"
      options: *playlist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_track_wake
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Guest"
      unique_id: media_playlist_guest
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_guest') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_guest
          data:
            value: "{{ option }}"
      options: *playlist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_hot_tub
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Hot Tub"
      unique_id: media_playlist_hot_tub
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_hot_tub') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_hot_tub
          data:
            value: "{{ option }}"
      options: *playlist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_jason
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Jason"
      unique_id: media_playlist_jason
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_jason') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_jason
          data:
            value: "{{ option }}"
      options: *playlist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_morning
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Morning"
      unique_id: media_playlist_morning
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_morning') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_morning
          data:
            value: "{{ option }}"
      options: *playlist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_play
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Play"
      unique_id: media_playlist_play
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_play') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_play
          data:
            value: "{{ option }}"
      options: *playlist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_shower
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Shower"
      unique_id: media_playlist_shower
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_shower') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_shower
          data:
            value: "{{ option }}"
      options: *playlist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_sleep
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Sleep"
      unique_id: media_playlist_sleep
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_sleep') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_sleep
          data:
            value: "{{ option }}"
      options: *playlist_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_playlist_wake
      to:

    - trigger: state
      entity_id: sensor.media_playlists
      attribute: playlists
      to:
  select:
    - name: "Media Playlist Wake"
      unique_id: media_playlist_wake
      icon: mdi:play-box-multiple
      state: "{{ states('input_text.media_playlist_wake') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_playlist_wake
          data:
            value: "{{ option }}"
      options: *playlist_options

###################################################################################################
## Media Radio
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_charlie
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Charlie"
      unique_id: media_radio_charlie
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_charlie') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_charlie
          data:
            value: "{{ option }}"
      options: &radio_options "{{ state_attr('sensor.media_radios', 'radios') }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_chill
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Chill"
      unique_id: media_radio_chill
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_chill') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_chill
          data:
            value: "{{ option }}"
      options: *radio_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_company
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Company"
      unique_id: media_radio_company
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_company') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_company
          data:
            value: "{{ option }}"
      options: *radio_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_guest
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Guest"
      unique_id: media_radio_guest
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_guest') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_guest
          data:
            value: "{{ option }}"
      options: *radio_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_hot_tub
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Hot Tub"
      unique_id: media_radio_hot_tub
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_hot_tub') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_hot_tub
          data:
            value: "{{ option }}"
      options: *radio_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_jason
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Jason"
      unique_id: media_radio_jason
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_jason') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_jason
          data:
            value: "{{ option }}"
      options: *radio_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_morning
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Morning"
      unique_id: media_radio_morning
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_morning') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_morning
          data:
            value: "{{ option }}"
      options: *radio_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_play
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Play"
      unique_id: media_radio_play
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_play') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_play
          data:
            value: "{{ option }}"
      options: *radio_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_shower
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Shower"
      unique_id: media_radio_shower
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_shower') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_shower
          data:
            value: "{{ option }}"
      options: *radio_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_sleep
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Sleep"
      unique_id: media_radio_sleep
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_sleep') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_sleep
          data:
            value: "{{ option }}"
      options: *radio_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: input_text.media_radio_wake
      to:

    - trigger: state
      entity_id: sensor.media_radios
      attribute: radios
      to:
  select:
    - name: "Media Radio Wake"
      unique_id: media_radio_wake
      icon: mdi:radio
      state: "{{ states('input_text.media_radio_wake') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_radio_wake
          data:
            value: "{{ option }}"
      options: *radio_options

###################################################################################################
## Media Video Display
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_charlie
      to:
  select:
    - name: "Media Video Display Charlie"
      unique_id: media_video_display_charlie
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_charlie') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_charlie
          data:
            value: "{{ option }}"
      options: &cast_players >
        {{ expand('group.cast_media_players')
            | map(attribute='name') | sort }}

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_chill
      to:
  select:
    - name: "Media Video Display Chill"
      unique_id: media_video_display_chill
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_chill') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_chill
          data:
            value: "{{ option }}"
      options: *cast_players

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_company
      to:
  select:
    - name: "Media Video Display Company"
      unique_id: media_video_display_company
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_company') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_company
          data:
            value: "{{ option }}"
      options: *cast_players

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_guest
      to:
  select:
    - name: "Media Video Display Guest"
      unique_id: media_video_display_guest
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_guest') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_guest
          data:
            value: "{{ option }}"
      options: *cast_players

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_hot_tub
      to:
  select:
    - name: "Media Video Display Hot Tub"
      unique_id: media_video_display_hot_tub
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_hot_tub') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_hot_tub
          data:
            value: "{{ option }}"
      options: *cast_players

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_jason
      to:
  select:
    - name: "Media Video Display Jason"
      unique_id: media_video_display_jason
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_jason') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_jason
          data:
            value: "{{ option }}"
      options: *cast_players

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_morning
      to:
  select:
    - name: "Media Video Display Morning"
      unique_id: media_video_display_morning
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_morning') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_morning
          data:
            value: "{{ option }}"
      options: *cast_players

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_play
      to:
  select:
    - name: "Media Video Display Play"
      unique_id: media_video_display_play
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_play') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_play
          data:
            value: "{{ option }}"
      options: *cast_players

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_shower
      to:
  select:
    - name: "Media Video Display Shower"
      unique_id: media_video_display_shower
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_shower') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_shower
          data:
            value: "{{ option }}"
      options: *cast_players

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_sleep
      to:
  select:
    - name: "Media Video Display Sleep"
      unique_id: media_video_display_sleep
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_sleep') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_sleep
          data:
            value: "{{ option }}"
      options: *cast_players

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: group.cast_media_players
      attribute: entity_id
      to:
      for: 30

    - trigger: state
      entity_id: input_text.media_video_display_wake
      to:
  select:
    - name: "Media Video Display Wake"
      unique_id: media_video_display_wake
      icon: mdi:cast
      state: "{{ states('input_text.media_video_display_wake') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_display_wake
          data:
            value: "{{ option }}"
      options: *cast_players

###################################################################################################
## Media Video
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_charlie
      to:

    #DISABLED not required until automatic video list
    # - trigger: time_pattern
    #   minutes: 55 # sync with library every hour at 55 min after
  select:
    - name: "Media Video Charlie"
      unique_id: media_video_charlie
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_charlie') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_charlie
          data:
            value: "{{ option }}"
      options: !include &video_options /config/include/media_preset_videos.yaml

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_chill
      to:
  select:
    - name: "Media Video Chill"
      unique_id: media_video_chill
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_chill') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_chill
          data:
            value: "{{ option }}"
      options: *video_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_company
      to:
  select:
    - name: "Media Video Company"
      unique_id: media_video_company
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_company') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_company
          data:
            value: "{{ option }}"
      options: *video_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_guest
      to:
  select:
    - name: "Media Video Guest"
      unique_id: media_video_guest
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_guest') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_guest
          data:
            value: "{{ option }}"
      options: *video_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_hot_tub
      to:
  select:
    - name: "Media Video Hot Tub"
      unique_id: media_video_hot_tub
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_hot_tub') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_hot_tub
          data:
            value: "{{ option }}"
      options: *video_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_jason
      to:
  select:
    - name: "Media Video Jason"
      unique_id: media_video_jason
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_jason') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_jason
          data:
            value: "{{ option }}"
      options: *video_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_morning
      to:
  select:
    - name: "Media Video Morning"
      unique_id: media_video_morning
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_morning') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_morning
          data:
            value: "{{ option }}"
      options: *video_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_play
      to:
  select:
    - name: "Media Video Play"
      unique_id: media_video_play
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_play') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_play
          data:
            value: "{{ option }}"
      options: *video_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_shower
      to:
  select:
    - name: "Media Video Shower"
      unique_id: media_video_shower
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_shower') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_shower
          data:
            value: "{{ option }}"
      options: *video_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_sleep
      to:
  select:
    - name: "Media Video Sleep"
      unique_id: media_video_sleep
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_sleep') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_sleep
          data:
            value: "{{ option }}"
      options: *video_options

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: button.update_mass_media
      to:

    - trigger: state
      entity_id: input_text.media_video_wake
      to:
  select:
    - name: "Media Video Wake"
      unique_id: media_video_wake
      icon: mdi:video-box
      state: "{{ states('input_text.media_video_wake') }}"
      optimistic: true
      select_option:
        - condition: template
          value_template: *option_test

        - action: input_text.set_value
          target:
            entity_id: input_text.media_video_wake
          data:
            value: "{{ option }}"
      options: *video_options
