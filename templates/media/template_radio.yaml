###############################################################################
## Templates - Radio
###############################################################################
- trigger:
    - platform: state
      entity_id: sensor.streaming_radio_stations
      attribute: stations
      to: ~

    - platform: state
      entity_id: sensor.radio_playlists
      attribute: playlist_names
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: "off"
  sensor:
    - name: "Radio Playlists"
      unique_id: radio_playlists #RADIO until included in streaming radio sensor
      icon: mdi:radio
      state: >
        {% set playlist = state_attr('sensor.radio_playlists','playlist_names') %}
        {{ 0 if playlist == none else playlist|count }}
      attributes:
        playlist_names: >
          {% set options = namespace(value=[]) %}
          {% set playlists = state_attr('sensor.streaming_radio_stations','stations') %}
          {% if playlists != none %}
            {% for item in playlists -%}
              {% set options.value = options.value + [item.name] %}
            {% endfor %}
          {% endif %}
          {{ options.value }}

- trigger:
    - platform: state
      entity_id: sensor.media_play_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_text.radio_media_player
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: "off"
  select:
    - name: "Radio Media Player"
      unique_id: radio_media_player
      state: "{{ states('input_text.radio_media_player') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.radio_media_player
          data:
            value: "{{ option }}"
      options: "{{ expand(state_attr('sensor.media_play_media_players','entity_id'))|map(attribute='name')|list }}"

- trigger:
    - platform: state
      entity_id: sensor.radio_playlists
      attribute: playlist_names
      to: ~

    - platform: state
      entity_id: input_text.radio_playlist
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: "off"
  select:
    - name: "Radio Playlist"
      unique_id: radio_playlist
      state: "{{ states('input_text.radio_playlist') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.radio_playlist
          data:
            value: "{{ option }}"
      options: "{{ state_attr('sensor.radio_playlists','playlist_names') }}"

- binary_sensor:
    - name: "Radio"
      unique_id: radio
      icon: mdi:radio
      state: >
        {{ is_state('input_boolean.radio','on')
            or is_state('input_boolean.resume_radio','on') }}

- sensor:
    - name: "Radio Media Player"
      unique_id: radio_media_player
      icon: mdi:radio
      state: >
        {% set active = states('input_text.active_radio_media_player') %}
        {% set selected = expand('group.media_play_media_players')
            |selectattr('name','eq',states('select.radio_media_player'))|map(attribute='entity_id')|join('') %}
        {{ iif(is_state('script.media_play','off') and active != 'off',active,selected) }}
      attributes:
        entity_id: >
          {% set player = states('sensor.radio_media_player') %}
          {% if player not in ['unknown','unavailable'] %}
          {{ state_attr('sensor.' ~ player.split('.')[1],'entity_id') if is_state_attr(player,'type','group') else [player] }}
          {% endif %}
