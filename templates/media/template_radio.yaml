###############################################################################
## Templates - Radio
###############################################################################
- binary_sensor:
    - name: 'Radio'
      unique_id: radio
      icon: mdi:radio
      delay_off:
        seconds: 5 # allow switch playlist, media player etc.
      state: > #RADIO until streaming radio media player
        {{ (state_attr('sensor.radio_media_player','player_state') in ['playing','paused']
              and is_state('input_boolean.radio','on'))
            or states('input_text.active_radio_media_player') not in ['off','']
            or is_state('input_boolean.resume_radio','on') }}

- sensor:
    - name: 'Radio Media Player'
      unique_id: radio_media_player
      icon: mdi:radio
      state: >
        {{ expand(state_attr('sensor.media_players','players'))
            |selectattr('name','eq',states('input_select.radio_media_player'))
            |map(attribute='entity_id')|join('') }}

      # {% if states('input_text.active_radio_media_player') not in ['off',''] %}
      #   {{ states('input_text.active_radio_media_player') }}
      # {% else %}
      # {% endif %}
      attributes:
        player_state: "{{ states(states('sensor.radio_media_player')) }}"
        players: >
          {% set player = states('sensor.radio_media_player') %}
            {% if player|lower not in ['off','','unknown','unavailable','none'] %}
            {{ expand(state_attr('sensor.media_players','single'))
                |selectattr('attributes.' ~ player.split('.')[1],'eq',true)|map(attribute='entity_id')|list
                  if is_state_attr(player,'type','group') else [player] }}
          {% endif %}
