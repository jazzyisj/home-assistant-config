###############################################################################
## Templates - TTS
###############################################################################
- sensor:
    - name: 'TTS Media Player'
      unique_id: tts_media_player
      icon: mdi:animation-play
      state: >
        {% set tts_players = expand(state_attr('sensor.media_players','players'))|selectattr('attributes.tts','eq',true) %}
        {% if is_state('input_select.occupancy_mode','Night') %}{% set tts = states('input_select.tts_media_player_night') %}
        {% elif is_state('binary_sensor.quiet_time','on') %}{% set tts = states('input_select.tts_media_player_quiet') %}
        {% else %}{% set tts = states('input_select.tts_media_player') %}
        {% endif %}
        {{ tts_players|selectattr('name','eq',tts)|map(attribute='entity_id')|join('') }}
      attributes:
        player_state: "{{ states(states('sensor.tts_media_player')) }}"
        players: >
          {% set player = states('sensor.tts_media_player') %}
          {{ state_attr('sensor.' ~ player.split('.')[1],'players') if is_state_attr(player,'type','group') else [player] }}

    - name: 'TTS Alert Media Player'
      unique_id: tts_alert_media_player
      icon: mdi:alarm-light
      state: >
        {{ expand(state_attr('sensor.media_players','players'))
            |selectattr('name','eq',states('input_select.tts_media_player_alert'))
            |map(attribute='entity_id')|join('') }}
      attributes:
        player_state: "{{ states(states('sensor.tts_alert_media_player')) }}"
        players: >
          {% set player = states('sensor.tts_alert_media_player') %}
          {{ state_attr('sensor.' ~ player.split('.')[1],'players') if is_state_attr(player,'type','group') else [player] }}
