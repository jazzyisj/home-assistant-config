###############################################################################
## Templates - TTS
###############################################################################
- button:
    - name: 'TTS Last Message'
      unique_id: tts_last_message
      icon: mdi:volume-high
      press:
        - service: script.tts_last_message

- trigger:
    - platform: state
      entity_id: group.tts_media_players
      attribute: entity_id
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  sensor:
    - name: 'TTS Media Players'
      unique_id: tts_media_players
      state: >
        {% set players = state_attr('sensor.tts_media_players','entity_id') %}
        {{ 0 if players == none else players|count }}
      attributes:
        entity_id: "{{ state_attr('group.tts_media_players','entity_id') }}"
        player_names: "{{ ['None Selected'] + expand('group.tts_media_players')|map(attribute='name')|list }}"

- trigger:
    - platform: state
      entity_id: sensor.tts_media_players
      attribute: player_names
      to: ~

    - platform: state
      entity_id: input_text.tts_media_player
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'TTS Media Player'
      unique_id: tts_media_player
      state: "{{ states('input_text.tts_media_player') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player
          data:
            value: '{{ option }}'
      options: >
        {% set options = state_attr('sensor.tts_media_players','player_names') %}
        {% if options != none %} {{ options }}
        {% else %} empty
        {% endif %}

- trigger:
    - platform: state
      entity_id: sensor.tts_media_players
      attribute: player_names
      to: ~

    - platform: state
      entity_id: input_text.tts_media_player_quiet
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'TTS Media Player Quiet'
      unique_id: tts_media_player_quiet
      state: "{{ states('input_text.tts_media_player_quiet') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player_quiet
          data:
            value: '{{ option }}'
      options: >
        {% set options = state_attr('sensor.tts_media_players','player_names') %}
        {% if options != none %} {{ options }}
        {% else %} empty
        {% endif %}

- trigger:
    - platform: state
      entity_id: sensor.tts_media_players
      attribute: player_names
      to: ~

    - platform: state
      entity_id: input_text.tts_media_player_night
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'TTS Media Player Night'
      unique_id: tts_media_player_night
      state: "{{ states('input_text.tts_media_player_night') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player_night
          data:
            value: '{{ option }}'
      options: >
        {% set options = state_attr('sensor.tts_media_players','player_names') %}
        {% if options != none %} {{ options }}
        {% else %} empty
        {% endif %}

- trigger:
    - platform: state
      entity_id: sensor.tts_media_players
      attribute: player_names
      to: ~

    - platform: state
      entity_id: input_text.tts_media_player_alert
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'TTS Media Player Alert'
      unique_id: tts_media_player_alert
      state: "{{ states('input_text.tts_media_player_alert') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player_alert
          data:
            value: '{{ option }}'
      options: >
        {% set options = state_attr('sensor.tts_media_players','player_names') %}
        {% if options != none %} {{ options }}
        {% else %} empty
        {% endif %}

- trigger:
    - platform: state
      entity_id: sensor.tts_media_players
      attribute: player_names
      to: ~

    - platform: state
      entity_id: input_text.tts_media_player_manual
      to: ~

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  select:
    - name: 'TTS Media Player Manual'
      unique_id: tts_media_player_manual
      state: "{{ states('input_text.tts_media_player_manual') }}"
      select_option:
        - condition: template
          value_template: '{{ option != none }}'

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player_manual
          data:
            value: '{{ option }}'
      options: >
        {% set options = state_attr('sensor.tts_media_players','player_names') %}
        {% if options != none %} {{ options }}
        {% else %} empty
        {% endif %}

- binary_sensor:
    - name: 'TTS'
      unique_id: tts
      icon: mdi:account-voice
      state: "{{ is_state('input_boolean.tts_playing','on') }}"

- sensor:
    - name: 'TTS Media Player'
      unique_id: tts_media_player
      icon: mdi:animation-play
      state: >
        {% if is_state('binary_sensor.wan_connected','off') %}
          {% set tts = 'Kiosk Media Player' %}
        {% elif states('select.tts_media_player_manual')
            not in ['','None Selected','unknown','unavailable'] %}
          {% set tts = states('select.tts_media_player_manual') %}
        {% elif is_state('input_select.occupancy_mode','Night') %}
          {% set tts = states('select.tts_media_player_night') %}
        {% elif is_state('binary_sensor.quiet_time','on') %}
          {% set tts = states('select.tts_media_player_quiet') %}
        {% else %}
          {% set tts = states('select.tts_media_player') %}
        {% endif %}
        {% set tts_player = expand('group.tts_media_players')|selectattr('name','eq',tts)
            |map(attribute='entity_id')|join('') %}
        {{ tts_player if states(tts_player) not in ['unknown','unavailable'] else 'media_player.dining_room_hub' }}
      attributes:
        entity_id: >
          {% set player = states('sensor.tts_media_player') %}
          {{ state_attr('sensor.' ~ player.split('.')[1],'entity_id')
              if is_state_attr(player,'type','group') else [player] }}

    - name: 'TTS Alert Media Player'
      unique_id: tts_alert_media_player
      icon: mdi:comment-alert
      state: >
        {% if is_state('binary_sensor.wan_connected','off') %}
          {% set tts = 'Kiosk Media Player' %}
        {% elif states('select.tts_alert_media_player')
            not in ['','None Selected','unknown','unavailable'] %}
          {% set tts = states('select.tts_alert_media_player') %}
        {% else %}
          {% set tts = 'Dining Room Hub' %}
        {% endif %}
        {{ expand('group.tts_media_players')|selectattr('name','eq',tts)
            |map(attribute='entity_id')|join('') }}
      attributes:
        entity_id: >
          {% set player = states('sensor.tts_alert_media_player') %}
          {{ state_attr('sensor.' ~ player.split('.')[1],'entity_id')
              if is_state_attr(player,'type','group') else [player] }}
