###############################################################################
## Templates - TTS
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.tts_media_players
      attribute: entity_id
      to:

    - platform: state
      entity_id: input_text.tts_media_player
      to:
  select:
    - name: "TTS Media Player"
      unique_id: tts_media_player
      state: "{{ states('input_text.tts_media_player') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player
          data:
            value: "{{ option }}"
      options: &tts_player_names >
        {{ ['Mute'] + expand(state_attr('group.tts_media_players', 'entity_id'))
            | map(attribute='name') | list | sort }}

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.tts_media_players
      attribute: entity_id
      to:

    - platform: state
      entity_id: input_text.tts_media_player_quiet
      to:
  select:
    - name: "TTS Media Player Quiet"
      unique_id: tts_media_player_quiet
      state: "{{ states('input_text.tts_media_player_quiet') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player_quiet
          data:
            value: "{{ option }}"
      options: *tts_player_names

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.tts_media_players
      attribute: entity_id
      to:

    - platform: state
      entity_id: input_text.tts_media_player_night
      to:
  select:
    - name: "TTS Media Player Night"
      unique_id: tts_media_player_night
      state: "{{ states('input_text.tts_media_player_night') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player_night
          data:
            value: "{{ option }}"
      options: *tts_player_names

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.tts_media_players
      attribute: entity_id
      to:

    - platform: state
      entity_id: input_text.tts_media_player_alert
      to:
  select:
    - name: "TTS Media Player Alert"
      unique_id: tts_media_player_alert
      state: "{{ states('input_text.tts_media_player_alert') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player_alert
          data:
            value: "{{ option }}"
      options: >
        {{ expand(state_attr('group.tts_media_players', 'entity_id'))
            | map(attribute='name') | list | sort }}

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: group.tts_media_players
      attribute: entity_id
      to:

    - platform: state
      entity_id: input_text.tts_media_player_manual
      to:
  select:
    - name: "TTS Media Player Manual"
      unique_id: tts_media_player_manual
      state: "{{ states('input_text.tts_media_player_manual') }}"
      select_option:
        - condition: template
          value_template: "{{ option != none }}"

        - service: input_text.set_value
          target:
            entity_id: input_text.tts_media_player_manual
          data:
            value: "{{ option }}"
      options: >
        {{ ['None Selected'] + expand(state_attr('group.tts_media_players', 'entity_id'))
            | map(attribute='name') | list | sort }}

- sensor:
    - name: "TTS Active Media Player"
      unique_id: tts_active_media_player
      icon: mdi:animation-play
      state: "{{ states('input_text.tts_active_media_player') }}"
      attributes:
        entity_id: >
          {% set player = states(this.entity_id) %}
          {{ state_attr('sensor.' ~ player.split('.')[1], 'entity_id')
            if is_state_attr(player, 'type', 'group') else [player] }}

    - name: "TTS Alert Media Player"
      unique_id: tts_alert_media_player
      icon: mdi:comment-alert
      state: >
        {% if not has_value('select.tts_media_player_alert') %}
          media_player.dining_room_hub
        {% else %}
          {{ expand('group.tts_media_players')
              | selectattr('name', 'eq', states('select.tts_media_player_alert'))
              | map(attribute='entity_id') | join('') }}
        {% endif %}
      attributes:
        entity_id: >
          {% set player = states(this.entity_id) %}
          {{ state_attr('sensor.' ~ player.split('.')[1], 'entity_id')
              if is_state_attr(player, 'type', 'group') else [player] }}
