###############################################################################
## Templates - Mobile Jason
## Jason Headphones MAC - 00:18:6B:97:9B:B9
###############################################################################
- select:
    - name: "Jason Phone DND"
      unique_id: jason_phone_dnd
      icon: "{{ iif(is_state('select.jason_phone_dnd','off'),'mdi:minus-circle-off-outline','mdi:minus-circle-outline') }}"
      state: "{{ states('sensor.jphone_do_not_disturb_sensor') }}"
      select_option:
        - service: notify.mobile_app_jphone
          data:
            message: command_dnd
            title: "{{ option }}"
      options: "{{ ['off','priority_only','alarms_only','total_silence'] }}"
      availability: "{{ states('sensor.jphone_do_not_disturb_sensor') not in ['unknown','unavailable'] }}"

    - name: "Jason Phone Ringer Mode"
      unique_id: jason_phone_ringer_mode
      icon: >
        {% set state = states('sensor.jphone_ringer_mode') %}
        {% if state == 'normal' %} mdi:volume-high
        {% elif state == 'vibrate' %} mdi:volume-vibrate
        {% else %} mdi:volume-off
        {% endif %}
      state: "{{ states('sensor.jphone_ringer_mode') }}"
      select_option:
        - service: notify.mobile_app_jphone
          data:
            message: command_ringer_mode
            title: "{{ option }}"
      options: "{{ ['normal','vibrate','silent'] }}"
      availability: "{{ states('sensor.jphone_ringer_mode') not in ['unknown','unavailable'] }}"

- button:
    - name: "Jason Phone Update Location"
      unique_id: jason_phone_update_location
      icon: mdi:map-marker-down
      press:
        - service: notify.mobile_app_jphone
          data:
            message: request_location_update

    - name: "Jason Phone Open Mobile App"
      unique_id: jason_phone_open_mobile_app
      icon: mdi:home-assistant
      press:
        - service: notify.mobile_app_jphone
          data:
            message: command_webview

- number:
    - name: "Jason Phone Alarm Volume"
      unique_id: jason_phone_alarm_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_alarm')|int(0) }}"
      step: 1
      min: 0
      max: 7
      set_value:
        - service: notify.mobile_app_jphone
          data:
            message: command_volume_level
            title: "{{ value|int }}"
            data:
              channel: alarm_stream
      availability: "{{ states('sensor.jphone_volume_level_alarm') not in ['unknown','unavailable'] }}"

    - name: "Jason Phone Ringer Volume"
      unique_id: jason_phone_ringer_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_ringer')|int(0) }}"
      step: 1
      min: 0
      max: 7
      set_value:
        - service: notify.mobile_app_jphone
          data:
            message: command_volume_level
            title: "{{ value|int }}"
            data:
              channel: ring_stream
      availability: "{{ states('sensor.jphone_volume_level_ringer') not in ['unknown','unavailable'] }}"

    #IDEA - name: 'Jason Phone Notification Volume'
    #   unique_id: jason_phone_notification_volume
    #   icon: mdi:volume-medium
    #   state: "{{ states('sensor.jphone_volume_level_ringer')|int(0) }}"
    #   step: 1
    #   min: 0
    #   max: 7
    #   set_value:
    #     - service: notify.mobile_app_jphone
    #       data:
    #         message: command_volume_level
    #         title: '{{ value }}'
    #         data:
    #           channel: notification_stream

    - name: "Jason Phone Media Volume"
      unique_id: jason_phone_media_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_music')|int(0) }}"
      step: 1
      min: 0
      max: 25
      set_value:
        - service: notify.mobile_app_jphone
          data:
            message: command_volume_level
            title: "{{ value|int }}"
            data:
              channel: music_stream
      availability: "{{ states('sensor.jphone_volume_level_music') not in ['unknown','unavailable'] }}"

    #IDEA - name: 'Jason Phone Call Volume'
    #   unique_id: jason_phone_call_volume
    #   icon: mdi:volume-medium
    #   state: "{{ states('sensor.jphone_volume_level_call')|int(0) }}"
    #   step: 1
    #   min: 0
    #   max: 7
    #   set_value:
    #     - service: notify.mobile_app_jphone
    #       data:
    #         message: command_volume_level
    #         title: '{{ value|int }}'
    #         data:
    #           channel: call_stream
    #   availability: "{{ states('sensor.jphone_volume_level_call') not in ['unknown','unavailable'] }}"

- binary_sensor:
    #NOTE will always be true after a restart for timedelta when last updated is set to restart time
    - name: "Jason Phone Connected"
      unique_id: jason_phone_connected
      icon: "{{ 'mdi:cellphone-wireless' if is_state('binary_sensor.jason_phone_connected','on') else 'mdi:cellphone-off' }}"
      device_class: connectivity
      state: >
        {% set minutes = state_attr('sensor.jason_phone_last_update','minutes_since_update')|int(-1) %}
        {% if is_state('device_tracker.jphone_bt','home')
            or is_state('binary_sensor.jason_phone_wifi_connected','on') %} true
        {% elif minutes > -1 %}{{ minutes <= 30 }}
        {% endif %}

    - name: "Jason Phone Connected Alert"
      unique_id: jason_phone_connected_alert
      device_class: problem
      delay_on: 60 # delay to prevent firing on template reload, temporary disconnections
      state: >
        {% if is_state('input_boolean.mobile_alerts','on') and is_state('input_boolean.startup_pending','off') %}
          {{ is_state('binary_sensor.jason_phone_connected','off') }}
        {% endif %}

    - name: "Jason Phone Ringer Alert"
      unique_id: jason_phone_ringer_alert
      device_class: problem
      delay_on: 900
      state: > # set ringer vol default to max to prevent false alerts
        {% if is_state('input_boolean.mobile_alerts','on')
            and is_state('input_boolean.startup_pending','off')
            and is_state('binary_sensor.jason_phone_connected','on') %}
          {{ (is_state('sensor.jphone_do_not_disturb_sensor','priority_only')
                or is_state('sensor.jphone_ringer_mode','off')
                or (states('sensor.jphone_volume_level_ringer')|int(7) < 1
                  and not is_state('sensor.jphone_phone_state','offhook')))
              and not is_state('binary_sensor.quiet_time','on')
              and not is_state('input_select.occupancy_mode','Night') }}
        {% endif %}

    - name: "Jason Phone Bluetooth Connected Alert"
      unique_id: jason_phone_bluetooth_connected_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts','on')
            and is_state('input_boolean.startup_pending','off')
            and is_state('binary_sensor.jason_phone_connected','on')
            and is_state('binary_sensor.jason_home','on')
            and is_state('binary_sensor.jason_phone_bluetooth_off_alert','off')
            and is_state('device_tracker.jphone_bt','not_home') }}

    - name: "Jason Phone Bluetooth Off Alert"
      unique_id: jason_phone_bluetooth_off_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts','on')
            and is_state('input_boolean.startup_pending','off')
            and is_state('binary_sensor.jason_phone_connected','on')
            and is_state('binary_sensor.jphone_bluetooth_state','off') }}

    # presence detection - check SSID if phone connected (faster) else check device tracker
    - name: "Jason Phone WIFI Connected"
      unique_id: jason_phone_wifi_connected
      icon: mdi:cellphone-wireless
      device_class: presence
      state: >
        {{ (is_state('binary_sensor.jason_phone_connected','on')
              and states('sensor.jphone_wifi_connection') in ['JNET2','JNET-ROUTER'])
            or (is_state('device_tracker.jphone_wifi','home')
              or is_state('device_tracker.jphone_router_wifi','home')) }}

    # phone wifi - person home but not connected to WIFI
    - name: "Jason Phone WIFI Connected Alert"
      unique_id: jason_phone_wifi_connected_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts','on')
            and is_state('input_boolean.startup_pending','off')
            and is_state('binary_sensor.jason_phone_connected','on')
            and is_state('binary_sensor.jason_home','on')
            and is_state('binary_sensor.jason_phone_wifi_off_alert','off')
            and is_state('binary_sensor.jason_phone_wifi_connected','off') }}

    - name: "Jason Phone WIFI Off Alert"
      unique_id: jason_phone_wifi_off_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts','on')
            and is_state('input_boolean.startup_pending','off')
            and is_state('binary_sensor.jason_phone_connected','on')
            and is_state('binary_sensor.jphone_wifi_state','off') }}

    - name: "Jason Phone Jeep Connected"
      unique_id: jason_phone_jeep_connected
      device_class: connectivity
      state: >
        {% set devices = state_attr('sensor.jphone_bluetooth_connection','connected_paired_devices')
            if is_state('binary_sensor.jason_phone_connected','on') else none %}
        {{ '48:A9:D2:E5:12:66' in devices if devices != none else false }}

    #BUGFIX mobile app headphone sensor doesen't detect bluetooth devices
    - name: "Jason Phone Headphones Connected"
      unique_id: jason_phone_headphones_connected
      device_class: connectivity
      state: >
        {% set devices = state_attr('sensor.jphone_bluetooth_connection','connected_paired_devices')
            if is_state('binary_sensor.jason_phone_connected','on') else none %}
        {{ '00:18:6B:97:9B:B9' in devices if devices != none else false }}

    - name: "Jason Phone Bluetooth Device Alert"
      unique_id: jason_phone_bluetooth_device_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts','on')
            and is_state('input_boolean.startup_pending','off')
            and is_state('binary_sensor.jason_phone_connected','on')
            and is_state_attr('binary_sensor.jason_home','just_arrived','true')
            and (is_state('binary_sensor.jason_phone_headphones_connected','on')
              or is_state('binary_sensor.jason_phone_headphones_2_connected','on')
              or is_state('binary_sensor.jason_phone_jeep_connected','on')) }}

    - name: "Jason Phone High Accuracy Alert"
      unique_id: jason_phone_high_accuracy_alert
      icon: mdi:crosshairs-gps
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts','on')
            and is_state('input_boolean.startup_pending','off')
            and is_state('binary_sensor.jason_phone_connected','on')
            and is_state('binary_sensor.jphone_high_accuracy_mode','on')
            and not is_state('binary_sensor.commute_active','on')
            and not is_state('binary_sensor.jphone_is_charging','on')
            and not is_state('binary_sensor.jason_phone_jeep_connected','on') }}

    - name: "Jason Phone Battery Alert"
      unique_id: jason_phone_battery_alert
      device_class: problem
      delay_on: 900
      state: >
        {% set level = 50 if is_state('binary_sensor.work_commute_active','on') else 20 %}
        {{ is_state('input_boolean.mobile_alerts','on')
            and is_state('input_boolean.startup_pending','off')
            and is_state('binary_sensor.jason_phone_connected','on')
            and (states('sensor.jphone_battery_level')|int(-1) < level
              and is_state('binary_sensor.jphone_is_charging','off')) }}

    - name: "Jason Phone App Update Alert" #TEMP until update entity
      unique_id: jason_phone_app_update_alert
      device_class: update
      state: >
        {{ states('sensor.home_assistant_android_latest_release')
            != states('sensor.jphone_current_version')[:-5] }}

- sensor:
    - name: "Jason Phone Last Update"
      unique_id: jason_phone_last_update
      device_class: timestamp
      state: >
        {% set last_seen = state_attr('sensor.jason_phone_last_update','last_seen')|int(-1) %}
        {% set last_updated = state_attr('sensor.jason_phone_last_update','last_updated')|int(-1) %}
        {% set last_gps = state_attr('sensor.jason_phone_last_update','last_gps')|int(-1) %}
        {% set update_times = [last_seen,last_updated,last_gps] %}
        {% set valid_times = namespace(value=[]) %}
        {% for item in update_times if item > -1 %}
            {% set valid_times.value = valid_times.value + [item] %}
        {% endfor %}
        {% if valid_times.value|count > 0 %}
            {% set last_update = valid_times.value|max %}
        {% endif %}
        {{ last_update|as_datetime if last_update is defined else none }}
      attributes:
        display_time: >
          {% if states('sensor.jason_phone_last_update') not in ['unknown','unavailable'] %}
            {% set time = states('sensor.jason_phone_last_update')|as_datetime|as_local %}
            {{ time.strftime('Today at %-I:%M %p') if now().day == time.day else time.strftime('%A, %-I:%M %p') }}
          {% endif %}
        last_seen: "{{ state_attr('device_tracker.jason_tracker','last_seen')|as_timestamp(none) }}"
        last_updated: "{{ states.sensor.jphone_last_update_trigger.last_updated|as_timestamp(none) }}"
        last_gps: "{{ states.device_tracker.jphone.last_updated|as_timestamp(none) }}"
        minutes_since_update: >
          {% set last_update = states('sensor.jason_phone_last_update') %}
          {% if last_update not in ['unknown','unavailable'] %}
            {{ ((now().timestamp() - last_update|as_timestamp)/60)|int }}
          {% endif %}

    - name: "Jason Phone Next Alarm"
      unique_id: jason_phone_next_alarm
      icon: "{{ 'mdi:alarm-off' if states('sensor.jason_phone_next_alarm') == none else 'mdi:alarm-check' }}"
      device_class: timestamp
      state: >
        {{ states('sensor.jphone_next_alarm')|as_datetime if is_state('input_boolean.jason_phone_alarm_clock_enabled','on')
            and states('sensor.jphone_next_alarm') != 'unavailable' else none }}
      attributes:
        12hour: "{{ states('sensor.jason_phone_next_alarm')|as_timestamp(none)|timestamp_custom('%a %-I:%M %p',true,none) }}"
