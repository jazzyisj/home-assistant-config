###################################################################################################
## Templates - Mobile Jason
###################################################################################################
- switch:
    - name: "Jason Phone High Accuracy"
      unique_id: jason_phone_high_accuracy
      icon: mdi:map-marker-circle
      #ISSUE sensor value slow/doesn't always update
      state: "{{ is_state('binary_sensor.jphone_high_accuracy_mode', 'on') }}"
      availability: "{{ has_value('binary_sensor.jphone_high_accuracy_mode') }}"
      turn_on:
        - action: notify.mobile_app_jphone
          data:
            message: command_high_accuracy_mode
            data:
              command: force_on

        - action: notify.mobile_app_jphone
          data:
            message: command_high_accuracy_mode
            data:
              command: high_accuracy_set_update_interval
              high_accuracy_update_interval: 30
      turn_off:
        - action: notify.mobile_app_jphone
          data:
            message: command_high_accuracy_mode
            data:
              command: high_accuracy_set_update_interval
              high_accuracy_update_interval: 60

        - action: notify.mobile_app_jphone
          data:
            message: command_high_accuracy_mode
            data:
              command: force_off
- select:
    - name: "Jason Phone DND"
      unique_id: jason_phone_dnd
      icon: "{{ iif(is_state('sensor.jphone_do_not_disturb_sensor', 'off'), 'mdi:minus-circle-off-outline', 'mdi:minus-circle-outline') }}"
      state: "{{ states('sensor.jphone_do_not_disturb_sensor') }}"
      select_option:
        - action: notify.mobile_app_jphone
          data:
            message: command_dnd
            data:
              command: "{{ option }}"
      options: "{{ ['off', 'priority_only', 'alarms_only', 'total_silence'] }}"
      availability: "{{ has_value('sensor.jphone_do_not_disturb_sensor') }}"

    - name: "Jason Phone Ringer Mode"
      unique_id: jason_phone_ringer_mode
      icon: >
        {% set state = states('sensor.jphone_ringer_mode') %}
        {% if state == 'normal' %} mdi:volume-high
        {% elif state == 'vibrate' %} mdi:volume-vibrate
        {% else %} mdi:volume-off
        {% endif %}
      state: "{{ states('sensor.jphone_ringer_mode') }}"
      select_option:
        - action: notify.mobile_app_jphone
          data:
            message: command_ringer_mode
            data:
              command: "{{ option }}"
      options: "{{ ['normal', 'vibrate', 'silent'] }}"
      availability: "{{ has_value('sensor.jphone_ringer_mode') }}"

- button:
    - name: "Jason Phone Update Sensors"
      unique_id: jason_phone_update_sensors
      icon: mdi:cellphone-arrow-down-variant
      press:
        - action: notify.mobile_app_jphone
          data:
            message: command_update_sensors

        - action: browser_mod.notification
          data:
            message: "Updating Jason mobile sensors."
            duration: 10000

    - name: "Jason Phone Update Location"
      unique_id: jason_phone_update_location
      icon: mdi:map-marker-down
      press:
        - action: notify.mobile_app_jphone
          data:
            message: request_location_update

        - action: browser_mod.notification
          data:
            duration: 10000
            message: "A location update request was sent to Jason's mobile device."

    - name: "Jason Phone Open Mobile App"
      unique_id: jason_phone_open_mobile_app
      icon: mdi:home-assistant
      press:
        - action: notify.mobile_app_jphone
          data:
            message: command_webview

- number:
    - name: "Jason Phone Alarm Volume"
      unique_id: jason_phone_alarm_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_alarm') | int(0) }}"
      step: 1
      min: 0
      max: 7
      set_value:
        - action: notify.mobile_app_jphone
          data:
            message: command_volume_level
            data:
              media_stream: alarm_stream
              command: "{{ iif(value==0, 1, value | int) }}" #NOTE set to zero causes error (android limitation)
      availability: "{{ has_value('sensor.jphone_volume_level_alarm') }}"

    - name: "Jason Phone Call Volume"
      unique_id: jason_phone_call_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_call') | int(0) }}"
      step: 1
      min: 0
      max: 7
      set_value:
        - action: notify.mobile_app_jphone
          data:
            message: command_volume_level
            data:
              media_stream: call_stream
              command: "{{ iif(value==0, 1, value | int) }}" #NOTE set to zero causes error (android limitation)
      availability: "{{ has_value('sensor.jphone_volume_level_call') }}"

    - name: "Jason Phone DTMF Volume"
      unique_id: jason_phone_dtmf_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_dtmf') | int(0) }}"
      step: 1
      min: 0
      max: 15
      set_value:
        - action: notify.mobile_app_jphone
          data:
            message: command_volume_level
            data:
              media_stream: system_stream
              command: "{{ iif(value==0, 1, value | int) }}" #NOTE set to zero causes error (android limitation)
      availability: "{{ has_value('sensor.jphone_volume_level_dtmf') }}"

    - name: "Jason Phone Media Volume"
      unique_id: jason_phone_media_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_music') | int(0) }}"
      step: 1
      min: 0
      max: 25
      set_value:
        - action: notify.mobile_app_jphone
          data:
            message: command_volume_level
            data:
              media_stream: music_stream
              command: "{{ iif(value==0, 1, value | int) }}" #NOTE set to zero causes error (android limitation)
      availability: "{{ has_value('sensor.jphone_volume_level_music') }}"

    - name: "Jason Phone Notification Volume"
      unique_id: jason_phone_notification_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_notification') | int(0) }}"
      step: 1
      min: 0
      max: 7
      set_value:
        - action: notify.mobile_app_jphone
          data:
            message: command_volume_level
            data:
              media_stream: notification_stream
              command: "{{ iif(value==0, 1, value | int) }}" #NOTE set to zero causes error (android limitation)
      availability: "{{ has_value('sensor.jphone_volume_level_notification') }}"

    - name: "Jason Phone Ringer Volume"
      unique_id: jason_phone_ringer_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_ringer') | int(0) }}"
      step: 1
      min: 0
      max: 7
      set_value:
        - action: notify.mobile_app_jphone
          data:
            message: command_volume_level
            data:
              media_stream: ring_stream
              command: "{{ iif(value==0, 1, value | int) }}" #NOTE set to zero causes error (android limitation)
      availability: "{{ has_value('sensor.jphone_volume_level_ringer') }}"

    - name: "Jason Phone System Volume"
      unique_id: jason_phone_system_volume
      icon: mdi:volume-medium
      state: "{{ states('sensor.jphone_volume_level_system') | int(0) }}"
      step: 1
      min: 0
      max: 7
      set_value:
        - action: notify.mobile_app_jphone
          data:
            message: command_volume_level
            data:
              media_stream: system_stream
              command: "{{ iif(value==0, 1, value | int) }}" #NOTE set to zero causes error (android limitation)
      availability: "{{ has_value('sensor.jphone_volume_level_system') }}"

- binary_sensor:
    - name: "Jason Phone Connected"
      unique_id: jason_phone_connected
      icon: "{{ iif(is_state(this.entity_id, 'on'), 'mdi:cellphone-wireless', 'mdi:cellphone-off') }}"
      device_class: connectivity
      state: >
        {% set update_seconds = 600 %}
        {% set update_ts = (now().timestamp() - update_seconds)|as_datetime %}
        {{ expand(device_entities('7af76f7c427863afa91dce82495e034f'))
            | selectattr('last_reported', 'ge', update_ts) | list | count > 0 }}

    - name: "Jason Phone Connected Alert"
      unique_id: jason_phone_connected_alert
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('input_boolean.mobile_alerts', 'on')
            and is_state('binary_sensor.jason_phone_connected', 'off') }}

    - name: "Jason Phone WIFI Connected"
      unique_id: jason_phone_wifi_connected
      device_class: connectivity
      delay_off: 30 # ignore temporary disconnections
      state: > #ISSUE phone WIFI device tracker toggling, use ping
        {{ states('sensor.jphone_wi_fi_connection') in ['JNET2', 'JNET-WIFI', 'JNET-ROUTER']
            and is_state('device_tracker.jason_phone_ping', 'home') }}

    - name: "Jason Phone Ringer Alert"
      unique_id: jason_phone_ringer_alert
      device_class: problem
      delay_on: 900
      state: > # set ringer vol default to max to prevent false alerts
        {% if is_state('input_boolean.mobile_alerts', 'on')
            and is_state('binary_sensor.jason_phone_connected', 'on') %}
          {{ (is_state('sensor.jphone_do_not_disturb_sensor', 'priority_only')
                or is_state('sensor.jphone_ringer_mode', 'off')
                or (states('sensor.jphone_volume_level_ringer') | int(7) < 1
                  and not is_state('sensor.jphone_phone_state', 'offhook')))
              and not is_state('binary_sensor.quiet_time', 'on')
              and not is_state('input_select.occupancy_mode', 'Night') }}
        {% endif %}

    - name: "Jason Phone Bluetooth Off Alert"
      unique_id: jason_phone_bluetooth_off_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts', 'on')
            and is_state('binary_sensor.jason_phone_connected', 'on')
            and is_state('binary_sensor.jphone_bluetooth_state', 'off') }}

    - name: "Jason Phone Bluetooth Disconnected Alert"
      unique_id: jason_phone_bluetooth_disconnected_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.bluetooth_alerts', 'on')
            and is_state('input_boolean.mobile_alerts', 'on')
            and is_state('binary_sensor.jason_phone_connected', 'on')
            and is_state('binary_sensor.jason_home', 'on')
            and is_state('input_boolean.home_override_jason', 'off')
            and is_state('alert.bluetooth_offline', 'idle')
            and is_state('alert.jason_phone_bluetooth_off', 'idle')
            and not is_state('device_tracker.jason_phone_bt', 'home') }}

    - name: "Jason Phone WIFI Disconnected Alert"
      unique_id: jason_phone_wifi_disconnected_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts', 'on')
            and is_state('binary_sensor.jason_phone_wifi_connected', 'off')
            and is_state('binary_sensor.jason_phone_connected', 'on')
            and is_state('binary_sensor.jason_home', 'on')
            and is_state('input_boolean.home_override_jason', 'off')
            and is_state('alert.jason_phone_wifi_off', 'idle') }}

    - name: "Jason Phone WIFI Off Alert"
      unique_id: jason_phone_wifi_off_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts', 'on')
            and is_state('binary_sensor.jason_phone_connected', 'on')
            and is_state('binary_sensor.jphone_wi_fi_state', 'off') }}

    #ISSUE mobile app headphone sensor doesen't detect bluetooth devices
    - name: "Jason Phone Headphones Connected"
      unique_id: jason_phone_headphones_connected
      device_class: connectivity
      state: >
        {% set devices = state_attr('sensor.jphone_bluetooth_connection', 'connected_paired_devices')
            if is_state('binary_sensor.jason_phone_connected', 'on') else none %}
        {{ '8D:D3:B4:42:22:68 (BX17)' in devices
              or 'F4:B6:2D:10:78:AB (soundcore P20i)' in devices
            if devices != none else false }}

    - name: "Jason Phone Bluetooth Device Alert"
      unique_id: jason_phone_bluetooth_device_alert
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts', 'on')
            and is_state('binary_sensor.jason_phone_connected', 'on')
            and is_state_attr('binary_sensor.jason_home', 'just_arrived', 'true')
            and is_state('binary_sensor.jason_phone_headphones_connected', 'on') }}

    - name: "Jason Phone High Accuracy Alert"
      unique_id: jason_phone_high_accuracy_alert
      icon: mdi:crosshairs-gps
      device_class: problem
      delay_on: 900
      state: >
        {{ is_state('input_boolean.mobile_alerts', 'on')
            and is_state('binary_sensor.jason_phone_connected', 'on')
            and is_state('binary_sensor.jphone_high_accuracy_mode', 'on')
            and not is_state('sensor.jphone_detected_activity', 'in_vehicle')
            and not is_state('binary_sensor.commute_active', 'on') }}

    - name: "Jason Phone Battery Alert"
      unique_id: jason_phone_battery_alert
      device_class: problem
      state: >
        {% set level = 50 if is_state('binary_sensor.work_commute_active', 'on')
              or is_state('binary_sensor.bedtime_active', 'on')
              or is_state('binary_sensor.waketime_active', 'on') else 20 %}
        {{ is_state('input_boolean.mobile_alerts', 'on')
            and is_state('binary_sensor.jason_home', 'on')
            and is_state('binary_sensor.jason_phone_connected', 'on')
            and is_state('binary_sensor.jphone_is_charging', 'off')
            and states('sensor.jphone_battery_level') | int < level }}
      availability: "{{ is_number(states('sensor.jphone_battery_level')) }}"

- sensor:
    - name: "Jason Phone Last Update"
      unique_id: jason_phone_last_update
      device_class: timestamp
      state: >
        {% set last_updated = states.sensor.jphone_last_update_trigger.last_reported | as_timestamp(-1) | int
          if states.sensor.jphone_last_update_trigger.last_updated is defined else -1 %}
        {% set last_gps = states.device_tracker.jphone.last_reported | as_timestamp(-1) | int
          if states.device_tracker.jphone.last_updated is defined else -1 %}
        {% set last_battery = states.sensor.jphone_battery_level.last_reported | as_timestamp(-1) | int
            if states.sensor.jphone_battery_level.last_reported is defined else -1 %}
        {% set update_times = [last_updated, last_gps, last_battery] %}
        {% set valid_times = namespace(value=[]) %}
        {% for item in update_times if item > -1 %}
            {% set valid_times.value = valid_times.value + [item] %}
        {% endfor %}
        {% if valid_times.value | count > 0 %}
            {% set updated = valid_times.value | max %}
        {% endif %}
        {{ updated | as_datetime if updated is defined else none }}

    - name: "Jason Phone Next Alarm"
      unique_id: jason_phone_next_alarm
      icon: "{{ iif(states(this.entity_id) == none, 'mdi:alarm-off', 'mdi:alarm-check') }}"
      device_class: timestamp
      state: >
        {{ states('sensor.jphone_next_alarm') | as_datetime
            if is_state('input_boolean.jason_phone_alarm_clock_enabled', 'on')
              and has_value('sensor.jphone_next_alarm') else none }}
      attributes:
        12hour: >
          {% from 'schedule.jinja' import twelve_hour %}
          {{ twelve_hour(this.entity_id) }}
