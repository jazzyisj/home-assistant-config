###################################################################################################
## Templates - Lights
###################################################################################################
- switch:
    - name: "Adaptive Lighting"
      icon: mdi:theme-light-dark
      turn_on:
        - action: switch.turn_on
          target:
            entity_id: &switches
              - switch.adaptive_lighting_bedroom_lights
              - switch.adaptive_lighting_main_lights
              - switch.adaptive_lighting_outside_lights
              - switch.adaptive_lighting_rgb_lights
              - switch.adaptive_lighting_bathroom_lights
              - switch.adaptive_lighting_cabinet_lights
      turn_off:
        - action: switch.turn_off
          target:
            entity_id: *switches

- button:
    - name: "Reset Notification LEDs"
      unique_id: reset_notification_leds
      icon: mdi:alarm-light
      press:
        - action: script.led_reset

        - action: browser_mod.notification
          data:
            message: "Resetting LED notifications."
            duration: 10000

- binary_sensor:
    - name: "Lights On"
      unique_id: lights_on
      icon: >
        {% if (is_state('binary_sensor.nighttime_illuminance', 'on')
              or is_state('binary_sensor.daytime_illuminance', 'on'))
            and is_state('binary_sensor.lights_on', 'on') %} mdi:lightbulb-on
        {% elif is_state('binary_sensor.nighttime_illuminance', 'on')
              or is_state('binary_sensor.daytime_illuminance', 'on') %} mdi:lightbulb-on-outline
        {% elif is_state('binary_sensor.lights_on', 'on') %} mdi:lightbulb
        {% else %} mdi:lightbulb-outline
        {% endif %}
      device_class: light
      state: >
        {% set entities = state_attr(this.entity_id, 'entity_id') %}
        {{ entities | count > 0 if entities != none else false }}
      attributes:
        entity_id: >
          {{ expand('group.lights') | selectattr('state', 'eq', 'on')
              | map(attribute='entity_id') | sort }}

    - name: "Unavailable Lights"
      unique_id: unavailable_lights
      icon: mdi:lightbulb
      device_class: problem
      state: >
        {% set entities = state_attr(this.entity_id, 'entity_id') %}
        {{ entities | count > 0 if entities != none else false }}
      attributes:
        entity_id: >
          {{ expand('group.lights') | map(attribute='entity_id')
            | reject('has_value') | sort }}

    - name: "Light In Use"
      unique_id: light_in_use
      icon: mdi:light-switch
      state: >
        {% set entities = state_attr(this.entity_id, 'entity_id') %}
        {{ entities | count > 0 if entities != none else false }}
      attributes:
        entity_id: >
          {{ expand('group.light_timers') | selectattr('state', 'ne', 'idle')
              | map(attribute='entity_id') | sort }}

    # delay off prevent trigger when ill sensor <> threshold rapidly
    # cloud factor = cloud percent * (1 - 10 adjustment) * 20 up to 20000 lux reduction
    - name: "Daytime Illuminance"
      unique_id: daytime_illuminance
      icon: mdi:brightness-7
      delay_off: >
        {% set update = true if now() - states('sensor.uptime') | as_datetime < timedelta(minutes=5)
              or now() - states.input_boolean.day_lights_enabled.last_changed < timedelta(seconds=60)
              or now() - states.input_number.day_illuminance_cloud_factor.last_changed < timedelta(seconds=60)
              or now() - states.input_number.day_illuminance_threshold.last_changed < timedelta(seconds=60)
            else false %}
        {{ iif(update, 0, 900) }}
      state: >
        {% if is_state('input_boolean.day_lights_enabled', 'on')
            and is_number(states('sensor.outdoor_illuminance'))
            and is_state('sun.sun', 'above_horizon' ) %}
          {% set cloud_factor = states('sensor.cloud_coverage') | int(0)
              * states('input_number.day_illuminance_cloud_factor') | int * 20 %}
          {{ (states('sensor.outdoor_illuminance') | int - cloud_factor | int(0))
              <= states('input_number.day_illuminance_threshold') | int }}
        {% endif %}

    # delay off prevent trigger when sensor <> threshold rapidly
    # elevation - lights on only after noon, lights off only before noon
    - name: "Nighttime Illuminance"
      unique_id: nighttime_illuminance
      icon: mdi:brightness-4
      delay_off: >
        {% set update = true if now() - states('sensor.uptime') | as_datetime < timedelta(minutes=5)
              or now() - states.input_boolean.night_lights_override.last_changed < timedelta(seconds=60)
              or now() - states.input_boolean.night_lights_enabled.last_changed < timedelta(seconds=60)
              or now() - states.input_number.night_illuminance_threshold.last_changed < timedelta(seconds=60)
            else false %}
        {{ iif(update, 0, 900) }}
      state: >
        {% if is_state('input_boolean.night_lights_override', 'on') %} true
        {% elif is_state('input_boolean.night_lights_enabled', 'on') %}
          {% set time = states('sensor.time') %}
          {% set sun = state_attr('sun.sun', 'elevation') | float(-1) %}
            {{ ((sun < states('input_number.lights_on_sun_elevation') | int and time > '12:00')
                  or (sun < states('input_number.lights_off_sun_elevation') | int and time < '12:00'))
                and (states('sensor.outdoor_illuminance') | int(-1)
                < states('input_number.night_illuminance_threshold') | int) }}
        {% else %} false
        {% endif %}
      availability: >
        {{ is_number(states('sensor.outdoor_illuminance'))
            or is_number(state_attr('sun.sun', 'elevation')) }}

    # delay off prevent trigger when ill sensor <> threshold rapidly
    - name: "Bathroom Illuminance"
      unique_id: bathroom_illuminance
      icon: mdi:brightness-4
      delay_off:
        minutes: 15
      state: >
        {% if is_state('binary_sensor.nighttime_illuminance', 'on')
            or is_state('binary_sensor.daytime_illuminance', 'on') %} true
        {% else %}
          {% if is_number(states('sensor.bathroom_sensor_illuminance')) %}
            {{ states('sensor.bathroom_sensor_illuminance') | int(-1)
                <= states('input_number.bathroom_illuminance_threshold') | int }}
          {% endif %}
        {% endif %}

    # delay off prevent trigger when ill sensor <> threshold rapidly
    - name: "Office Illuminance"
      unique_id: office_illuminance
      icon: mdi:brightness-4
      delay_off:
        minutes: 15
      state: >
        {% if is_state('binary_sensor.nighttime_illuminance', 'on')
            or is_state('binary_sensor.daytime_illuminance', 'on') %} true
        {% else %}
          {% if is_number(states('sensor.office_motion_luminosity')) %}
            {{ states('sensor.office_motion_luminosity') | int(-1)
                <= states('input_number.office_illuminance_threshold') | int }}
          {% endif %}
        {% endif %}

    # delay off prevent trigger when ill sensor <> threshold rapidly
    - name: "Side Entrance Illuminance"
      unique_id: side_entrance_illuminance
      icon: mdi:brightness-4
      delay_off:
        minutes: 15
      state: >
        {% if is_state('binary_sensor.nighttime_illuminance', 'on')
            or is_state('binary_sensor.daytime_illuminance', 'on') %} true
        {% else %}
          {% if is_number(states('sensor.side_entrance_motion_luminosity')) %}
            {{ states('sensor.side_entrance_motion_luminosity') | int(-1)
                <= states('input_number.side_entrance_illuminance_threshold') | int }}
          {% endif %}
        {% endif %}

- sensor:
    - name: "Illuminance Status"
      unique_id: illuminance_status
      icon: >
        {% if is_state(this.entity_id, 'Nightime') %} mdi:brightness-4
        {% elif is_state(this.entity_id, 'Daytime') %} mdi:brightness-7
        {% else %} mdi:brightness-5
        {% endif %}
      state: >
        {% if is_state('binary_sensor.nighttime_illuminance', 'on') %} Nightime
        {% elif is_state('binary_sensor.daytime_illuminance', 'on') %} Daytime
        {% else %} Off
        {% endif %}

    - name: "Outdoor Illuminance"
      unique_id: outdoor_illuminance
      icon: mdi:brightness-7
      device_class: illuminance
      state_class: measurement
      unit_of_measurement: lx
      state: >
        {% if is_state('binary_sensor.weatherflow_integration_connected', 'on')
            and is_number(states('sensor.home_sensors_illuminance')) %}
          {{ states('sensor.home_sensors_illuminance') | float }}
        {% elif is_state('binary_sensor.tempest_integration_connected', 'on')
            and is_number(states('sensor.tempest_illuminance')) %}
          {{ states('sensor.tempest_illuminance') | float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_state('binary_sensor.weatherflow_integration_connected', 'on')
              and is_number(states('sensor.home_sensors_visibility')) %} Weatherflow
          {% elif is_state('binary_sensor.tempest_integration_connected', 'on')
              and is_number(states('sensor.tempest_illuminance')) %} Weatherflow
          {% endif %}
      availability: >
        {{ (is_state('binary_sensor.weatherflow_integration_connected', 'on')
              and is_number(states('sensor.home_sensors_illuminance')))
            or (is_state('binary_sensor.tempest_integration_connected', 'on')
            and is_number(states('sensor.tempest_illuminance'))) }}
