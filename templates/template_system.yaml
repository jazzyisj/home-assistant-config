###############################################################################
## Template - System
###############################################################################
- binary_sensor:
    - unique_id: cpu_temperature_alert
      delay_on:
        minutes: 10 # delay before triggering alert to reduce alerts from temporary spikes
      state: >
        {{ states('sensor.cpu_temperature')|int(0) > 65
            and is_state('input_boolean.system_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - unique_id: processor_use_alert
      delay_on:
        minutes: 10 # delay before triggering alert to reduce alerts from temporary spikes
      state: >
        {{ states('sensor.processor_use_percent')|int(0) > 60
            and is_state('input_boolean.system_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - unique_id: memory_use_alert
      delay_on:
        minutes: 10 # delay before triggering alert to reduce alerts from temporary spikes
      state: >
        {{ states('sensor.memory_use_percent')|int(0) > 75
            and is_state('input_boolean.system_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - unique_id: swap_use_alert
      delay_on:
        minutes: 10 # delay before triggering alert to reduce alerts from temporary spikes
      state: >
        {{ states('sensor.swap_use_percent')|int(0) > 80
            and is_state('input_boolean.system_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - unique_id: disk_use_alert
      state: "{{ states('sensor.disk_use_percent_home')|int(0) > 60 and is_state('input_boolean.system_alerts','on') }}"

- sensor:
    - name: 'Last Boot Date Time'
      unique_id: last_boot_date_time
      icon: mdi:clock-start
      state: >
        {% set date = states('sensor.last_boot')|as_timestamp('unknown')|timestamp_custom('%d') %}
        {% set date = '{:01}'.format(date|int(0)) %}
        {% if date in ('1','21','31') %}{% set date = date ~ 'st' %}
        {% elif now().day in ('2','22') %}{% set date = date ~ 'nd' %}
        {% elif now().day in ('3','23') %}{% set date = date ~ 'rd' %}
        {% else %}{% set date = date ~ 'th' %}
        {% endif %}
        {{ states('sensor.last_boot')|as_timestamp('unknown')|timestamp_custom('%H:%M on %a','unknown') }} {{ date }} {{ states('sensor.last_boot')|as_timestamp('unknown')|timestamp_custom('%b %Y',true,'unknown') }}

    - name: 'Server Uptime'
      unique_id: server_uptime
      icon: mdi:clock-start
      state: >
        {% set up_time = now().timestamp() - states('sensor.last_boot')|as_timestamp %}
        {% set minutes = (up_time // 60)|int(0) %}
        {% set hours = (minutes // 60) %}
        {% set days = (hours // 24) %}
        {% set weeks = (days // 7) %}
        {% set minutes = (minutes % 60) %}
        {% set hours =  (hours % 24) %}
        {% set days = (days % 7) %}
        {% macro phrase(value, name) %}
          {%- set value = value %}
          {%- set end = 's' if value > 1 else '' %}
          {{- '{} {}{}'.format(value, name, end) if value|int(0) > 0 else '' }}
        {%- endmacro %}
        {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ]|select('!=','')|list|join(', ') %}
        {% set last_comma = text.rfind(',') %}
        {% if last_comma != -1 %}
          {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
        {% endif %}
        {{ text }}
