###################################################################################################
## Template - Appliance
###################################################################################################
- button:
    - name: "Indoor Sump Hours Reset"
      unique_id: indoor_sump_hours_reset
      icon: mdi:pump
      press:
        - action: browser_mod.notification
          data:
            message: "Resetting Indoor Sump hours."
            duration: 10000

    - name: "Outdoor Sump Hours Reset"
      unique_id: outdoor_sump_hours_reset
      icon: mdi:pump
      press:
        - action: browser_mod.notification
          data:
            message: "Resetting Outdoor Sump hours."
            duration: 10000

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: state
      entity_id: switch.outdoor_sump
      to:

    - trigger: numeric_state
      entity_id: sensor.outdoor_temperature
      below: 1
      for:
        hours: 12 # match sump off automation
        minutes: 5 # allow pump to turn off

    - trigger: numeric_state
      entity_id: sensor.outdoor_temperature
      above: 1
      for:
        days: 1 # match sump on automation
        minutes: 5 # allow pump to turn on
  action:
    - delay: 5 # allow sensor states to render
  binary_sensor:
    - name: "Outdoor Sump Power Alert"
      unique_id: outdoor_sump_power_alert
      icon: mdi:pump-off
      device_class: problem
      state: > # default 0 degree so pump defaults to off
        {{ iif(states('sensor.outdoor_temperature') | int(0) >= 1,
            is_state('switch.outdoor_sump', 'off'),
              is_state('switch.outdoor_sump', 'on')) }}
      availability: >
        {{ is_number(states('sensor.outdoor_temperature'))
            and has_value('switch.outdoor_sump') }}

- trigger:
  - trigger: state
    entity_id: binary_sensor.indoor_sump
    to: "on"
    for:
      minutes: 5

  - trigger: state
    entity_id: binary_sensor.indoor_sump
    to: "off"
  binary_sensor:
    - name: "Indoor Sump Cycle Alert"
      unique_id: indoor_sump_cycle_alert
      icon: mdi:alert
      device_class: problem
      state: "{{ is_state('binary_sensor.indoor_sump', 'on') }}"

- trigger:
    - trigger: state
      entity_id: binary_sensor.outdoor_sump
      to: "on"
      for:
        minutes: 5

    - trigger: state
      entity_id: binary_sensor.outdoor_sump
      to: "off"
  binary_sensor:
    - name: "Outdoor Sump Cycle Alert"
      unique_id: outdoor_sump_cycle_alert
      icon: mdi:alert
      device_class: problem
      state: "{{ is_state('binary_sensor.outdoor_sump', 'on') }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: time_pattern
      minutes: "/5"
  binary_sensor:
    - name: "Shelly Integration Connected"
      unique_id: shelly_integration_connected
      picture: !secret SHELLY_ICON
      device_class: connectivity
      state: "{{ integration_entities('shelly') | select('has_value') | list | count > 0 }}"

    - name: "LG ThinQ Integration Connected"
      unique_id: lg_thinq_integration_connected
      picture: !secret LG_ICON
      device_class: connectivity
      state: "{{ integration_entities('smartthinq_sensors') | select('has_value') | list | count > 0 }}"

- binary_sensor:
    - name: "Shelly Connected Alert"
      unique_id: shelly_connected_alert
      device_class: problem
      delay_on: 300
      state: >
        {{ is_state('binary_sensor.shelly_integration_connected', 'off')
            and is_state('input_boolean.appliance_alerts', 'on') }}

    - name: "LG ThinQ Connected Alert"
      unique_id: lg_thinq_connected_alert
      device_class: problem
      delay_on: 300
      state: >
        {{ is_state('binary_sensor.lg_thinq_integration_connected', 'off')
            and is_state('input_boolean.appliance_alerts', 'on') }}

    - name: "Oven Alert"
      unique_id: oven_alert
      device_class: safety
      state: >
        {{ is_state('binary_sensor.someone_home', 'off')
            and (is_state('binary_sensor.oven_cooktop_state', 'on')
              or is_state('binary_sensor.oven_oven_state', 'on')) }}

    - name: "Leak Detected Alert"
      unique_id: leak_detected_alert
      device_class: moisture
      state: >
        {% set entities = state_attr(this.entity_id, 'entity_id') %}
        {{ entities | count > 0 if entities != none else false }}
      attributes:
        entity_id: >
          {{ expand('group.leak_sensors')
              | selectattr('state', 'eq', 'on')
              | map(attribute='entity_id') | sort }}

    - name: "Unavailable Leak Sensor"
      unique_id: unavailable_leak_sensor
      icon: mdi:pipe-leak
      device_class: problem
      delay_on: 300
      state: >
        {% set entities = state_attr(this.entity_id, 'entity_id') %}
        {{ entities | count > 0 if entities != none else false }}
      attributes:
        entity_id: "{{ state_attr('group.leak_sensors', 'entity_id') | reject('has_value') | sort }}"

    - name: "Unavailable Motion"
      unique_id: unavailable_motion
      icon: mdi:motion-sensor
      device_class: problem
      state: >
        {% set entities = state_attr(this.entity_id, 'entity_id') %}
        {{ entities | count > 0 if entities != none else false }}
      attributes:
        entity_id: >
          {{ expand('group.motion_sensors') | map(attribute='entity_id')
              | reject('has_value') | sort }}

    - name: "Smoke Alarm"
      unique_id: smoke_alarm
      device_class: smoke
      state: >
        {{ is_state('binary_sensor.nest_protect_upstairs_smoke_status', 'on')
            or is_state('binary_sensor.nest_protect_downstairs_smoke_status', 'on') }}

    - name: "CO Alarm"
      unique_id: co_alarm
      device_class: carbon_monoxide
      state: >
        {{ is_state('binary_sensor.nest_protect_upstairs_co_status', 'on')
            or is_state('binary_sensor.nest_protect_downstairs_co_status', 'on') }}

    - name: "Heat Alarm"
      unique_id: heat_alarm
      device_class: heat
      state: >
        {{ is_state('binary_sensor.nest_protect_upstairs_heat_status', 'on')
            or is_state('binary_sensor.nest_protect_downstairs_heat_status', 'on') }}

    - name: "Sump Active"
      unique_id: sump_active # master sump button
      icon: mdi:pump
      device_class: running
      state: >
        {{ is_state('binary_sensor.indoor_sump', 'on')
            or is_state('binary_sensor.outdoor_sump', 'on') }}

    - name: "Indoor Sump Connected"
      unique_id: indoor_sump_connected
      device_class: connectivity
      state: >
        {{ expand(device_entities('f3f94ece65baecc4e40296fe3de10651'))
            | rejectattr('domain', 'in', ['device_tracker', 'update'])
            | map(attribute='entity_id')
            | select('has_value') | list | count > 0 }}

    - name: "Indoor Sump Connected Alert"
      unique_id: indoor_sump_connected_alert
      icon: mdi:flash-alert
      device_class: problem
      delay_on: 60 # ignore temporary disconnection
      state: >
        {{ is_state('binary_sensor.indoor_sump_connected', 'off')
              and is_state('input_boolean.appliance_alerts', 'on') }}

    - name: "Indoor Sump"
      unique_id: indoor_sump
      icon: mdi:pump
      device_class: running
      state: "{{ states('sensor.indoor_sump_power') | int > 10 }}"
      availability: "{{ is_number(states('sensor.indoor_sump_power')) }}"

    - name: "Indoor Sump Alert"
      unique_id: indoor_sump_alert
      icon: mdi:flash-alert
      device_class: problem
      state: >
        {{ (not has_value('switch.indoor_sump')
              or is_state('switch.indoor_sump', 'off')
              or states('sensor.indoor_sump_power') | float(-1) > 600
              or is_state('binary_sensor.indoor_sump_overpowering', 'on')
              or is_state('binary_sensor.indoor_sump_cycle_alert', 'on')
              or states('sensor.indoor_sump_device_temperature') | float(-1) > 55
              or is_state('binary_sensor.indoor_sump_overheating', 'on'))
            and is_state('binary_sensor.outdoor_sump_connected', 'on')
            and is_state('input_boolean.appliance_alerts', 'on') }}

    - name: "Outdoor Sump Connected"
      unique_id: outdoor_sump_connected
      device_class: connectivity
      state: >
        {{ expand(device_entities('a96f24f8dfbc4b3d6561610173838a76'))
            | rejectattr('domain', 'in', ['device_tracker', 'update'])
            | map(attribute='entity_id')
            | select('has_value') | list | count > 0 }}

    - name: "Outdoor Sump Connected Alert"
      unique_id: outdoor_sump_connected_alert
      icon: mdi:flash-alert
      device_class: problem
      delay_on: 60 # ignore temporary disconnection
      state: >
        {{ is_state('binary_sensor.outdoor_sump_connected', 'off')
              and is_state('input_boolean.appliance_alerts', 'on') }}

    - name: "Outdoor Sump"
      unique_id: outdoor_sump
      icon: mdi:pump
      device_class: running
      state: "{{ states('sensor.outdoor_sump_power') | int > 10 }}"
      availability: "{{ is_number(states('sensor.outdoor_sump_power')) }}"

    - name: "Outdoor Sump Alert"
      unique_id: outdoor_sump_alert
      icon: mdi:flash-alert
      device_class: problem
      state: >
        {{ (not has_value('switch.outdoor_sump')
              or states('sensor.outdoor_sump_power') | float(-1) > 600
              or is_state('binary_sensor.outdoor_sump_overpowering', 'on')
              or is_state('binary_sensor.outdoor_sump_cycle_alert', 'on')
              or states('sensor.outdoor_sump_device_temperature') | float(-1) > 55
              or is_state('binary_sensor.outdoor_sump_overheating', 'on')
              or is_state('binary_sensor.outdoor_sump_power_alert', 'on'))
            and is_state('binary_sensor.outdoor_sump_connected', 'on')
            and is_state('input_boolean.appliance_alerts', 'on') }}
