###################################################################################################
## Templates - EnvCan
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: time_pattern
      minutes: "/15"
  action:
    - action: environment_canada.get_forecasts
      target:
        entity_id: weather.windsor_forecast
      response_variable: envcan_forecast
  sensor:
    - name: "EnvCan Forecast"
      unique_id: envcan_forecast
      picture: !secret ENVCAN_ICON
      state: "{{ now() }}"
      attributes:
        hourly_forecast: "{{ envcan_forecast['weather.windsor_forecast']['hourly_forecast'] }}"
        daily_forecast: "{{ envcan_forecast['weather.windsor_forecast']['daily_forecast'] }}"

- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: time_pattern
      minutes: "/1"
  binary_sensor:
    - name: "EnvCan Integration Connected"
      unique_id: envcan_integration_connected
      picture: !secret ENVCAN_ICON
      device_class: connectivity
      state: "{{ integration_entities('environment_canada') | select('has_value') | list | count > 0 }}"

- binary_sensor:
    - name: "EnvCan Connected Alert"
      unique_id: envcan_connected_alert
      device_class: problem
      delay_on: 300
      state: >
        {{ not is_state('binary_sensor.envcan_integration_connected', 'on')
            and is_state('input_boolean.weather_alerts', 'on') }}

    - name: "EnvCan Weather Alert"
      unique_id: envcan_weather_alert
      icon: mdi:weather-hurricane
      device_class: safety
      state: >
        {{ (states('sensor.windsor_warnings') | int(-1) > 0)
              or states('sensor.windsor_watches') | int(-1) > 0
              or states('sensor.windsor_statements') | int(-1) > 0
              or states('sensor.windsor_advisory') | int(-1) > 0
            and is_state('input_boolean.weather_alerts', 'on') }}
      attributes:
        severity: >
          {% if states('sensor.windsor_warnings') | int(-1) > 0 %} warning
          {% elif states('sensor.windsor_watches') | int(-1) > 0 %} watch
          {% elif states('sensor.windsor_advisory') | int(-1) > 0 %} advisory
          {% elif states('sensor.windsor_statements') | int(-1) > 0 %} statement
          {% else %} {{ none }}
          {% endif %}
        title: >
          {% set severity = state_attr(this.entity_id, 'severity') %}
          {% if severity == 'warning' %} {{ state_attr('sensor.windsor_warnings', 'alert_1') | title }}
          {% elif severity == 'watch' %} {{ state_attr('sensor.windsor_watches', 'alert_1') | title }}
          {% elif severity == 'advisory' %} {{ state_attr('sensor.windsor_advisory', 'alert_1') | title }}
          {% elif severity == 'statement' %} {{ state_attr('sensor.windsor_statements', 'alert_1') | title }}
          {% else %} {{ none }}
          {% endif %}
        description: > #ISSUE no alerts in pirateweather
          {% set desc = state_attr('sensor.pirateweather_alerts', 'description') %}
          {{ desc.split('###')[0] if desc != none else none }}
        alert_time: >
          {% set severity = state_attr(this.entity_id, 'severity') %}
          {% if severity == 'warning' %} {{ state_attr('sensor.windsor_warnings', 'alert_time_1') | title }}
          {% elif severity == 'watch' %} {{ state_attr('sensor.windsor_watches', 'alert_time_1') | title }}
          {% elif severity == 'advisory' %} {{ state_attr('sensor.windsor_advisory', 'alert_time_1') | title }}
          {% elif severity == 'statement' %} {{ state_attr('sensor.windsor_statements', 'alert_time_1') | title }}
          {% else %} {{ none }}
          {% endif %}
        #ISSUE no alerts in pirateweather
        expires: "{{ as_datetime(state_attr('sensor.pirateweather_alerts', 'expires'), none) }}"
        expires_text: >
          {% from 'schedule.jinja' import day_or_date %}
          {% set expires = state_attr(this.entity_id, 'expires') %}
          {{ day_or_date(expires, true, true, true) if expires != none else none }}

- sensor:
    - name: "Windsor Apparent Temperature"
      unique_id: windsor_apparent_temperature
      icon: mdi:thermometer
      device_class: temperature
      state_class: measurement
      unit_of_measurement: "Â°C"
      state: >
        {% if is_number(states('sensor.windsor_humidex')) %} {{ states('sensor.windsor_humidex') | int }}
        {% elif is_number(states('sensor.windsor_wind_chill')) %} {{ states('sensor.windsor_wind_chill') | int }}
        {% elif is_number(states('sensor.windsor_temperature')) %} {{ states('sensor.windsor_temperature') | int }}
        {% else %} {{ none }}
        {% endif %}
      availability: >
        {{ is_number(states('sensor.windsor_humidex'))
            or is_number(states('sensor.windsor_wind_chill'))
            or is_number(states('sensor.windsor_temperature')) }}
