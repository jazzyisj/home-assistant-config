###############################################################################
## Templates
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: time_pattern
      minutes: "/1"
  binary_sensor:
    - name: "Tempest Integration Connected"
      unique_id: tempest_integration_connected
      picture: !secret WF_LOCAL_ICON
      device_class: connectivity
      state: >
        {% set threshold = now() - timedelta(minutes=30) %}
        {{ expand(device_entities('a3fa16d98ad120df027e224c451a7fed'))
              | selectattr('last_reported', 'gt', threshold) | list | count > 0
            and is_state('binary_sensor.weatherflow_to_mqtt_running', 'on') }}

- binary_sensor:
    - name: "Weatherflow Integration Connected"
      unique_id: weatherflow_integration_connected
      picture: !secret WF_CLOUD_ICON
      device_class: connectivity
      state: "{{ is_state('binary_sensor.home_binary_sensors_data_available', 'on') }}"

    - name: "Weatherflow Connected Alert"
      unique_id: weatherflow_connected_alert
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.weatherflow_integration_connected', 'off')
            and is_state('input_boolean.weather_alerts', 'on') }}

    - name: "Tempest Connected Alert"
      unique_id: tempest_connected_alert
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.tempest_integration_connected', 'off')
            and is_state('input_boolean.weather_alerts', 'on') }}

- sensor:
    - name: "Weatherflow High Temperature" #TEMP while testing
      unique_id: weatherflow_high_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: "{{ state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].temperature }}"
      availability: >
        {{ state_attr('sensor.weather_forecasts', 'weatherflow_daily') != none
            and state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0] is defined
            and state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].temperature is defined
            and is_number(state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].temperature) }}

    - name: "Weatherflow Low Temperature" #TEMP while testing
      unique_id: weatherflow_low_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: "{{ state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].templow }}"
      availability: >
        {{ state_attr('sensor.weather_forecasts', 'weatherflow_daily') != none
            and state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0] is defined
            and state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].templow is defined
            and is_number(state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].templow) }}

    - name: "WeatherFlow Precipitation Probability" #TEMP while testing
      unique_id: weatherflow_precipitation_probability
      icon: mdi:weather-rainy
      unit_of_measurement: "%"
      state: "{{ state_attr('sensor.weather_forecasts', 'weatherflow_hourly')[0]['precipitation_probability'] | int(-1) }}"
      availability: >
        {{ state_attr('sensor.weather_forecasts', 'weatherflow_hourly') != none
            and state_attr('sensor.weather_forecasts', 'weatherflow_hourly')[0] is defined
            and state_attr('sensor.weather_forecasts', 'weatherflow_hourly')[0].precipitation_probability is defined
            and is_number(state_attr('sensor.weather_forecasts', 'weatherflow_hourly')[0]['precipitation_probability']) }}
