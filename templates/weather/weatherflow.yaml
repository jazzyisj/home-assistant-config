###################################################################################################
## Templates
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: time_pattern
      minutes: "/1"
  binary_sensor:
    - name: "Tempest Integration Connected"
      unique_id: tempest_integration_connected
      picture: !secret WF_LOCAL_ICON
      device_class: connectivity
      state: >
        {% set threshold = now() - timedelta(minutes=30) %}
        {{ expand(device_entities('a3fa16d98ad120df027e224c451a7fed'))
              | selectattr('last_reported', 'gt', threshold) | list | count > 0
            and is_state('binary_sensor.weatherflow_to_mqtt_running', 'on') }}

- binary_sensor:
    - name: "Weatherflow Integration Connected"
      unique_id: weatherflow_integration_connected
      picture: !secret WF_CLOUD_ICON
      device_class: connectivity
      state: "{{ is_state('binary_sensor.home_binary_sensors_data_available', 'on') }}"

    - name: "Weatherflow Connected Alert"
      unique_id: weatherflow_connected_alert
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.weatherflow_integration_connected', 'off')
            and is_state('input_boolean.weather_alerts', 'on') }}

    - name: "Tempest Connected Alert"
      unique_id: tempest_connected_alert
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.tempest_integration_connected', 'off')
            and is_state('input_boolean.weather_alerts', 'on') }}

- sensor:
    - name: "Weatherflow High Temperature" #TEST 
      unique_id: weatherflow_high_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: Â°C
      state: "{{ state_attr('sensor.daily_weatherflow', 'forecast')[0].temperature }}"
      availability: >
        {{ state_attr('sensor.daily_weatherflow', 'forecast') != none
            and state_attr('sensor.daily_weatherflow', 'forecast')[0] is defined
            and state_attr('sensor.daily_weatherflow', 'forecast')[0].temperature is defined
            and is_number(state_attr('sensor.daily_weatherflow', 'forecast')[0].temperature) }}

    - name: "Weatherflow Low Temperature" #TEST
      unique_id: weatherflow_low_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: Â°C
      state: "{{ state_attr('sensor.daily_weatherflow', 'forecast')[0].templow }}"
      availability: >
        {{ state_attr('sensor.daily_weatherflow', 'forecast') != none
            and state_attr('sensor.daily_weatherflow', 'forecast')[0] is defined
            and state_attr('sensor.daily_weatherflow', 'forecast')[0].templow is defined
            and is_number(state_attr('sensor.daily_weatherflow', 'forecast')[0].templow) }}

    - name: "WeatherFlow Precipitation Probability" #TEST
      unique_id: weatherflow_precipitation_probability
      icon: mdi:weather-rainy
      unit_of_measurement: "%"
      state: "{{ state_attr('sensor.hourly_weatherflow', 'forecast')[0]['precipitation_probability'] | int(-1) }}"
      availability: >
        {{ state_attr('sensor.hourly_weatherflow', 'forecast') != none
            and state_attr('sensor.hourly_weatherflow', 'forecast')[0] is defined
            and state_attr('sensor.hourly_weatherflow', 'forecast')[0].precipitation_probability is defined
            and is_number(state_attr('sensor.hourly_weatherflow', 'forecast')[0]['precipitation_probability']) }}

    - name: "Daily Tempest"
      unique_id: daily_tempest
      state: "{{ states('sensor.tempest_hub_weather') }}"
      attributes:
        temperature: "{{ states('sensor.tempest_temperature') }}"
        dew_point: "{{ states('sensor.tempest_dew_point') }}"
        temperature_unit: "{{ state_attr('sensor.tempest_temperature', 'unit_of_measurement') }}"
        humidity: "{{ states('sensor.tempest_humidity') }}"
        pressure: "{{ states('sensor.tempest_sea_level_pressure') }}"
        pressure_unit: "{{ state_attr('sensor.tempest_sea_level_pressure', 'unit_of_measurement') }}"
        wind_bearing: "{{ states('sensor.tempest_wind_bearing') }}"
        wind_gust_speed: "{{ states('sensor.tempest_wind_gust') }}"
        wind_speed: "{{ states('sensor.tempest_wind_speed') }}"
        wind_speed_unit: "{{ state_attr('sensor.tempest_wind_speed', 'unit_of_measurement') }}"
        visibility: "{{ states('sensor.tempest_visibility') }}"
        visibility_unit: "{{ state_attr('sensor.tempest_visibility', 'unit_of_measurement') }}"
        precipitation: "{{ states('sensor.tempest_rain_today') }}"
        precipitation_unit: "{{ state_attr('sensor.tempest_rain_today', 'unit_of_measurement') }}"
        updated: "{{ utcnow() }}"
        forecast: "{{ state_attr('sensor.tempest_hub_weather', 'daily_forecast') }}"

    - name: "Hourly Tempest"
      unique_id: hourly_tempest
      state: "{{ states('sensor.tempest_hub_weather') }}"
      attributes:
        temperature: "{{ states('sensor.tempest_temperature') }}"
        dew_point: "{{ states('sensor.tempest_dew_point') }}"
        temperature_unit: "{{ state_attr('sensor.tempest_temperature', 'unit_of_measurement') }}"
        humidity: "{{ states('sensor.tempest_humidity') }}"
        pressure: "{{ states('sensor.tempest_sea_level_pressure') }}"
        pressure_unit: "{{ state_attr('sensor.tempest_sea_level_pressure', 'unit_of_measurement') }}"
        wind_bearing: "{{ states('sensor.tempest_wind_bearing') }}"
        wind_gust_speed: "{{ states('sensor.tempest_wind_gust') }}"
        wind_speed: "{{ states('sensor.tempest_wind_speed') }}"
        wind_speed_unit: "{{ state_attr('sensor.tempest_wind_speed', 'unit_of_measurement') }}"
        visibility: "{{ states('sensor.tempest_visibility') }}"
        visibility_unit: "{{ state_attr('sensor.tempest_visibility', 'unit_of_measurement') }}"
        precipitation: "{{ states('sensor.tempest_rain_today') }}"
        precipitation_unit: "{{ state_attr('sensor.tempest_rain_today', 'unit_of_measurement') }}"
        updated: "{{ utcnow() }}"
        forecast: "{{ state_attr('sensor.tempest_hub_weather', 'hourly_forecast') }}"