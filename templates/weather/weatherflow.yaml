###############################################################################
## Templates
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: sensor.time
  binary_sensor:
    - name: "Weatherflow Cloud Connected"
      unique_id: weatherflow_cloud_connected
      picture: !secret WF_CLOUD_ICON
      device_class: connectivity
      state: "{{ integration_entities('weatherflow_forecast') | select('has_value') | list | count > 0 }}"

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: sensor.time
  binary_sensor:
    - name: "Weatherflow Local Connected" #ISSUE sensors retaining values when not running
      unique_id: weatherflow_local_connected
      picture: !secret WF_LOCAL_ICON
      device_class: connectivity
      state: >
        {{ is_state('binary_sensor.weatherflow_to_mqtt_running', 'on')
            and has_value('sensor.tempest_st_00057689_status') }}

- binary_sensor:
    - name: "Weatherflow Cloud Connected Alert"
      unique_id: weatherflow_cloud_connected_alert
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.weatherflow_cloud_connected', 'off')
            and is_state('input_boolean.weather_alerts', 'on') }}

    - name: "Weatherflow Local Connected Alert"
      unique_id: weatherflow_local_connected_alert
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.weatherflow_local_connected', 'off')
            and is_state('input_boolean.weather_alerts', 'on') }}

- sensor:
    - name: "Weatherflow High Temperature" #TEMP while testing
      unique_id: weatherflow_high_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: "{{ state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].temperature }}"
      availability: >
        {{ state_attr('sensor.weather_forecasts', 'weatherflow_daily') != none
            and state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0] is defined
            and state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].temperature is defined
            and is_number(state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].temperature) }}

    - name: "Weatherflow Low Temperature" #TEMP while testing
      unique_id: weatherflow_low_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: "{{ state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].templow }}"
      availability: >
        {{ state_attr('', 'forecast') != none
            and state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0] is defined
            and state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].templow is defined
            and is_number(state_attr('sensor.weather_forecasts', 'weatherflow_daily')[0].templow) }}

    - name: "WeatherFlow Precipitation Probability" #TEMP while testing
      unique_id: weatherflow_precipitation_probability
      icon: mdi:weather-rainy
      unit_of_measurement: "%"
      state: "{{ state_attr('sensor.weather_forecasts', 'weatherflow_hourly')[0]['precipitation_probability'] | int(-1) }}"
      availability: >
        {{ state_attr('sensor.weather_forecasts', 'weatherflow_hourly')[0] is defined
            and state_attr('sensor.weather_forecasts', 'weatherflow_hourly')[0].precipitation_probability is defined
            and is_number(state_attr('sensor.weather_forecasts', 'weatherflow_hourly')[0]['precipitation_probability']) }}
