###############################################################################
## Templates - OpenUV # https://www.openuv.io/uvindex
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: sensor.time
  binary_sensor:
    - name: "OpenUV Connected"
      unique_id: openuv_connected
      icon: mdi:weather-sunny-alert
      device_class: connectivity
      state: "{{ integration_entities('openuv') | select('has_value') | list | count > 0 }}"

- binary_sensor:
    - name: "OpenUV Connected Alert"
      unique_id: openuv_connected_alert
      icon: mdi:weather-sunny-alert
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.openuv_connected', 'off')
            and is_state('input_boolean.weather_alerts', 'on') }}

    - name: "UV Risk Alert"
      unique_id: uv_risk_alert
      icon: mdi:brightness-6
      state: >
        {{ states('sensor.uv_risk_today') == 'Very High'
            and is_state('input_boolean.weather_alerts', 'on') }}
      availability: "{{ has_value('sensor.uv_risk_today') }}"

- sensor:
    - name: "UV Risk Today"
      unique_id: uv_risk_today
      icon: mdi:weather-sunny
      state: >
        {% set level = states('sensor.max_uv_index') | int(0) %}
        {% if is_number(level) %}
          {% if level < 3 %} Low
          {% elif level < 5 %} Moderate
          {% elif level < 7 %} Moderate High
          {% elif level < 9 %} High
          {% else %} Very High
          {% endif %}
        {% endif %}
      availability: "{{ is_number(states('sensor.max_uv_index')) }}"

    - name: "UV Index"
      unique_id: uv_index
      icon: mdi:brightness-6
      state_class: measurement
      state: "{{ states('sensor.current_uv_index') | float }}"
      availability: "{{ is_number(states('sensor.current_uv_index')) }}"
