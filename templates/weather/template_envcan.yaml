###############################################################################
## Templates - EnvCan
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: weather.windsor
      from:
        - unknown
        - unavailable

    - platform: state
      entity_id: weather.windsor
      to:
        - unknown
        - unavailable
  binary_sensor:
    - name: "EnvCan Connected"
      unique_id: envcan_connected
      icon: mdi:weather-partly-snowy-rainy
      device_class: connectivity
      state: >
        {{ expand(integration_entities('environment_canada'))
            |rejectattr('state','in',['unknown','unavailable'])|list|count > 0 }}

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id:
        - binary_sensor.envcan_connected
        - input_boolean.weather_alerts
      to:
        - "on"
        - "off"
  binary_sensor:
    - name: "EnvCan Connected Alert"
      unique_id: envcan_connected_alert
      icon: mdi:weather-partly-snowy-rainy
      device_class: problem
      delay_on: 60
      state: >
        {{ not is_state('binary_sensor.envcan_connected','on')
            and is_state('input_boolean.weather_alerts','on') }}

- binary_sensor:
    - name: "EnvCan Weather Alert"
      unique_id: envcan_weather_alert
      icon: mdi:weather-hurricane
      device_class: safety
      state: >
        {{ (states('sensor.windsor_statements')|int(-1) > 0
              or states('sensor.windsor_advisories')|int(-1) > 0
              or states('sensor.windsor_watches')|int(-1) > 0
              or states('sensor.windsor_warnings')|int(-1) > 0)
            and is_state('input_boolean.weather_alerts','on') }}
      attributes:
        severity: >
          {% if states('sensor.windsor_warnings')|int(-1) > 0 %} warning
          {% elif states('sensor.windsor_watches')|int(-1) > 0 %} watch
          {% elif states('sensor.windsor_advisories')|int(-1) > 0 %} advisory
          {% elif states('sensor.windsor_statements')|int(-1) > 0 %} statement
          {% else %} {{ none }}
          {% endif %}
        title: >
          {% set severity = state_attr(this.entity_id,'severity') %}
          {% if severity == 'warning' %} {{ state_attr('sensor.windsor_warnings','alert_1')|title }}
          {% elif severity == 'watch' %} {{ state_attr('sensor.windsor_watches','alert_1')|title }}
          {% elif severity == 'advisory' %} {{ state_attr('sensor.windsor_advisories','alert_1')|title }}
          {% elif severity == 'statement' %} {{ state_attr('sensor.windsor_statements','alert_1')|title }}
          {% else %} {{ none }}
          {% endif %}
        description: > #VERIFY waiting for alert
          {% set desc = state_attr('sensor.pirateweather_alerts','description') %}
          {{ desc.split('###')[0] if desc != none else none }}
        alert_time: >
          {% set severity = state_attr(this.entity_id,'severity') %}
          {% if severity == 'warning' %} {{ state_attr('sensor.windsor_warnings','alert_time_1')|title }}
          {% elif severity == 'watch' %} {{ state_attr('sensor.windsor_watches','alert_time_1')|title }}
          {% elif severity == 'advisory' %} {{ state_attr('sensor.windsor_advisories','alert_time_1')|title }}
          {% elif severity == 'statement' %} {{ state_attr('sensor.windsor_statements','alert_time_1')|title }}
          {% else %} {{ none }}
          {% endif %}
        expires: > #VERIFY waiting for alert
          {% set expires = state_attr('sensor.pirateweather_alerts','expires') %}
          {% if expires not in [none,''] %}
            {% set expires = expires|as_datetime|as_local %}
          {% endif %}
          {{ expires }}
        expires_text: >
          {% set expires = state_attr(this.entity_id,'expires') %}
          {% if expires not in [none,''] %}
            {% set expires = expires|as_datetime|as_local %}
            {% set today = expires.day == now().day %}
            {% set tomorrow = expires.day == (expires + timedelta(days=1)).day %}
            {% set until = 'today' if today else 'tomorrow' if tomorrow else expires.strftime('%A') %}
            {{ until ~ ' at ' ~ expires.strftime('%-I:%M %p') }}
          {% endif %}
          {{ expires }}

- sensor:
    - name: "Windsor Apparent Temperature"
      unique_id: windsor_apparent_temperature
      icon: mdi:thermometer
      device_class: temperature
      state_class: measurement
      unit_of_measurement: "Â°C"
      state: >
        {% if is_number(states('sensor.windsor_humidex')) %} {{ states('sensor.windsor_humidex')|int }}
        {% elif is_number(states('sensor.windsor_wind_chill')) %} {{ states('sensor.windsor_wind_chill')|int }}
        {% elif is_number(states('sensor.windsor_temperature')) %} {{ states('sensor.windsor_temperature')|int }}
        {% else %} {{ none }}
        {% endif %}
      availability: >
        {{ is_number(states('sensor.windsor_humidex'))
            or is_number(states('sensor.windsor_wind_chill'))
            or is_number(states('sensor.windsor_temperature')) }}
