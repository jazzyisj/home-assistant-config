###############################################################################
## Templates - EnvCan
###############################################################################
- binary_sensor:
    - name: "EnvCan Connected"
      unique_id: envcan_connected
      icon: "{{ 'mdi:weather-partly-snowy-rainy' if is_state('binary_sensor.envcan_connected','on') else 'mdi:alert-circle' }}"
      device_class: connectivity
      state: "{{ states('sensor.envcan_forecast')|lower not in ['unknown','unavailable','none'] }}"

    - name: "EnvCan Connected Alert"
      unique_id: envcan_connected_alert
      icon: mdi:weather-partly-snowy-rainy
      state: >
        {{ not is_state('binary_sensor.envcan_connected','on')
            and is_state('input_boolean.weather_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: "EnvCan Weather Alert"
      unique_id: envcan_weather_alert
      icon: mdi:weather-hurricane
      device_class: safety
      state: >
        {{ states('sensor.envcan_statements')|lower not in ['','unknown','unavailable','none']
            or states('sensor.envcan_advisories')|lower not in ['','unknown','unavailable','none']
            or states('sensor.envcan_watches')|lower not in ['','unknown','unavailable','none']
            or states('sensor.envcan_warnings')|lower not in ['','unknown','unavailable','none'] }}
      attributes:
        title: >
          {% set severity = state_attr('binary_sensor.envcan_weather_alert','severity') %}
          {% if severity == 'warning' %}{{ states('sensor.envcan_warnings')|title }}
          {% elif severity == 'watch' %}{{ states('sensor.envcan_watches')|title }}
          {% elif severity == 'advisory' %}{{ states('sensor.envcan_advisories')|title }}
          {% elif severity == 'statement' %}{{ states('sensor.envcan_statements')|title }}
          {% endif %}
        severity: >
          {% if states('sensor.envcan_warnings')|lower not in ['','unknown','unavailable','none'] %} warning
          {% elif states('sensor.envcan_watches')|lower not in ['','unknown','unavailable','none'] %} watch
          {% elif states('sensor.envcan_advisories')|lower not in ['','unknown','unavailable','none'] %} advisory
          {% elif states('sensor.envcan_statements')|lower not in ['','unknown','unavailable','none'] %} statement
          {% endif %}
        description: > #DARKSKY
            {% if state_attr('sensor.dark_sky_alerts','description_1')|lower not in ['','unknown','unavailable','none'] %}
            {{ state_attr('sensor.dark_sky_alerts','description_1').split('###')[0] }}
            {% endif %}
        expires: > #DARKSKY
            {% if state_attr('sensor.dark_sky_alerts','description_1')|lower not in ['','unknown','unavailable','none'] %}
            {{ state_attr('sensor.dark_sky_alerts','expires_1')|timestamp_local|as_datetime }}
            {% endif %}
        expires_text: >
          {% if state_attr('binary_sensor.envcan_weather_alert','expires')|lower not in ['','unknown','unavailable','none'] %}
            {% set ends = state_attr('binary_sensor.envcan_weather_alert','expires')|as_datetime %}
            {% set today = ends.day == now().day %}
            {% set tomorrow = ends.day  == now().day %}
            {% set until = 'today' if today else ('tomorrow' if tomorrow else ends.strftime("%A")) %}
            {{ until ~ ' at ' ~ ends.strftime('%-I:%M %p') }}
          {% endif %}
      availability: "{{ is_state('binary_sensor.envcan_connected','on') }}"
