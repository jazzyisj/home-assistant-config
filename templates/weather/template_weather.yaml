###############################################################################
## Templates - Weather
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: sensor.time
  binary_sensor:
    - name: "Tomorrow IO Connected"
      unique_id: tomorrow_io_connected
      icon: mdi:weather-sunny-alert
      device_class: connectivity
      state: "{{ integration_entities('tomorrowio')|select('has_value')|list|count > 0 }}"

- binary_sensor:
    - name: "Tomorrow.io Connected Alert"
      unique_id: tomorrow_io_connected_alert
      icon: mdi:weather-partly-snowy-rainy
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.tomorrow_io_connected','off')
            and is_state('input_boolean.weather_alerts','on') }}

    - name: "GDACS Connected"
      unique_id: gdacs_connected
      icon: mdi:home-flood
      device_class: connectivity
      #ISSUE sensor.gdacs_alerts keeps values when WAN down
      state: "{{ integration_entities('gdacs')|select('has_value')|list|count > 0 }}"

    - name: "GDACS Connected Alert"
      unique_id: gdacs_connected_alert
      icon: mdi:home-flood
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.gdacs_connected','off')
            and is_state('input_boolean.weather_alerts','on') }}

    - name: "Weather LED Active"
      unique_id: weather_led_alert
      state: >
        {{ is_state('binary_sensor.envcan_weather_alert','on')
            or is_state('binary_sensor.outdoor_low_temperature_alert','on')
            or is_state('binary_sensor.outdoor_high_temperature_alert','on')
            or is_state('binary_sensor.storm_approaching_alert','on')
            or is_state('binary_sensor.workday_rain','on') }}

    - name: "Outdoor High Temperature Alert"
      unique_id: outdoor_high_temperature_alert
      # prevent multiple alerts when temp hovering around threshold
      delay_on: 900
      delay_off: 900
      state: >
        {{ states('sensor.outdoor_apparent_temperature')|int
              > states('input_number.outdoor_high_temperature_threshold')|int
            and is_state('input_boolean.weather_alerts','on') }}
      availability: "{{ is_number(states('sensor.outdoor_apparent_temperature')) }}"

    - name: "Outdoor Low Temperature Alert"
      unique_id: outdoor_low_temperature_alert
      # prevent multiple alerts when temp hovering around threshold
      delay_on: 900
      delay_off: 900
      state: >
        {{ states('sensor.outdoor_apparent_temperature')|int
              < states('input_number.outdoor_low_temperature_threshold')|int
            and is_state('input_boolean.weather_alerts','on') }}
      availability: "{{ is_number(states('sensor.outdoor_apparent_temperature')) }}"

    - name: "Outdoor Temperature Alert"
      unique_id: outdoor_temperature_alert # for weather card
      icon: >
        {% if is_state('binary_sensor.outdoor_high_temperature_alert','on') %} mdi:thermometer-alert
        {% elif is_state('binary_sensor.outdoor_low_temperature_alert','on') %} mdi:thermometer-alert
        {% else %} mdi:thermometer
        {% endif %}
      state: >
        {{ is_state('binary_sensor.outdoor_high_temperature_alert','on')
            or is_state('binary_sensor.outdoor_low_temperature_alert','on') }}
      attributes:
        type: >
          {% if is_state('binary_sensor.outdoor_high_temperature_alert','on') %} Heat
          {% elif is_state('binary_sensor.outdoor_low_temperature_alert','on') %} Cold
          {% else %} Off
          {% endif %}

    - name: "Strong Wind Alert"
      unique_id: strong_wind_alert
      icon: mdi:weather-windy
      delay_on: 20
      delay_off: "{{ iif(now() - states('sensor.uptime')|as_datetime < timedelta(minutes=5),0,14400) }}"
      state: >
        {% set thresh = states('input_number.wind_alert_threshold')|int %}
        {{ (states('sensor.wind_speed')|int(-1) >= thresh or states('sensor.wind_gust')|int(-1) >= thresh)
            and is_state('input_boolean.weather_alerts','on') }}
      availability: "{{ is_number(states('sensor.wind_speed')) or is_number(states('sensor.wind_gust')) }}"

    - name: "Storm Aproaching Alert"
      unique_id: storm_approaching_alert
      icon: mdi:weather-lightning-rainy
      delay_off: "{{ iif(now() - states('sensor.uptime')|as_datetime < timedelta(minutes=5),0,14400) }}"
      state: >
        {{ states('sensor.precipitation_probability')|int >= 30
            and states('sensor.nearest_storm_distance')|int < 5
            and is_state('input_boolean.weather_alerts','on') }}
      availability: >
        {{ is_number(states('sensor.precipitation_probability'))
            and is_number(states('sensor.nearest_storm_distance')) }}

    # next 12 hours
    - name: "Rain Soon"
      unique_id: rain_soon
      icon: mdi:weather-pouring
      state: >
        {% set found = namespace(value=0) %}
        {% if is_state('sensor.precipitation_type','rain') %}
          {% set threshold = 25 %}
          {% set forecast = state_attr('weather.home_hourly','forecast') %}
          {% for item in forecast %}
            {% if loop.index0 < 12 and item.precipitation_probability|int(-1) >= threshold %}
              {% set found.value = 1 %}
            {% endif %}
          {% endfor %}
        {% endif %}
        {{ found.value == 1 }}
      availability: >
        {{ state_attr('weather.home_hourly','forecast') != none
            and state_attr('weather.home_hourly','forecast')[0] is defined }}

    # sorted by alert_level then effective date
    - name: "GDACS Alert Active"
      unique_id: gdacs_alert_active
      icon: mdi:pulse
      state: "{{ states('sensor.gdacs_alerts')|int(-1) > 0 }}"
      attributes:
        last_alert: > # sensor can be > 0 but no geo_location entities
          {% if states.geo_location|selectattr('attributes.source','eq','gdacs')|list|count|int(-1) > 0 %}
            {{ states.geo_location|selectattr('attributes.source','eq','gdacs')
                |sort(reverse=true,attribute='attributes.from_date')
                |map(attribute='attributes.friendly_name')|first }}
          {% endif %}
        last_alert_desc: >
          {% if states.geo_location|selectattr('attributes.source','eq','gdacs')|list|count|int(-1) > 0 %}
            {{ states.geo_location|selectattr('attributes.source','eq','gdacs')
                |sort(reverse=true,attribute='attributes.from_date')
                |map(attribute='attributes.description')|first }}
          {% endif %}
        last_alert_date: >
          {% if states.geo_location|selectattr('attributes.source','eq','gdacs')|list|count|int(-1) > 0 %}
            {% set last_date = states.geo_location|selectattr('attributes.source','eq','gdacs')
                |sort(reverse=true,attribute='attributes.from_date')
                |map(attribute='attributes.from_date')|first %}
            {{ last_date|as_timestamp(none)|timestamp_custom('%Y-%m-%d',true,none) }}
          {% endif %}
        last_alert_severity: >
          {% if states.geo_location|selectattr('attributes.source','eq','gdacs')|list|count|int(-1) > 0 %}
            {{ states.geo_location|selectattr('attributes.source','eq','gdacs')
                |sort(reverse=true, attribute='attributes.from_date')
                |map(attribute='attributes.alert_level')|first }}
          {% endif %}
      availability: "{{ has_value('sensor.gdacs_alerts') }}"

- sensor:
    - name: "Outdoor Temperature Trend"
      unique_id: outdoor_temperature_trend
      icon: > #BUG icon template not working in glance card #BUGFIX do icon here
        {% if is_state('binary_sensor.outdoor_high_temperature_alert','on') %} mdi:snowflake-thermometer
        {% elif is_state('binary_sensor.outdoor_low_temperature_alert','on') %} mdi:sun-thermometer
        {% elif is_state('binary_sensor.temperature_rising','on') %} mdi:thermometer-chevron-up
        {% elif is_state('binary_sensor.temperature_falling','on') %} mdi:thermometer-chevron-down
        {% else %} mdi:thermometer
        {% endif %}
      state: >
        {% if is_state('binary_sensor.temperature_rising','on') %} Rising
        {% elif is_state('binary_sensor.temperature_falling','on') %} Falling
        {% else %} Steady
        {% endif %}
      availability: >
        {{ has_value('binary_sensor.temperature_rising')
            and has_value('binary_sensor.temperature_falling') }}

    - name: "Moon Phase"
      unique_id: moon_phase
      picture: >
        {% if is_state('sensor.moon','new_moon') %} /local/images/entity_icons/moon_phases/new_moon.jpg
        {% elif is_state('sensor.moon','waxing_crescent') %} /local/images/entity_icons/moon_phases/waxing_crescent.jpg
        {% elif is_state('sensor.moon','first_quarter') %} /local/images/entity_icons/moon_phases/first_quarter.jpg
        {% elif is_state('sensor.moon','waxing_gibbous') %} /local/images/entity_icons/moon_phases/waxing_gibbous.jpg
        {% elif is_state('sensor.moon','full_moon') %} /local/images/entity_icons/moon_phases/full_moon.jpg
        {% elif is_state('sensor.moon','waning_gibbous') %} /local/images/entity_icons/moon_phases/waning_gibbous.jpg
        {% elif is_state('sensor.moon','last_quarter') %} /local/images/entity_icons/moon_phases/last_quarter.jpg
        {% elif is_state('sensor.moon','waning_crescent') %} /local/images/entity_icons/moon_phases/waning_crescent.jpg
        {% endif %}
      state: "{{ states('sensor.moon')|replace('_',' ')|title }}"

      # "clear-night": "Clear, night",
      # "cloudy": "Cloudy",
      # "exceptional": "Exceptional",
      # "fog": "Fog",
      # "hail": "Hail",
      # "lightning": "Lightning",
      # "lightning-rainy": "Lightning, rainy",
      # "partlycloudy": "Partly cloudy",
      # "pouring": "Pouring",
      # "rainy": "Rainy",
      # "snowy": "Snowy",
      # "snowy-rainy": "Snowy, rainy",
      # "sunny": "Sunny",
      # "windy": "Windy",
      # "windy-variant": "Windy"

    # - envcan current condition list
    #   ICON_CONDITION_MAP = {
    #       ATTR_CONDITION_SUNNY: [0, 1],
    #       ATTR_CONDITION_CLEAR_NIGHT: [30, 31],
    #       ATTR_CONDITION_PARTLYCLOUDY: [2, 3, 4, 5, 22, 32, 33, 34, 35],
    #       ATTR_CONDITION_CLOUDY: [10],
    #       ATTR_CONDITION_RAINY: [6, 9, 11, 12, 28, 36],
    #       ATTR_CONDITION_LIGHTNING_RAINY: [19, 39, 46, 47],
    #       ATTR_CONDITION_POURING: [13],
    #       ATTR_CONDITION_SNOWY_RAINY: [7, 14, 15, 27, 37],
    #       ATTR_CONDITION_SNOWY: [8, 16, 17, 18, 25, 26, 38, 40],
    #       ATTR_CONDITION_WINDY: [43],
    #       ATTR_CONDITION_FOG: [20, 21, 23, 24, 44],
    #       ATTR_CONDITION_HAIL: [26, 27],
    #   }

    #IDEA add icons for extra values - req custom weather card
    - name: "Current Condition"
      unique_id: current_condition
      icon: mdi:weather-partly-snowy-rainy
      state: >
        {% if has_value('weather.weatherflow_local_daily') %}
          {% set condition = states('weather.weatherflow_local_daily') %}
        {% elif has_value('weather.weatherflow_day_based_forecast') %}
          {% set condition = states('weather.weatherflow_day_based_forecast') %}
        {% elif has_value('weather.windsor') %}
          {% set condition = states('weather.windsor') %}
        {% endif %}

        {% if condition|lower == 'clear' and is_state('sensor.day_night','Day') %} sunny
        {% elif condition|lower == 'clear' and is_state('sensor.day_night','Night') %} clear-night
        {% elif condition|lower in ['mainly clear','mainly sunny','clear-day'] %} sunny
        {% elif condition|lower == 'mist' %} fog
        {% elif condition|lower in ['haze','partly cloudy','partly-cloudy-day','partly-cloudy-night'] %} partlycloudy
        {% elif condition|lower == 'mostly cloudy' %} cloudy
        {% elif condition|lower in ['light rain','rain'] %} rainy
        {% elif condition|lower in ['light snow','snow'] %} snowy
        {% elif condition|lower == 'thunderstorm' %} lightning-rainy
        {% elif condition|lower == 'heavy rain' %} pouring
        {% elif condition|lower == 'precipitation' %} rainy
        {% elif condition|lower == 'wind' %} windy
        {% else %} {{ condition|lower }}
        {% endif %}
      attributes:
        provider: >
          {% if has_value('weather.weatherflow_local_daily') %} WeatherFlow Local
          {% elif has_value('weather.weatherflow_day_based_forecast') %} WeatherFlow Cloud
          {% elif has_value('weather.windsor') %} Environment Canada
          {% endif %}
      availability: >
        {{ has_value('weather.weatherflow_local_daily')
            or has_value('weather.weatherflow_day_based_forecast')
            or has_value('weather.windsor') }}

    #ISSUE WARNING (MainThread) [homeassistant.components.sensor] Sensor sensor.outdoor_temperature_filtered has device class temperature, state class measurement and unit °C thus indicating it has a numeric value; however, it has the non-numeric value: unknown (<class 'str'>); Please update your configuration if your entity is manually configured, otherwise create a bug report at https://github.com/home-assistant/core/issues?q=is%3Aopen+is%3Aissue+label%3A%22integration%3A+filter%22
    - name: "Outdoor Temperature"
      unique_id: outdoor_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: >
        {% if is_number(states('sensor.weatherflow_air_temperature')) %}
          {{ states('sensor.weatherflow_air_temperature')|float }}
        {% elif is_number(states('sensor.tempest_st_00057689_temperature')) %}
          {{ states('sensor.tempest_st_00057689_temperature')|float }}
        {% elif is_number(states('sensor.windsor_temperature')) %}
          {{ states('sensor.windsor_temperature')|float }}
        {% else %} 0
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.weatherflow_air_temperature')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.tempest_st_00057689_temperature')) %} WeatherFlow Local
          {% elif is_number(states('sensor.windsor_temperature')) %} Environment Canada
          {% endif %}
      availability: >
        {{ is_number(states('sensor.weatherflow_air_temperature'))
            or is_number(states('sensor.tempest_st_00057689_temperature'))
            or is_number(states('sensor.windsor_temperature')) }}

    - name: "Outdoor Apparent Temperature"
      unique_id: outdoor_apparent_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: >
        {% if is_number(states('sensor.weatherflow_feels_like_temperature')) %}
          {{ states('sensor.weatherflow_feels_like_temperature')|float }}
        {% elif is_number(states('sensor.tempest_st_00057689_feels_like_temperature')) %}
          {{ states('sensor.tempest_st_00057689_feels_like_temperature')|float }}
        {% elif is_number(states('sensor.windsor_apparent_temperature')) %}
          {{ states('sensor.windsor_apparent_temperature')|float }}
        {% else %}
          {{ states('sensor.outdoor_temperature')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.weatherflow_feels_like_temperature')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.tempest_st_00057689_feels_like_temperature')) %} WeatherFlow Local
          {% elif is_number(states('sensor.windsor_apparent_temperature')) %} Environment Canada
          {% else %} Outdoor Temp
          {% endif %}
      availability: >
        {{ is_number(states('sensor.weatherflow_feels_like_temperature'))
            or is_number(states('sensor.tempest_st_00057689_feels_like_temperature'))
            or is_number(states('sensor.windsor_apparent_temperature'))
            or is_number(states('sensor.outdoor_temperature')) }}

    - name: "Outdoor High Temperature"
      unique_id: outdoor_high_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: >
        {% if state_attr('weather.home_daily','forecast')[0] is defined
            and is_number(state_attr('weather.home_daily','forecast')[0].temperature) %}
          {{ state_attr('weather.home_daily','forecast')[0].temperature|float }}
        {% elif is_number(states('sensor.windsor_high_temperature')) %}
          {{ states('sensor.windsor_high_temperature')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if state_attr('weather.home_daily','forecast')[0] is defined
              and is_number(state_attr('weather.home_daily','forecast')[0].temperature) %} Daily Forecast
          {% elif is_number(states('sensor.windsor_high_temperature')) %} Environment Canada
          {% endif %}
      availability: >
        {{ (state_attr('weather.home_daily','forecast')[0] is defined
              and is_number(state_attr('weather.home_daily','forecast')[0].temperature))
            or is_number(states('sensor.windsor_high_temperature')) }}

    - name: "Outdoor Low Temperature"
      unique_id: outdoor_low_temperature
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: >
        {% if state_attr('weather.home_daily','forecast')[0] is defined
            and is_number(state_attr('weather.home_daily','forecast')[0].temperature) %}
          {{ state_attr('weather.home_daily','forecast')[0].templow|float }}
        {% elif is_number(states('sensor.windsor_low_temperature')) %}
          {{ states('sensor.windsor_low_temperature')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if state_attr('weather.home_daily','forecast')[0] is defined
              and is_number(state_attr('weather.home_daily','forecast')[0].templow) %} Daily Forecast
          {% elif is_number(states('sensor.windsor_low_temperature')) %} Environment Canada
          {% endif %}
      availability: >
        {{ (state_attr('weather.home_daily','forecast')[0] is defined
              and is_number(state_attr('weather.home_daily','forecast')[0].templow))
            or is_number(states('sensor.windsor_low_temperature')) }}

    - name: "Outdoor High Temperature Differential"
      unique_id: outdoor_high_temperature_differential
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: >
        {{ states('sensor.outdoor_high_temperature')|int
            - states('sensor.windsor_normal_high_temperature')|int }}
      availability: >
        {{ is_number(states('sensor.windsor_normal_high_temperature'))
            and is_number(states('sensor.outdoor_high_temperature')) }}

    - name: "Outdoor Low Temperature Differential"
      unique_id: outdoor_low_temperature_differential
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: >
        {{ states('sensor.outdoor_low_temperature')|int
            - states('sensor.windsor_normal_low_temperature')|int }}
      availability: >
        {{ is_number(states('sensor.windsor_normal_low_temperature'))
            and is_number(states('sensor.outdoor_low_temperature')) }}

    - name: "Dew Point"
      unique_id: dew_point
      device_class: temperature
      state_class: measurement
      unit_of_measurement: °C
      state: >
        {% if is_number(states('sensor.weatherflow_dewpoint')) %}
          {{ states('sensor.weatherflow_dewpoint')|float }}
        {% elif is_number(states('sensor.tempest_st_00057689_dew_point')) %}
          {{ states('sensor.tempest_st_00057689_dew_point')|float }}
        {% elif is_number(states('sensor.windsor_dew_point')) %}
          {{ states('sensor.windsor_dew_point')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.weatherflow_dewpoint')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.tempest_st_00057689_dew_point')) %} WeatherFlow Local
          {% elif is_number(states('sensor.windsor_dew_point')) %} Environment Canada
          {% endif %}
      availability: >
        {{ is_number(states('sensor.weatherflow_dewpoint'))
            or is_number(states('sensor.tempest_st_00057689_dew_point'))
            or is_number(states('sensor.windsor_dew_point')) }}

    - name: "Outdoor Humidity"
      unique_id: outdoor_humidity
      device_class: humidity
      state_class: measurement
      unit_of_measurement: "%"
      state: >
        {% if is_number(states('sensor.weatherflow_relative_humidity')) %}
          {{ states('sensor.weatherflow_relative_humidity')|int }}
        {% elif is_number(states('sensor.tempest_st_00057689_humidity')) %}
          {{ states('sensor.tempest_st_00057689_humidity')|int }}
        {% elif is_number(states('sensor.windsor_humidity')) %}
          {{ states('sensor.windsor_humidity')|int }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.weatherflow_relative_humidity')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.tempest_st_00057689_humidity')) %} WeatherFlow Local
          {% elif is_number(states('sensor.windsor_humidity')) %} Environment Canada
          {% endif %}
      availability: >
        {{ is_number(states('sensor.weatherflow_relative_humidity'))
            or is_number(states('sensor.tempest_st_00057689_humidity'))
            or is_number(states('sensor.windsor_humidity')) }}

    - name: "Outdoor Humidity Today"
      unique_id: outdoor_humidity_today
      device_class: humidity
      state_class: measurement
      unit_of_measurement: "%"
      state: "{{ states('sensor.pirateweather_humidity_0d')|int }}"
      attributes:
        provider: Pirate Weather
      availability: "{{ is_number(states('sensor.pirateweather_humidity_0d')) }}"

    - name: "Precipitation Probability"
      unique_id: precipitation_probability
      icon: mdi:weather-rainy
      state_class: measurement
      unit_of_measurement: "%"
      state: >
        {% if state_attr('weather.home_hourly','forecast')[0] is defined
            and is_number(state_attr('weather.home_hourly','forecast')[0].precipitation_probability) %}
          {{ state_attr('weather.home_hourly','forecast')[0].precipitation_probability|int }}
        {% elif is_number(states('sensor.weatherflow_precipitation_probability')) %}
          {{ states('sensor.weatherflow_precipitation_probability')|int }}
        {% elif is_number(states('sensor.tempest_st_00057689_precipitation_probability')) %}
          {{ states('sensor.tempest_st_00057689_precipitation_probability')|int }}
        {% elif is_number(states('sensor.windsor_chance_of_precip')) %}
          {{ states('sensor.windsor_chance_of_precip')|int }}
        {% endif %}
      attributes:
        provider: >
          {% if state_attr('weather.home_hourly','forecast')[0] is defined
            and is_number(state_attr('weather.home_hourly','forecast')[0].precipitation_probability) %} Hourly Forecast
          {% elif is_number(states('sensor.weatherflow_precipitation_probability')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.tempest_st_00057689_precipitation_probability')) %} WeatherFlow Local
          {% elif is_number(states('sensor.windsor_chance_of_precip')) %} Environment Canada
          {% endif %}
      availability: >
        {{ state_attr('weather.home_hourly','forecast')[0] is defined
              and is_number(state_attr('weather.home_hourly','forecast')[0].precipitation_probability)
            or is_number(states('sensor.weatherflow_precipitation_probability'))
            or is_number(states('sensor.tempest_st_00057689_precipitation_probability'))
            or is_number(states('sensor.windsor_chance_of_precip')) }}

    - name: "Precipitation Probability Today"
      unique_id: precipitation_probability_today
      icon: mdi:weather-rainy
      state_class: measurement
      unit_of_measurement: "%"
      state: >
        {% if state_attr('weather.home_daily','forecast')[0] is defined
            and is_number(state_attr('weather.home_daily','forecast')[0].precipitation_probability) %}
          {{ state_attr('weather.home_daily','forecast')[0].precipitation_probability|int }}
        {% endif %}
      attributes:
        provider: Daily Forecast
      availability: >
        {{ state_attr('weather.home_daily','forecast')[0] is defined
            and is_number(state_attr('weather.home_daily','forecast')[0].precipitation_probability) }}

    - name: "Precipitation Intensity"
      unique_id: precipitation_intensity
      icon: mdi:weather-pouring
      #NONE weatherflow state is 'none', tempest is 'None' when no value
      state: >
        {% if states('sensor.tempest_st_00057689_rain_intensity')|lower != 'none' %}
          {{ states('sensor.tempest_st_00057689_rain_intensity') }}
        {% elif states('sensor.weatherflow_precipitation_intensity')|lower != 'none' %}
          {{ states('sensor.weatherflow_precipitation_intensity') }}
        {% else %} 0
        {% endif %}
      attributes:
        provider: >
          {% if states('sensor.tempest_st_00057689_rain_intensity') != 'None' %} WeatherFlow Local
          {% elif states('sensor.weatherflow_precipitation_intensity') != 'none' %} WeatherFlow Cloud
          {% else %} WeatherFlow Local
          {% endif %}
      availability: >
        {{ has_value('sensor.tempest_st_00057689_rain_intensity')
            or has_value('sensor.weatherflow_precipitation_intensity') }}

    - name: "Precipitation Rate"
      unique_id: precipitation_rate
      icon: mdi:weather-pouring
      device_class: precipitation_intensity
      state_class: measurement
      unit_of_measurement: mm/h
      state: >
        {% if has_value('sensor.tempest_st_00057689_rain_rate') %}
          {{ states('sensor.tempest_st_00057689_rain_rate')|float }}
        {% elif has_value('sensor.weatherflow_precipitation_rate') %}
          {{ states('sensor.weatherflow_precipitation_rate')|float }}
        {% else %} none
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.tempest_st_00057689_rain_rate')) %} WeatherFlow Local
          {% elif is_number(states('sensor.weatherflow_precipitation_rate')) %} WeatherFlow Cloud
          {% endif %}
      availability: >
        {{ is_number(states('sensor.tempest_st_00057689_rain_rate'))
            or is_number(states('sensor.weatherflow_precipitation_rate')) }}

    - name: "Precipitation Duration Today"
      unique_id: precipitation_duration_today
      icon: mdi:timer
      device_class: duration
      state_class: measurement
      unit_of_measurement: min
      state: >
        {% if is_number(states('sensor.tempest_st_00057689_rain_duration_today')) %}
          {{ states('sensor.tempest_st_00057689_rain_duration_today')|float }}
        {% elif is_number(states('sensor.weatherflow_precipitation_duration_today')) %}
          {{ states('sensor.weatherflow_precipitation_duration_today')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.weatherflow_precipitation_duration_today')) %} WeatherFlow Local
          {% elif is_number(states('sensor.weatherflow_precipitation_duration_today')) %} WeatherFlow Cloud
          {% endif %}
      availability: >
        {{ is_number(states('sensor.tempest_st_00057689_rain_duration_today'))
            or is_number(states('sensor.weatherflow_precipitation_duration_today')) }}

    - name: "Precipitation Duration Yesterday"
      unique_id: precipitation_duration_yesterday
      icon: mdi:timer
      device_class: duration
      state_class: measurement
      unit_of_measurement: min
      state: >
        {% if is_number(states('sensor.tempest_st_00057689_rain_duration_yesterday')) %}
          {{ states('sensor.tempest_st_00057689_rain_duration_yesterday')|float }}
        {% elif is_number(states('sensor.weatherflow_precipitation_duration_yesterday_rain_checked')) %}
          {{ states('sensor.weatherflow_precipitation_duration_yesterday_rain_checked')|float }}
        {% elif is_number(states('sensor.weatherflow_precipitation_duration_yesterday')) %}
          {{ states('sensor.weatherflow_precipitation_duration_yesterday')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.tempest_st_00057689_rain_duration_yesterday')) %} WeatherFlow Local
          {% elif is_number(states('sensor.weatherflow_precipitation_duration_yesterday_rain_checked')) %} WeatherFlow Cloud (C)
          {% elif is_number(states('sensor.weatherflow_precipitation_duration_yesterday')) %} WeatherFlow Cloud
          {% endif %}
      availability: >
        {{ is_number(states('sensor.tempest_st_00057689_rain_duration_yesterday'))
            or is_number(states('sensor.weatherflow_precipitation_duration_yesterday_rain_checked'))
            or is_number(states('sensor.weatherflow_precipitation_duration_yesterday')) }}

    - name: "Precipitation Today"
      unique_id: precipitation_today
      icon: mdi:weather-pouring
      device_class: distance #ISSUE not really "distance"
      state_class: measurement
      unit_of_measurement: mm
      state: >
        {% if is_number(states('sensor.tempest_st_00057689_rain_today')) %}
          {{ states('sensor.tempest_st_00057689_rain_today')|float }}
        {% elif is_number(states('sensor.weatherflow_precipitation_today_rain_checked')) %}
          {{ states('sensor.weatherflow_precipitation_today_rain_checked')|float }}
        {% elif is_number(states('sensor.weatherflow_precipitation_today')) %}
          {{ states('sensor.weatherflow_precipitation_today')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.weatherflow_precipitation_today')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.weatherflow_precipitation_today_rain_checked')) %} WeatherFlow Local (C)
          {% elif is_number(states('sensor.tempest_st_00057689_rain_today')) %} WeatherFlow Local
          {% endif %}
      availability: >
        {{ is_number(states('sensor.weatherflow_precipitation_today'))
            or is_number(states('sensor.weatherflow_precipitation_today_rain_checked'))
            or is_number(states('sensor.tempest_st_00057689_rain_today')) }}

    - name: "Precipitation Yesterday"
      unique_id: precipitation_yesterday
      icon: mdi:weather-pouring
      device_class: distance
      state_class: measurement
      unit_of_measurement: mm
      state: >
        {% if is_number(states('sensor.tempest_st_00057689_rain_yesterday')) %}
          {{ states('sensor.tempest_st_00057689_rain_yesterday')|float }}
        {% elif is_number(states('sensor.weatherflow_precipitation_yesterday_rain_checked')) %}
          {{ states('sensor.weatherflow_precipitation_yesterday_rain_checked')|float }}
        {% elif is_number(states('sensor.weatherflow_precipitation_yesterday')) %}
          {{ states('sensor.weatherflow_precipitation_yesterday')|float }}
        {% elif is_number(states('sensor.windsor_precipitation_yesterday')) %}
          {{ states('sensor.windsor_precipitation_yesterday')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.tempest_st_00057689_rain_yesterday')) %} WeatherFlow Local
          {% elif is_number(states('sensor.weatherflow_precipitation_yesterday_rain_checked')) %} WeatherFlow Cloud (C)
          {% elif is_number(states('sensor.weatherflow_precipitation_yesterday')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.windsor_precipitation_yesterday')) %} Environment Canada
          {% endif %}
      availability: >
        {{ is_number(states('sensor.tempest_st_00057689_rain_yesterday'))
            or is_number(states('sensor.weatherflow_precipitation_yesterday_rain_checked'))
            or is_number(states('sensor.weatherflow_precipitation_yesterday'))
            or is_number(states('sensor.windsor_precipitation_yesterday')) }}

    - name: "Precipitation Type"
      unique_id: precipitation_type
      icon: mdi:weather-rainy
      device_class: enum
      state: > #NONE tempest state 'None' when no value
        {% set freeze_alt = states('sensor.tempest_st_00057689_freezing_level_altitude')|int(-1) %}
        {% if has_value('sensor.tempest_st_00057689_precipitation_type') %}
          {% set type = states('sensor.tempest_st_00057689_precipitation_type')|lower %}
          {% if type != 'none' %} {{ type }}
          {% elif freeze_alt != -1 and freeze_alt < 200 %} snow
          {% else %} rain
          {% endif %}
        {% else %}
          {% if is_state('binary_sensor.weatherflow_is_freezing','on') %} snow
          {% else %} rain
          {% endif %}
        {% endif %}
      attributes:
        provider: >
          {% if has_value('sensor.tempest_st_00057689_precipitation_type') %} WeatherFlow Local
          {% else %} WeatherFlow Cloud
          {% endif %}
      availability: >
        {{ has_value('sensor.tempest_st_00057689_precipitation_type')
            or states('binary_sensor.weatherflow_is_freezing') in ['off','on'] }}

    - name: "Lightning Count"
      unique_id: lightning_count
      icon: mdi:lightning-bolt
      state_class: measurement
      unit_of_measurement: strikes
      state: >
        {% if is_number(states('sensor.weatherflow_lightning_strike_count')) %}
          {{ states('sensor.weatherflow_lightning_strike_count')|int }}
        {% elif is_number(states('sensor.tempest_st_00057689_lightning_count')) %}
          {{ states('sensor.tempest_st_00057689_lightning_count')|int }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.weatherflow_lightning_strike_count')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.tempest_st_00057689_lightning_count')) %} WeatherFlow Local
          {% endif %}
      availability: >
        {{ is_number(states('sensor.weatherflow_lightning_strike_count'))
            or is_number(states('sensor.tempest_st_00057689_lightning_count')) }}

    - name: "Nearest Storm Bearing"
      unique_id: nearest_storm_bearing
      state: "{{ states('sensor.pirateweather_nearest_storm_bearing')|float(none) }}"
      state_class: measurement
      unit_of_measurement: "°"
      attributes:
        provider: Pirate Weather
      availability: "{{ is_number(states('sensor.pirateweather_nearest_storm_bearing')) }}"

    - name: "Nearest Storm Distance"
      unique_id: nearest_storm_distance
      device_class: distance
      state_class: measurement
      unit_of_measurement: km
      state: "{{ states('sensor.pirateweather_nearest_storm_distance')|int(none) }}"
      attributes:
        provider: Pirate Weather
      availability: "{{ is_number(states('sensor.pirateweather_nearest_storm_distance')) }}"

    - name: "Storm Full Direction"
      unique_id: storm_full_direction
      state: >
        {% set directions = ['North','North-Northeast','Northeast','East-Northeast','East','East-Southeast',
            'Southeast','South-Southeast','South','South-Southwest','Southwest','West-Southwest','West',
            'West-Northwest','Northwest','North-Northwest','North'] %}
        {% set dir = states('sensor.nearest_storm_bearing') %}
        {{ iif(is_number(dir),directions[((dir|float(-1)/360)|float*16)|round],'unknown') }}
      attributes:
        provider: "{{ state_attr('sensor.nearest_storm_bearing','provider') }}"
      availability: "{{ is_number(states('sensor.nearest_storm_bearing')) }}"

    - name: "Barometric Pressure"
      unique_id: barometric_pressure
      device_class: pressure
      state_class: measurement
      unit_of_measurement: hPa # unit conversion envcan kPa -> hPa
      state: >
        {% if is_number(states('sensor.weatherflow_barometric_pressure')) %}
          {{ states('sensor.weatherflow_barometric_pressure')|float }}
        {% elif is_number(states('sensor.tempest_st_00057689_sea_level_pressure')) %}
          {{ states('sensor.tempest_st_00057689_sea_level_pressure')|float }}
        {% elif is_number(states('sensor.windsor_pressure')) %}
          {{ states('sensor.windsor_pressure')|float * 10 }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.weatherflow_barometric_pressure')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.tempest_st_00057689_sea_level_pressure')) %} WeatherFlow Local
          {% elif is_number(states('sensor.windsor_pressure')) %} Environment Canada
          {% endif %}
      availability: >
        {{ is_number(states('sensor.weatherflow_barometric_pressure'))
            or is_number(states('sensor.tempest_st_00057689_sea_level_pressure'))
            or is_number(states('sensor.windsor_pressure')) }}

    # convert tempest from m/s to km/h
    - name: "Wind Speed"
      unique_id: wind_speed
      icon: mdi:weather-windy
      device_class: wind_speed
      state_class: measurement
      unit_of_measurement: km/h
      state: >
        {% if is_number(states('sensor.windsor_wind_speed')) %}
          {{ states('sensor.windsor_wind_speed')|float }}
        {% elif is_number(states('sensor.weatherflow_wind_speed_km_h')) %}
          {{ states('sensor.weatherflow_wind_speed_km_h')|float }}
        {% elif is_number(states('sensor.tempest_st_00057689_wind_speed')) %}
          {{ states('sensor.tempest_st_00057689_wind_speed')|float * 3.6 }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.windsor_wind_speed')) %} Environment Canada
          {% elif is_number(states('sensor.weatherflow_wind_speed_km_h')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.tempest_st_00057689_wind_speed')) %} WeatherFlow Local
          {% endif %}
      availability: >
        {{ is_number(states('sensor.weatherflow_wind_speed_km_h'))
            or is_number(states('sensor.tempest_st_00057689_wind_speed'))
            or is_number(states('sensor.windsor_wind_speed')) }}

    - name: "Wind Speed Today"
      unique_id: wind_speed_today
      icon: mdi:weather-windy
      device_class: wind_speed
      state_class: measurement
      unit_of_measurement: km/h
      state: >
        {% if state_attr('weather.home_daily','forecast')[0] is defined
            and is_number(state_attr('weather.home_daily','forecast')[0].wind_speed) %}
          {{ state_attr('weather.home_daily','forecast')[0].wind_speed|int }}
        {% endif %}
      attributes:
        provider: Daily Forecast
      availability: >
        {{ state_attr('weather.home_daily','forecast')[0] is defined
            and is_number(state_attr('weather.home_daily','forecast')[0].wind_speed) }}

    - name: "Wind Gust"
      unique_id: wind_gust #TEST envcan
      icon: mdi:weather-windy
      device_class: wind_speed
      state_class: measurement
      unit_of_measurement: km/h # convert tempest from m/s to km/h
      state: >
        {% if is_number(states('sensor.windsor_wind_gust')) %}
          {{ states('sensor.windsor_wind_gust')|float }}
        {% elif is_number(states('sensor.tempest_st_00057689_wind_gust')) %}
          {{ states('sensor.tempest_st_00057689_wind_gust')|float * 3.6 }}
        {% elif is_number(states('sensor.weatherflow_wind_gust_km_h')) %}
          {{ states('sensor.weatherflow_wind_gust_km_h')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.windsor_wind_gust')) %} Environment Canada
          {% elif is_number(states('sensor.tempest_st_00057689_wind_gust')) %} WeatherFlow Local
          {% elif is_number(states('sensor.weatherflow_wind_gust_km_h')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.windsor_wind_gust')) %} Environment Canada
          {% endif %}
      availability: >
        {{ is_number(states('sensor.tempest_st_00057689_wind_gust'))
            or is_number(states('sensor.weatherflow_wind_gust_km_h'))
            or is_number(states('sensor.windsor_wind_gust')) }}

    - name: "Wind Gust Today"
      unique_id: wind_gust_today
      icon: mdi:weather-windy
      device_class: wind_speed
      state_class: measurement
      unit_of_measurement: km/h
      state: "{{ states('sensor.pirateweather_wind_gust_0d')|int(none) }}"
      attributes:
        provider: Pirate Weather
      availability: "{{ is_number(states('sensor.pirateweather_wind_gust_0d')) }}"

    - name: "Wind Lull"
      unique_id: wind_lull
      icon: mdi:weather-windy
      device_class: wind_speed
      state_class: measurement
      unit_of_measurement: km/h
      state: >
        {% if is_number(states('sensor.tempest_st_00057689_wind_lull')) %}
          {{ states('sensor.tempest_st_00057689_wind_lull')|float * 3.6 }}
        {% elif is_number(states('sensor.weatherflow_wind_lull_km_h')) %}
          {{ states('sensor.weatherflow_wind_lull_km_h')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.tempest_st_00057689_wind_lull')) %} WeatherFlow Local
          {% elif is_number(states('sensor.weatherflow_wind_lull_km_h')) %} WeatherFlow Cloud
          {% endif %}
      availability: >
        {{ is_number(states('sensor.tempest_st_00057689_wind_lull'))
            or is_number(states('sensor.weatherflow_wind_lull_km_h')) }}

    - name: "Wind Bearing"
      unique_id: wind_bearing
      picture: >
        {% set directions = [0,11,22,33,45,56,67,78,90,101,112,123,135,146,157,168,180,191,
          202,213,225,236,247,258,270,281,292,303,315,326,337,348,0] %}
        /local/images/entity_icons/compass/{{ directions[((states('sensor.wind_bearing')|float(-1)/360)|float*32)|round] }}.png
      state_class: measurement
      unit_of_measurement: °
      state: >
        {% if is_number(states('sensor.tempest_st_00057689_wind_bearing')) %}
          {{ states('sensor.tempest_st_00057689_wind_bearing')|float }}
        {% elif is_number(states('sensor.weatherflow_wind_direction')) %}
          {{ states('sensor.weatherflow_wind_direction')|float }}
        {% elif is_number(states('sensor.windsor_wind_bearing')) %}
          {{ states('sensor.windsor_wind_bearing')|float }}
        {% endif %}
      attributes:
        cardinal: >
          {% set directions = ['N','NNE','NE','ENE','E','ESE','SE','SSE','S','SSW','SW','WSW','W','WNW','NW','NNW','N'] %}
          {{ directions[((states('sensor.wind_bearing')|float(-1)/360)|float*16)|round] }}
        full_cardinal: >
          {% set directions = ['North','North-Northeast','Northeast','East-Northeast','East','East-Southeast',
              'Southeast','South-Southeast','South','South-Southwest','Southwest','West-Southwest','West',
              'West-Northwest','Northwest','North-Northwest','North'] %}
          {{ directions[((states('sensor.wind_bearing')|float(-1)/360)|float*16)|round] }}
        provider: >
          {% if is_number(states('sensor.tempest_st_00057689_wind_bearing')) %} WeatherFlow Local
          {% elif is_number(states('sensor.weatherflow_wind_direction')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.windsor_wind_bearing')) %} Environment Canada
          {% endif %}
      availability: >
        {{ is_number(states('sensor.tempest_st_00057689_wind_bearing'))
            or is_number(states('sensor.weatherflow_wind_direction'))
            or is_number(states('sensor.windsor_wind_bearing')) }}

    - name: "Wind Beaufort Display"
      unique_id: wind_beaufort_display
      icon: mdi:windsock
      state: "{{ states('sensor.weatherflow_beaufort_description')|replace('_',' ')|title }}"
      attributes:
        provider: WeatherFlow Cloud
      availability: "{{ has_value('sensor.weatherflow_beaufort_description') }}"

    - name: "Cloud Cover"
      unique_id: cloud_cover
      icon: mdi:cloud
      state_class: measurement
      unit_of_measurement: "%"
      state: "{{ states('sensor.pirateweather_cloud_coverage')|int(none) }}"
      attributes:
        provider: Pirate Weather
      availability: "{{ is_number(states('sensor.pirateweather_cloud_coverage')) }}"

    - name: "Cloud Cover Today"
      unique_id: cloud_cover_today
      icon: mdi:cloud
      state_class: measurement
      unit_of_measurement: "%"
      state: "{{ states('sensor.pirateweather_cloud_coverage_0d')|int(none) }}"
      attributes:
        provider: Pirate Weather
      availability: "{{ is_number(states('sensor.pirateweather_cloud_coverage_0d')) }}"

    - name: "Visibility"
      unique_id: visibility
      icon: mdi:eye
      device_class: distance
      state_class: measurement
      unit_of_measurement: km
      state: >
        {% if is_number(states('sensor.tempest_st_00057689_visibility')) %}
          {{ states('sensor.tempest_st_00057689_visibility')|float }}
        {% elif is_number(states('sensor.weatherflow_visibility')) %}
          {{ states('sensor.weatherflow_visibility')|float }}
        {% elif is_number(states('sensor.windsor_visibility')) %}
          {{ states('sensor.windsor_visibility')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.tempest_st_00057689_visibility')) %} WeatherFlow Local
          {% elif is_number(states('sensor.weatherflow_visibility')) %} WeatherFlow Cloud
          {% elif is_number(states('sensor.windsor_visibility')) %} Environment Canada
          {% endif %}
      availability: >
        {{ is_number(states('sensor.tempest_st_00057689_visibility'))
            or is_number(states('sensor.weatherflow_visibility'))
            or is_number(states('sensor.windsor_visibility')) }}
