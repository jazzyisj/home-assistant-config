###############################################################################
## Templates - Air Quality
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: sensor.time
  binary_sensor:
    - name: "WAQI Connected"
      unique_id: waqi_connected
      icon: mdi:smog
      device_class: connectivity
      state: >
        {% set entities = state_attr(this.entity_id,'entity_id')|select('has_value')|list %}
        {{ entities|count > 0 if entities != none else false }}
      attributes:
        entity_id: "{{ integration_entities('waqi') }}"

- binary_sensor:
    - name: "WAQI Connected Alert"
      unique_id: waqi_connected_alert
      icon: mdi:smog
      device_class: problem
      delay_on: 300
      state: >
        {{ is_state('binary_sensor.waqi_connected','off')
            and is_state('input_boolean.weather_alerts','on') }}

    - name: "Air Quality Alert"
      unique_id: air_quality_alert
      icon: mdi:smog
      state: >
        {{ states('sensor.aqi_risk_level') in ['Very Unhealthy','Unhealthy','Unhealthy Sensitive Groups','Moderate']
            and is_state('input_boolean.weather_alerts','on') }}
      availability: "{{ has_value('sensor.aqi_risk_level') }}"

- sensor:
    - name: "Air Quality Index"
      unique_id: air_quality_index
      icon: mdi:smog
      #ISSUE device_class: aqi
      state_class: measurement
      unit_of_measurement: AQI
      state: "{{ states('sensor.waqi_windsor')|float('unknown') }}"
      availability: "{{ is_number(states('sensor.waqi_windsor')) }}"

    - name: "AQI Risk Level"
      unique_id: aqi_risk_level
      icon: mdi:smog
      state: >
        {% set level = states('sensor.air_quality_index')|int(-1) %}
        {% if level < 51 %} Good
        {% elif level < 101 %} Moderate
        {% elif level < 101 %} Unhealthy Sensitive Groups
        {% elif level < 201 %} Unhealthy
        {% elif level < 301 %} Very Unhealthy
        {% else %} Hazardous
        {% endif %}
      availability: "{{ is_number(states('sensor.air_quality_index')) }}"

    - name: "Ozone"
      unique_id: ozone
      #ISSUE device_class: ozone
      state_class: measurement
      unit_of_measurement: AQI
      state: "{{ state_attr('sensor.waqi_windsor','ozone') }}"
      availability: "{{ is_number(state_attr('sensor.waqi_windsor','ozone')) }}"

    - name: "Carbon Monoxide"
      unique_id: carbon_monoxide
      #ISSUE device_class: carbon_monoxide
      state_class: measurement
      unit_of_measurement: AQI
      state: "{{ state_attr('sensor.waqi_windsor','co') }}"
      availability: "{{ is_number(state_attr('sensor.waqi_windsor','co')) }}"

    - name: "Nitrogen Dioxide"
      unique_id: nitrogen_dioxide
      #ISSUE device_class: nitrogen_dioxide
      state_class: measurement
      unit_of_measurement: AQI
      state: "{{ state_attr('sensor.waqi_windsor','nitrogen_dioxide') }}"
      availability: "{{ is_number(state_attr('sensor.waqi_windsor','nitrogen_dioxide')) }}"

    - name: "Sulphur Dioxide"
      unique_id: sulphur_dioxide
      #ISSUE device_class: sulphur_dioxide
      state_class: measurement
      unit_of_measurement: AQI
      state: "{{ state_attr('sensor.waqi_windsor','sulfur_dioxide') }}"
      availability: "{{ is_number(state_attr('sensor.waqi_windsor','sulfur_dioxide')) }}"

    - name: "Particulate Matter 2.5"
      unique_id: particulate_matter_2_5
      #ISSUE device_class: pm25
      state_class: measurement
      unit_of_measurement: AQI
      state: "{{ state_attr('sensor.waqi_windsor','pm_2_5') }}"
      availability: "{{ is_number(state_attr('sensor.waqi_windsor','pm_2_5')) }}"
