###################################################################################################
## Templates - Network
###################################################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: time_pattern
      minutes: "/5"
  binary_sensor:
    - name: "Asus Router Integration Connected"
      unique_id: asus_router_integration_connected
      picture: !secret ASUS_ICON
      device_class: connectivity
      state: "{{ integration_entities('asusrouter') | select('has_value') | list | count > 0 }}"

    - name: "Speedtest Integration Connected"
      unique_id: speedtest_integration_connected
      picture: !secret SPEEDTEST_ICON
      device_class: connectivity
      state: >
        {% set threshold = now() - timedelta(minutes=75) %}
        {% set entities = integration_entities('speedtestdotnet') %}
        {{ entities | select('has_value') | list | count > 0
            and expand(entities) | selectattr('last_reported', 'gt', threshold) | list | count > 0 }}

- binary_sensor:
    - name: "Asus Router Connected Alert"
      unique_id: asus_router_connected_alert
      device_class: problem
      delay_on: 300
      state: >
        {{ is_state('binary_sensor.asus_router_integration_connected', 'off')
            and is_state('input_boolean.network_alerts', 'on') }}

    - name: "Speedtest Connected Alert"
      unique_id: speedtest_connected_alert
      device_class: problem
      delay_on: 300
      state: >
        {{ is_state('binary_sensor.speedtest_integration_connected', 'off')
            and is_state('input_boolean.network_alerts', 'on') }}

    - name: "WIFI AP Offline Alert"
      unique_id: wifi_ap_offline_alert
      icon: mdi:wifi
      device_class: problem
      delay_on:
        minutes: 30
      state: >
        {{ not is_state('device_tracker.wifi_ap_upstairs', 'home')
            or not is_state('device_tracker.wifi_ap_garage', 'home')
            or not is_state('device_tracker.google_wifi', 'home')
            and is_state('input_boolean.network_alerts', 'on') }}

    - name: "WAN"
      unique_id: wan
      icon: mdi:wan
      device_class: connectivity
      state: >
        {{ is_state('binary_sensor.wan_ping', 'on')
            and is_state('binary_sensor.rt_ax58u_port_status_wan', 'on')
            and is_state('binary_sensor.rt_ax58u_wan', 'on')
            and is_state('binary_sensor.rt_ax58u_internet', 'on') }}

    - name: "WAN Offline Alert"
      unique_id: wan_offline_alert
      icon: mdi:wan
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.wan', 'off')
            and is_state('input_boolean.network_alerts', 'on') }}

    - name: "Unknown Device Alert"
      unique_id: unknown_device_alert
      device_class: problem
      state: >
        {{ states('sensor.unknown_devices') | int(0) > 0
            and is_state('input_boolean.network_alerts', 'on') }}

- sensor:
    - name: "Router WIFI"
      unique_id: router_wifi
      icon: "{{ 'mdi:wifi' if is_state(this.entity_id, 'on') else 'mdi:wifi' }}"
      device_class: enum
      state: >
        {% set ghz2 = is_state('switch.rt_ax58u_wireless_2_4_ghz', 'on') %}
        {% set ghz5 = is_state('switch.rt_ax58u_wireless_5_ghz', 'on') %}
        {% if ghz2 and ghz5 %} On
        {% elif ghz2 %} 2 GHz
        {% elif ghz5 %} 5 GHz
        {% else %} Off
        {% endif %}
      attributes:
        options: "{{ ['Off', 'On', '2 GHz', '5 GHz'] }}"

    - name: "Wireless Devices"
      unique_id: wireless_devices
      icon: mdi:access-point-network
      state: >
        {% set entities = state_attr('group.wireless_devices', 'entity_id') %}
        {{ entities | count if entities != none else -1 }}

    - name: "Wired Devices"
      unique_id: wired_devices
      icon: mdi:router-network
      state: >
        {% set entities = state_attr('group.wired_devices', 'entity_id') %}
        {{ entities | count if entities != none else -1 }}

    - name: "Unknown Devices"
      unique_id: unknown_devices
      icon: mdi:devices
      state: >
        {% set entities = state_attr('group.unknown_devices', 'entity_id') %}
        {{ entities | count if entities != none else -1 }}

    - name: "Network Status"
      unique_id: network_status
      icon: mdi:network
      device_class: enum
      state: >
        {% set cpu = states('sensor.rt_ax58u_cpu') | int(-1) %}
        {% set ram = states('sensor.rt_ax58u_ram') | int(-1) %}
        {% set temp = states('sensor.rt_ax58u_temperature_cpu') | int(-1) %}
        {% set up = states('sensor.speedtest_upload') | int(-1) %}
        {% set down = states('sensor.speedtest_download') | int(-1) %}
        {% set ping = states('sensor.speedtest_ping') | int(-1) %}
        {% if is_state('binary_sensor.wan', 'off')
            or is_state('binary_sensor.wifi_ap_offline_alert', 'on')
            or cpu > 64
            or ram > 90
            or temp > 80
            or down < 50
            or up < 50
            or ping > 80 %} critical
        {% elif cpu > 64
            or ram > 85
            or temp > 75
            or down < 100
            or up < 100
            or ping > 60 %} severe
        {% elif cpu > 54
            or ram > 80
            or temp > 70
            or down < 150
            or up < 150
            or ping > 40 %} warning
        {% elif cpu > 44
            or ram > 75
            or temp > 60
            or down < 200
            or up < 200
            or ping > 20 %} minor
        {% else %} ok
        {% endif %}
      attributes:
        options: >
          {% from 'hass.jinja' import status_options %}
          {{ status_options() }}

    - name: "Speedtest Last Update"
      unique_id: speedtest_last_update
      device_class: timestamp
      state: "{{ states.sensor.speedtest_download.last_updated }}"
