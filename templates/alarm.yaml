###############################################################################
## Templates - Alarm
###############################################################################
- trigger:
    - trigger: homeassistant
      event: start

    - trigger: event
      event_type: event_template_reloaded

    - trigger: time_pattern
      minutes: "/1"
  binary_sensor:
    - name: "Nest Protect Integration Connected"
      unique_id: nest_protect_integration_connected
      picture: !secret NEST_PROTECT_ICON
      device_class: connectivity
      state: >
        {%- set threshold = now() - timedelta(minutes=15) %}
        {{ expand(integration_entities('nest_protect'))
            | selectattr('last_reported', 'gt', threshold)
            | list | count > 0 }}

- binary_sensor:
    - name: "Nest Protect Connected Alert"
      unique_id: nest_protect_connected_alert
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.nest_protect_integration_connected', 'off')
            and is_state('input_boolean.appliance_alerts', 'on') }}

    - name: "Nest Protect Upstairs Connected"
      unique_id: nest_protect_upstairs_connected # used in ui button
      icon: mdi:smoke-detector-variant
      device_class: connectivity
      state: "{{ has_value('binary_sensor.nest_protect_upstairs_smoke_status') }}"

    - name: "Nest Protect Downstairs Connected"
      unique_id: nest_protect_downstairs_connected # used in ui button
      icon: mdi:smoke-detector-variant
      device_class: connectivity
      state: "{{ has_value('binary_sensor.nest_protect_downstairs_smoke_status') }}"

    - name: "Alarm Disabled Alert"
      unique_id: alarm_disabled_alert
      device_class: problem
      delay_on: 5 # allow to turn back off if armed
      state: >
        {{ (is_state('input_boolean.alarm_enabled', 'off'))
            and is_state('input_boolean.alarm_alerts', 'on') }}

    - name: "Alarm Auto Arming Alert"
      unique_id: alarm_auto_arming_alert
      icon: mdi:account-arrow-right
      device_class: problem
      delay_on: 5 # allow to turn back off if armed
      state: >
        {{ is_state('input_boolean.alarm_auto_arming', 'off')
            and is_state('input_boolean.alarm_enabled', 'on')
            and is_state('input_boolean.alarm_alerts', 'on') }}

    - name: "Alarm Zone Sync"
      unique_id: alarm_zone_sync
      icon: mdi:shield-alert
      device_class: problem
      state: >
        {{ (states('alarm_control_panel.house') != states('alarm_control_panel.master')
            or states('alarm_control_panel.garage') != states('alarm_control_panel.master'))
            and is_state('input_boolean.garage_alarm_override', 'off')
            and is_state('input_boolean.alarm_pending', 'off')
            and is_state('input_boolean.alarm_triggered', 'off') }}

    - name: "Alarm Zone Sync Alert"
      unique_id: alarm_zone_sync_alert
      icon: mdi:shield-alert
      device_class: problem
      delay_on: 300
      state: >
        {{ is_state('binary_sensor.alarm_zone_sync', 'on')
            and is_state('input_boolean.alarm_enabled', 'on')
            and is_state('input_boolean.alarm_alerts', 'on') }}

    - name: "Alarm Pending Alert"
      unique_id: alarm_pending_alert
      device_class: problem
      delay_on: 2 # allow input_text.current_alarm to populate
      state: >
        {{ is_state('alarm_control_panel.master', 'pending')
            and is_state('input_boolean.alarm_enabled', 'on') }}

    - name: "Alarm Open Sensor Alert"
      unique_id: alarm_open_sensor_alert
      icon: mdi:shield-alert
      device_class: problem
      state: >
        {% set still_open = namespace(value=0) %}
        {% if state_attr('alarm_control_panel.master', 'open_sensors') != none %}
          {% for item in state_attr('alarm_control_panel.master', 'open_sensors') %}
            {% if is_state(item | replace ('_open_alert', '') , 'on') %}
              {% set still_open.value = 1 %}
              {% break %}
            {% endif %}
          {% endfor %}
        {% endif %}
        {{ still_open.value == 1
            and is_state('input_boolean.alarm_enabled', 'on') }}

    - name: "Alarm Bypassed Sensor Alert"
      unique_id: alarm_bypassed_sensor_alert
      icon: mdi:shield-alert
      device_class: problem
      state: >
        {{ state_attr('alarm_control_panel.master', 'bypassed_sensors') != none
            and is_state('input_boolean.alarm_enabled', 'on') }}

    # alarm is disconnected, arming, pending or triggered
    # alarm state changed within last minute, forces priority over presence led etc. for 1 minute
    # startup pending - avoid trigger on startup (last_changed)
    - name: "Alarm LED Alert"
      unique_id: alarm_led_alert
      state: >
        {{ (is_state('input_boolean.alarm_triggered', 'on')
              or is_state('alarm_control_panel.master', ['arming', 'pending', 'triggered'])
              or now() - states.alarm_control_panel.master.last_changed < timedelta(minutes=1)
              or is_state('alert.alarm_zone_sync', 'on')
              or is_state('binary_sensor.alarm_open_sensor_alert', 'on')
              or is_state('binary_sensor.alarm_bypassed_sensor_alert', 'on')
              or is_state('alert.door_lock_jammed', 'on')
              or is_state('alert.door_lock_failed', 'on'))
            and is_state('input_boolean.alarm_enabled', 'on')
            and is_state('input_boolean.startup_pending', 'off') }}

    - name: "Danger Alarm"
      unique_id: danger_alarm
      device_class: safety
      state: >
        {{ (is_state('binary_sensor.smoke_alarm', 'on')
              or is_state('binary_sensor.co_alarm', 'on')
              or is_state('binary_sensor.heat_alarm', 'on'))
            and is_state('alarm_control_panel.master', 'triggered') }}

- sensor:
    - name: "Master Alarm Status"
      unique_id: master_alarm_status
      icon: >
        {% from 'alarm.jinja' import alarm_icon %}
        {{ alarm_icon('alarm_control_panel.master') }}
      state: >
        {% from 'alarm.jinja' import alarm_state %}
        {{ alarm_state('alarm_control_panel.master') }}

    - name: "House Alarm Status"
      unique_id: house_alarm_status
      icon: >
        {% from 'alarm.jinja' import alarm_icon %}
        {{ alarm_icon('alarm_control_panel.house') }}
      state: >
        {% from 'alarm.jinja' import alarm_state %}
        {{ alarm_state('alarm_control_panel.house') }}

    - name: "Garage Alarm Status"
      unique_id: garage_alarm_status
      icon: >
        {% from 'alarm.jinja' import alarm_icon %}
        {{ alarm_icon('alarm_control_panel.garage') }}
      state: >
        {% from 'alarm.jinja' import alarm_state %}
        {{ alarm_state('alarm_control_panel.garage') }}

- sensor:
    #ISSUE https://github.com/iMicknl/ha-nest-protect/issues/58
    #TEMP until issue fixed  https://community.home-assistant.io/t/date-device-class-relative-display/412469
    - name: "Nest Protect Upstairs Replace"
      unique_id: nest_protect_upstairs_replace
      icon: mdi:calendar-account-outline
      device_class: timestamp
      state: >
        {{ states('sensor.nest_protect_upstairs_replace_by') | as_datetime | as_local
            if has_value('sensor.nest_protect_upstairs_replace_by') else none }}

    - name: "Nest Protect Downstairs Replace"
      unique_id: nest_protect_downstairs_replace
      icon: mdi:calendar-account-outline
      device_class: timestamp
      state: >
        {{ states('sensor.nest_protect_upstairs_replace_by') | as_datetime | as_local
            if has_value('sensor.nest_protect_upstairs_replace_by') else none }}
