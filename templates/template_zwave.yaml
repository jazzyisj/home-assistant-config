###############################################################################
## Template - ZWave
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: sensor.time
  binary_sensor:
    - name: "ZWave Network"
      unique_id: zwave_network
      icon: mdi:z-wave
      device_class: connectivity
      state: >
        {{ (is_state('binary_sensor.z_wave_js_running','on')
              or is_state('binary_sensor.z_wave_js_to_mqtt_running','on'))
            and integration_entities('zwave_js')|select('has_value')|list|count > 0 }}

- binary_sensor:
    - name: "ZWave Network Alert"
      unique_id: zwave_network_alert
      icon: mdi:z-wave
      device_class: problem
      delay_on: 300
      state: >
        {{ is_state('binary_sensor.zwave_network','off')
            and is_state('input_boolean.hass_alerts','on') }}

    - name: "ZWave Device Alert"
      unique_id: zwave_device_alert
      icon: mdi:z-wave
      device_class: problem
      delay_on: 300
      state: "{{ states('sensor.offline_zwave_devices')|int > 0 }}"
      availability: "{{ is_number(states('sensor.offline_zwave_devices')) }}"

- sensor:
    - name: "ZWave Status"
      unique_id: zwave_status
      icon: mdi:z-wave
      state: >
        {% if is_state('binary_sensor.zwave_network','off') %} critical
        {% else %} {{ iif(states('sensor.offline_zwave_devices')|int(-1) > 0,'warning','ok') }}
        {% endif %}

    - name: "Offline ZWave Devices"
      unique_id: offline_zwave_devices
      icon: mdi:z-wave
      unit_of_measurement: devices
      state: >
        {{ state_attr(this.entity_id,'entity_id')|count
            if state_attr(this.entity_id,'entity_id') != none else none }}
      attributes:
        entity_id: >
          {{ expand(integration_entities('zwave_js'))
              |selectattr('entity_id', 'search', 'node_status')
              |selectattr('state','in',['dead','unavailable','unknown'])
              |map(attribute="object_id")
              |map('regex_replace', find='(.*)_node_status', replace='button.\\1_ping', ignorecase=False)
              |list|sort }}
