- binary_sensor:
    - name: Alarm Clock Active
      unique_id: alarm_clock_active
      icon: mdi:alarm-note
      delay_off: 2 # allow media player volumes to change, prevent automation.media_player_volume_changed trigger
      state: >
        {{ is_state('input_boolean.alarm_clock_active_auto','on')
            or is_state('input_boolean.alarm_clock_active_manual','on')
            or is_state('input_boolean.alarm_clock_active_nap','on') }}

    - name: Alarm Clock Active Alert
      unique_id: alarm_clock_active_alert
      icon: mdi:clock
      delay_on: 5 # allow booleans to turn back off in check conditions w/o triggering alert
      state: > # no alerts when user is testing alarm play
        {{ is_state('input_boolean.alarm_clock_alerts','on')
            and is_state('input_boolean.alarm_clock_test_play','off')
            and is_state('binary_sensor.alarm_clock_active','on')
            and is_state('input_boolean.alarm_clock_snooze','off') }}

    - name: Alarm Clock Snoozed Alert
      unique_id: alarm_clock_snoozed_alert
      icon: mdi:sleep
      state: > # no alerts when user is testing alarm play
        {{ is_state('input_boolean.alarm_clock_alerts','on')
            and is_state('input_boolean.alarm_clock_test_play','off')
            and is_state('binary_sensor.alarm_clock_active','on')
            and is_state('input_boolean.alarm_clock_snooze','on') }}

    - name: Alarm Clock Pending
      unique_id: alarm_clock_pending_alert
      icon: mdi:clock-alert
      state: >
        {{ is_state('input_boolean.alarm_clock_alerts','on')
            and not states('sensor.alarm_clock_next_alarm') in ['Snooze','Active']
            and (is_state('binary_sensor.bedtime_active','on')
              or is_state('input_select.occupancy_mode','Night')) }}

    - name: Alarm Clock Presence
      unique_id: alarm_clock_presence_alert
      icon: mdi:clock-alert
      state: >
        {{ is_state('input_boolean.alarm_clock_alerts','on')
            and is_state('binary_sensor.alarm_clock_active','on')
            and (is_state('binary_sensor.someone_home','off')
              or is_state('input_select.occupancy_mode','Away')) }}

    - name: Alarm Clock Failed
      unique_id: alarm_clock_failed
      delay_on: 15
      state: >
        {% if is_state('input_boolean.alarm_clock_failed','on') %} true
        {% elif is_state('input_boolean.startup_pending','on')
          or is_state('input_boolean.alarm_clock_resume','on')
          or is_state('script.alarm_clock_play','on')
          or is_state('script.alarm_clock_stop','on')
          or is_state('script.tts_play','on')
          or is_state('input_boolean.tts_playing','on') %} false
        {% elif is_state('binary_sensor.alarm_clock_active','on') and is_state('sensor.alarm_clock_status','off') %} true
        {% else %} false
        {% endif %}

- sensor:
    - name: Alarm Clock Media Player
      unique_id: alarm_clock_media_player
      icon: mdi:animation-play
      state: >
        {{ expand(state_attr('sensor.media_players','players'))
            |selectattr('name','eq',states('input_select.alarm_clock_media_player'))
            |map(attribute='entity_id')|join('') }}
      attributes:
        players: >
          {% set player = states('sensor.alarm_clock_media_player') %}
          {{ expand(state_attr('sensor.media_players_single','players'))
              |selectattr('attributes.' ~ player.split('.')[1],'eq',true)|map(attribute='entity_id')|list
                if is_state_attr(player,'type','group') else [player] }}

    - name: Alarm Clock Status
      unique_id: alarm_clock_status
      state: >
        {% if is_state('binary_sensor.alarm_clock_failed','on') %} failed
        {% elif is_state('binary_sensor.alarm_clock_active','on') %}
          {% if is_state('input_boolean.alarm_clock_snooze','on') %}
            {{ 'snoozed' if is_state('timer.alarm_clock_snooze','active') else 'failed' }}
          {% elif is_state(states('sensor.alarm_clock_media_player'),'playing') %} playing
          {% elif is_state(states('sensor.alarm_clock_media_player'),'paused')
              and not is_state('input_boolean.alarm_clock_snooze','on')%} failed
          {% elif states('sensor.alarm_clock_next_alarm') == 'Active' %} pending
          {% else %} off
          {% endif %}
        {% else %}{{ 'off' if is_state('sensor.alarm_clock_next_alarm','Off') else 'pending' }}
        {% endif %}

    - name: Auto Alarm
      unique_id: alarm_clock_auto
      icon: >
        {% if is_state('sensor.alarm_clock_auto','Snooze')  %} mdi:alarm-snooze
        {% elif is_state('sensor.alarm_clock_auto','Active') %} mdi:alarm-note
        {% elif is_state('sensor.alarm_clock_auto','Off') %} mdi:alarm-off
        {% else %} mdi:alarm-check
        {% endif %}
      state: >
        {% set time = states('sensor.time') %}
        {% set days = states('input_datetime.days_waketime')[0:5] %}
        {% set afts = states('input_datetime.afternoons_waketime')[0:5] %}
        {% set wkd = states('input_datetime.weekend_waketime')[0:5] %}
        {% set guest = states('input_datetime.guest_waketime')[0:5] %}
        {% set wake_tom = states('sensor.waketime_tomorrow') %}

        {% if is_state('input_select.occupancy_mode','Guest') %}
          {# set tomorrows alarm time #}
          {% if is_state('binary_sensor.workday_tomorrow','off') %}
            {% set alarm_tom = 'Off' if is_state('input_boolean.alarm_clock_guest','off') else wake_tom %}
          {% else %}
            {% set alarm_tom = 'Off' if is_state('input_boolean.alarm_clock_guest','off') else wake_tom %}
          {% endif %}
          {# set next alarm to tomorrows alarm time if past today alarm time #}
          {% if is_state('binary_sensor.workday','off') %}
            {% set next = alarm_tom if time > guest else 'Off' if is_state('input_boolean.alarm_clock_guest','off') else guest %}
          {% else %}
            {% set next = alarm_tom if time > guest else 'Off' if is_state('input_boolean.alarm_clock_guest','off') else guest %}
          {% endif %}
        {% else %}
          {# set tomorrows alarm time #}
          {% if is_state('binary_sensor.work_tomorrow','off') %}
            {% set alarm_tom = 'Off' if is_state('input_boolean.alarm_clock_auto_weekends','off') else wake_tom %}
          {% else %}
            {% set alarm_tom = 'Off' if is_state('input_boolean.alarm_clock_auto_workdays','off') else days if is_state('sensor.tomorrow_shift','Days') else wake_tom %}
          {% endif %}
          {# set next alarm to tomorrows alarm time if past today alarm time #}
          {% if is_state('binary_sensor.work_today','off') %}
            {% set next = alarm_tom if time > wkd else 'Off' if is_state('input_boolean.alarm_clock_auto_weekends','off') else wkd %}
          {% else %}
            {% if is_state('sensor.current_shift','Afternoons') %}
              {% set next = alarm_tom if time > afts else 'Off' if is_state('input_boolean.alarm_clock_auto_workdays','off') else afts %}
            {% else %}
              {% set next = alarm_tom if time > days else 'Off' if is_state('input_boolean.alarm_clock_auto_workdays','off') else days %}
            {% endif %}
          {% endif %}
        {% endif %}
        {{ next }}

    - name: Auto Alarm
      unique_id: alarm_clock_auto_display # display 12h time
      icon: "{{ states.sensor.alarm_clock_auto.attributes.icon }}"
      state: >
        {{ states('sensor.alarm_clock_auto') if states('sensor.alarm_clock_auto') in ['Off','Active','unknown','unavailable','none']
            else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.alarm_clock_auto'))|timestamp_custom('%-I:%M %p') }}

    - name: Manual Alarm
      unique_id: alarm_clock_manual # alarm status in glance alerts, alarm settings popup
      icon: >
        {% if is_state('sensor.alarm_clock_manual','Snooze') %} mdi:alarm-snooze
        {% elif is_state('sensor.alarm_clock_manual','Active') %} mdi:alarm-note
        {% elif is_state('sensor.alarm_clock_manual','Off') %} mdi:alarm-off
        {% else %} mdi:alarm-check
        {% endif %}
      state: >
        {% if is_state('input_boolean.alarm_clock_active_manual','on') and is_state('input_boolean.alarm_clock_snooze','on') %} Snooze
        {% elif is_state('input_boolean.alarm_clock_active_manual','on') %} Active
        {% elif is_state('input_boolean.alarm_clock_manual','on') %}
          {{ as_timestamp(states('sensor.date') ~ ' ' ~ states('input_datetime.alarm_clock_manual_time')[0:5])|timestamp_custom('%H:%M',true) }}
        {% else %} Off
        {% endif %}

    - name: Manual Alarm
      unique_id: alarm_clock_manual_display # display 12h time
      icon : "{{ states.sensor.alarm_clock_manual.attributes.icon }}"
      state: >
        {{ states('sensor.alarm_clock_manual') if states('sensor.alarm_clock_manual') in ['Off','Active','Snoozed','unknown','unavailable','none']
            else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.alarm_clock_manual'))|timestamp_custom('%-I:%M %p') }}

    - name: Nap Alarm
      unique_id: alarm_clock_nap # alarm status in glance alerts, alarm settings popup
      icon: >
        {% if is_state('sensor.alarm_clock_nap','Snooze') %} mdi:alarm-snooze
        {% elif is_state('sensor.alarm_clock_nap','Active') %} mdi:alarm-note
        {% elif is_state('sensor.alarm_clock_nap','Off') %} mdi:alarm-off
        {% else %} mdi:alarm-check
        {% endif %}
      state: >
        {% if is_state('input_boolean.alarm_clock_active_nap','on')
            and is_state('input_boolean.alarm_clock_snooze','on') %} Snooze
        {% elif is_state('input_boolean.alarm_clock_active_nap','on') %} Active
        {% elif is_state('input_boolean.alarm_clock_nap','on') %}
          {{ as_timestamp(state_attr('timer.alarm_clock_nap','finishes_at'))|timestamp_custom('%H:%M',true) }}
        {% else %} Off
        {% endif %}

    - name: Nap Alarm
      unique_id: alarm_clock_nap_display # display 12h time
      icon: "{{ states.sensor.alarm_clock_nap.attributes.icon }}"
      state: >
        {{ states('sensor.alarm_clock_nap') if states('sensor.alarm_clock_nap') in ['Off','Active','Snoozed','unknown','unavailable','none']
            else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.alarm_clock_nap'))|timestamp_custom('%-I:%M %p') }}

    - name: Next Alarm
      unique_id: alarm_clock_next_alarm # earliest of auto, manual, phone
      icon: >
        {% if is_state('sensor.alarm_clock_nap','Off') %} mdi:alarm
        {% elif is_state('input_boolean.alarm_clock_snooze','on') %} mdi:alarm-snooze
        {% elif is_state('binary_sensor.alarm_clock_active','on') %} mdi:alarm-note
        {% else %} mdi:alarm-check
        {% endif %}
      state: >
        {% set time = states('sensor.time') %}
        {% set auto = '99:99' if states('sensor.alarm_clock_auto') in ['Off','Snooze','Active']
            else states('sensor.alarm_clock_auto') %}
        {% set manual = '99:99' if states('sensor.alarm_clock_manual') in ['Off','Snooze','Active']
            else states('sensor.alarm_clock_manual') %}
        {% set nap = '99:99' if states('sensor.alarm_clock_nap') in ['Off','Snooze','Active']
            else states('sensor.alarm_clock_nap') %}
        {% set jalarm = '99:99' if is_state('binary_sensor.jason_home','off')
            or states('sensor.jphone_alarm_clock') in ['Off','unknown','unavailable','none']
              else states('sensor.jphone_alarm_clock') %}
        {% set salarm = '99:99' if is_state('binary_sensor.sheri_home','off')
            or states('sensor.sphone_alarm_clock') in ['Off','unknown','unavailable','none']
              else states('sensor.sphone_alarm_clock') %}
        {% set next = [auto,manual,nap,jalarm,salarm]|min %}
        {{ 'Active' if is_state('binary_sensor.alarm_clock_active','on') else ('Off' if next == '99:99' else next) }}
      attributes:
        alarm_source: >
          {% set next = states('sensor.alarm_clock_next_alarm') %}
          {% if next in ['Active','Off','unknown','unavailable','none'] %} none
          {% elif next == states('sensor.alarm_clock_auto') %} auto
          {% elif next == states('sensor.alarm_clock_manual') %} manual
          {% elif next == states('sensor.alarm_clock_nap') %} nap
          {% elif next == as_timestamp(states('sensor.jphone_next_alarm'))|timestamp_custom('%H:%M',true) %} jphone
          {% elif next == as_timestamp(states('sensor.sphone_next_alarm'))|timestamp_custom('%H:%M',true) %} sphone
          {% endif %}

    - name: Next Alarm
      unique_id: alarm_clock_next_alarm_display # display 12h time
      icon: "{{ states.sensor.alarm_clock_next_alarm.attributes.icon }}"
      state: >
        {{ states('sensor.alarm_clock_next_alarm') if states('sensor.alarm_clock_next_alarm') in ['Off','Active','Snoozed','unknown','unavailable','none']
            else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.alarm_clock_next_alarm'))|timestamp_custom('%-I:%M %p') }}
