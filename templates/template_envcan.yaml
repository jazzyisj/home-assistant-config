- binary_sensor:
    - name: EnvCan Connected
      unique_id: envcan_connected
      icon: mdi:weather-hurricane
      device_class: connectivity
      state: "{{ states('sensor.temperature')|lower not in ['unknown','unavailable','none'] }}"

    # EnvCan Alert  https://weather.gc.ca/warnings/index_e.html
    # conditions list least severe to most -> last to match is attribute value
    - name: EnvCan Alert
      unique_id: envcan_alert
      icon: mdi:weather-hurricane
      device_class: safety
      state: >
        {{ states('sensor.statements')|lower not in ['','unknown','unavailable','none']
            or states('sensor.advisories')|lower not in ['','unknown','unavailable','none']
            or states('sensor.watches')|lower not in ['','unknown','unavailable','none']
            or states('sensor.warnings')|lower not in ['','unknown','unavailable','none'] }}
      attributes:
        severity: >
          {% if states('sensor.warnings')|lower not in ['','unknown','unavailable','none'] %} warning
          {% elif states('sensor.watches')|lower not in ['','unknown','unavailable','none'] %} watch
          {% elif states('sensor.advisories')|lower not in ['','unknown','unavailable','none'] %} advisory
          {% elif states('sensor.statements')|lower not in ['','unknown','unavailable','none'] %} statement
          {% endif %}
        condition: >
          {% set condition = namespace(value='') %}
          {% set conditions = ['smog','snowfall','blowing snow','rainfall','storm surge','wind','freezing rain','extreme cold','winter storm','snow squall','wreckhouse wind','hail','blizzard','tornado'] %}
          {% set severity = state_attr('binary_sensor.envcan_alert','severity') %}
          {% if severity == 'warning' %}{% set sensor = 'sensor.warnings' %}
          {% elif severity == 'watch' %}{% set sensor = 'sensor.watches' %}
          {% elif severity == 'advisory' %}{% set sensor = 'sensor.advisories' %}
          {% elif severity == 'statement' %}{% set sensor = 'sensor.statements' %}
          {% endif %}
          {% if sensor is defined %}
            {% for item in conditions %}
              {% if item in states['sensor.dark_sky_alerts'].attributes.description_0.split('###', 1)|lower %}{% set condition.value = conditions[loop.index0] %}{% endif %}
            {% endfor %}
          {% endif %}
          {{ condition.value }}