###############################################################################
## Templates - PiHole
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: binary_sensor.pi_hole
      from:
        - unknown
        - unavailable

    - platform: state
      entity_id: binary_sensor.pi_hole
      to:
        - unknown
        - unavailable
  binary_sensor:
    - name: "PiHole Connected"
      unique_id: pihole_connected
      icon: mdi:pi-hole
      device_class: problem
      delay_on: 300
      state: >
        {{ expand(integration_entities('pi_hole'))
            |rejectattr('state','in',['unknown','unavailable'])|list|count > 0 }}

- binary_sensor:
    - name: "PiHole Connected Alert"
      unique_id: pihole_connected_alert
      icon: mdi:pi-hole
      device_class: problem
      delay_on: 300
      state: >
        {{ (is_state('binary_sensor.pihole_connected','off')
            or is_state('device_tracker.pi_hole','away'))
            and is_state('input_boolean.network_alerts','on') }}

    - name: "PiHole Disabled Alert"
      unique_id: pihole_disabled_alert
      icon: mdi:pi-hole
      device_class: running
      delay_on: 3600
      state: >
        {{ is_state('sensor.pi_hole_status','Disabled')
          and is_state('input_boolean.network_alerts','on') }}

- sensor:
    # https://github.com/ironsheep/RPi-Reporter-MQTT2HA-Daemon
    - name: "RPi Memory Use Percent"
      unique_id: rpi_memory_use_percent
      icon: mdi:memory
      unit_of_measurement: "%"
      state: >
        {% if state_attr('sensor.rpi_monitor_raspberrypi','memory') != none %}
          {% set total = state_attr('sensor.rpi_monitor_raspberrypi','memory')['size_mb']|float(-1) %}
          {% set free = state_attr('sensor.rpi_monitor_raspberrypi','memory')['free_mb']|float(-1) %}
          {{ ((total - free) / total * 100)|int(-1) }}
        {% endif %}
