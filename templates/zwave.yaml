###############################################################################
## Template - ZWave
###############################################################################
- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: time_pattern
      minutes: "/5"
  binary_sensor:
    - name: "ZWave Network"
      unique_id: zwave_network
      picture: !secret ZWAVE_JS_ICON
      device_class: connectivity
      state: >
        {{ (is_state('binary_sensor.z_wave_js_running', 'on')
              or is_state('binary_sensor.z_wave_js_to_mqtt_running', 'on'))
            and is_state('sensor.zwave_controller_status', 'ready')
            and integration_entities('zwave_js') | select('has_value') | list | count > 0 }}

- binary_sensor:
    - name: "ZWave Network Alert"
      unique_id: zwave_network_alert
      device_class: problem
      delay_on: 300
      state: >
        {{ is_state('binary_sensor.zwave_network', 'off')
            and is_state('input_boolean.zwave_alerts', 'on') }}

    - name: "Offline ZWave Device Alert"
      unique_id: offline_zwave_device_alert
      icon: mdi:z-wave
      device_class: problem
      delay_on: 60
      state: >
        {{ states('sensor.offline_zwave_devices') | int(-1) > 0
            and is_state('input_boolean.zwave_alerts', 'on')
            and is_state('input_boolean.startup_pending', 'off') }}

- sensor:
    - name: "Offline ZWave Devices"
      unique_id: offline_zwave_devices
      icon: mdi:z-wave
      state_class: measurement
      state: >
        {% set entities = state_attr('group.offline_zwave_devices', 'entity_id') %}
        {{ entities | count if entities != none else -1 }}

    - name: "ZWave Status"
      unique_id: zwave_status
      icon: mdi:z-wave
      state: >
        {% if is_state('binary_sensor.zwave_network', 'off') %} critical
        {% elif states('sensor.offline_zwave_devices') | int(-1) > 0 %} warning
        {% else %} ok
        {% endif %}
