- binary_sensor:
    - unique_id: pollen_connected
      name: Pollen Connected
      icon: "{{ 'mdi:flower' if is_state('binary_sensor.pollen_connected','on') else 'mdi:alert-circle' }}"
      device_class: connectivity
      state: >
        {{ not states('sensor.allergy_index_today')|lower in ['unknown','unavailable','none']
            and not states('sensor.asthma_index_today')|lower in ['unknown','unavailable','none'] }}

    - unique_id: pollen_connected_alert
      name: Pollen Connected Alert
      icon: mdi:flower
      state: "{{ is_state('binary_sensor.pollen_connected','off') and is_state('input_boolean.weather_alerts','on') }}"

    - unique_id: openuv_connected
      name: OpenUV Connected
      icon: "{{ 'mdi:weather-sunny-alert' if is_state('binary_sensor.openuv_connected','on') else 'mdi:alert-circle' }}"
      device_class: connectivity
      state: "{{ not states('sensor.current_uv_index')|lower in ['unknown','unavailable','none'] }}"

    - unique_id: openuv_connected_alert
      name: OpenUV Connected Alert
      icon: mdi:weather-sunny-alert
      state: "{{ is_state('binary_sensor.openuv_connected','off') and is_state('input_boolean.weather_alerts','on') }}"

    - unique_id: waqi_connected
      name: WAQI Connected
      icon: "{{ 'mdi:smog' if is_state('binary_sensor.waqi_connected','on') else 'mdi:alert-circle' }}"
      device_class: connectivity
      state: "{{ not states('sensor.waqi_windsor')|lower in ['unknown','unavailable','none'] }}"

    - unique_id: waqi_connected_alert
      name: WAQI Connected Alert
      icon: mdi:smog
      state: "{{ is_state('binary_sensor.waqi_connected','off') and is_state('input_boolean.weather_alerts','on') }}"

    - unique_id: flu_connected
      name: Flu Connected
      icon: "{{ 'mdi:biohazard' if is_state('binary_sensor.flu_connected','on') else 'mdi:alert-circle' }}"
      device_class: connectivity
      state: "{{ not states('sensor.cdc_level')|lower in ['unknown','unavailable','none'] }}"

    - unique_id: flu_connected_alert
      name: Flu Connected Alert
      icon: mdi:biohazard
      state: "{{ is_state('binary_sensor.flu_connected','off') and is_state('input_boolean.weather_alerts','on') }}"

    - unique_id: weather_alert_active
      state: "{{ is_state('binary_sensor.noaa_weather_alert','on') or is_state('binary_sensor.envcan_weather_alert','on') }}"

    - unique_id: air_quality_alert
      state: "{{ states('sensor.waqi_windsor')|int > 100  and is_state('input_boolean.weather_alerts','on') }}"

    - unique_id: uv_risk_alert
      state: "{{ states('sensor.sensor.max_uv_index')|int > 6 and is_state('input_boolean.weather_alerts','on') }}"

    - unique_id: weather_led_alert
      state: >
        {{ is_state('binary_sensor.envcan_weather_alert','on')
            or is_state('binary_sensor.noaa_weather_alert','on')
            or is_state('binary_sensor.outdoor_low_temperature_alert','on')
            or is_state('binary_sensor.outdoor_high_temperature_alert','on')
            or is_state('binary_sensor.storm_approaching_alert','on') }}

    - unique_id: outdoor_high_temperature_alert
      state: >
        {{ states('sensor.climacell_feels_like')|int > states('input_number.outdoor_high_temperature_threshold')|int
            and is_state('input_boolean.weather_alerts','on') }}
      availability: >
        {{ is_state('binary_sensor.climacell_connected','on')
            and not states('sensor.climacell_feels_like')|lower in ['unknown','unavailable','none'] }}

    - unique_id: outdoor_low_temperature_alert
      state: >
        {{ states('sensor.climacell_feels_like')|int < states('input_number.outdoor_low_temperature_threshold')|int
            and is_state('input_boolean.weather_alerts','on') }}
      availability: >
        {{ is_state('binary_sensor.climacell_connected','on')
            and not states('sensor.climacell_feels_like')|lower in ['unknown','unavailable','none'] }}

    - unique_id: asthma_risk_alert
      state: "{{ is_state('sensor.asthma_risk_today','High') and is_state('input_boolean.weather_alerts','on') }}"

    - unique_id: allergy_risk_alert
      state: "{{ is_state('sensor.allergy_risk_today','High') and is_state('input_boolean.weather_alerts','on') }}"

    - unique_id: flu_risk_alert
      state: > # No Data, Minimal, Low, Moderate, High, None  #IDEA kill CDC?
        {{ (states('sensor.cdc_level')|lower in ['moderate','high']
            or states('sensor.cold_flu_index_today')|float > 4.9
            or states('sensor.cold_flu_forecasted_average')|float > 4.9)
              and is_state('input_boolean.weather_alerts','on') }}

    - unique_id: storm_approaching_alert #DARKSKY
      icon: mdi:weather-lightning-rainy
      state: >
        {{ (states('sensor.climacell_precipitation_probability_0h')|int >= 40
              or states('sensor.climacell_precipitation_probability_1h')|int >= 40)
            and states('sensor.dark_sky_nearest_storm_distance')|int < 5
            and not states('sensor.dark_sky_nearest_storm_distance')|lower in ['unknown','unavailable','none']
            and is_state('input_boolean.weather_alerts','on') }}

    - unique_id: tornado_alert
      icon: mdi:weather-hurricane
      device_class: safety
      state: >
        {{ 'tornado' in states('sensor.warnings')|lower
            or (is_state_attr('binary_sensor.noaa_weather_alert','condition','tornado')
              and states('input_select.current_noaa_alert_severity') in ['severe','extreme']) }}
- sensor:
    - unique_id: temperature_alert # for weather card
      name: Temperature Alert
      icon: >
        {% if is_state('binary_sensor.outdoor_high_temperature_alert','on') %} mdi:thermometer-alert
        {% elif is_state('binary_sensor.outdoor_low_temperature_alert','on') %} mdi:thermometer-alert
        {% else %} mdi:thermometer
        {% endif %}
      state: >
        {% if is_state('binary_sensor.outdoor_high_temperature_alert','on') %} Heat
        {% elif is_state('binary_sensor.outdoor_low_temperature_alert','on') %} Cold
        {% else %} Off
        {% endif %}

    - unique_id: temperature_trend # for weather card
      name: Temperature Trend
      icon: >
        {% if is_state('binary_sensor.climacell_temperature_rising','on') %} mdi:arrow-up-circle
        {% elif is_state('binary_sensor.climacell_temperature_falling','on') %} mdi:arrow-down-circle
        {% else %} mdi:minus-circle
        {% endif %}
      state: >
        {% if is_state('binary_sensor.climacell_temperature_rising','on') %} Rising
        {% elif is_state('binary_sensor.climacell_temperature_falling','on') %} Falling
        {% else %} Steady
        {% endif %}

    - unique_id: pressure_trend # for weather card
      name: Pressure Trend
      icon: >
        {% if is_state('binary_sensor.pressure_rising','on') %} mdi:arrow-up-circle
        {% elif is_state('binary_sensor.pressure_falling','on') %} mdi:arrow-down-circle
        {% else %} mdi:minus-circle
        {% endif %}
      state: >
        {% if is_state('binary_sensor.pressure_rising','on') %} Rising
        {% elif is_state('binary_sensor.pressure_falling','on') %} Falling
        {% else %} Steady
        {% endif %}

    - name: Moon Phases
      unique_id: moon_phases
      picture: >
        {% if is_state('sensor.moon','new_moon') %} /local/images/moon_phases/new_moon.jpg
        {% elif is_state('sensor.moon','waxing_crescent') %} /local/images/moon_phases/waxing_crescent.jpg
        {% elif is_state('sensor.moon','first_quarter') %} /local/images/moon_phases/first_quarter.jpg
        {% elif is_state('sensor.moon','waxing_gibbous') %} /local/images/moon_phases/waxing_gibbous.jpg
        {% elif is_state('sensor.moon','full_moon') %} /local/images/moon_phases/full_moon.jpg
        {% elif is_state('sensor.moon','waning_gibbous') %} /local/images/moon_phases/waning_gibbous.jpg
        {% elif is_state('sensor.moon','last_quarter') %} /local/images/moon_phases/last_quarter.jpg
        {% elif is_state('sensor.moon','waning_crescent') %} /local/images/moon_phases/waning_crescent.jpg
        {% endif %}
      state: "{{ states('sensor.moon')|replace('_',' ')|title }}"

    - name: Allergy Risk Today # https://www.home-assistant.io/integrations/iqvia/
      unique_id: allergy_risk_today
      icon: mdi:flower
      state: >
        {% set level = states('sensor.allergy_index_today')|float %}
        {% if level < 2.5 %} Low
        {% elif level < 4.9 %} Low-Medium
        {% elif level < 7.3 %} Medium
        {% elif level < 9.7 %} Medium-High
        {% else %} High
        {% endif %}
      availability: >
        {{ is_state('binary_sensor.pollen_connected','on')
          and not states('sensor.allergy_index_today')|lower in ['unknown','unavailable','none'] }}

    - unique_id: allergy_risk_tomorrow
      name: Allergy Risk Tomorrow
      icon: mdi:flower
      state: >
        {% set level = states('sensor.allergy_index_tomorrow')|float %}
        {% if level < 2.5 %} Low
        {% elif level < 4.9 %} Low-Medium
        {% elif level < 7.3 %} Medium
        {% elif level < 9.7 %} Medium-High
        {% else %} High
        {% endif %}
      availability: >
        {{ is_state('binary_sensor.pollen_connected','on')
          and not states('sensor.allergy_index_tomorrow')|lower in ['unknown','unavailable','none'] }}

    - unique_id: asthma_risk_today
      name: Asthma Risk Today
      icon: mdi:lungs
      state: >
        {% set level = states('sensor.asthma_index_today')|float %}
        {% if level < 2.5 %} Low
        {% elif level < 4.9 %} Low-Medium
        {% elif level < 7.3 %} Medium
        {% elif level < 9.7 %} Medium-High
        {% else %} High
        {% endif %}
      availability: >
        {{ is_state('binary_sensor.pollen_connected','on')
          and not states('sensor.asthma_index_today')|lower in ['unknown','unavailable','none'] }}

    - unique_id: asthma_risk_tomorrow
      name: Asthma Risk Tomorrow
      icon: mdi:lungs
      state: >
        {% set level = states('sensor.asthma_index_tomorrow')|float %}
        {% if level < 2.5 %} Low
        {% elif level < 4.9 %} Low-Medium
        {% elif level < 7.3 %} Medium
        {% elif level < 9.7 %} Medium-High
        {% else %} High
        {% endif %}
      availability: >
        {{ is_state('binary_sensor.pollen_connected','on')
          and not states('sensor.asthma_index_tomorrow')|lower in ['unknown','unavailable','none'] }}

    - unique_id: uv_risk_today # https://www.openuv.io/uvindex
      name: UV Risk Today
      icon: mdi:weather-sunny
      state: >
        {% set level = states('sensor.max_uv_index')|int %}
        {% if level < 3 %} Low
        {% elif level < 7 %} Moderate
        {% elif level < 9 %} High
        {% else %} Very High
        {% endif %}
      availability: >
        {{ is_state('binary_sensor.openuv_connected','on')
            and not states('sensor.max_uv_index')|lower in ['unknown','unavailable','none'] }}

    - unique_id: aqi_risk_level
      name: AQI Risk Level
      icon: mdi:smog
      state: >
        {% set level = states('sensor.waqi_windsor')|int %}
        {% if level < 51 %} Good
        {% elif level < 101 %} Moderate
        {% elif level < 101 %} Unhealthy Sensitive Groups
        {% elif level < 201 %} Unhealthy
        {% elif level < 301 %} Very Unhealthy
        {% else %} Hazardous
        {% endif %}
      availability: >
        {{ is_state('binary_sensor.waqi_connected','on')
            and not states('sensor.waqi_windsor')|lower in ['unknown','unavailable','none'] }}

    - unique_id: flu_risk_level
      name: Flu Risk Level
      icon: mdi:biohazard
      state: >
        {% set level = states('sensor.cold_flu_index_today')|int %}
        {% if level < 2.5 %} Low
        {% elif level < 4.9 %} Low-Medium
        {% elif level < 7.3 %} Medium
        {% elif level < 9.7 %} Medium-High
        {% else %} High
        {% endif %}
