###############################################################################
## Templates - Lights
###############################################################################
- binary_sensor:
    - name: 'Lights On'
      unique_id: lights_on
      icon: >
        {% if (is_state('binary_sensor.nighttime_illuminance_lights','on')
              or is_state('binary_sensor.daytime_illuminance_lights','on'))
            and is_state('binary_sensor.lights_on','on') %} mdi:lightbulb-on
        {% elif is_state('binary_sensor.nighttime_illuminance_lights','on')
              or is_state('binary_sensor.daytime_illuminance_lights','on') %} mdi:lightbulb-on-outline
        {% elif is_state('binary_sensor.lights_on','on') %} mdi:lightbulb
        {% else %} mdi:lightbulb-outline
        {% endif %}
      device_class: light
      state: >
        {% if state_attr('binary_sensor.lights_on','entities') != none %}
          {{ state_attr('binary_sensor.lights_on','entities')|count > 0 }}
        {% endif %}
      attributes:
        entities: "{{ expand('group.lights')|selectattr('state','eq','on')|map(attribute='entity_id')|list }}"

    - name: 'Light In Use'
      unique_id: light_in_use
      icon: mdi:light-switch
      state: >
        {% if state_attr('binary_sensor.light_in_use','entities') != none %}
          {{ state_attr('binary_sensor.light_in_use','entities')|count > 0 }}
        {% endif %}
      attributes:
        entities: "{{ expand('group.light_timers')|selectattr('state','ne','idle')|map(attribute='entity_id')|list }}"

    - name: 'Daytime Illuminance Lights'
      unique_id: daytime_illuminance_lights
      icon: mdi:brightness-7
      # keep on at least 15 minutes
      delay_off: "{{ 0 if is_state('binary_sensor.daytime_illuminance_lights','unknown') else 900 }}"
      state: >
        {% if is_number(states('sensor.outdoor_illuminance')) %}
          {{ is_state('input_boolean.day_lights_enabled','on')
              and is_state('binary_sensor.nighttime_illuminance_lights','off')
              and states('sensor.outdoor_illuminance')|int(0)
                <= states('input_number.day_illuminance_threshold')|int(0) }}
        {% endif %}

    - name: 'Nighttime Illuminance Lights'
      unique_id: nighttime_illuminance_lights
      icon: mdi:brightness-4
      state: >
        {% if is_state('input_boolean.night_lights_override','on') %} true
        {% elif is_state('input_boolean.night_lights_enabled','on') %}
          {% if is_number(states('sensor.outdoor_illuminance')) %}
            {{ states('sensor.outdoor_illuminance')|int
                < states('input_number.night_illuminance_threshold')|int }}
          {% else %}
            {% set time = states('sensor.time') %}
            {% set sun = states('sensor.windsor_elevation')|float('unknown') %}
            {% if is_number(sun) %}
              {{ (sun < states('input_number.lighting_on_sun_elevation')|int(0) and time > '12:00')
                    or (sun < states('input_number.lighting_off_sun_elevation')|int(0) and time < '12:00') }}
            {% endif %}
          {% endif %}
        {% endif %}

    - name: 'Bathroom Illuminance Light'
      unique_id: bathroom_illuminance_light
      icon: mdi:brightness-4
      state: >
        {% if is_state('binary_sensor.nighttime_illuminance_lights','on')
            or is_state('binary_sensor.daytime_illuminance_lights','on') %} true
        {% else %}
          {% if is_number(states('sensor.bathroom_sensor_illuminance')) %}
            {{ states('sensor.bathroom_sensor_illuminance')|int(0) <= states('input_number.bathroom_illuminance_threshold')|int(0) }}
          {% endif %}
        {% endif %}

    - name: 'Light Scene Active'
      unique_id: light_scene_active
      icon: mdi:movie-filter
      state: >
        {{ is_state('script.morning_lights','on')
            or is_state('script.bedtime_lights','on')
            or is_state('binary_sensor.scene_active','on') }}

- sensor:
    - name: 'Outdoor Illuminance'
      unique_id: outdoor_illuminance
      icon: mdi:brightness-7
      device_class: illuminance
      state_class: measurement
      unit_of_measurement: lx
      state: >
        {% if is_number(states('sensor.weatherflow_brightness')) %}
          {{ states('sensor.weatherflow_brightness')|float }}
        {% elif is_number(states('sensor.tempest_st_00057689_illuminance')) %}
          {{ states('sensor.tempest_st_00057689_illuminance')|float }}
        {% endif %}
      attributes:
        provider: >
          {% if is_number(states('sensor.weatherflow_visibility')) %} Weatherflow Cloud
          {% elif is_number(states('sensor.tempest_st_00057689_illuminance')) %} Weatherflow
          {% endif %}
      availability: >
        {{ is_number(states('sensor.weatherflow_brightness'))
            or is_number(states('sensor.tempest_st_00057689_illuminance')) }}

    - name: 'Flux Color General'
      unique_id: flux_color_general
      icon: mdi:google-nearby # used for flux setting template entity in UI
      state: >
        {% if is_state('switch.light_flux_dining_room','on') %}
          {{ states('sensor.flux_color_dining_room') }}
        {% elif is_state('switch.light_flux_bathroom','on') %}
          {{ states('sensor.flux_color_bathroom') }}
        {% else %} var(--state-icon-color)
        {% endif %}

    - name: 'Flux Color Dining Room'
      unique_id: flux_color_dining_room
      state: >
        {% if is_state('switch.light_flux_dining_room','on') %}
            {% if is_state('light.dining_room_rgb_light','on') %}
              rgb{{ state_attr('light.dining_room_rgb_light','rgb_color') }}
            {% else %} var(--state-icon-color)
            {% endif %}
        {% else %} var(--state-icon-color)
        {% endif %}
      attributes:
        rgb_color: "{{ state_attr('light.dining_room_rgb_light','rgb_color') }}"

    - name: 'Flux Color Bathroom'
      unique_id: flux_color_bathroom
      state: >
        {% if is_state('switch.light_flux_bathroom','on') %}
            {% if is_state('light.bathroom_vanity_rgb_light','on') %}
              rgb{{ state_attr('light.bathroom_vanity_rgb_light','rgb_color') }}
            {% else %} var(--state-icon-color)
            {% endif %}
        {% else %} var(--state-icon-color)
        {% endif %}
      attributes:
        rgb_color: "{{ state_attr('light.bathroom_vanity_rgb_light','rgb_color') }}"

    - name: 'Day Night'
      unique_id: day_night
      icon: "{{ 'mdi:weather-sunny' if is_state('sun.sun','above_horizon') else 'mdi:weather-night' }}"
      state: "{{ 'Day' if is_state('sun.sun','above_horizon') else 'Night' }}"
