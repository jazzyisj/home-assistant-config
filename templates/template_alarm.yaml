###############################################################################
## Templates - Alarm
###############################################################################
- binary_sensor:
    - name: 'Alarm Connected'
      unique_id: alarm_connected
      icon: "{{ 'mdi:alarm-light' if is_state('binary_sensor.alarm_connected','on') else 'mdi:alert-circle' }}"
      device_class: connectivity
      state: "{{ not states('alarm_control_panel.master')|lower in ['unknown','unavailable','none'] }}"

    - name: 'Alarm Connected Alert'
      unique_id: alarm_connected_alert
      icon: mdi:alert-circle
      state: >
        {{ is_state('binary_sensor.alarm_connected','off')
            and is_state('input_boolean.alarm_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Alarm Disabled Alert'
      unique_id: alarm_disabled_alert
      device_class: connectivity
      delay_on: 10 # allow to turn back off if armed
      state: >
        {{ (is_state('input_boolean.alarm_automation','off')
              or is_state('input_boolean.alarm_auto_arming','off'))
            and is_state('input_boolean.alarm_alerts','on') }}

    - name: 'Alarm Auto Arming Disabled'
      unique_id: alarm_auto_arming_disabled # reverse bool for lovelace glance menus
      icon: mdi:account-arrow-right
      state: "{{ is_state('input_boolean.alarm_auto_arming','off') and is_state('input_boolean.alarm_automation','on') }}"

    # alarm is disconnected, arming, pending or triggered
    # alarm state changed within last 5 minutes, forces precedence over presence led etc.
    - name: 'Alarm LED Alert'
      unique_id: alarm_led_alert
      state: >
        {{ is_state('binary_sensor.alarm_connected','off')
            or states('alarm_control_panel.master') in ['arming','pending','triggered']
            or now() - states.alarm_control_panel.master.last_changed < timedelta(minutes=5) }}

    - name: 'Alarm Pending Alert'
      unique_id: alarm_pending_alert
      delay_on:
        seconds: 2 # allow input_text.current_alarm to populate
      state: >
        {{ is_state('alarm_control_panel.master','pending')
            and is_state('input_boolean.alarm_alerts','on') }}

    - name: 'Alarm Disarmed Alert'
      unique_id: alarm_disarmed_alert
      delay_on:
        minutes: 5 # wait to see if someone comes home
      state: >
        {{ is_state('alarm_control_panel.master','disarmed')
            and is_state('binary_sensor.someone_home','off')
            and is_state('input_boolean.alarm_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    #TODO garage disarmed alert
    # notification, action - arm garage alarm

    - name: 'Alarm Open Sensor Alert'
      unique_id: alarm_open_sensor_alert
      icon: mdi:alarm-light
      state: >
        {{ is_state('alarm_control_panel.master','disarmed')
            and state_attr('alarm_control_panel.master','open_sensors')|lower != 'none'
            and is_state('binary_sensor.alarm_bypassed_sensor_alert','off')
            and is_state('input_boolean.alarm_alerts','on') }}

    - name: 'Alarm Bypassed Sensor Alert'
      unique_id: alarm_bypassed_sensor_alert
      icon: mdi:alarm-light
      state: >
        {{ not is_state('alarm_control_panel.master','disarmed')
            and state_attr('alarm_control_panel.master','bypassed_sensors')|lower != 'none'
            and is_state('input_boolean.alarm_alerts','on') }}

- sensor:
    - name: 'Alarm Type'
      unique_id: alarm_type # used for picture entity card
      state: >
        {% if is_state('binary_sensor.tornado_alert','on') %} tornado
        {% elif is_state('input_boolean.alarm_pending','on') or is_state('input_boolean.alarm_triggered','on') %} burglar
        {% endif %}

    - name: 'Alarm Status'
      unique_id: alarm_status
      icon: >
        {% if is_state('binary_sensor.alarm_connected','off') %} mdi:shield-remove
        {% elif is_state('input_boolean.alarm_automation','off') %} mdi:shield-off
        {% elif is_state('alarm_control_panel.master','disarmed') %} mdi:shield-check
        {% elif is_state('alarm_control_panel.master','armed_home') %} mdi:shield-home
        {% elif is_state('alarm_control_panel.master','armed_night') %} mdi:shield-moon
        {% elif is_state('alarm_control_panel.master','armed_away') %} mdi:shield-lock
        {% elif is_state('alarm_control_panel.master','arming') %} mdi:shield-half-full
        {% elif is_state('alarm_control_panel.master','pending') %} mdi:shield-alert-outline
        {% elif is_state('alarm_control_panel.master','triggered') %} mdi:shield-alert
        {% else %} mdi:alert
        {% endif %}
      state: >
        {% if is_state('binary_sensor.alarm_connected','off') %} Disconnected
        {% elif is_state('input_boolean.alarm_automation','off') %} Disabled
        {% else %}{{ states('alarm_control_panel.master')|replace('_',' ')|title }}
        {% endif %}

    - name: 'Alarm Status Garage'
      unique_id: alarm_status_garage
      icon: >
        {% if is_state('binary_sensor.alarm_connected','off') %} mdi:shield-remove
        {% elif is_state('input_boolean.alarm_automation','off') %} mdi:shield-off
        {% elif is_state('alarm_control_panel.garage','disarmed') %} mdi:shield-check
        {% elif is_state('alarm_control_panel.garage','armed_home') %} mdi:shield-home
        {% elif is_state('alarm_control_panel.garage','armed_night') %} mdi:shield-moon
        {% elif is_state('alarm_control_panel.garage','armed_away') %} mdi:shield-lock
        {% elif is_state('alarm_control_panel.garage','arming') %} mdi:shield-half-full
        {% elif is_state('alarm_control_panel.garage','pending') %} mdi:shield-alert-outline
        {% elif is_state('alarm_control_panel.garage','triggered') %} mdi:shield-alert
        {% else %} mdi:alert
        {% endif %}
      state: >
        {% if is_state('binary_sensor.alarm_connected','off') %} Disconnected
        {% elif is_state('input_boolean.alarm_automation','off') %} Disabled
        {% else %}{{ states('alarm_control_panel.garage')|replace('_',' ')|title }}
        {% endif %}
