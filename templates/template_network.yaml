###############################################################################
## Templates - Network
###############################################################################
- button:
    - name: "Reboot Router"
      unique_id: reboot_router
      icon: mdi:router
      press:
        - service: asusrouter.service_reboot

- binary_sensor:
    - name: "WIFI AP Upstairs Connected Alert"
      unique_id: wifi_ap_upstairs_connected_alert
      icon: mdi:wifi
      device_class: problem
      state: >
        {{ not is_state('device_tracker.wifi_ap_upstairs','home')
            and is_state('input_boolean.network_alerts','on') }}

    - name: "WIFI AP Garage Connected Alert"
      unique_id: wifi_ap_garage_connected_alert
      icon: mdi:wifi
      device_class: problem
      state: >
        {{ not is_state('device_tracker.wifi_ap_garage','home')
            and is_state('input_boolean.network_alerts','on') }}

    - name: "Speedtest Connected"
      unique_id: speedtest_connected
      icon: mdi:speedometer
      device_class: connectivity
      state:
        "true" # >
        # {{ expand(integration_entities('speedtestdotnet'))
        #     |rejectattr('state','in',['unknown','unavailable'])|list|count > 0 }}

    - name: "Speedtest Connected Alert"
      unique_id: speedtest_connected_alert
      icon: mdi:speedometer
      device_class: problem
      state: >
        {{ is_state('binary_sensor.speedtest_connected','off')
            and is_state('input_boolean.network_alerts','on') }}

    - name: "WAN Connected Alert"
      unique_id: wan_connected_alert
      icon: mdi:wan
      device_class: problem
      delay_on: 60
      state: >
        {{ is_state('binary_sensor.wan_connected','off')
            and is_state('input_boolean.network_alerts','on') }}

    - name: "Unknown Device Alert"
      unique_id: unknown_device_alert
      device_class: problem
      state: >
        {{ states('sensor.unknown_devices')|int(0) > 0
            and is_state('input_boolean.network_alerts','on') }}

    - name: "Bluetooth Alert" #ISSUE this doesn't really detect if bluetooth actually running
      unique_id: bluetooth_alert
      icon: mdi:bluetooth-off
      device_class: problem
      state: >
        {{ states.device_tracker|selectattr('attributes.device_type','defined')
              |selectattr('attributes.device_type','eq','bluetooth')
              |selectattr('state','eq','home')|list|count == 0 }}

- sensor:
    - name: "Network Status"
      unique_id: network_status
      icon: mdi:home-assistant
      state: >
        {% if is_state('binary_sensor.wan_connected','off') %} critical
        {% elif  is_state('sensor.pi_hole_status','Disconnected') %} severe
        {% elif is_state('sensor.pi_hole_status','Disabled')
            or states('sensor.speedtest_download')|int(-1) < 100
            or states ('sensor.speedtest_upload')|int(-1) < 100
            or states('sensor.speedtest_ping')|int(-1) > 50
            or is_state('alert.unknown_device','on') %} warning
        {% elif states('sensor.speedtest_download')|int(-1) < 150
            or states ('sensor.speedtest_upload')|int(-1) < 150
            or states('sensor.speedtest_ping')|int(-1) > 25
            or is_state('binary_sensor.pi_hole_ftl_update_available','on')
            or is_state('binary_sensor.pi_hole_core_update_available','on')
            or is_state('binary_sensor.pi_hole_web_update_available','on') %} minor
        {% else %} normal
        {% endif %}

    - name: "Unknown Devices"
      unique_id: unknown_devices
      icon: mdi:devices
      unit_of_measurement: devices
      state: >
        {% set c = state_attr(this.entity_id,'entity_id') %}
        {% if c != none %} {{ c|count }} {% endif %}
      attributes:
        entity_id: >
          {{ states.device_tracker
              |rejectattr('attributes.device_type','in',['wired','wireless','bluetooth','location'])
              |map(attribute='entity_id')|list }}

    - name: "Wireless Network Devices"
      unique_id: wireless_network_devices
      icon: mdi:access-point-network
      unit_of_measurement: devices
      state: >
        {% set c = state_attr(this.entity_id,'entity_id') %}
        {% if c != none %} {{ c|count }} {% endif %}
      attributes:
        entity_id: >
          {{ states.device_tracker
              |selectattr('attributes.device_type','eq','wireless')
              |map(attribute='entity_id')|list }}

    - name: "Wired Network Devices"
      unique_id: wired_network_devices
      icon: mdi:router-network
      unit_of_measurement: devices
      state: >
        {% set c = state_attr(this.entity_id,'entity_id') %}
        {% if c != none %} {{ c|count }} {% endif %}
      attributes:
        entity_id: >
          {{ states.device_tracker
              |selectattr('attributes.device_type','eq','wired')
              |map(attribute='entity_id')|list }}

    - name: "Bluetooth Devices"
      unique_id: bluetooth_devices
      icon: mdi:bluetooth-settings
      unit_of_measurement: devices
      state: >
        {% set c = state_attr(this.entity_id,'entity_id') %}
        {% if c != none %} {{ c|count }} {% endif %}
      attributes:
        entity_id: >
          {{ states.device_tracker|selectattr('attributes.device_type','eq','bluetooth')
              |map(attribute='entity_id')|list }}

    - name: "HASS Data Recieved"
      unique_id: hass_gb_received
      icon: mdi:wifi
      state_class: total_increasing
      unit_of_measurement: GB # MiB to GB
      state: "{{ '%0.2f'|format(states('sensor.network_in_eth0')|float(-1)/953.6743164062) }}"
      availability: "{{ is_number(states('sensor.network_in_eth0')) }}"

    - name: "HASS Data Sent"
      unique_id: hass_gb_sent
      icon: mdi:wifi
      state_class: total_increasing
      unit_of_measurement: GB # MiB to GB
      state: "{{ '%0.2f'|format(states('sensor.network_out_eth0')|float(-1)/953.6743164062) }}"
      availability: "{{ is_number(states('sensor.network_out_eth0')) }}"

    - name: "HASS Received Speed"
      unique_id: hass_mbps_received
      icon: mdi:wifi
      state_class: measurement
      unit_of_measurement: Mbit/s # MB/s to Mbit/s
      state: "{{ '%0.2f'|format(states('sensor.network_throughput_in_eth0')|float(-1)*8) }}"
      availability: "{{ is_number(states('sensor.network_throughput_in_eth0')) }}"

    - name: "HASS Sent Speed"
      unique_id: hass_mbps_sent
      icon: mdi:wifi
      state_class: measurement
      unit_of_measurement: Mbit/s # MB/s to Mbit/s
      state: "{{ '%0.2f'|format(states('sensor.network_throughput_out_eth0')|float(-1)*8) }}"
      availability: "{{ is_number(states('sensor.network_throughput_out_eth0')) }}"
