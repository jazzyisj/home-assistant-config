- binary_sensor:
    - name: 'WIFI AP Upstairs Connected'
      unique_id: wifi_ap_upstairs_connected
      icon: mdi:wifi
      device_class: connectivity
      state: "{{ is_state('device_tracker.wifi_ap_upstairs','home') }}"

    - name: 'WIFI AP Upstairs Connected Alert'
      unique_id: wifi_ap_upstairs_connected_alert
      icon: mdi:wifi
      delay_on:
        minutes: 1 # allow for temporary disconnections before alerting
      state: >
        {{ is_state('binary_sensor.wifi_ap_upstairs_connected','off')
            and is_state('input_boolean.network_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'Speedtest Connected'
      unique_id: speedtest_connected
      icon: mdi:speedometer
      device_class: connectivity
      state: "{{ states('sensor.speedtest_download')|lower not in ['unknown','unavailable','none'] }}"

    - name: 'Speedtest Connected Alert'
      unique_id: speedtest_connected_alert
      icon: mdi:speedometer
      state: >
        {{ is_state('binary_sensor.speedtest_connected','off')
            and is_state('input_boolean.network_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'WAN Connected Alert'
      unique_id: wan_connected_alert
      icon: mdi:wan
      delay_on:
        minutes: 5 # allow for temporary disconnections before alerting
      state: >
        {{ is_state('binary_sensor.wan_connected','off')
            and is_state('input_boolean.network_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

    - name: 'PiHole Disconnected Alert'
      unique_id: pihole_disconnected_alert
      icon: mdi:pi-hole
      delay_on:
        minutes: 5 # allow for temporary disconnections before alerting
      state: >-
        {{ states('sensor.pi_hole_domains_blocked')|lower in ['unknown','unavailable','none']
            and is_state('input_boolean.network_alerts','on')
            and is_state('input_boolean.startup_pending','off') }}

- sensor:
    - name: 'JNET Router Uptime Verbose'
      unique_id: jnet_router_uptime_verbose
      icon: mdi:wifi
      state: > # sensor.jnet_router_uptime is seconds
        {%- set uptime = states('sensor.jnet_router_uptime')|int(-1) -%}
        {%- set TIME_MAP = {
            'w': (uptime / 604800) % 604800,
            'd': (uptime / 86400) % 7,
            'h': (uptime / 3600) % 24,
            'm': (uptime / 60) % 60,
            's': (uptime % 60) } -%}
        {%- if TIME_MAP.w|int > 0 %}{{ TIME_MAP.w|int ~ ' weeks'}}, {% endif %}
        {%- if TIME_MAP.d|int > 0 %}{{ TIME_MAP.d|int ~ ' days'}}, {% endif %}
        {%- if TIME_MAP.h|int > 0 %}{{ TIME_MAP.h|int ~ ' hours'}}, {% endif %}
        {%- if TIME_MAP.m|int > 0 %}{{ TIME_MAP.m|int ~ ' minutes'}}{% endif %}

    - name: 'JNET Router Last Boot'
      unique_id: jnet_router_last_boot_date_time
      icon: mdi:wifi
      state: > #TODO sensor.jnet_router_uptime is seconds
        {% set date = (now().timestamp() - states('sensor.jnet_router_uptime')|int(-1))|timestamp_custom('%d',true,'unknown') %}
        {% set date = '{:01}'.format(date|int(0)) %}
        {% if date in ('1','21','31') %}{% set date = date ~ 'st' %}
        {% elif now().day in ('2','22') %}{% set date = date ~ 'nd' %}
        {% elif now().day in ('3','23') %}{% set date = date ~ 'rd' %}
        {% else %}{% set date = date ~ 'th' %}
        {% endif %}
        {{ states('sensor.last_boot')|as_timestamp('unknown')|timestamp_custom('%H:%M on %a',true,'unknown') }} {{ date }} {{ states('sensor.last_boot')|as_timestamp('unknown')|timestamp_custom('%b %Y',true,'unknown') }}
