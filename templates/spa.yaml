###############################################################################
## Templates - Spa
## https://github.com/jazzyisj/home-assistant-config/issues/29
###############################################################################
- button:
    - name: "Spa Water Change Reset"
      unique_id: spa_water_change_reset
      icon: mdi:hot-tub
      press:
        - service: browser_mod.notification
          data:
            message: "Resetting Spa Water Change date."
            duration: 30000

- trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type: event_template_reloaded

    - platform: state
      entity_id: sensor.time
  binary_sensor:
    - name: "Balboa Connected"
      unique_id: balboa_connected
      picture: !secret BALBOA_ICON
      device_class: connectivity
      state: >
        {{ integration_entities('balboa') | select('has_value') | list | count > 0
            and is_state('device_tracker.balboa_spa', 'home') }}

- binary_sensor:
    - name: "Balboa Connected Alert"
      unique_id: balboa_connected_alert
      device_class: problem
      delay_on: 3600
      state: >
        {{ is_state('binary_sensor.balboa_connected', 'off')
            and is_state('input_boolean.spa_alerts', 'on') }}

    - name: "Hot Tub Energy Monitor Connected"
      unique_id: hot_tub_energy_monitor_connected
      device_class: connectivity
      state: >
        {{ is_state('device_tracker.hot_tub_energy_monitor', 'home')
            and has_value('sensor.hot_tub_energy_monitor_channel_1_energy') }}

    - name: "Spa Low Temperature Alert"
      unique_id: spa_low_temperature_alert
      device_class: cold
      delay_on: 900
      state: >
        {{ states('sensor.spa_temperature') | int < states('input_number.spa_low_temperature_threshold') | int
            and is_state('input_boolean.spa_alerts', 'on') }}
      availability: "{{ is_number(states('sensor.spa_temperature')) }}"

    - name: "Spa Water Change Alert"
      unique_id: spa_water_change_alert
      icon: mdi:hot-tub
      state: >
        {{ now() - states('button.spa_water_change_reset') | as_datetime > timedelta(days=90)
            and is_state('input_boolean.spa_alerts', 'on') }}
      availability: "{{ has_value('button.spa_water_change_reset') }}"

    # req for spa heating history stats
    - name: "Spa Heating"
      unique_id: spa_heating
      device_class: heat #TEST
      state: "{{ is_state_attr('climate.spa', 'hvac_action', 'heating') }}"

- sensor:
    - name: "Spa Temperature"
      unique_id: spa_temperature
      icon: mdi:thermometer
      device_class: temperature
      unit_of_measurement: "°C"
      state: "{{ state_attr('climate.spa', 'current_temperature') | float }}"
      availability: "{{ is_number(state_attr('climate.spa', 'current_temperature')) }}"

    - name: "Spa Target Temperature"
      unique_id: spa_target_temperature
      icon: mdi:thermometer
      device_class: temperature
      unit_of_measurement: "°C"
      state: "{{ state_attr('climate.spa', 'temperature') | float }}"
      availability: "{{ is_number(state_attr('climate.spa', 'temperature')) }}"

    - name: "Hot Tub Power"
      unique_id: hot_tub_power
      icon: mdi:lightning-bolt
      device_class: power
      state_class: measurement
      unit_of_measurement: W
      state: >
        {{ states('sensor.hot_tub_energy_monitor_channel_1_power') | float(0)
            + states('sensor.hot_tub_energy_monitor_channel_2_power') | float(0) }}
      availability: >
        {{ is_number(states('sensor.hot_tub_energy_monitor_channel_1_power'))
            or is_number(states('sensor.hot_tub_energy_monitor_channel_2_power')) }}
