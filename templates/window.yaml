###############################################################################
## Templates - Window
###############################################################################
- binary_sensor:
    - name: "Window Sensor Override"
      unique_id: window_sensor_override
      state: >
        {% set entities = state_attr(this.entity_id, 'entity_id') %}
        {{ entities | count > 0 if entities != none else false }}
      attributes:
        entity_id: >
          {{ expand(expand('group.windows') | map(attribute='entity_id') | list
              | map('regex_replace', find='binary_sensor(.*)',
              replace='input_boolean\\1', ignorecase=False) | list)
                | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list | sort }}

    - name: "Window Open Alert"
      unique_id: window_open_alert
      device_class: problem
      state: >
        {% set open_alert = namespace(value=false) %}
        {% set open_sensors = state_attr('alarm_control_panel.house', 'open_sensors') %}
        {% set bypassed_sensors = state_attr('alarm_control_panel.house', 'bypassed_sensors') %}
        {% set open_windows = expand('group.windows')
            | selectattr('state', 'eq', 'on')
            | map(attribute='entity_id') | list %}
          {% for item in open_windows %}
            {% set entity = item ~ '_open_alert' %}
            {% if (open_sensors != none and (item in open_sensors or entity in open_sensors))
                or (bypassed_sensors != none and (item in bypassed_sensors or entity in bypassed_sensors)) %}
              {% set open_alert.value = true  %}
              {% break %}
            {% endif %}
          {% endfor %}
        {{ open_alert.value }}

    - name: "Window Bypassed Alert"
      unique_id: window_bypassed_alert
      device_class: problem
      state: >
        {% set bypass_alert = namespace(value=false) %}
        {% set bypassed_sensors = state_attr('alarm_control_panel.house', 'bypassed_sensors') %}
        {% set windows = expand('group.windows')
            | map(attribute='entity_id') | list %}
          {% for item in windows %}
            {% set entity = item ~ '_open_alert' %}
            {% if bypassed_sensors != none and (item in bypassed_sensors or entity in bypassed_sensors) %}
              {% set bypass_alert.value = true  %}
              {% break %}
            {% endif %}
          {% endfor %}
        {{ bypass_alert.value }}

    - name: "Bedroom Front Window Open Alert"
      unique_id: bedroom_front_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.bedroom_front_window', 'on')
            and is_state('input_boolean.bedroom_front_window', 'on') }}

    - name: "Bedroom Side Window Open Alert"
      unique_id: bedroom_side_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.bedroom_side_window', 'on')
            and is_state('input_boolean.bedroom_side_window', 'on') }}

    - name: "Downstairs Kitchen Window Open Alert"
      unique_id: downstairs_kitchen_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.downstairs_kitchen_window', 'on')
            and is_state('input_boolean.downstairs_kitchen_window', 'on') }}

    - name: "Kitchen Sink Window Open Alert"
      unique_id: kitchen_sink_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.kitchen_sink_window', 'on')
            and is_state('input_boolean.kitchen_sink_window', 'on') }}

    - name: "Kitchen Window Open Alert"
      unique_id: kitchen_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.kitchen_window', 'on')
            and is_state('input_boolean.kitchen_window', 'on') }}

    - name: "Family Room Window Open Alert"
      unique_id: family_room_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.family_room_window', 'on')
            and is_state('input_boolean.family_room_window', 'on') }}

    - name: "Laundry Room Window Open Alert"
      unique_id: laundry_room_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.laundry_room_window', 'on')
            and is_state('input_boolean.laundry_room_window', 'on') }}

    - name: "Living Room 1 Window Open Alert"
      unique_id: living_room_1_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.living_room_1_window', 'on')
            and is_state('input_boolean.living_room_1_window', 'on') }}

    - name: "Living Room 2 Window Open Alert"
      unique_id: living_room_2_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.living_room_2_window', 'on')
            and is_state('input_boolean.living_room_2_window', 'on') }}

    - name: "Living Room 3 Window Open Alert"
      unique_id: living_room_3_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.living_room_3_window', 'on')
            and is_state('input_boolean.living_room_3_window', 'on') }}

    - name: "Living Room 4 Window Open Alert"
      unique_id: living_room_4_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.living_room_4_window', 'on')
            and is_state('input_boolean.living_room_4_window', 'on') }}

    - name: "Master Bathroom Window Open Alert"
      unique_id: master_bathroom_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.master_bathroom_window', 'on')
            and is_state('input_boolean.master_bathroom_window', 'on') }}

    - name: "Master Bedroom Window Open Alert"
      unique_id: master_bedroom_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.master_bedroom_window', 'on')
            and is_state('input_boolean.master_bedroom_window', 'on') }}

    - name: "Office Window Open Alert"
      unique_id: office_window_open_alert
      device_class: window
      state: >
        {{ is_state('binary_sensor.office_window', 'on')
            and is_state('input_boolean.office_window', 'on') }}
