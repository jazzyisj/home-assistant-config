personal:
  # Main Interface Colors
  primary-color: "#0C507D" #TEST "#5F9BEA" #STYLE
  light-primary-color: "#75A0BD"
  primary-background-color: "#171717"
  secondary-background-color: "#3E3E3E"
  other-background-color: "#545454"
  divider-color: var(--secondary-background-color)

  # Text
  primary-text-color: "#BDC1C6"
  secondary-text-color: "#F3F3F3"
  text-primary-color: "#D6D6D6"
  disabled-text-color: "#717171"

  # Header:
  app-header-background-color: var(--primary-background-color)
  app-header-text-color: var(--primary-text-color)

  # Sidebar Menu
  sidebar-icon-color: var(--primary-text-color)
  sidebar-text-color: var(--primary-text-color)
  sidebar-background-color: var(--primary-background-color)
  sidebar-selected-background-color: var(--other-background-color)
  sidebar-selected-icon-color: var(--primary-color)
  sidebar-selected-text-color: var(--sidebar-selected-icon-color)

  # States and Badges
  state-icon-color: var(--primary-text-color)
  state-icon-active-color: var(--primary-color)
  state-icon-unavailable-color: var(--disabled-text-color)

  # Sliders
  paper-slider-knob-color: var(--primary-color)
  paper-slider-knob-start-color: var(--paper-slider-knob-color)
  paper-slider-pin-color: var(--paper-slider-knob-color)
  paper-slider-active-color: var(--paper-slider-knob-color)
  paper-slider-secondary-color: var(--other-background-color)

  # Labels
  label-badge-background-color: var(--primary-background-color)
  label-badge-text-color: var(--primary-text-color)
  label-badge-red: "#D06568"
  label-badge-green: "#80C884"
  label-badge-blue: "#33A1DE"
  label-badge-yellow: "#DFC271"
  label-badge-gray: "#5F6267"

  # Cards
  border-color: var(--other-background-color)
  ha-card-border-radius: "5px"
  ha-card-box-shadow: "inset 0px 0px 0px 1px var(--border-color)"
  ha-card-background: var(--primary-background-color)
  paper-listbox-background-color: var(--secondary-background-color)

  # Switches
  switch-checked-button-color: var(--primary-color)
  switch-checked-track-color: var(--other-background-color)
  switch-unchecked-button-color: var(--state-icon-color)
  switch-unchecked-track-color: var(--other-background-color)

  # Toggles
  paper-toggle-button-checked-button-color: var(--primary-color)
  paper-toggle-button-checked-bar-color: var(--other-background-color)
  paper-toggle-button-unchecked-button-color: var(--state-icon-color)
  paper-toggle-button-unchecked-bar-color: var(--other-background-color)

  # Table
  table-row-background-color: var(--primary-background-color)
  table-row-alternative-background-color: var(--secondary-background-color)
  data-table-background-color: var(--secondary-background-color)

  # Custom Variables
  entity-hassio-color: "#4B9BEF" # rgb(75, 155, 239)
  entity-spotify-color: "#1ED760" # rgb(30, 215, 96)
  entity-guest-color: "#4B9BEF" # rgb(75, 155, 239)

  entity-ok-color: "#007D23" # rgb(0, 125, 35)
  entity-minor-color: "#FFEE00" # rgb(255, 238, 0)
  entity-warning-color: "#C88200" # rgb(200, 130, 0)
  entity-severe-color: "#C85300" # rgb(200, 83, 0)
  entity-critical-color: "#C80000" # rgb(200, 0, 0)

  entity-high-temp-color: "#C80000" # reg(200, 0, 0)
  entity-low-temp-color: "#0000BF" # rgb(0, 0, 191)
  entity-high-humidity-color: "#0000BF" # rgb(0, 0, 191) #STYLE

  entity-dayshift-color: "#199691" # rgb(25, 150, 145)
  entity-afternoonshift-color: "#8C73EB" # rgb(140, 115, 235)
  entity-work-holiday-color: "#AA325F" # rgb(170, 50, 95)

  entity-heating-color: "#DE6000"
  entity-cooling-color: "#1602C9"
  entity-auto-color: var(--entity-ok-color)

  light-low-color: "#FFEFAD"
  light-med-color: "#FFE26D"
  light-high-color: "#FFCC00"

  alarm-disarmed-color: "#009100" # rgb(0, 145, 0)
  alarm-armed-home-color: "#00B9BF" # rgb(0, 185, 191)
  alarm-armed-night-color: "#7C00BF" # rgb(124, 0, 191)
  alarm-armed-away-color: "#BF0089" # rgb(191, 0, 37)
  alarm-arming-color: "#C9B124" # rgb(201, 177, 36)
  alarm-pending-color: "#C9B124" # rgb(201, 177, 36)
  alarm-triggered-color: "#BA3800" # rgb(186, 56, 0)

  alarm-clock-snooze-color: "#AA325F" # rgb(170, 50, 95)
  alarm-clock-active-color: "#FF9B14" # rgb(255, 155, 20)
  alarm-clock-pending-color: var(--state-icon-active-color)

  calendar-garbage-color: "#EBE65F" # rgb(235, 230, 95)
  calendar-recycle-color: "#32BEF0" # rgb(50, 190, 240)
  calendar-yardwaste-color: "#007D23" # rgb(0, 125, 35)

  card-mod-theme: personal #STYLE
  card-mod-root: |
    ha-icon {
      --mdc-icon-size: 50px;
    }

    app-toolbar {
      display: none;
    }

    mwc-icon-button[slot="trigger"] > ha-svg-icon {
      display: none;
    }

    mwc-icon-button[slot="trigger"]::after {
      font-size: 22px;
      height: 20px;
      width: 100px;
      margin-left: 0px;
      margin-right: 0px;
      content: "{{ states('sensor.time') }}";
      position: absolute;
      top: 14px;
      right: 0px;
    }


  card-mod-root-yaml: |
    paper-tabs$: |
      .not-visible {
        display: none;
      }

    .: |
      ha-menu-button {
        display: none !important;
      }

  card-mod-more-info: |
    ha-more-info-dialog {
      background: #00FF00 !important;
    }

  # state-badge:
  card-mod-glance: |
    :host {
      background: transparent;
      --mdc-icon-size: 30px;
    }

    state-badge {
      margin: 0px;
      padding: 0px;
    }

  #STYLE how do we only apply these in class basic entity cards
  card-mod-row: |
    button.brightness,
    button.switch,
    button.percentage {
      color: #000000;
      font-weight: bold;
    }

  card-mod-card: |
    ha-card.basic,
    ha-card.view_menu {
    }

    ha-card.media_launcher,
    ha-card.popup,
    ha-card.sub_card {
      border-radius: 0px !important;
    }

    ha-card.basic > .card-header {
      font-size: 22px;
      font-variant: small-caps;
    }

    ha-card.view_menu {
      font-size: 12px;
      font-weight: bold;
    }

    ha-card.view_menu > .card-header {
      font-size: 32px;
      font-variant: small-caps;
    }

    ha-card.popup > .card-header {
      font-variant: small-caps;
    }

    ha-card.sub_card {
      background: transparent !important;
      border: none !important;  /* #STYLE not working */
      margin: 0px !important;
      padding: 0px !important;
    }

    ha-card.alarm_timer {
      background: var(--alarm-arming-color);
    }

    ha-card.alarm_timer > .card-content{
      color: black;
      font-size: 22px;
      font-weight: bold;
      font-variant: small-caps;
    }

    ha-card.alarm_timer_entities {
      background: var(--alarm-arming-color);
    }

    ha-card.alarm_timer_entities > .card-content{
      color: black;
      font-size: 16px;
      font-weight: bold;
      font-variant: small-caps;
    }

# /* ha-card.sub_card > .card-content{
#   color: purple;
# }  */
# @keyframes blink {
#   50% {
#     --paper-item-icon-color: var(--entity-critical-color);
#   }
# }

# ha-card.alarm_timer > ha-icon {
#   animation: blink 1s linear infinite;
# }

# ha-card {
#   background: white;
# }

# ha-card.type-entities,
# ha-card.type-glance {
#   background: none;
#   backdrop-filter: none;
#   box-shadow:  none;
# }

#STYLE Template variable error: 'dict object' has no attribute 'entity' when rendering '@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(359deg); } } state-badge { {% if config.entity.startswith('fan.') and is_state(config.entity, 'on') %} animation: spin 4s infinite linear; {% endif %} }'

  # card-mod-card: |
  #   @keyframes spin {
  #     0% {
  #       transform: rotate(0deg);
  #     }
  #     100% {
  #       transform: rotate(359deg);
  #     }
  #   }
  #   ha-icon[data-domain="fan"][data-state="on"] {
  #     animation: spin 4s infinite linear;
  #   }

  # card-mod-row-yaml: |
  #   "*:first-child$": |
  #     @keyframes spin {
  #       0% {
  #         transform: rotate(0deg);
  #       }
  #       100% {
  #         transform: rotate(359deg);
  #       }
  #     }
  #     state-badge {
  #       {% if config.entity.startswith('fan.') and is_state(config.entity, 'on') %}
  #         animation: spin 4s infinite linear;
  #       {% endif %}
  #     }


