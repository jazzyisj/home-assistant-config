#######################################################################################################################
## Package - Climate
#######################################################################################################################
homeassistant:
  customize:
    automation.climate_occupancy_mode_control:
      friendly_name: Occupancy Climate Control
      icon: mdi:hvac

    alert.indoor_high_humidity:
      friendly_name: Indoor Humidity
      icon: mdi:water-percent
      category: climate
    alert.indoor_low_temperature:
      friendly_name: Indoor Low Temp
      icon: mdi:snowflake-alert
      category: climate
    alert.indoor_high_temperature:
      friendly_name: Indoor High Temp
      icon: mdi:thermometer-alert
      category: climate
    alert.upstairs_bathroom_mold_risk:
      friendly_name: Mold Risk
      icon: mdi:mushroom
      category: climate
    alert.hvac_window_door_open:
      friendly_name: HVAC Window/Door Open
      icon: mdi:hvac-off
      category: climate

    sensor.upstairs_bathroom_sensor_humidity:
      device_class: humidity
    sensor.thermostat_humidity:
      device_class: humidity
    sensor.upstairs_bathroom_mold_indicator:
      friendly_name: Upstairs Bathroom Mold Indicator
      device_class: humidity
      icon: mdi:mushroom

nest:
  client_id: !secret NEST_CLIENT_ID
  client_secret: !secret NEST_CLIENT_SECRET
  project_id: !secret NEST_PROJECT_ID
  subscriber_id: projects/data-segment-190620/subscriptions/hassio

input_select:
  set_hvac_mode:
    options:
      - auto
      - heat
      - cool
      - 'off'

input_boolean:
  climate_automation:
    name: Climate Automation
    icon: mdi:sync-alert

  climate_alerts:
    name: Climate Alerts
    icon: mdi:alert

input_number:
  home_heat_temperature:
    name: Home Heat
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5

  home_cool_temperature:
    name: Home Cool
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5

  night_heat_temperature:
    name: Night Heat
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5

  night_cool_temperature:
    name: Night Cool
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5

  guest_heat_temperature:
    name: Guest Heat
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5

  guest_cool_temperature:
    name: Guest Cool
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5

  high_humidity_threshold:
    name: Humidity Thershold
    icon: mdi:water-percent
    unit_of_measurement: '%'
    min: 0
    max: 100
    step: 1

  low_temperature_threshold:
    name: Low Temperature Threshold
    icon: mdi:thermometer-lines
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5

  high_temperature_threshold:
    name: "High Temperature Threshold"
    icon: mdi:thermometer-lines
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5

  mold_risk_threshold:
    name: "Mold Threshold"
    icon: mdi:mushroom
    unit_of_measurement: '%'
    min: 40
    max: 100
    step: 5

  bathroom_temperature_differential:
    name: "Bathroom Temperature Differential"
    icon: mdi:thermostat
    min: 1
    max: 20
    step: 0.5
    unit_of_measurement: °C

  bathroom_humidity_fan_threshold:
    name: "Bathroom Humidity Threshold"
    icon: mdi:water-percent
    min: 1
    max: 100
    step: 5
    unit_of_measurement: '%'

fan:
  - platform: template
    fans:
      hvac_fan: # template fan to enable control of HVAC fan from UI
        friendly_name: Furnace Fan
        value_template: "{{ 'on' if is_state_attr('climate.thermostat','fan_mode','on') else 'off' }}"
        turn_on: # set climate fan mode to on
          service: climate.set_fan_mode
          data:
            entity_id: climate.thermostat
            fan_mode: 'on'
        turn_off:  # set climate fan mode to auto
          service: climate.set_fan_mode
          data:
            entity_id: climate.thermostat
            fan_mode: 'off'
        speed_count: 2

binary_sensor:
  - platform: threshold # https://www.home-assistant.io/components/binary_sensor.threshold/
    name: "Humidity Level In Range"
    entity_id: sensor.thermostat_humidity
    lower: 30
    upper: 70
    hysteresis: 1.5

sensor:
  - platform: history_stats # https://www.home-assistant.io/integrations/history_stats/
    name: "Daily Heat Runtime"
    entity_id: sensor.thermostat_hvac_state
    state: heating
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      hours: 24

  - platform: history_stats
    name: "Daily AC Runtime"
    entity_id: sensor.thermostat_hvac_state
    state: cooling
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      hours: 24

  - platform: mold_indicator # https://www.home-assistant.io/components/sensor.mold_indicator/
    name: "Upstairs Bathroom Mold Indicator"
    indoor_temp_sensor: sensor.upstairs_bathroom_sensor_temperature
    indoor_humidity_sensor: sensor.upstairs_bathroom_sensor_humidity
    outdoor_temp_sensor: sensor.outdoor_temperature
    calibration_factor: 1.21

  - platform: statistics # https://www.home-assistant.io/components/sensor.statistics/
    entity_id: sensor.indoor_temperature
    name: "Indoor Temperature: Annual"
    max_age:
      days: 365
    precision: 1
    sampling_size: 500

  - platform: statistics # https://www.home-assistant.io/components/sensor.statistics/
    entity_id: sensor.indoor_humidity
    name: "Indoor Humidity: Annual"
    max_age:
      days: 365
    precision: 1
    sampling_size: 500

alert:
  indoor_low_temperature:
    name: "Indoor Low Temperature"
    title: "Indoor Low Temperature Alert"
    message: |
      {%- set thresh = states('input_number.low_temperature_threshold')|float -%}
      {%- set t = '%0.0f'|format(states('sensor.thermostat_temperature')|float)|float -%}
      {%- set b = '%0.0f'|format(states('sensor.upstairs_bathroom_sensor_temperature')|float)|float -%}
      {%- if t < thresh %} Indoor temperature: {{ t }}° {% endif %}
      {% if b < thresh %} Upstairs bathroom temperature: {{ b }}° {% endif %}
    done_message: clear_notification
    entity_id: binary_sensor.indoor_low_temperature_alert
    state: "on"
    repeat: 60
    notifiers: jason
    data:
      tag: indoor_low_temperature
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      clickAction: /lovelace/climate
      color: !secret WARNING_COLOR
      icon_url: !secret LOW_TEMP_ICON
      image: !secret LOW_TEMP_IMAGE
      actions:
        - action: pause_indoor_low_temperature
          title: "Pause Alert"

  indoor_high_temperature:
    name: "Indoor High Temperature"
    title: "Indoor High Temperature"
    message: |
      {%- set thresh = states('input_number.high_temperature_threshold')|float -%}
      {%- set t = '%0.0f'|format(states('sensor.thermostat_temperature')|float)|float -%}
      {%- set b = '%0.0f'|format(states('sensor.upstairs_bathroom_sensor_temperature')|float)|float -%}
      {%- if t > thresh %} Indoor temperature: {{ t }}° {% endif %}
      {% if b > thresh %} Upstairs bathroom temperature: {{ b }}° {% endif %}
    done_message: clear_notification
    entity_id: binary_sensor.indoor_high_temperature_alert
    state: "on"
    repeat: 60
    notifiers: jason
    data:
      tag: indoor_high_temperature
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      clickAction: /lovelace/climate
      color: !secret WARNING_COLOR
      icon_url: !secret HIGH_TEMP_ICON
      image: !secret HIGH_TEMP_IMAGE
      actions:
        - action: pause_indoor_high_temperature
          title: "Pause Alert"

  indoor_high_humidity:
    name: Indoor High Humidity
    title: Indoor High Humidity
    message: |
      {%- set thresh = states('input_number.high_humidity_threshold')|float -%}
      {%- set t = '%0.0f'|format(states('sensor.thermostat_humidity')|float)|float -%}
      {%- set b = '%0.0f'|format(states('sensor.upstairs_bathroom_sensor_humidity')|float)|float -%}
      {%- if t > thresh %} Indoor Humidity: {{ t }}% {% endif %}
      {% if b > thresh %} Upstairs Bathroom Humidity {{ b }}% {% endif %}
    done_message: clear_notification
    entity_id: binary_sensor.indoor_high_humidity_alert
    state: "on"
    repeat: 60
    notifiers: jason
    data:
      tag: indoor_high_humidity
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      clickAction: /lovelace/climate
      color: !secret WARNING_COLOR
      icon_url: !secret HIGH_HUMIDITY_ICON
      image: !secret HIGH_HUMIDITY_IMAGE
      actions:
        - action: pause_indoor_high_humidity
          title: Pause Alert

  upstairs_bathroom_mold_risk:
    name: Upstairs Bathroom Mold Risk
    title: Upstairs Bathroom Mold Risk
    message: "Mold Indicator: {{ states('sensor.upstairs_bathroom_mold_indicator') }}%"
    done_message: clear_notification
    entity_id: binary_sensor.upstairs_bathroom_mold_risk_alert
    state: "on"
    repeat: 1440
    notifiers: jason
    data:
      tag: upstairs_bathroom_mold_risk
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      clickAction: /lovelace/climate
      color: !secret WARNING_COLOR
      icon_url: !secret MOLD_ICON
      image: !secret MOLD_IMAGE
      actions:
        - action: pause_upstairs_bathroom_mold_risk
          title: Pause Alert

  hvac_window_door_open:
    name: HVAC Window Door Open
    title: HVAC On - Window/Door Open
    message: >-
      {% set entities = expand(state_attr('binary_sensor.window_open','entities')) %}
      {% set count = entities|count %}
      {%- for item in entities -%}
      {%- if not loop.first and count > 1 %}{{ '<br>'}}{% endif -%}
      - {{ item.name }}{% endfor -%}
    done_message: clear_notification
    entity_id: binary_sensor.hvac_window_door_open_alert
    state: 'on'
    repeat: 60
    notifiers: jason
    data:
      tag: hvac_window_door_open
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      clickAction: /lovelace/climate
      color: !secret WARNING_COLOR
      icon_url: !secret DOOR_ICON
      actions:
        - action: pause_hvac_window_open
          title: Pause Alert
