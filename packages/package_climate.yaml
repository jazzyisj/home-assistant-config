###############################################################################
## Package - Climate
###############################################################################
homeassistant:
  customize:
    alert.indoor_high_humidity:
      icon: mdi:water-percent
      category: climate
    alert.indoor_low_temperature:
      icon: mdi:snowflake-alert
      category: climate
    alert.indoor_high_temperature:
      icon: mdi:thermometer-alert
      category: climate
    alert.bathroom_mold_risk:
      icon: mdi:mushroom
      category: climate
    alert.hvac_window_door_open:
      icon: mdi:hvac-off
      category: climate
    alert.nest_disconnected:
      icon: mdi:thermostat-box
      category: climate

    sensor.bathroom_sensor_humidity:
      device_class: humidity
    sensor.thermostat_humidity:
      device_class: humidity
    sensor.bathroom_mold_risk:
      device_class: humidity
      icon: mdi:mushroom

    sensor.thermostat_cool_daily_runtime:
      state_class: total_increasing
    sensor.thermostat_heat_daily_runtime:
      state_class: total_increasing

nest:
  client_id: !secret NEST_CLIENT_ID
  client_secret: !secret NEST_CLIENT_SECRET
  project_id: !secret NEST_PROJECT_ID
  subscriber_id: projects/data-segment-190620/subscriptions/hassio

input_select:
  hvac_mode:
    options:
      - heat
      - cool
      - heat_cool
      - fan_only
      - 'off'

input_boolean:
  climate_automation:
    name: 'Climate Automation'
    icon: mdi:sync-alert
  climate_alerts:
    name: 'Climate Alerts'
    icon: mdi:alert
  hvac_presence_override:
    name: 'HVAC Presence Override'
    icon: mdi:hvac
  climate_occupancy_control:
    name: 'HVAC Occupancy Control'
    icon: mdi:hvac
  hvac_boost:
    name: 'HVAC Boost'
    icon: md:-unfold-more-horizontal

input_number:
  home_heat_temperature:
    name: 'Home Heat'
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5
  home_cool_temperature:
    name: 'Home Cool'
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5
  night_heat_temperature:
    name: 'Night Heat'
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5
  night_cool_temperature:
    name: 'Night Cool'
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5
  guest_heat_temperature:
    name: 'Guest Heat'
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5
  guest_cool_temperature:
    name: 'Guest Cool'
    icon: mdi:thermometer
    unit_of_measurement: °C
    min: 10
    max: 32
    step: 0.5
  high_humidity_threshold:
    name: 'Humidity Thershold'
    icon: mdi:water-percent
    unit_of_measurement: '%'
    min: 0
    max: 100
    step: 1
  low_temperature_threshold:
    name: 'Low Temp Thershold'
    icon: mdi:thermometer-lines
    unit_of_measurement: °C
    min: 5
    max: 15
    step: 0.5
  high_temperature_threshold:
    name: 'High Temp Thershold'
    icon: mdi:thermometer-lines
    unit_of_measurement: °C
    min: 25
    max: 35
    step: 0.5
  mold_risk_threshold:
    name: 'Mold Risk Thershold'
    icon: mdi:mushroom
    unit_of_measurement: '%'
    min: 40
    max: 100
    step: 5
  bathroom_temperature_differential:
    name: 'Bathroom Temp Differential'
    icon: mdi:thermostat
    min: 1
    max: 20
    step: 0.5
    unit_of_measurement: °C
  bathroom_humidity_threshold:
    name: 'Bathroom Humidity Thershold'
    icon: mdi:water-percent
    min: 1
    max: 100
    step: 5
    unit_of_measurement: '%'

fan:
  - platform: template
    fans:
      # template fan to enable control of HVAC fan from UI
      hvac_fan:
        friendly_name: 'HVAC Fan'
        value_template: >
          {{ 'on' if is_state_attr('climate.thermostat','fan_mode','on')
                or state_attr('climate.thermostat','hvac_action') in ['heating','cooling'] else 'off' }}
        turn_on: # set climate fan mode to on
          choose:
            - conditions:
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: climate.thermostat
                      attribute: fan_mode
                      state: 'on'
              sequence:
                - service: climate.set_fan_mode
                  target:
                    entity_id: climate.thermostat
                  data:
                    fan_mode: 'on'
        turn_off: # set climate fan mode to off
          choose:
            - conditions:
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: climate.thermostat
                      attribute: fan_mode
                      state: 'off'
              sequence:
                service: climate.set_fan_mode
                target:
                  entity_id: climate.thermostat
                data:
                  fan_mode: 'off'
        speed_count: 2

binary_sensor:
  - platform: threshold # https://www.home-assistant.io/components/binary_sensor.threshold/
    name: 'Humidity Level In Range'
    entity_id: sensor.thermostat_humidity
    lower: 30
    upper: 70
    hysteresis: 1.5

sensor:
  - platform: history_stats # https://www.home-assistant.io/integrations/history_stats/
    name: 'HVAC Filter Hours'
    entity_id: binary_sensor.hvac_active
    state: 'on'
    type: time
    #ISSUE error on template reload
    #ERROR (MainThread) [homeassistant.helpers.entity] Update for sensor.hvac_filter_hours fails
    #TypeError: float() argument must be a string or a number, not 'NoneType'
    start: "{{ states('button.hvac_filter_hours_reset')|as_datetime }}"
    end: "{{ states('button.hvac_filter_hours_reset')|as_datetime + timedelta(days=30) }}"

  - platform: history_stats
    name: 'Thermostat Heat Daily Runtime'
    entity_id: sensor.thermostat_hvac_state
    state: heating
    type: time
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    duration:
      hours: 24

  - platform: history_stats
    name: 'Thermostat Cool Daily Runtime'
    entity_id: sensor.thermostat_hvac_state
    state: cooling
    type: time
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    duration:
      hours: 24

  - platform: mold_indicator # https://www.home-assistant.io/components/sensor.mold_indicator/
    name: 'Bathroom Mold Risk'
    indoor_temp_sensor: sensor.bathroom_sensor_air_temperature
    indoor_humidity_sensor: sensor.bathroom_sensor_humidity
    outdoor_temp_sensor: sensor.outdoor_temperature
    calibration_factor: 1.21

  - platform: statistics # https://www.home-assistant.io/components/sensor.statistics/
    entity_id: sensor.indoor_temperature
    name: 'Indoor Temperature: Annual'
    state_characteristic: mean
    max_age:
      days: 365
    precision: 1
    sampling_size: 50000

  - platform: statistics
    entity_id: sensor.indoor_humidity
    name: 'Indoor Humidity: Annual'
    state_characteristic: mean
    max_age:
      days: 365
    precision: 1
    sampling_size: 50000

alert:
  indoor_low_temperature:
    name: 'Indoor Low Temperature'
    title: 'Indoor Low Temperature Alert'
    message: |
      {%- set thresh = states('input_number.low_temperature_threshold')|float -%}
      {%- set t = '%0.0f'|format(states('sensor.thermostat_temperature')|float)|float -%}
      {%- set b = '%0.0f'|format(states('sensor.bathroom_sensor_air_temperature')|float)|float -%}
      {%- if t < thresh %} Indoor temperature: {{ t }}° {% endif %}
      {% if b < thresh %} Upstairs bathroom temperature: {{ b }}° {% endif %}
    done_message: clear_notification
    entity_id: binary_sensor.indoor_low_temperature_alert
    state: 'on'
    repeat: 60
    notifiers: jason
    data:
      tag: indoor_low_temperature
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      notification_icon: mdi:thermometer-alert
      icon_url: !secret LOW_TEMP_ICON
      image: !secret LOW_TEMP_IMAGE
      ledColor: !secret MINOR_COLOR
      color: !secret MINOR_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /lovelace-mobile/climate
      actions:
        - title: 'Nest App'
          action: URI
          uri: app://com.nest.android

        - action: pause_indoor_low_temperature
          title: 'Pause Alert'

  indoor_high_temperature:
    name: 'Indoor High Temperature'
    title: 'Indoor High Temperature'
    message: |
      {%- set thresh = states('input_number.high_temperature_threshold')|float -%}
      {%- set t = '%0.0f'|format(states('sensor.thermostat_temperature')|float)|float -%}
      {%- set b = '%0.0f'|format(states('sensor.bathroom_sensor_air_temperature')|float)|float -%}
      {%- if t > thresh %} Indoor temperature: {{ t }}° {% endif %}
      {% if b > thresh %} Upstairs bathroom temperature: {{ b }}° {% endif %}
    done_message: clear_notification
    entity_id: binary_sensor.indoor_high_temperature_alert
    state: 'on'
    repeat: 60
    notifiers: jason
    data:
      tag: indoor_high_temperature
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      notification_icon: mdi:thermometer-alert
      icon_url: !secret HIGH_TEMP_ICON
      image: !secret HIGH_TEMP_IMAGE
      ledColor: !secret MINOR_COLOR
      color: !secret MINOR_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /lovelace-mobile/climate
      actions:
        - title: 'Nest App'
          action: URI
          uri: app://com.nest.android

        - action: pause_indoor_high_temperature
          title: 'Pause Alert'

  indoor_high_humidity:
    name: 'Indoor Humidity'
    title: 'Indoor Humidity'
    message: |
      {%- set thresh = states('input_number.high_humidity_threshold')|float -%}
      {%- set t = '%0.0f'|format(states('sensor.thermostat_humidity')|float)|float -%}
      {%- set b = '%0.0f'|format(states('sensor.bathroom_sensor_humidity')|float)|float -%}
      {%- if t > thresh %} Indoor Humidity: {{ t }}% {% endif %}
      {% if b > thresh %} Bathroom Humidity {{ b }}% {% endif %}
    done_message: clear_notification
    entity_id: binary_sensor.indoor_high_humidity_alert
    state: 'on'
    repeat: 60
    notifiers: jason
    data:
      tag: indoor_high_humidity
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      notification_icon: mdi:water-alert
      icon_url: !secret HIGH_HUMIDITY_ICON
      image: !secret HIGH_HUMIDITY_IMAGE
      ledColor: !secret MINOR_COLOR
      color: !secret MINOR_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /lovelace-mobile/climate
      actions:
        - title: 'Nest App'
          action: URI
          uri: app://com.nest.android

        - action: pause_indoor_high_humidity
          title: 'Pause Alert'

  bathroom_mold_risk:
    name: 'Bathroom Mold Risk'
    title: 'Bathroom Mold Risk'
    message: "Mold Indicator: {{ states('sensor.bathroom_mold_risk') }}%"
    done_message: clear_notification
    entity_id: binary_sensor.bathroom_mold_risk_alert
    state: 'on'
    repeat: 1440
    notifiers: jason
    data:
      tag: bathroom_mold_risk
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      notification_icon: mdi:mushroom
      icon_url: !secret MOLD_ICON
      image: !secret MOLD_IMAGE
      ledColor: !secret WARNING_COLOR
      color: !secret WARNING_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /lovelace-mobile/climate
      actions:
        - action: pause_bathroom_mold_risk
          title: 'Pause Alert'

  hvac_window_door_open:
    name: 'HVAC Window Door Open'
    title: 'HVAC Alert'
    message: >
      {% set entities = expand(state_attr('binary_sensor.hvac_window_door_open_alert','entities')) %}
      {% set count = entities|count %}
      {% for item in entities %}{{ '<br>' if not loop.first }}- {{ item.name|replace(' Open Alert','') }}{% endfor %}
    done_message: clear_notification
    entity_id: binary_sensor.hvac_window_door_open_alert
    state: 'on'
    repeat: 30
    notifiers: mobile
    data:
      subject: 'HVAC On - Window / Door Open'
      tag: hvac_window_door_open
      group: General
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      notification_icon: mdi:hvac
      icon_url: !secret DOOR_ICON
      ledColor: !secret WARNING_COLOR
      color: !secret WARNING_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /lovelace-mobile/climate
      actions:
        - title: 'Nest App'
          action: URI
          uri: app://com.nest.android

        - action: pause_hvac_window_open
          title: 'Pause Alert'

  nest_connected:
    name: 'Nest Connected'
    entity_id: binary_sensor.nest_connected_alert
    state: 'on'
    notifiers: log
    skip_first: false
    repeat: 999999
    data:
      tag: nest_connected

  balboa_connected:
    name: 'Balboa Connected'
    entity_id: binary_sensor.balboa_connected_alert
    state: 'on'
    notifiers: log
    skip_first: false
    repeat: 999999
    data:
      tag: balboa_connected
