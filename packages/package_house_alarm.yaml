#######################################################################################################################
## Alarm Package
#######################################################################################################################
homeassistant:
  customize:
    alert.alarm_triggered:
      icon: mdi:alarm-light

variable:
#######################################################################################################################
## House Alarm Variables
#######################################################################################################################
  current_alarm:
    value: none
    attributes:
      friendly_name: "Current Alarm Alert"
      icon: mdi:shield-alert
    restore: true

  alarm_warning:
    value: none
    attributes:
      friendly_name: "Alarm Warning"
      icon: mdi:alarm
    restore: true

  alarm_triggered:
    value: 'false'
    attributes:
      friendly_name: "Alarm Triggered"
      icon: mdi:alarm
    restore: true

  alarm_temp_override:
    value: 'false'
    attributes:
      friendly_name: "Alarm Temp Override"
      icon: mdi:alarm
    restore: false # make sure always reset to false

  alarm_disarmed_by:
    value: none
    attributes:
      friendly_name: "Alarm Disarmed By"
      icon: mdi:account-key
    restore: true

#######################################################################################################################
## House Alarm Snapshot File Paths
#######################################################################################################################
  side_drive_snapshot1:
    value: none
    attributes:
      friendly_name: "Side Drive Snapshot 1"
      icon: mdi:video-box
    restore: true

  side_drive_snapshot2:
    value: none
    attributes:
      friendly_name: "Side Drive Snapshot 2"
      icon: mdi:video-box
    restore: true

  side_drive_snapshot3:
    value: none
    attributes:
      friendly_name: "Side Drive Snapshot 3"
      icon: mdi:video-box
    restore: true

  side_door_snapshot1:
    value: none
    attributes:
      friendly_name: "Side Door Snapshot 1"
      icon: mdi:video-box
    restore: true

  side_door_snapshot2:
    value: none
    attributes:
      friendly_name: "Side Door Snapshot 2"
      icon: mdi:video-box
    restore: true

  side_door_snapshot3:
    value: none
    attributes:
      friendly_name: "Side Door Snapshot 3"
      icon: mdi:video-box
    restore: true

  back_house_snapshot1:
    value: none
    attributes:
      friendly_name: "Back House Snapshot 1"
      icon: mdi:video-box
    restore: true

  back_house_snapshot2:
    value: none
    attributes:
      friendly_name: "Back House Snapshot 2"
      icon: mdi:video-box
    restore: true

  back_house_snapshot3:
    value: none
    attributes:
      friendly_name: "Back House Snapshot 3"
      icon: mdi:video-box
    restore: true

  garage_inside_snapshot1:
    value: none
    attributes:
      friendly_name: "Garage Inside Snapshot 1"
      icon: mdi:video-box
    restore: true

  garage_inside_snapshot2:
    value: none
    attributes:
      friendly_name: "Garage Inside Snapshot 2"
      icon: mdi:video-box
    restore: true

  garage_inside_snapshot3:
    value: none
    attributes:
      friendly_name: "Garage Inside Snapshot 3"
      icon: mdi:video-box
    restore: true

alert:
#######################################################################################################################
## Alert - Alarm Triggered
## uses delayed binary sensor instead of alarm control panel to allow occupant to disarm w/o sending alert
#######################################################################################################################
  alarm_triggered:
    name: "Alarm Triggered"
    title: "Alarm Triggered Alert"
    message: "Alarm Triggered: {{ states('variable.current_alarm') }}"
    done_message: "The alarm has been disarmed."
    entity_id: binary_sensor.alarm_triggered
    state: 'on'
    repeat: 5
    can_acknowledge: true
    skip_first: false
    notifiers: everyone
    data:
      tag: alarm_mode
      timestamp: "{{ as_timestamp(now()) }}" #push
      priority: high
      renotify: true #push
      ttl: 600
      silent: false #push
      requireInteraction: false #push
      sticky: true #app
      url: /lovelace/alarm #push
      clickAction: /lovelace/alarm #app
      color: !secret CRITICAL_COLOR #app
      image: !secret ALARM_IMAGE
      icon: !secret ALARM_ICON #push
      badge: !secret ALARM_BADGE #push

timer:
#######################################################################################################################
## Alarm Pending
#######################################################################################################################
  alarm_pending:
    name: Alarm Pending
    icon: mdi:timer-outline

#######################################################################################################################
## Alarm Warning
#######################################################################################################################
  alarm_warning:
    name: Alarm Warning
    icon: mdi:timer-outline

#######################################################################################################################
## Alarm Triggered Resetouse Alarm Triggered Reset
## - used to reset led notifications, lights after alarm triggered
#######################################################################################################################
  alarm_triggered_reset:
    name: Alarm Triggered Reset
    icon: mdi:timer-outline
    duration:
      minutes: 5

input_boolean:
#######################################################################################################################
## Alarm Automation
#######################################################################################################################
  alarm_automation:
    icon: mdi:alarm-light
    name: Alarm Automations

#######################################################################################################################
## Alarm Auto Arming
#######################################################################################################################
  alarm_auto_arming:
    name: Auto Arm Alarm
    icon: mdi:account-arrow-right

binary_sensor:
  - platform: template
    sensors:
#######################################################################################################################
## Alarm Connected
#######################################################################################################################
      alarm_connected:
        friendly_name: Alarm Connected
        unique_id: alarm_connected
        icon_template: "{{ 'mdi:alarm-light' if is_state('binary_sensor.alarm_connected','on') else 'mdi:alert-circle' }}"
        device_class: connectivity
        value_template: >
          {{ not states('alarm_control_panel.house') in ['unknown','unavailable','none']
              if is_state('binary_sensor.alerts_enabled','on') else true }}

      alarm_connected_alert:
        friendly_name: Alarm
        unique_id: alarm_connected_alert
        icon_template: mdi:alert-circle
        value_template: "{{ is_state('binary_sensor.alarm_connected','off') }}"

#######################################################################################################################
## Alarm Auto Arm Disabled
## - used to display lovelace alert
#######################################################################################################################
      alarm_auto_arm_disabled:
        friendly_name: Auto Alarm
        unique_id: alarm_auto_arm_disabled
        icon_template: mdi:account-arrow-right
        device_class: connectivity
        value_template: "{{ is_state('input_boolean.alarm_auto_arming','off') }}"

#######################################################################################################################
## Alarm Triggered
## - this is to trigger alert for push notifications only, do not use for triggers/conditions
## - delay_on to allow alert variable to set and allow occupant to disarm triggered alarm before triggering alert
#######################################################################################################################
      alarm_triggered:
        unique_id: alarm_triggered
        delay_on:
          minutes: 1
        value_template: "{{ is_state('alarm_control_panel.house','triggered') }}"

sensor:
#######################################################################################################################
## Alarm Status
## - format alarm control panel state for front end display
#######################################################################################################################
  - platform: template
    sensors:
      alarm_status:
        friendly_name_template: Alarm
        unique_id: alarm_status
        icon_template: >
          {% if is_state('binary_sensor.alarm_connected','off') %} mdi:shield-remove
          {% elif is_state('input_boolean.alarm_automation','off') %} mdi:shield-off
          {% elif is_state('alarm_control_panel.house','disarmed') %} mdi:shield-check
          {% elif is_state('alarm_control_panel.house','armed_home') %} mdi:shield-home
          {% elif is_state('alarm_control_panel.house','armed_night') %} mdi:shield-star
          {% elif is_state('alarm_control_panel.house','armed_away') %} mdi:shield-lock
          {% elif is_state('alarm_control_panel.house','pending') %} mdi:shield-half-full
          {% elif is_state('alarm_control_panel.house','warning') %} mdi:shield-alert-outline
          {% elif is_state('alarm_control_panel.house','triggered') %} mdi:shield-alert
          {% else %} mdi:alert
          {% endif %}
        value_template: >
          {% if is_state('binary_sensor.alarm_connected','off') %} Disconnected
          {% elif is_state('input_boolean.alarm_automation','off') %} Disabled
          {% else %}{{ states('alarm_control_panel.house')|replace('_',' ')|title }}
          {% endif %}

script:
#######################################################################################################################
## Arm Alarm Away
#######################################################################################################################
  arm_alarm_away:
    alias: "Arm Alarm Away"
    description: "Arm alarm in away mode."
    icon: mdi:alarm-bell
    fields:
      set_mode:
        description: "Set occupancy mode"
        example: 'true'
    mode: single
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: alarm_control_panel.house
                state: triggered

            sequence:
              - service: browser_mod.toast
                data:
                  duration: 30000
                  message: "Alarm could not be armed."

        default:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: alarm_control_panel.house
                    state: armed_away

                sequence:
                  - service: automation.trigger
                    data:
                      entity_id: automation.alarm_led_notification
                      skip_condition: false

            default:
              - choose:
                  - conditions:
                      - condition: not
                        conditions:
                          - condition: state
                            entity_id: alarm_control_panel.house
                            state: disarmed

                    sequence:
                      - service: script.disarm_alarm_temp

              - service: alarm_control_panel.alarm_arm_away
                data:
                  entity_id: alarm_control_panel.house
                  #OPTION code: override # prevents pending mode

              - condition: state
                entity_id: input_boolean.alarm_auto_arming
                state: 'off'

              - condition: template
                value_template: "{{ set_mode }}"

              - service: input_select.select_option
                data:
                  entity_id: input_select.occupancy_mode
                  option: Away

#######################################################################################################################
## Arm Alarm Home
#######################################################################################################################
  arm_alarm_home:
    alias: "Arm Alarm Home"
    description: "Arm alarm in home mode."
    icon: mdi:alarm-bell
    fields:
      set_mode:
        description: "Flag to set occupancy mode"
        example: 'true'
    mode: single
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: alarm_control_panel.house
                state: triggered

              - condition: state
                entity_id: binary_sensor.someone_home
                state: 'off'

            sequence:
              - service: browser_mod.toast
                data:
                  duration: 30000
                  message: "Alarm could not be armed."

        default:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: alarm_control_panel.house
                    state: armed_home

                sequence:
                  - service: automation.trigger
                    data:
                      entity_id: automation.alarm_led_notification
                      skip_condition: false

            default:
              - choose:
                  - conditions:
                      - condition: not
                        conditions:
                          - condition: state
                            entity_id: alarm_control_panel.house
                            state: disarmed

                    sequence:
                      - service: script.disarm_alarm_temp

              - service: alarm_control_panel.alarm_arm_home
                data:
                  entity_id: alarm_control_panel.house
                  code: override

              - condition: state
                entity_id: input_boolean.alarm_auto_arming
                state: 'off'

              - condition: template
                value_template: "{{ set_mode }}"

              - service: input_select.select_option
                data:
                  entity_id: input_select.occupancy_mode
                  option: >
                    {% if is_state('binary_sensor.owner_home') %} Home
                    {% else %} Guest
                    {% endif %}

#######################################################################################################################
## Arm Alarm Night
#######################################################################################################################
  arm_alarm_night:
    alias: "Arm Alarm Night"
    description: "Arm alarm in night mode."
    icon: mdi:alarm-bell
    fields:
      set_mode:
        description: "Flag to set occupancy mode"
        example: 'true'
    mode: single
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: alarm_control_panel.house
                state: triggered

              - condition: state
                entity_id: binary_sensor.someone_home
                state: 'off'

            sequence:
              - service: browser_mod.toast
                data:
                  duration: 30000
                  message: "Alarm could not be armed."

        default:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: alarm_control_panel.house
                    state: armed_night

                sequence:
                  - service: automation.trigger
                    data:
                      entity_id: automation.alarm_led_notification
                      skip_condition: false

            default:
              - choose:
                  - conditions:
                      - condition: not
                        conditions:
                          - condition: state
                            entity_id: alarm_control_panel.house
                            state: disarmed

                    sequence:
                      - service: script.disarm_alarm_temp

              - service: alarm_control_panel.alarm_arm_night
                data:
                  entity_id: alarm_control_panel.house
                  code: override

              - condition: state
                entity_id: input_boolean.alarm_auto_arming
                state: 'off'

              - condition: template
                value_template: "{{ set_mode }}"

              - service: input_select.select_option
                data:
                  entity_id: input_select.occupancy_mode
                  option: Night

#######################################################################################################################
## Disarm Alarm Auto
#######################################################################################################################
  disarm_alarm_auto:
    alias: "Disarm Alarm Auto"
    description: "Disarm alarm."
    icon: mdi:alarm-bell
    fields:
      set_mode:
        description: "Flag to set occupancy mode"
        example: 'true'
    mode: single
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.someone_home
                state: 'off'

            sequence:
              - service: browser_mod.toast
                data:
                  duration: 30000
                  message: "Alarm could not be disarmed."

        default:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: alarm_control_panel.house
                    state: disarmed

                sequence:
                  - service: automation.trigger
                    data:
                      entity_id: automation.alarm_led_notification
                      skip_condition: false

            default:
              - service: browser_mod.toast
                data:
                  duration: 30000
                  message: "Alarm is disarming."

              - service: alarm_control_panel.alarm_disarm
                data:
                  entity_id: alarm_control_panel.house
                  code: !secret ALARM_HASSIO

              - condition: state
                entity_id: input_boolean.alarm_auto_arming
                state: 'off'

              - condition: template
                value_template: "{{ set_mode }}"

              - service: input_select.select_option
                data:
                  entity_id: input_select.occupancy_mode
                  option: >
                    {% if is_state('input_select.occupancy_mode','Night') %} Night
                    {% elif is_state('binary_sensor.owner_home') %} Home
                    {% else %} Guest
                    {% endif %}

#######################################################################################################################
## Disarm Alarm Temp
#######################################################################################################################
  disarm_alarm_temp:
    alias: "Disarm Alarm Temp"
    description: "Disarm alarm so it can be rearmed in a different mode."
    icon: mdi:alarm-bell
    mode: single
    sequence:
      - condition: state
        entity_id: alarm_control_panel.house
        state:
          - armed_home
          - armed_night
          - armed_away
          - pending

      # set override to bypass automation check
      - service: variable.set_variable
        data:
          variable: alarm_temp_override
          value: 'true'

      # turn off disarmed automation to prevent trigger
      - service: automation.turn_off
        entity_id:
          - automation.alarm_disarmed
          - automation.alarm_led_notification

      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.house
        data:
          code: !secret ALARM_HASSIO

      - service: automation.turn_on
        entity_id:
          - automation.alarm_disarmed
          - automation.alarm_led_notification

      - service: variable.set_variable
        data:
          variable: alarm_temp_override
          value: 'false'

#######################################################################################################################
## Alarm - Garage Motion
#######################################################################################################################
  alarm_garage_motion:
    alias: "Alarm Garage Motion"
    description: "Open alarm view, popup garage camera."
    icon: mdi:cctv
    mode: single
    sequence:
      - service: browser_mod.navigate
        data:
          navigation_path: /lovelace/alarm
          deviceID:
            - browser_jlaptop_chrome_local
            - browser_jlaptop_chrome_direct
            - browser_jlaptop_chrome_nabucasa
            - browser_jlaptop_chrome_duckdns
            - browser_jphone_app_internal
            - browser_jphone_app_external
            - browser_sphone_app_internal
            - browser_sphone_app_external
            - browser_jwork_chrome_direct

      - service: browser_mod.popup
        data:
          deviceID:
            - browser_jlaptop_chrome_local
            - browser_jlaptop_chrome_direct
            - browser_jlaptop_chrome_nabucasa
            - browser_jlaptop_chrome_duckdns
            - browser_jphone_app_internal
            - browser_jphone_app_external
            - browser_sphone_app_internal
            - browser_sphone_app_external
            - browser_jwork_chrome_direct
          title: Garage Motion
          large: true
          card: !include /config/lovelace/include/picture_glance/garage_inside_picture_glance.yaml

      # only run if assistant relay addon running
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.assistant_relay_status
                state: 'on'

            sequence:
              # turn of livingroom TV with assistant relay
              - service: rest_command.assistant_relay
                data:
                  command: "Show me the Garage Inside Camera on the Living Room TV"

automation:
#######################################################################################################################
## Alarm Occupancy Mode Control
#######################################################################################################################
  - id: alarm_occupancy_mode_control
    alias: "[Alarm] Occupancy Mode Control"
    description: "Arm alarm when occupancy mode changes."
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id: input_select.occupancy_mode
        to:
          - Night
          - Away
          - Vacation

    condition:
      - condition: state
        entity_id:
          - input_boolean.alarm_automation
          - input_boolean.presence_automation
          - input_boolean.alarm_auto_arming
        state: 'on'

    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.occupancy_mode
                state: Night

            sequence:
              - service: script.turn_on
                entity_id: script.arm_alarm_night

        default:
          - service: script.turn_on
            entity_id: script.arm_alarm_away

#######################################################################################################################
## Alarm - Panic Alarm
#######################################################################################################################
  - id: alarm_panic_alarm
    alias: "[Alarm] Panic Alarm"
    description: "Activate panic mode when panic code entered into alarm keypad."
    initial_state: true
    mode: single
    trigger:
      - platform: template
        value_template: "{{ state_attr('alarm_control_panel.house','panic_mode')|lower == 'active' }}"

    action:
      - service: script.disarm_alarm_auto

      - service: !include /config/include/template/notify_jason_template.yaml
        data:
          title: "Panic Alam Activated"
          message: "Someone has activated the panic alarm."
          data:
            actions:
              - action: close_panic_alarm
                title: Close
            tag: panic_alarm
            timestamp: "{{ as_timestamp(now()) }}" #push
            priority: normal
            renotify: false
            ttl: 43200
            silent: true #push
            requireInteraction: false #push
            sticky: false #app
            url: /lovelace/schedule #push
            clickAction: /lovelace/schedule #app
            color: !secret NOTIFY_COLOR #app
            image: !secret PLANTS_IMAGE
            icon: !secret PLANTS_ICON #push
            badge: !secret PLANTS_BADGE #push


######################################################################################################################
# Alarm - Armed Away
######################################################################################################################
  - id: alarm_armed_away
    alias: "[Alarm] Armed Away"
    description: "Activate away occupancy mode and play announcement."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house
        to: armed_away

    condition:
      - condition: state
        entity_id: input_boolean.alarm_automation
        state: 'on'

    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.alarm_auto_arming
                state: 'on'

              # this stops occupancy mode from resetting if house is in vacation mode
              - condition: not
                conditions:
                  - condition: state
                    entity_id: input_select.occupancy_mode
                    state:
                      - Away
                      - Vacation

            sequence:
              - service: input_select.select_option
                data:
                  entity_id: input_select.occupancy_mode
                  option: Away

      - condition: or
        conditions:
          - condition: state
            entity_id: input_boolean.occupancy_announcements
            state: 'off'

          - condition: state
            entity_id: input_boolean.alarm_auto_arming
            state: 'off'

      - service: script.tts_announcement
        data:
          play_message: "The alarm is in Away Mode."
          ignore_away: true

#######################################################################################################################
## Alarm - Armed Home
#######################################################################################################################
  - id: alarm_armed_home
    alias: "[Alarm] Armed Home"
    description: "Activate home occupancy mode and play announcement."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house
        to: armed_home

    condition:
      - condition: state
        entity_id: input_boolean.alarm_automation
        state: 'on'

    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.alarm_auto_arming
                state: 'on'

            sequence:
              - service: input_select.select_option
                data:
                  entity_id: input_select.occupancy_mode
                  option: "{{ 'Home' if is_state('binary_sensor.owner_home','on') else 'Guest' }}"

      - condition: state
        entity_id: input_boolean.occupancy_announcements
        state: 'off'

      - service: script.tts_announcement
        data:
          play_message: "The alarm is now in Home Mode."
          ignore_away: true

#######################################################################################################################
## Alarm - Armed Night
#######################################################################################################################
  - id: alarm_armed_night
    alias: "[Alarm] Armed Night"
    description: "Activate night occupancy mode and play announcement."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house
        to: armed_night

    condition:
      - condition: state
        entity_id: input_boolean.alarm_automation
        state: 'on'

    action:

      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.alarm_auto_arming
                state: 'on'

              - condition: not
                conditions:
                  - condition: state
                    entity_id: input_select.occupancy_mode
                    state: Night

            sequence:
              - service: input_select.select_option
                data:
                  entity_id: input_select.occupancy_mode
                  option: "{{ 'Night' if is_state('binary_sensor.someone_home','on') else 'Away' }}"

      - condition: state
        entity_id: input_boolean.occupancy_announcements
        state: 'off'

      - service: script.tts_announcement
        data:
          play_message: "The alarm is now in Night Mode."
          ignore_away: true

#######################################################################################################################
## Alarm - Disarmed
#######################################################################################################################
  - id: alarm_disarmed
    alias: "[Alarm] Disarmed"
    description: "Play announcement and activate home mode when alarm disarmed."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house
        to: disarmed

    condition:
      - condition: state
        entity_id: input_boolean.alarm_automation
        state: 'on'

    action:
      - service: timer.cancel
        entity_id:
          - timer.alarm_pending
          - timer.alarm_warning

      - service: variable.set_variable
        data:
          variable: alarm_disarmed_by
          value: cleared

      - service: variable.set_variable
        data:
          variable: alarm_disarmed_by  #ISSUE not working?
          value: >
            {%- set cb = state_attr('alarm_control_panel.house','changedbyuser') -%}
            {%- if cb|lower in ['unknown','unavailable','none',''] -%} Unknown
            {%- else -%}
              {%- set name = namespace() -%}
              {%- for user in states.alarm_control_panel.house.attributes.users -%}
                {%- if states.alarm_control_panel.house.attributes.users[loop.index0].id == cb -%}
                {%- set name.value = states.alarm_control_panel.house.attributes.users[loop.index0].name|title -%}
                {%- endif -%}
              {%- endfor -%}
              {{- name.value -}}
            {%- endif -%}

      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.alarm_auto_arming
                state: 'on'

            sequence:
              - service: input_select.select_option
                data:
                  entity_id: input_select.occupancy_mode
                  option: >
                    {{ 'Night' if is_state('input_select.occupancy_mode','Night')
                          else 'Home' if is_state('binary_sensor.owner_home','on') else 'Guest' }}

      - service: script.tts_announcement
        data:
          play_message: "The house alarm is disarmed."
          ignore_away: true

      - choose:
          - conditions:
              - condition: state
                entity_id: variable.alarm_triggered
                state: 'true'

              - condition: state
                entity_id: binary_sensor.someone_home
                state: 'on'

            sequence:
              - service: timer.start
                entity_id: timer.alarm_triggered_reset

#######################################################################################################################
## Alarm - Pending
#######################################################################################################################
  - id: alarm_pending
    alias: "[Alarm] Pending"
    description: "Statrt timer, play announcement when alarm is pending."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house
        to: pending

    condition:
      - condition: state
        entity_id: input_boolean.alarm_automation
        state: 'on'

    action:
      # start alarm warning timer - used for pending time display on UI
      # set timer duration to the alarm pending time
      - service: timer.start
        data:
          entity_id: timer.alarm_pending
          duration:
            seconds: "{{ (states.alarm_control_panel.house.attributes['states'][state_attr('alarm_control_panel.house','arm_state')]['pending_time'] )|int }}"

      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.light_automation
                state: 'on'

            sequence:
              - service: scene.create
                data:
                  scene_id: alarm_pending_lights_restore
                  entities:
                    light.kitchen_potlights:
                      state: "{{ states('light.kitchen_potlights') }}"
                      brightness: "{{ state_attr('light.kitchen_potlights','brightness') }}"
                    light.dining_room_potlights:
                      state: "{{ states('light.dining_room_potlights') }}"
                      brightness: "{{ state_attr('light.dining_room_potlights','brightness') }}"
                    light.upstairs_hallway_potlights:
                      state: "{{ states('light.upstairs_hallway_potlights') }}"
                      brightness: "{{ state_attr('light.upstairs_hallway_potlights','brightness') }}"

      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.occupancy_announcements
                state: 'on'

            sequence:
              - service: script.tts_announcement
                data:
                  play_message: "The alarm is now being armed in {{ state_attr('alarm_control_panel.house','arm_state')|replace('armed_','') }} mode."
                  ignore_away: true

      - service: browser_mod.toast
        data:
          duration: 30000
          message: "The alarm is now being armed in {{ state_attr('alarm_control_panel.house','arm_state')|replace('armed_','') }} mode."

#######################################################################################################################
## Alarm - Pending Lights Restore
## don't restore in Away/Vacation - away state turns off lights
#######################################################################################################################
  - id: alarm_pending_lights_restore
    alias: "[Alarm] Pending Lights Restore"
    description: "Turn off alarm pending lights when alarm is armed."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house
        from: pending
        to:
          - disarmed
          - armed_home
          - armed_night
          - armed_away
        for:
          minutes: 5

    condition:
      - condition: state
        entity_id:
          - input_boolean.alarm_automation
          - input_boolean.light_automation
        state: 'on'

    action:
      - service: script.activate_scene
        data:
          scene: scene.alarm_pending_lights_restore

      # lights will probably have all turned off if previous mode was night, away etc. so turn a couple on if it's dark out
      - choose:
          - conditions:
              - condition: state
                entity_id: variable.previous_occupancy_mode
                state:
                  - Night
                  - Away
                  - Vacation
                  - Override

              - condition: state
                entity_id: binary_sensor.auto_light_on
                state: 'on'

            sequence:
              - service: light.turn_on
                entity_id:
                  - light.dining_room_rgb_light
                  - light.kitchen_sink_light

#######################################################################################################################
## Alarm - Warning
#######################################################################################################################
  - id: alarm_warning
    alias: "[Alarm] Warning"
    description: "Statrt timer, play announcement when alarm is warning."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house
        to: warning

    condition:
      - condition: state
        entity_id: input_boolean.alarm_automation
        state: 'on'

    action:
      - service: variable.set_variable
        data:
          variable : variable.alarm_warning
          value: 'true'

      # start alarm warning timer - used for pending time display on UI
      # set the timer duration to the alarm warning time
      - service: timer.start
        data:
          entity_id: timer.alarm_warning
          duration:
            seconds: "{{ (states.alarm_control_panel.house.attributes['states'][state_attr('alarm_control_panel.house','arm_state')]['warning_time'])|int }}"

      # set the variable value for active alarm message
      - service: variable.set_variable
        data:
          variable: current_alarm
          value: "{{ states[states.alarm_control_panel.house.attributes.changed_by.split('.')[0]][ states.alarm_control_panel.house.attributes.changed_by.split('.')[1]].name }}"

      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.light_automation
                state: 'on'

            sequence:
              - service: scene.create
                data:
                  scene_id: alarm_warning_lights_restore
                  entities:
                    light.kitchen_potlights:
                      state: "{{ states('light.kitchen_potlights') }}"
                      brightness: "{{ state_attr('light.kitchen_potlights','brightness') }}"
                    light.dining_room_potlights:
                      state: "{{ states('light.dining_room_potlights') }}"
                      brightness: "{{ state_attr('light.dining_room_potlights','brightness') }}"
                    light.upstairs_hallway_potlights:
                      state: "{{ states('light.upstairs_hallway_potlights') }}"
                      brightness: "{{ state_attr('light.upstairs_hallway_potlights','brightness') }}"

      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.occupancy_announcements
                state: 'on'

            sequence:
              - service: script.tts_announcement
                data:
                  play_message: "Warning! The alarm has been triggered by the {{ states('variable.current_alarm') }} sensor. Disarm the system or the alarm will sound."
                  quiet_play: true
                  ignore_away: true
                  min_volume: "{{ 30 if states('sensor.tts_media_player') in state_attr('group.google_speaker_groups','entity_id') else 50 }}"

        default:
          - service: browser_mod.toast
            data:
              duration: 30000
              message: "Warning! The alarm has been triggered by the {{ states('variable.current_alarm') }} sensor. Disarm the system or the alarm will sound."

#######################################################################################################################
## Alarm - Warning Lights Restore
#######################################################################################################################
  - id: alarm_warning_lights_restore
    alias: "[Alarm] Warning Lights Restore"
    description: "Turn off alarm warning lights when alarm is disarmed."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house
        to: disarmed
        from: warning

    condition:
      - condition: state
        entity_id:
          - input_boolean.alarm_automation
          - input_boolean.light_automation
        state: 'on'

    action:
      - choose:
          - conditions:
              # lights will have turned off if previous mode was night, away etc. so turn a couple on if it's dark out
              - condition: template
                value_template: >
                  {{ is_state('binary_sensor.auto_light_on','on')
                      and states('variable.previous_occupancy_mode') in ['Night','Away','Vacation','Override'] }}

            sequence:
              - service: script.activate_scene
                data:
                  scene: scene.night_lights

        default:
          - service: script.activate_scene
            data:
              scene: scene.alarm_warning_lights_restore

      - service: variable.set_variable
        data:
          variable: alarm_warning
          value: 'false'

#######################################################################################################################
## Alarm - Triggered #NEW_LIGHT
#######################################################################################################################
  - id: alarm_triggered
    alias: "[Alarm] Triggered"
    description: "Sound alarm and send notifications when alarm is triggered"
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house
        to: triggered

    action:
      # cancel alarm triggered timer, may be running from previous instance
      - service: timer.cancel
        entity_id: timer.alarm_triggered_reset

      - service: variable.set_variable
        data:
          variable: alarm_triggered
          value: 'true'

      - service: variable.set_variable
        data:
          variable: current_alarm
          value: "{{ states[state_attr('alarm_control_panel.house','changed_by').split('.')[0]][state_attr('alarm_control_panel.house','changed_by').split('.')[1]].name }}"

      - service: scene.create
        data:
          scene_id: alarm_triggered_lights_restore
          entities:
            light.living_room_pot_lights:
              state: "{{ states('light.living_room_pot_lights') }}"
              brightness: "{{ state_attr('light.living_room_pot_lights','brightness') }}"
            light.living_room_cove_light:
              state: "{{ states('light.living_room_cove_light') }}"
              brightness: "{{ state_attr('light.living_room_cove_light','brightness') }}"
            light.kitchen_potlights:
              state: "{{ states('light.kitchen_potlights') }}"
              brightness: "{{ state_attr('light.kitchen_potlights','brightness') }}"
            light.kitchen_sink_light:
              state: "{{ states('light.kitchen_sink_light') }}"
            light.dining_room_potlights:
              state: "{{ states('light.dining_room_potlights') }}"
              brightness: "{{ state_attr('light.dining_room_potlights','brightness') }}"
            light.dining_room_rgb_light:
              state: "{{ states('light.dining_room_rgb_light') }}"
              brightness: "{{ state_attr('light.dining_room_rgb_light','brightness') }}"
            light.upstairs_hallway_potlights:
              state: "{{ states('light.upstairs_hallway_potlights') }}"
              brightness: "{{ state_attr('light.upstairs_hallway_potlights','brightness') }}"
            light.upstairs_bathroom_vanity_rgb_light:
              state: "{{ states('light.upstairs_bathroom_vanity_rgb_light') }}"
              brightness: "{{ state_attr('light.upstairs_bathroom_vanity_rgb_light','brightness') }}"
            light.upstairs_bathroom_shower_light:
              state: "{{ states('light.upstairs_bathroom_shower_light') }}"
              brightness: "{{ state_attr('light.upstairs_bathroom_shower_light','brightness') }}"
            light.office_light:
              state: "{{ states('light.office_light') }}"
              brightness: "{{ state_attr('light.office_light','brightness') }}"
            light.office_potlights:
              state: "{{ states('light.office_potlights') }}"
              brightness: "{{ state_attr('light.office_potlights','brightness') }}"
            light.upstairs_bedroom_light:
              state: "{{ states('light.upstairs_bedroom_light') }}"
              brightness: "{{ state_attr('light.upstairs_bedroom_light','brightness') }}"
            light.upstairs_bedroom_potlights:
              state: "{{ states('light.upstairs_bedroom_potlights') }}"
              brightness: "{{ state_attr('light.upstairs_bedroom_potlights','brightness') }}"
            light.outside_garage_lights:
              state: "{{ states('light.outside_garage_lights') }}"
              brightness: "{{ state_attr('light.outside_garage_lights','brightness') }}"
            light.front_porch_light:
              state: "{{ states('light.front_porch_light') }}"
              brightness: "{{ state_attr('light.front_porch_light','brightness') }}"
            light.front_house_potlights:
              state: "{{ states('light.front_house_potlights') }}"
              brightness: "{{ state_attr('light.front_house_potlights','brightness') }}"
            light.back_house_potlights:
              state: "{{ states('light.back_house_potlights') }}"
              brightness: "{{ state_attr('light.back_house_potlights','brightness') }}"
            light.back_yard_tree_floodlights:
              state: "{{ states('light.back_yard_tree_floodlights') }}"
              brightness: "{{ state_attr('light.back_yard_tree_floodlights','brightness') }}"
            light.back_yard_garden_light:
              state: "{{ states('light.back_yard_garden_light') }}"

      - service: script.turn_on
        entity_id: script.lights_on

      - service: script.tts_announcement
        data:
          alert: true
          play_message: "Alarm! {{ states('variable.current_alarm') }}"

      - service: persistent_notification.create
        data:
          title: "Alarm Triggered"
          notification_id: alarm_triggered
          message: "Alarm Trigger: {{ states('variable.current_alarm') }}"

      # delay before repeating alert
      - delay:
          seconds: 90

      - repeat:
          while:
            - condition: state
              entity_id: alarm_control_panel.house
              state: triggered
          sequence:
          # play the alert, text was formated when stored in variable
            - service: script.turn_on
              data:
                entity_id: script.tts_announcement
                variables:
                  alert: true
                  play_message: >
                    Alert! {{ states('variable.current_alarm') }}.
                    An intrusion has been detected and confirmed.
                    The owners have been notified and the police have now been called."

            # repeat delay
            - delay:
                seconds: 90

#######################################################################################################################
## Alarm Triggered Reset Timer Finished
#######################################################################################################################
  - id: alarm_triggered_reset_timer_finished
    alias: "[Alarm] Triggered Reset Timer Finished"
    description: "Start reset notification script when timer is finished."
    initial_state: true
    mode: single
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.alarm_triggered_reset

    condition:
      - condition: state
        entity_id: variable.alarm_triggered
        state: 'true'

      - condition: state
        entity_id: binary_sensor.someone_home
        state: 'on'

      - condition: not
        conditions:
          - condition: state
            entity_id: alarm_control_panel.house
            state: triggered

    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.light_automation
                state: 'on'

            sequence:
              - service: script.activate_scene
                data:
                  scene: scene.alarm_triggered_lights_restore

              # delay to allow all lights to change state
              - delay:
                  seconds: 30 #ZWAVE

              # if warning before triggered restore pre warning light settings
              - choose:
                  - conditions:
                      - condition: state
                        entity_id: variable.alarm_warning
                        state: 'true'

                    sequence:
                      - service: automation.trigger
                        entity_id: automation.alarm_warning_lights_restore

      - service: script.led_reset

      - service: variable.set_variable
        data:
          variable: alarm_warning
          value: 'false'

      - service: variable.set_variable
        data:
          variable: alarm_triggered
          value: 'false'

      - service: variable.set_variable
        data:
          variable: current_alarm
          value: cleared

      - service: variable.set_variable
        data:
          variable: back_house_snapshot1
          value: cleared

      - service: variable.set_variable
        data:
          variable: back_house_snapshot2
          value: cleared

      - service: variable.set_variable
        data:
          variable: back_house_snapshot3
          value: cleared

      - service: variable.set_variable
        data:
          variable: garage_inside_snapshot1
          value: cleared

      - service: variable.set_variable
        data:
          variable: garage_inside_snapshot2
          value: cleared

      - service: variable.set_variable
        data:
          variable: garage_inside_snapshot3
          value: cleared

      - service: variable.set_variable
        data:
          variable: side_door_snapshot1
          value: cleared

      - service: variable.set_variable
        data:
          variable: side_door_snapshot2
          value: cleared

      - service: variable.set_variable
        data:
          variable: side_door_snapshot3
          value: cleared

      - service: variable.set_variable
        data:
          variable: side_drive_snapshot1
          value: cleared

      - service: variable.set_variable
        data:
          variable: side_drive_snapshot2
          value: cleared

      - service: variable.set_variable
        data:
          variable: side_drive_snapshot3
          value: cleared

      - service: script.tts_play_saved_messages

#######################################################################################################################
## Alarm - LED notification #NEW_LIGHT
#######################################################################################################################
  - id: alarm_led_notification
    alias: "[Alarm] LED Notification"
    description: "Detect who arrived home and display LED notification."
    initial_state: true
    mode: restart
    trigger:
      # trigger after alarm lights so led notification isn't reset
      - platform: state
        entity_id: alarm_control_panel.house
        to: triggered
        for:
          seconds: 30 #ZWAVE

      # trigger after alarm  lights so led notification isn't reset
      - platform: state
        entity_id: alarm_control_panel.house
        to:
          - pending
          - warning
        for:
          seconds: 5

      - platform: state
        entity_id: alarm_control_panel.house
        to:
          - disarmed
          - armed_home
          - armed_night
          - armed_away

      # run at startup to notify in case alarm state has changed
      - platform: state
        entity_id: variable.startup_complete
        to: 'true'

    condition:
      - condition: state
        entity_id: input_boolean.alarm_automation
        state: 'on'

      - condition: state
        entity_id: variable.startup_complete
        state: 'true'

    action:
      - repeat:
          while:
            - condition: template
              value_template: >
                {% if is_state('alarm_control_panel.house','triggered') or is_state('variable.alarm_triggered','true') %}
                  {% set c = state_attr('group.zwave_led_lights','entity_id')|count %}
                {% else %}
                  {% set c = state_attr('group.zwave_led_lights_1','entity_id')|count %}
                {% endif %}
                {{ repeat.index <= c }}

          sequence:
            - condition: template
              value_template: >
                {% if is_state('alarm_control_panel.house','triggered') or is_state('variable.alarm_triggered','true') %}
                  {% set l = state_attr('group.zwave_led_lights','entity_id') %}
                {% else %}
                  {% set l = state_attr('group.zwave_led_lights_1','entity_id') %}
                {% endif %}
                {{ is_state('zwave.' ~ l[repeat.index-1].split('.')[1],'ready') }}

            - service: zwave.set_config_parameter
              data:
                node_id: >
                  {% if is_state('alarm_control_panel.house','triggered') or is_state('variable.alarm_triggered','true') %}
                    {% set l = state_attr('group.zwave_led_lights','entity_id') %}
                  {% else %}
                    {% set l = state_attr('group.zwave_led_lights_1','entity_id') %}
                  {% endif %}
                  {{ state_attr(l[repeat.index-1],'node_id')|int }}
                parameter: >
                  {% set sw = state_attr('group.zwave_switch_lights','entity_id') %}
                  {% if is_state('alarm_control_panel.house','triggered') or is_state('variable.alarm_triggered','true') %}
                    {% set l = state_attr('group.zwave_led_lights','entity_id') %}
                  {% else %}
                    {% set l = state_attr('group.zwave_led_lights_1','entity_id') %}
                  {% endif %}
                  {{ 8 if l[repeat.index-1] in sw else 16 }} {# switch 8, dimmer 16 #}
                size: 4
                value: !include /config/include/template/led_alarm_template.yaml

#######################################################################################################################
## Alarm - Automation Check
## - prevents alarm settings changes from UI while alarm is armed
#######################################################################################################################
  - id: alarm_automation_check
    alias: "[Alarm] Automation Check"
    description: "Turn entity back on if alarm not disarmed."
    initial_state: true
    mode: queued
    max: 20
    trigger:
      - platform: state
        entity_id:
          - automation.alarm_armed_away
          - automation.alarm_armed_home
          - automation.alarm_armed_night
          - automation.alarm_check_automation_check
          - automation.alarm_close_disarmed_notifications
          - automation.alarm_disarmed
          - automation.alarm_disarmed_alert_off
          - automation.alarm_disarmed_arm_away
          - automation.alarm_garage_motion
          - automation.alarm_led_notification
          - automation.alarm_occupancy_mode_control
          - automation.alarm_offline_alert
          - automation.alarm_offline_alert_cancelled
          - automation.alarm_offline_alert_closed
          - automation.alarm_offline_alert_pause
          - automation.alarm_panic_alarm
          - automation.alarm_pending
          - automation.alarm_pending_lights_restore
          - automation.alarm_triggered
          - automation.alarm_triggered_reset_timer_finished
          - automation.alarm_warning
          - automation.alarm_warning_lights_restore
          - input_boolean.alarm_auto_arming
          - input_boolean.alarm_automation
        to: 'off'

    condition:
      - condition: not
        conditions:
          - condition: state
            entity_id: alarm_control_panel.house
            state: disarmed

      # allows temp disarm, check to override
      - condition: state
        entity_id: variable.alarm_temp_override
        state: 'false'

    action:
      - service: homeassistant.turn_on
        data:
          entity_id: "{{ trigger.entity_id }}"

      - service: browser_mod.toast
        data:
          message: "Settings cannot be changed while alarm is armed."
          duration: 30000

#######################################################################################################################
## Alarm - Check Automation Check
## - prevents alarm settings changes from UI while alarm is armed
## - no on check needed, these should always be on
#######################################################################################################################
  - id: alarm_check_automation_check
    alias: "[Alarm] Check Automation Check"
    description: "Turn entity back off if alarm not disarmed."
    initial_state: true
    mode: queued
    max: 10
    trigger:
      - platform: state
        entity_id: automation.alarm_automation_check
        to: 'off'

    condition:
      - condition: not
        conditions:
          - condition: state
            entity_id: alarm_control_panel.house
            state: disarmed

    action:
      - service: automation.turn_on
        entity_id: automation.alarm_automation_check

      - service: browser_mod.toast
        data:
          message: "Settings cannot be changed while alarm is armed."
          duration: 30000

#######################################################################################################################
## Alarm - Garage Motion
#######################################################################################################################
  - id: alarm_garage_motion
    alias: "[Alarm] Garage Motion"
    description: "Send notifications w/snapshots when garage motion dectected and alarm triggered."
    initial_state: true
    mode: single
    trigger:
      # run when the alarm is warning/triggered and there is motion in the garage
      - platform: template
        value_template: >
          {{ states('alarm_control_panel.house') in ['warning','triggered']
              and (is_state('binary_sensor.garage_motion','on')
                  or is_state('binary_sensor.garage_door_open','on')) }}

    action:
      - service: script.alarm_garage_motion

      - repeat:
          sequence:
            # store security camera snapshot filenames
            - service: variable.set_variable
              data:
                variable: "{{ 'side_drive_snapshot' ~ repeat.index }}"
                value: "/alarm_snapshots/side_drive_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg"

            - service: variable.set_variable
              data:
                variable: "{{ 'side_door_snapshot' ~ repeat.index }}"
                value: "/alarm_snapshots/side_door_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg"

            - service: variable.set_variable
              data:
                variable: "{{ 'back_house_snapshot' ~ repeat.index }}"
                value: "/alarm_snapshots/back_house_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg"

            - service: variable.set_variable
              data:
                variable: "{{ 'garage_inside_snapshot' ~ repeat.index }}"
                value: "/alarm_snapshots/garage_inside_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg"

            # create camera snapshots
            - service: camera.snapshot
              data:
                entity_id: camera.lorex_nvr_mediaprofile_channel1_substream1
                filename: "/config/www{{ states('variable.side_drive_snapshot' ~ repeat.index) }}"

            - service: camera.snapshot
              data:
                entity_id: camera.lorex_nvr_mediaprofile_channel2_substream1
                filename: "/config/www{{ states('variable.side_door_snapshot' ~ repeat.index) }}"

            - service: camera.snapshot
              data:
                entity_id: camera.lorex_nvr_mediaprofile_channel11_substream1
                filename: "/config/www{{ states('variable.back_house_snapshot' ~ repeat.index) }}"

            - service: camera.snapshot
              data:
                entity_id: camera.lorex_nvr_mediaprofile_channel12_substream1
                filename: "/config/www{{ states('variable.garage_inside_snapshot' ~ repeat.index) }}"

            # delay to allow snapshots to be created
            - delay:
                seconds: 30

            - service: !include /config/include/template/notify_jason_template.yaml
              data:
                title: &msg_title "Garage Motion Alert!"
                message: &msg_body "Motion was detected in the garage at {{ as_timestamp(now())|timestamp_custom('%I:%M%p',true) }}."
                data:
                  tag: garage_motion_alarm
                  timestamp: "{{ as_timestamp(now()) }}" #push
                  priority: high
                  renotify: true #push
                  ttl: 3600
                  silent: false #push
                  requireInteraction: false #push
                  sticky: true #app
                  url: /lovelace/alarm #push
                  clickAction: /lovelace/alarm #app
                  color: !secret NOTIFY_COLOR #app
                  image: "/media{{ states('variable.garage_inside_snapshot' ~ repeat.index) }}"
                  icon: !secret ALARM_ICON #push
                  badge: !secret ALARM_BADGE #push

            # send email notification, send to work also if at work
            - service: >
                {% if is_state('person.jason','Work') %} notify.jason_email_work
                {% else %} notify.jason_email
                {% endif %}
              data:
                title: *msg_title
                message: *msg_body
                data:
                    images:
                      - "/config/www{{ states('variable.side_drive_snapshot' ~ repeat.index) }}"
                      - "/config/www{{ states('variable.side_door_snapshot' ~ repeat.index) }}"
                      - "/config/www{{ states('variable.back_house_snapshot' ~ repeat.index) }}"
                      - "/config/www{{ states('variable.garage_inside_snapshot' ~ repeat.index) }}"

            - service: persistent_notification.create
              data:
                title: *msg_title
                notification_id: *msg_body
                message: |
                  ![image](/local{{ states('variable.side_drive_snapshot' ~ repeat.index) }})

                  ![image](/local{{ states('variable.side_door_snapshot' ~ repeat.index) }})

                  ![image](/local{{ states('variable.back_house_snapshot' ~ repeat.index) }})

                  ![image](/local{{ states('variable.garage_inside_snapshot' ~ repeat.index) }})

            # seconds between motion alerts
            - delay:
                seconds: 90

          until:
            - condition: template
              value_template: "{{ not states('alarm_control_panel.house') in ['warning','triggered'] or repeat.index == 3 }}"