#######################################################################################################################
## Alarm Clock Package
#######################################################################################################################
homeassistant:
  customize:
    alert.alarm_clock_presence:
      friendly_name: Presence
      icon: mdi:alarm-check
    alert.alarm_clock_notification:
      friendly_name: Alarm Clock
      icon: mdi:alarm-note

variable:
#######################################################################################################################
## Alarm Clock Variables
#######################################################################################################################
  active_media_player_alarm_clock:
    value: none
    attributes:
      friendly_name: "Active Alarm Clock Media Player"
      icon: mdi:clock
    restore: true

  alarm_clock_failed:
    value: 'false'
    attributes:
      friendly_name: "Alarm Clock Failed"
      icon: mdi:alarm-check
    restore: false

  alarm_clock_test_play:
    value: 'false'
    attributes:
      friendly_name: "Alarm Clock Test Play"
      icon: mdi:alarm
    restore: false

#######################################################################################################################
## Alarm Clock Speaker Volumes (float) - media player reset volume
#######################################################################################################################
  alarm_clock_living_room_speaker:
    value: 0
    restore: false

  alarm_clock_dining_room_display:
    value: 0
    restore: false

  alarm_clock_bedroom_display:
    value: 0
    restore: false

  alarm_clock_bathroom_speaker:
    value: 0
    restore: false

  alarm_clock_laundry_room_speaker:
    value: 0
    restore: false

  alarm_clock_garage_speaker:
    value: 0
    restore: false

  alarm_clock_living_room_tv:
    value: 0
    restore: false

  alarm_clock_bedroom_tv:
    value: 0
    restore: false

  alarm_clock_deck_tv:
    value: 0
    restore: false

  #NEW_MEDIA_PLAYER

alert:
#######################################################################################################################
## Alarm Clock Active Alert
#######################################################################################################################
  alarm_clock_active:
    name: "Alarm Clock Active"
    title: "Wake Up Alarm!"
    entity_id: binary_sensor.alarm_clock_alert
    state: 'on'
    repeat: 5
    can_acknowledge: true
    skip_first: false
    notifiers: jason #IDEA -need templatable notifier!
    message: "Good morning!\n {{ now().strftime('%H:%M  %Y-%m-%d') }}."
    data:
      actions:
        - action: turn_off_alarm_clock
          title: Turn Off Alarm
        - action: snooze_alarm_clock
          title: Snooze
        - action: close_alarm_clock
          title: Close
      tag: alarm_clock_active
      timestamp: "{{ as_timestamp(now()) }}" #push
      priority: high
      renotify: true #push
      ttl: 600
      silent: false #push
      requireInteraction: true #push
      sticky: true #app
      url: /lovelace/schedule #push
      clickAction: /lovelace/schedule #app
      color: !secret NOTIFY_COLOR #app
      image: !secret ALARM_CLOCK_IMAGE
      icon: !secret ALARM_CLOCK_ICON #push
      badge: !secret ALARM_CLOCK_BADGE #push

#######################################################################################################################
## Alarm Clock Presence Alert
#######################################################################################################################
  alarm_clock_presence:
    name: "Alarm Clock Presence"
    title: "Alarm Clock Presence Alert"
    entity_id: binary_sensor.alarm_clock_presence_alert
    state: 'on'
    repeat: 5
    can_acknowledge: true
    skip_first: false
    notifiers: jason
    message: "Nobody is home and an alarm clock is active."
    data:
      actions:
        - action: turn_off_alarm_clock
          title: Turn Off Alarm
        - action: pause_alarm_clock_presence
          title: Pause
        - action: close_alarm_clock_presence
          title: Close
      tag: alarm_clock_presence
      timestamp: "{{ as_timestamp(now()) }}" #push
      priority: normal
      renotify: false #push
      ttl: 3600
      silent: false #push
      requireInteraction: false #push
      sticky: false #app
      url: /lovelace/schedule #push
      clickAction: /lovelace/schedule #app
      color: !secret WARNING_COLOR #app
      image: !secret ALARM_CLOCK_IMAGE
      icon: !secret ALARM_CLOCK_ICON #push
      badge: !secret ALARM_CLOCK_BADGE #push

timer:
#######################################################################################################################
## Timer - Alarm Clock
#######################################################################################################################
  alarm_clock_snooze:
    name: Snooze Time Remaining
    icon: mdi:sleep

  alarm_clock_nap:
    name: Nap Time Remaining
    icon: mdi:alarm-plus

input_boolean:
#######################################################################################################################
## Input Boolean - Alarm Clock
#######################################################################################################################
  alarm_clock_auto_workdays:
    name: Workdays
    icon: mdi:alarm

  alarm_clock_auto_weekends:
    name: Weekends / Holidays
    icon: mdi:alarm

  alarm_clock_guest:
    name: Guest
    icon: mdi:alarm

  alarm_clock_manual:
    name: Manual Alarm Clock
    icon: mdi:alarm-plus

  alarm_clock_nap:
    name: Nap Alarm Clock
    icon: mdi:alarm-snooze

  alarm_clock_phone:
    name: Phone Alarm Clock
    icon: mdi:alarm-plus

  alarm_clock_active_auto:
    name: Auto Alarm On
    icon: mdi:power

  alarm_clock_active_manual:
    name: Manual Alarm On
    icon: mdi:power

  alarm_clock_active_nap:
    name: Nap Alarm On
    icon: mdi:power

  alarm_clock_snooze:
    name: Alarm Clock Snooze
    icon: mdi:sleep

  alarm_clock_increase_volume:
    name: Auto Increase Volume
    icon: mdi:volume-low

  alarm_clock_alerts:
    name: Alarm Clock Alerts
    icon: mdi:alarm-note

input_select:
#######################################################################################################################
## Input Select - Alarm Clock
#######################################################################################################################
  alarm_clock_media_player:
    name: Media Player
    icon: mdi:speaker
    options: &media_player_names
      !include /config/include/entities/media_player_names.yaml

  alarm_clock_media_player_auto:
    name: Media Player
    icon: mdi:speaker
    options: *media_player_names

  alarm_clock_media_player_manual:
    name: Media Player
    icon: mdi:speaker
    options: *media_player_names

  alarm_clock_media_player_nap:
    name: Media Player
    icon: mdi:speaker
    options: *media_player_names

  alarm_clock_sound: &alarm_sound
    name: Alarm Sound
    icon: mdi:file-music
    options:
      - None # prevent alarm clock from running
      - Radio
      - Digital
      - Gentle
      - Loud
      - Pager
      - Rooster

  alarm_clock_sound_auto: *alarm_sound
  alarm_clock_sound_manual: *alarm_sound
  alarm_clock_sound_nap: *alarm_sound

  alarm_clock_radio_station:
    name: Alarm Clock Radio Station
    icon: mdi:radio-tower
    options: &alarm_clock_stations !include /config/include/entities/radio_station_names.yaml

  alarm_clock_radio_station_auto:
    name: Radio Station
    icon: mdi:radio-tower
    options: *alarm_clock_stations

  alarm_clock_radio_station_manual:
    name: Radio Station
    icon: mdi:radio-tower
    options: *alarm_clock_stations

  alarm_clock_radio_station_nap:
    name: Radio Station
    icon: mdi:radio-tower
    options: *alarm_clock_stations

input_number:
#######################################################################################################################
## Input Number - Alarm Clock
#######################################################################################################################
  alarm_clock_volume: &alarm_volume
    name: Volume
    icon: mdi:volume-high
    min: 0
    max: 100
    step: 1
    unit_of_measurement: '%'

  alarm_clock_volume_auto: *alarm_volume
  alarm_clock_volume_manual: *alarm_volume
  alarm_clock_volume_nap: *alarm_volume

  alarm_clock_snooze_time:
    name: Snooze Time
    icon: mdi:timer-outline
    min: 1
    max: 60
    step: 1
    unit_of_measurement: 'min'

  alarm_clock_nap_time:
    name: Nap Timer
    icon: mdi:timer-outline
    min: 1
    max: 240
    step: 1
    unit_of_measurement: 'min'

  alarm_clock_play_delay:
    name: Play Delay
    icon: mdi:timer-outline
    min: 0
    max: 300
    step: 10
    unit_of_measurement: 'seconds'

input_datetime:
  alarm_clock_manual_time:
    name: Manual Alarm Wake Time
    icon: mdi:clock
    has_date: false
    has_time: true

binary_sensor:
  - platform: template
    sensors:
#######################################################################################################################
## Alarm Clock Active - any alarm clock is on
#######################################################################################################################
      alarm_clock_active:
        friendly_name: Alarm Clock Active
        unique_id: alarm_clock_active
        icon_template: mdi:alarm-note
        value_template: >
          {{ is_state('input_boolean.alarm_clock_active_auto','on')
              or is_state('input_boolean.alarm_clock_active_manual','on')
              or is_state('input_boolean.alarm_clock_active_nap','on') }}

#######################################################################################################################
## Alarm Clock Alert
## - no alerts when user is testing alarm play
## - delay allow booleans to turn back off in check conditions w/o triggering alert
#######################################################################################################################
      alarm_clock_alert:
        friendly_name: Alarm Clock Alert
        unique_id: alarm_clock_alert
        icon_template: mdi:clock
        delay_on:
          seconds: 5
        value_template: >
          {{ is_state('binary_sensor.alerts_enabled','on')
               and is_state('input_boolean.alarm_clock_alerts','on')
               and is_state('variable.alarm_clock_test_play','false')
               and is_state('binary_sensor.alarm_clock_active','on') }}

#######################################################################################################################
## Alarm Clock Presence Alert
#######################################################################################################################
      alarm_clock_presence_alert:
        friendly_name: Alarm Clock Presence
        unique_id: alarm_clock_presence_alert
        icon_template: mdi:clock-alert
        value_template: >
          {{ is_state('binary_sensor.alerts_enabled','on')
              and is_state('input_boolean.alarm_clock_alerts','on')
              and is_state('binary_sensor.alarm_clock_active','on')
              and (is_state('binary_sensor.someone_home','off')
                or is_state('input_select.occupancy_mode','Aftsay')) }}

sensor:
  - platform: template
    sensors:
#######################################################################################################################
# Alarm Clock Media Player
#######################################################################################################################
      alarm_clock_media_player:
        friendly_name: Alarm Clock Media Player
        unique_id: alarm_clock_media_player
        icon_template: mdi:animation-play
        value_template: >
          {{ expand('group.media_players')|selectattr('name','eq',states('input_select.alarm_clock_media_player'))
              |map(attribute='entity_id')|join(',') }}

#######################################################################################################################
## Alarm Clock Status - picture glance state
#######################################################################################################################
      alarm_clock_status:
        unique_id: alarm_clock_status
        value_template: >
          {% if is_state('variable.alarm_clock_failed','true') %} failed
          {% elif is_state('binary_sensor.alarm_clock_active','off')
            or is_state('script.alarm_clock_stop','on')
            or is_state('variable.startup_complete','false') %} off
          {% elif is_state('binary_sensor.alarm_clock_active','on') %}
            {% if is_state('input_boolean.alarm_clock_snooze','on')
                and is_state('timer.alarm_clock_snooze','active') %} snoozed
            {% elif is_state(states('sensor.alarm_clock_media_player'),'playing')
                 or is_state('binary_sensor.tts_playing','on')
                 or is_state('script.tts_announcement','on')
                 or is_state('script.alarm_clock_play','on')
                 or is_state('script.alarm_clock_stop','on') %} playing
            {% else %} failed
            {% endif %}
          {% else %}
            off
          {% endif %}

#######################################################################################################################
## Auto Alarm Clock - alarm status in glance alerts, alarm settings popup
#######################################################################################################################
      alarm_clock_auto:
        friendly_name: Auto Alarm
        unique_id: alarm_clock_auto
        icon_template: >
          {% if is_state('sensor.alarm_clock_auto','Snooze')  %} mdi:alarm-snooze
          {% elif is_state('sensor.alarm_clock_auto','Active') %} mdi:alarm-note
          {% elif is_state('sensor.alarm_clock_auto','Off') %} mdi:alarm-off
          {% else %} mdi:alarm-check
          {% endif %}
        value_template: >
          {% set time = states('sensor.time') %}
          {% set days = states('input_datetime.days_waketime')[0:5] %}
          {% set afts = states('input_datetime.afternoons_waketime')[0:5] %}
          {% set wkd = states('input_datetime.weekend_waketime')[0:5] %}
          {% set guest = states('input_datetime.guest_waketime')[0:5] %}
          {% set wake_tom = states('sensor.waketime_tomorrow') %}

          {% if is_state('input_select.occupancy_mode','Guest') %}
            {# set tomorrows alarm time #}
            {% if is_state('binary_sensor.workday_tomorrow','off') %}
              {% set alarm_tom = 'Off' if is_state('input_boolean.alarm_clock_guest','off') else wake_tom %}
            {% else %}
              {% set alarm_tom = 'Off' if is_state('input_boolean.alarm_clock_guest','off') else wake_tom %}
            {% endif %}
            {# set next alarm to tomorrows alarm time if past today alarm time #}
            {% if is_state('binary_sensor.workday','off') %}
              {% set next = alarm_tom if time > guest else 'Off' if is_state('input_boolean.alarm_clock_guest','off') else guest %}
            {% else %}
              {% set next = alarm_tom if time > guest else 'Off' if is_state('input_boolean.alarm_clock_guest','off') else guest %}
            {% endif %}
          {% else %}
            {# set tomorrows alarm time #}
            {% if is_state('binary_sensor.work_tomorrow','off') %}
              {% set alarm_tom = 'Off' if is_state('input_boolean.alarm_clock_auto_weekends','off') else wake_tom %}
            {% else %}
              {% set alarm_tom = 'Off' if is_state('input_boolean.alarm_clock_auto_workdays','off') else days if is_state('sensor.tomorrow_shift','Days') else wake_tom %}
            {% endif %}
            {# set next alarm to tomorrows alarm time if past today alarm time #}
            {% if is_state('binary_sensor.work_today','off') %}
              {% set next = alarm_tom if time > wkd else 'Off' if is_state('input_boolean.alarm_clock_auto_weekends','off') else wkd %}
            {% else %}
              {% if is_state('sensor.current_shift','Afternoons') %}
                {% set next = alarm_tom if time > afts else 'Off' if is_state('input_boolean.alarm_clock_auto_workdays','off') else afts %}
              {% else %}
                {% set next = alarm_tom if time > days else 'Off' if is_state('input_boolean.alarm_clock_auto_workdays','off') else days %}
              {% endif %}
            {% endif %}
          {% endif %}
          {{ next }}

#######################################################################################################################
## Auto Alarm Clock Display - covnerts display time to 12h
#######################################################################################################################
      alarm_clock_auto_display:
        friendly_name: Auto Alarm
        unique_id: alarm_clock_auto_display
        icon_template: "{{ states.sensor.alarm_clock_auto.attributes.icon }}"
        value_template: >
          {{ states('sensor.alarm_clock_auto') if states('sensor.alarm_clock_auto')|lower in ['off','unknown','unavailable','none']
              else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.alarm_clock_auto'))|timestamp_custom('%_I:%M %p') }}

#######################################################################################################################
## Manual Alarm Clock - alarm status in glance alerts, alarm settings popup
#######################################################################################################################
      alarm_clock_manual:
        friendly_name: Manual Alarm
        unique_id: alarm_clock_manual
        icon_template: >
          {% if is_state('sensor.alarm_clock_manual','Snooze') %} mdi:alarm-snooze
          {% elif is_state('sensor.alarm_clock_manual','Active') %} mdi:alarm-note
          {% elif is_state('sensor.alarm_clock_manual','Off') %} mdi:alarm-off
          {% else %} mdi:alarm-check
          {% endif %}
        value_template: >
          {% if is_state('input_boolean.alarm_clock_active_manual','on') and is_state('input_boolean.alarm_clock_snooze','on') %} Snooze
          {% elif is_state('input_boolean.alarm_clock_active_manual','on') %} Active
          {% elif is_state('input_boolean.alarm_clock_manual','on') %}
            {{ as_timestamp(states('sensor.date') ~ ' ' ~ states('input_datetime.alarm_clock_manual_time')[0:5])|timestamp_custom('%H:%M',true) }}
          {% else %} Off
          {% endif %}

#######################################################################################################################
## Manual Alarm Clock Display - covnerts display time to 12h
#######################################################################################################################
      alarm_clock_manual_display:
        friendly_name: Manual Alarm
        unique_id: alarm_clock_manual_display
        icon_template : "{{ states.sensor.alarm_clock_manual.attributes.icon }}"
        value_template: >
          {{ states('sensor.alarm_clock_manual') if states('sensor.alarm_clock_manual')|lower in ['off','unknown','unavailable','none']
              else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.alarm_clock_manual'))|timestamp_custom('%_I:%M %p') }}

#######################################################################################################################
## Nap Alarm Clock - alarm status in glance alerts, alarm settings popup
#######################################################################################################################
      alarm_clock_nap:
        friendly_name: Nap Alarm
        unique_id: alarm_clock_nap
        icon_template: >
          {% if is_state('sensor.alarm_clock_nap','Snooze') %} mdi:alarm-snooze
          {% elif is_state('sensor.alarm_clock_nap','Active') %} mdi:alarm-note
          {% elif is_state('sensor.alarm_clock_nap','Off') %} mdi:alarm-off
          {% else %} mdi:alarm-check
          {% endif %}
        value_template: >
          {% if is_state('input_boolean.alarm_clock_active_nap','on')
              and is_state('input_boolean.alarm_clock_snooze','on') %} Snooze
          {% elif is_state('input_boolean.alarm_clock_active_nap','on') %} Active
          {% elif is_state('input_boolean.alarm_clock_nap','on') %}
            {{ as_timestamp(state_attr('timer.alarm_clock_nap','finishes_at'))|timestamp_custom('%H:%M',true) }}
          {% else %} Off
          {% endif %}

#######################################################################################################################
## Manual Alarm Clock Display - covnerts display time to 12h
#######################################################################################################################
      alarm_clock_nap_display:
        friendly_name: Nap Alarm
        unique_id: alarm_clock_nap_display
        icon_template: "{{ states.sensor.alarm_clock_nap.attributes.icon }}"
        value_template: >
          {{ states('sensor.alarm_clock_nap') if states('sensor.alarm_clock_nap')|lower in ['off','unknown','unavailable','none']
              else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.alarm_clock_nap'))|timestamp_custom('%_I:%M %p') }}

#######################################################################################################################
## Next Alarm - earliest of auto, manual, phone
#######################################################################################################################
      alarm_clock_next_alarm:
        friendly_name: Next Alarm
        unique_id: alarm_clock_next_alarm
        icon_template: mdi:alarm
        value_template: >
          {% set time = states('sensor.time') %}
          {% set auto = '99:99' if states('sensor.alarm_clock_auto') in ['Off','Snooze','Active']
              else states('sensor.alarm_clock_auto') %}
          {% set manual = '99:99' if states('sensor.alarm_clock_manual') in ['Off','Snooze','Active']
              else states('sensor.alarm_clock_manual') %}
          {% set nap = '99:99' if states('sensor.alarm_clock_nap') in ['Off','Snooze','Active']
              else states('sensor.alarm_clock_nap') %}
          {% set jalarm = '99:99' if is_state('input_boolean.alarm_clock_phone','off') or is_state('binary_sensor.jason_home','off')
              or states('sensor.jphone_alarm_clock')|lower in ['off','unknown','unavailable','none']
              else states('sensor.jphone_alarm_clock') %}
          {% set salarm = '99:99' if is_state('input_boolean.alarm_clock_phone','off') or is_state('binary_sensor.sheri_home','off')
              or states('sensor.sphone_alarm_clock')|lower in ['off','unknown','unavailable','none']
              else states('sensor.sphone_alarm_clock') %}
          {% set next = [auto,manual,nap,jalarm,salarm]|min %}
          {{ 'Active' if is_state('binary_sensor.alarm_clock_active','on') else ('Off' if next == '99:99' else next) }}
        attribute_templates:
          alarm_source: >
            {% set next = states('sensor.alarm_clock_next_alarm') %}
            {% if next in ['Active','Off','unknown','unavailable','none'] %} none
            {% elif next == states('sensor.alarm_clock_auto') %} auto
            {% elif next == states('sensor.alarm_clock_manual') %} manual
            {% elif next == states('sensor.alarm_clock_nap') %} nap
            {% elif next == as_timestamp(states('sensor.jphone_next_alarm'))|timestamp_custom('%H:%M',true) %} jphone
            {% elif next == as_timestamp(states('sensor.sphone_next_alarm'))|timestamp_custom('%H:%M',true) %} sphone
            {% endif %}

#######################################################################################################################
## Next Alarm Display - covnerts display time to 12h
#######################################################################################################################
      alarm_clock_next_alarm_display:
        friendly_name: Next Alarm
        unique_id: alarm_clock_next_alarm_display
        icon_template: "{{ states.sensor.alarm_clock_next_alarm.attributes.icon }}"
        value_template: >
          {{ states('sensor.alarm_clock_next_alarm') if states('sensor.alarm_clock_next_alarm')|lower in ['off','unknown','unavailable','none']
              else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.alarm_clock_next_alarm'))|timestamp_custom('%_I:%M %p') }}

script:
#######################################################################################################################
## Alarm Clock Play
#######################################################################################################################
  alarm_clock_play:
    alias: "Alarm Clock Play"
    description: "Play specified alarm clock."
    icon: mdi:alarm-note
    mode: restart
    fields:
      alarm_type:
        description: "Alarm type to play (auto, manual, nap)."
        example: 'nap'
      first_run:
        description: "First run of alarm play (true,false)"
        example: 'true'
      test_play:
        description: "User is test playing alarm. (auto,manual,nap)"
        example: auto
    sequence:
      - service: variable.set_variable
        data:
          variable: alarm_clock_failed
          value: 'false'

      # save media player volumes before conditions so values are set for alarm_clock_stop
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ first_run }}"

            sequence:
              - service: script.save_media_player_volumes
                data:
                  source: alarm_clock_on

      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: input_select.alarm_clock_sound
                    state: None

                  - condition: state
                    entity_id: input_boolean.mute_all
                    state: 'on'

                  # aftsay mode not included in case phone battery dies or in aftsay mode by mistake
                  - condition: state
                    entity_id: input_select.occupancy_mode
                    state: Vacation

                  - condition: state
                    entity_id: alarm_control_panel.house
                    state: triggered

            sequence:
              - service: browser_mod.toast
                data:
                  message: >
                    {% set message = 'Alarm clock cannont play.' %}
                    {% if is_state('input_select.alarm_clock_sound','None') %}{% set message = message ~ ' The alarm clock sound has been set to none (muted).' %}{% endif %}
                    {% if is_state('input_boolean.mute_all','on') %} {% set message = message ~ ' The system has been muted.' %}{% endif %}
                    {% if is_state('input_select.occupancy_mode','Vacation') %}{% set message = message ~ ' The house is in vacation mode.' %}{% endif %}
                    {% if is_state('alarm_control_panel.house','triggered') %}{% set message = message ~ ' The house alarm has been triggered.' %}{% endif %}
                    {{ message }}
                  duration: 30000

              # this will trigger alarm clock stop
              - service: input_boolean.turn_off
                entity_id:
                  - input_boolean.alarm_clock_active_auto
                  - input_boolean.alarm_clock_active_manual
                  - input_boolean.alarm_clock_active_nap

        default:
          # if spotify playing on any alarm clock media player turn restart boolean on
          - choose:
              - conditions:
                  - !include /config/include/template/alarm_clock_spotify_playing_condition.yaml
                sequence:
                  - service: input_boolean.turn_on
                    entity_id: input_boolean.spotify_restart

          # set test_play variable, turn on appropriate boolean - req if test play
          - choose:
              - conditions: "{{ test_play }}"
                sequence:
                  # set variable to supress push alert
                  - service: variable.set_variable
                    data:
                      variable: alarm_clock_test_play
                      value: 'true'

                  - service: automation.turn_off
                    entity_id: &alarm_clock_on_automations
                      - automation.alarm_clock_auto_active_on
                      - automation.alarm_clock_manual_active_on
                      - automation.alarm_clock_nap_active_on

                  - service: input_boolean.turn_on
                    data:
                      entity_id: >
                        {% if alarm_type == 'auto' %} input_boolean.alarm_clock_active_auto
                        {% elif alarm_type == 'manual' %} input_boolean.alarm_clock_active_manual
                        {% elif alarm_type == 'nap' %} input_boolean.alarm_clock_active_nap
                        {% endif %}

                  - service: automation.turn_on
                    entity_id: *alarm_clock_on_automations

          # only on first run so changes on main UI during alarm aren't bypassed on restart
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ first_run }}"

                sequence:
                  # turn off so we don't trigger while setting alarm
                  - service: automation.turn_off
                    entity_id: &media_player_off_automations
                      - automation.alarm_clock_detect_snooze
                      - automation.alarm_clock_media_player_turned_off

                  - service: input_select.select_option
                    data:
                      entity_id: input_select.alarm_clock_sound
                      option: >
                        {% if alarm_type == 'auto' %}{{ states('input_select.alarm_clock_sound_auto') }}
                        {% elif alarm_type == 'manual' %}{{ states('input_select.alarm_clock_sound_manual') }}
                        {% elif alarm_type == 'nap' %}{{ states('input_select.alarm_clock_sound_nap') }}
                        {% endif %}

                  - service: input_select.select_option
                    data:
                      entity_id: input_select.alarm_clock_radio_station
                      option: >
                        {% if alarm_type == 'auto' %}{{ states('input_select.alarm_clock_radio_station_auto') }}
                        {% elif alarm_type == 'manual' %}{{ states('input_select.alarm_clock_radio_station_manual') }}
                        {% elif alarm_type == 'nap' %}{{ states('input_select.alarm_clock_radio_station_nap') }}
                        {% endif %}

                  - service: input_select.select_option
                    data:
                      entity_id: input_select.alarm_clock_media_player
                      option: >
                        {% if alarm_type == 'auto' %}{{ states('input_select.alarm_clock_media_player_auto') }}
                        {% elif alarm_type == 'manual' %}{{ states('input_select.alarm_clock_media_player_manual') }}
                        {% elif alarm_type == 'nap' %}{{ states('input_select.alarm_clock_media_player_nap') }}
                        {% endif %}

                  # only reset volumes if not auto resumed from settings/tts/alarm clock)
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ first_run }}"

                        sequence:
                          - service: input_number.set_value
                            data:
                              entity_id: input_number.alarm_clock_volume
                              value: >
                                {% if alarm_type == 'auto' %}{{ states('input_number.alarm_clock_volume_auto')|float }}
                                {% elif alarm_type == 'manual' %}{{ states('input_number.alarm_clock_volume_manual')|float }}
                                {% elif alarm_type == 'nap' %}{{ states('input_number.alarm_clock_volume_nap')|float }}
                                {% endif %}

                  - choose:
                      - conditions: "{{ test_play }}"
                        sequence:
                          - delay:
                              seconds: 5 # allow binary sensor to turn on

                    default:
                      # delay to allow push notifications to be sent or user to turn off alarm before playing
                      # alarm time is effectively alarm set time plus this delay
                      - delay:
                          seconds: "{{ states('input_number.alarm_clock_play_delay')|int }}"

          # check to see if alarm has been snoozed
          - condition: state
            entity_id: input_boolean.alarm_clock_snooze
            state: 'off'

          # wait until any announcements are done playing
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.tts_playing
                    state: 'on'

                sequence:
                  - wait_template: "{{ is_state('binary_sensor.tts_playing','off') }}"
                    timeout:
                      minutes: 2
                    continue_on_timeout: true # alarm might fail, tts, might get cut off, volume jumps

                  # delay to allow media players to reset before playing alarm clock
                  - delay:
                      seconds: 5

          # do not continue if alarm clock media player is not available
          # if a speaker in a google speaker group is not available the group shows still as available
          # this will cause error and exit script so check state of each entity in the speaker group
          - choose:
              - conditions:
                  # media player is unavailable or not set
                  - condition: template
                    value_template: >
                      {% if states('sensor.alarm_clock_media_player') in state_attr('group.google_speaker_groups','entity_id') %}
                        {% set f = namespace(value=0) %}
                        {% for entity_id in state_attr('group.' ~ states('sensor.alarm_clock_media_player').split('.')[1], 'entity_id') %}
                          {% if states(entity_id) in ['unknown','unavailable','none'] %}
                            {% set f.value = 1 %}
                          {% endif %}
                        {% endfor %}
                        {{ f.value|int > 0}}
                      {% else %}
                        {{ states(states('sensor.alarm_clock_media_player')) in ['','unknown','unavailable','none'] }}
                      {% endif %}

                sequence:
                  - service: variable.set_variable
                    data:
                      variable: alarm_clock_failed
                      value: 'true'

            default:
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ first_run }}"

                    sequence:
                      # turn off current media player so we don't leave it playing stranded (media player may have changed)
                      - service: script.turn_on
                        entity_id: script.active_alarm_clock_media_player_off

                      # if the alarm clock media player is playing something pause it so we don't get a volume jump
                      # this will be the new media player if it changed (sensor.alarm_clock_media_player)
                      - choose:
                          - conditions: "{{ is_state(states('sensor.alarm_clock_media_player'),'playing') }}"

                            sequence:
                                - service: media_player.media_pause
                                  data:
                                    entity_id: "{{ states('sensor.alarm_clock_media_player') }}"

                      # wait for alarm clock media player to pause if to avoid volume jump
                      - wait_template: "{{ not is_state(states('sensor.alarm_clock_media_player'),'playing') }}"
                        timeout:
                          seconds: 10
                        continue_on_timeout: true

                      # set alarm_clock media player volumes , this sets ALL alarm clock media players in group to same volume
                      - service: script.set_media_player_volumes
                        data:
                          media_player: "{{ states('sensor.alarm_clock_media_player') }}"
                          source: alarm_clock_on

              - repeat:
                  sequence:
                    - choose:
                        - conditions:
                            # run on first iteration and then only if not radio (end of file media so restart media play)
                            - condition: template
                              value_template: >
                                {{ true if repeat.first else not is_state('input_select.alarm_clock_sound','Radio') }}

                          sequence:
                            # play selected media
                            - service: media_player.play_media
                              data:
                                entity_id: "{{ states('sensor.alarm_clock_media_player') }}"
                                media_content_id: !include /config/include/template/alarm_clock_sound_template.yaml
                                media_content_type: music

                            # populate active media player variable with new media player entity_id
                            - service: variable.set_variable
                              data:
                                variable: active_media_player_alarm_clock
                                value: "{{ states('sensor.alarm_clock_media_player') }}"

                    # wait until media player starts playing/timeout
                    - wait_template: "{{ is_state(states('sensor.alarm_clock_media_player'),'playing') }}"
                      timeout:
                        seconds: 60
                      continue_on_timeout: true

                    - choose:
                        - conditions: "{{ not is_state(states('sensor.alarm_clock_media_player'),'playing') }}"

                          sequence:
                            - service: variable.set_variable
                              data:
                                variable: alarm_clock_failed
                                value: 'true'

                      default:
                        # turn snooze detect on
                        - service: automation.turn_on
                          entity_id: *media_player_off_automations

                        # player must start playing first to get media_duration for delay
                        - choose:
                            - conditions:
                                - condition: state
                                  entity_id: input_select.alarm_clock_sound
                                  state: 'Radio'

                              sequence:
                                - delay:
                                    minutes: 60  # this controls max alarm time with radio

                          default:
                            - delay:
                                seconds: "{{ state_attr(states('sensor.alarm_clock_media_player'),'media_duration')|int }}"

                  until:
                    - condition: state
                      entity_id: binary_sensor.alarm_clock_active
                      state: 'off'

#######################################################################################################################
## Alarm Clock Stop
#######################################################################################################################
  alarm_clock_stop:
    alias: "Alarm Clock Stop"
    description: "Turn off alarm/snooze/media player, reset timers."
    icon: mdi:alarm-note-off
    mode: single
    max_exceeded: silent
    variables:
      speaker_groups: "{{ state_attr('group.media_players','entity_id') }}"
    sequence:
      - service: script.turn_off
        entity_id: script.alarm_clock_play

      - service: timer.cancel
        entity_id:
          - timer.alarm_clock_snooze
          - timer.alarm_clock_nap

      # if radio is on and any member of alarm clock speaker group is in the radio speaker group just stop players or radio will turn off
      - choose:
          - conditions:
              # valid media player (if failed not populated)
              - condition: template
                value_template: "{{ states('variable.active_media_player_alarm_clock') in speaker_groups }}"

              - condition: template
                value_template: >
                  {% set radio = states('sensor.radio_media_player') %}
                  {% set alarm = states('sensor.alarm_clock_media_player') %}
                  {% if is_state('input_boolean.radio_on','on') %}
                    {% set found = namespace(value=0) %}
                    {% if radio in speaker_groups %}
                      {% for radio_player in state_attr('group.' ~ radio.split('.')[1],'entity_id') %}
                        {% if alarm in speaker_groups %}
                          {% for alarm_player in state_attr('group.' ~ alarm.split('.')[1], 'entity_id') %}
                            {% if radio_player == alarm_player %}{% set found.value = 1 %}{% endif %}
                          {% endfor %}
                        {% elif radio_player == alarm %}
                          {% set found.value = 1 %}
                        {% endif %}
                      {% endfor %}
                      {{ found.value == 1 }}
                    {% else %}
                      {% set found = namespace(value=0) %}
                      {% if alarm in speaker_groups %}
                        {% for alarm_player in state_attr('group.' ~ alarm.split('.')[1], 'entity_id') %}
                          {% if radio_player == alarm_player %}{% set found.value = 1 %}{% endif %}
                        {% endfor %}
                      {% elif radio == alarm %}
                        {% set found.value = 1 %}
                      {% endif %}
                      {{ found == 1 }}
                    {% endif %}
                  {% else %} false
                  {% endif %}

            sequence:
              - service: media_player.media_stop
                data:
                  entity_id: "{{ states('variable.active_media_player_alarm_clock') }}"

              - service: variable.set_variable
                data:
                  variable: active_media_player_alarm_clock
                  value: cleared

        default:
          # media player not needed for radio, turn it off
          - service: script.active_alarm_clock_media_player_off

      - service: script.set_media_player_volumes
        data:
          media_player: "{{ states('sensor.alarm_clock_media_player') }}"
          source: alarm_clock_off

      # don't turn off booleans until end so binary_sensor.alarm_clock_active doesn't turn off and resume radio before we're done here
      - service: input_boolean.turn_off
        entity_id:
          - input_boolean.alarm_clock_active_auto
          - input_boolean.alarm_clock_active_manual
          - input_boolean.alarm_clock_active_nap
          - input_boolean.alarm_clock_nap
          - input_boolean.alarm_clock_snooze

      - service: variable.set_variable
        data:
          variable: alarm_clock_test_play
          value: 'false'

#######################################################################################################################
## Active Alarm Clock Media Player Off
## variable.active_media_player_alarm_clock populated during alarm_clock_play
## stores active playing alarm clock media player
## used for media player display sensors and turning off current media player before starting new media player
## media player sensor will have already changed to new value if changed
# #######################################################################################################################
  active_alarm_clock_media_player_off:
    alias: "Active Alarm Clock Media Player Off"
    description: "Turn the current alarm clock media player off."
    icon: mdi:alarm-note-off
    mode: restart
    sequence:
      # make sure variable is a valid media player
      - condition: template
        value_template: "{{ states('variable.active_media_player_alarm_clock') in state_attr('group.media_players','entity_id') }}"

      #NOTE broswer players/chromecast don't turn off so stop play first
      - choose:
          - conditions:
              - condition: template
                value_template:  "{{ is_state(states('variable.active_media_player_alarm_clock'), 'playing') }}"

            sequence:
              - service:  media_player.media_stop
                data:
                  entity_id: "{{ states('variable.active_media_player_alarm_clock') }}"

      # turn off the active media player
      - service: media_player.turn_off
        data:
          entity_id: "{{ states('variable.active_media_player_alarm_clock') }}"

      - service: variable.set_variable
        data:
          variable: active_media_player_alarm_clock
          value: cleared

automation:
#######################################################################################################################
## Alarm Clock - Auto Active On
#######################################################################################################################
  - id: alarm_clock_auto_active_on
    alias: "[Alarm Clock] Auto Active On"
    description: "Play alarm clock when auto active boolean turns on."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.alarm_clock_active_auto
        to: 'on'

    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: input_boolean.alarm_clock_active_manual
                    state: 'on'

                  - condition: state
                    entity_id: input_boolean.alarm_clock_active_nap
                    state: 'on'

                  - condition: template
                    value_template: >
                      {{ is_state('input_boolean.alarm_clock_guest','off') if is_state('binary_sensor.owner_home','off')
                          else (is_state('input_boolean.alarm_clock_auto_workdays','off') if is_state('binary_sensor.work_today','on')
                            else  is_state('input_boolean.alarm_clock_auto_weekends','off')) }}

            sequence:
              # turn off automation so we don't turn off another active alarm or resume radio
              - service: automation.turn_off
                entity_id: automation.alarm_clock_off

              #NOTE this will trigger automation.radio_auto_resume if radio is on (binary_sensor.alarm_clock_active turns on/off)
              - service: input_boolean.turn_off
                entity_id: input_boolean.alarm_clock_active_auto

              - service: automation.turn_on
                entity_id: automation.alarm_clock_off

              - service: browser_mod.toast
                data:
                  message: "Auto alarm clock could not run. The auto alarm clock is not enabled or there is another active alarm clock."
                  duration: 30000

        default:
          - service: script.turn_on
            data:
              entity_id: script.alarm_clock_play
              variables:
                alarm_type: 'auto'
                first_run: true

#######################################################################################################################
## Alarm Clock - Manual Active On
#######################################################################################################################
  - id: alarm_clock_manual_active_on
    alias: "[Alarm Clock] Manual Active On"
    description: "Play alarm clock when manual active boolean turns on."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.alarm_clock_active_manual
        to: 'on'

      - platform: template
        value_template: "{{ states('sensor.time') == states('input_datetime.alarm_clock_manual_time')[0:5] }}"

    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: input_boolean.alarm_clock_active_auto
                    state: 'on'

                  - condition: state
                    entity_id: input_boolean.alarm_clock_active_nap
                    state: 'on'

                  - condition: state
                    entity_id: input_boolean.alarm_clock_manual
                    state: 'off'

            sequence:
              # turn off automation so we don't turn off active alarm, trigger radio resume
              - service: automation.turn_off
                entity_id: automation.alarm_clock_off

              #NOTE this will trigger automation.radio_auto_resume if radio is on (binary_sensor.alarm_clock_active turns on/off)
              - service: input_boolean.turn_off
                entity_id: input_boolean.alarm_clock_active_manual

              - service: automation.turn_on
                entity_id: automation.alarm_clock_off

              - service: browser_mod.toast
                data:
                  message: "Manual alarm clock could not run. The manual alarm clock is not enabled or there is another active alarm clock."
                  duration: 30000

        default:
          # turn off automation to avoid recursive trigger
          - service: automation.turn_off
            data:
              entity_id: automation.alarm_clock_manual_active_on
              stop_actions: false

          # required if time trigger
          - service: input_boolean.turn_on
            entity_id: input_boolean.alarm_clock_active_manual

          - service: automation.turn_on
            entity_id: automation.alarm_clock_manual_active_on

          - service: script.turn_on
            data:
              entity_id: script.alarm_clock_play
              variables:
                alarm_type: 'manual'
                first_run: true

#######################################################################################################################
## Alarm Clock - Nap Alarm On
#######################################################################################################################
  - id: alarm_clock_nap_on
    alias: "[Alarm Clock] Nap On"
    description: "Start nap timer when nap alarm boolean turned on."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.alarm_clock_nap
        to: 'on'

      - platform: state
        entity_id: variable.startup_complete
        to: 'true'

    condition:
      - condition: template
        value_template: "{{ is_state('input_boolean.alarm_clock_nap','on') if trigger.entity_id == 'variable.startup_complete' else true }}"

    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: input_boolean.alarm_clock_active_auto
                    state: 'on'

                  - condition: state
                    entity_id: input_boolean.alarm_clock_active_manual
                    state: 'on'

            sequence:
              # turn off automation so we don't turn off active alarm, trigger radio resume
              - service: automation.turn_off
                entity_id: automation.alarm_clock_off

              - service: input_boolean.turn_off
                entity_id: input_boolean.alarm_clock_nap

              - service: automation.turn_on
                entity_id: automation.alarm_clock_off

              - service: browser_mod.toast
                data:
                  message: "Nap alarm clock was turned off. There is another active alarm clock."
                  duration: 30000

        default:
          - service: timer.start
            data:
              entity_id: timer.alarm_clock_nap
              duration:
                minutes: "{{ states('input_number.alarm_clock_nap_time')|int }}"

#######################################################################################################################
## Alarm Clock - Nap Active On
#######################################################################################################################
  - id: alarm_clock_nap_active_on
    alias: "[Alarm Clock] Nap Active On"
    description: "Play alarm clock when active nap alarm boolean turns on."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.alarm_clock_active_nap
        to: 'on'

      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.alarm_clock_nap

    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: input_boolean.alarm_clock_active_auto
                    state: 'on'

                  - condition: state
                    entity_id: input_boolean.alarm_clock_active_manual
                    state: 'on'

                  - condition: state
                    entity_id: input_boolean.alarm_clock_nap
                    state: 'off'

            sequence:
              # turn off automation so we don't turn off active alarm, trigger radio resume
              - service: automation.turn_off
                entity_id: automation.alarm_clock_off

              # this will trigger automation.radio_auto_resume if radio is on (binary_sensor.alarm_clock_active turns on/off)
              - service: input_boolean.turn_off
                entity_id: input_boolean.alarm_clock_active_nap

              - service: automation.turn_on
                entity_id: automation.alarm_clock_off

              - service: browser_mod.toast
                data:
                  message: "Nap alarm clock could not run. Alarm is not enabled or there is another active alarm clock already running."
                  duration: 30000

        default:
          # req if we manually turned on
          - service: timer.cancel
            entity_id: timer.alarm_clock_nap

          # req for timer trigger
          - service: input_boolean.turn_on
            entity_id: input_boolean.alarm_clock_active_nap

          - service: script.turn_on
            data:
              entity_id: script.alarm_clock_play
              variables:
                alarm_type: nap
                first_run: true

#######################################################################################################################
## Alarm Clock - Resume
#######################################################################################################################
  - id: alarm_clock_resume
    alias: "[Alarm Clock] Resume"
    description: "Restart alarm clock."
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      # restart if media player selection changed
      - platform: state
        entity_id:
           - input_select.alarm_clock_media_player
           - input_select.alarm_clock_radio_station_auto
           - input_select.alarm_clock_sound

      # restart alarm when snooze timer is finished
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.alarm_clock_snooze

      # resume after announcement
      - platform: state
        entity_id: binary_sensor.tts_playing
        to: 'off'

      # restart when alarm is disarmed from triggered
      # required if announcements are muted, no tts to restart alarm clock
      - platform: state
        entity_id: alarm_control_panel.house
        to: 'disarmed'
        from: 'triggered'
        for:
          seconds: 30

      # restart alarm clock if it's on at startup
      - platform: state
        entity_id: variable.startup_complete
        to: 'true'

    condition:
      - condition: state
        entity_id: binary_sensor.alarm_clock_active
        state: 'on'

      # don't resume play if alarm clock is snoozed
      - condition: state
        entity_id: input_boolean.alarm_clock_snooze
        state: 'off'

      - !include /config/include/template/alarm_clock_tts_off_condition.yaml

    action:
      # turn snooze boolean off if snooze timer finished
      - choose:
          - conditions:
              - condition: template
                value_template: >
                  {{ trigger.event.data['entity_id'] == 'timer.alarm_clock_snooze' if trigger.event is defined else false }}

            sequence:
              # turn off automation so we don't turn off the alarm clock
              - service: automation.turn_off
                entity_id: automation.alarm_clock_off

              - service: input_boolean.turn_off
                entity_id: input_boolean.alarm_clock_snooze

              - service: automation.turn_on
                entity_id: automation.alarm_clock_off

      # turn automation off so we don't trigger when radio resumes from tts etc.
      - service: automation.turn_off
        entity_id: automation.alarm_clock_off_from_media_player

      - service: script.turn_on
        data:
          entity_id: script.alarm_clock_play
          variables:
            alarm_type: >
              {% if is_state('input_boolean.alarm_clock_active_auto','on') %} auto
              {% elif is_state('input_boolean.alarm_clock_active_manual','on') %} manual
              {% elif is_state('input_boolean.alarm_clock_active_nap','on') %} nap
              {% endif %}
            # first_run at startup to restart timers, set volumes
            first_run: "{{ trigger_id == 'variable.startup_complete' }}"

      # wait until alarm clock is playing to turn automation back on
      - wait_template: "{{ is_state(states('sensor.alarm_clock_media_player'),'playing') }}"
        timeout:
          seconds: 60
        continue_on_timeout: true # don't leave automation stranded off

      - service: automation.turn_on
        entity_id: automation.alarm_clock_off_from_media_player

#######################################################################################################################
## Alarm Clock - Off
#######################################################################################################################
  - id: alarm_clock_off
    alias: "[Alarm Clock] Off"
    description: "Stop alarm clock."
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id:
          # req to stop timer, nap alarm won't be on if another alarm active
          - input_boolean.alarm_clock_nap
          - input_boolean.alarm_clock_active_nap
          - input_boolean.alarm_clock_active_auto
          - input_boolean.alarm_clock_active_manual
        to: 'off'

      - platform: state
        entity_id: input_boolean.alarm_clock_snooze
        to: 'off'

      - platform: event
        event_type: timer.cancelled
        event_data:
          entity_id:
            - timer.alarm_clock_snooze
            - timer.alarm_clock_nap

      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: turn_off_alarm_clock

      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: turn_off_alarm_clock

    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.alarm_clock_active
            state: 'on'

          - condition: state
            entity_id: script.alarm_clock_play
            state: 'on'

          - condition: state
            entity_id: timer.alarm_clock_nap
            state: 'active'

          - condition: state
            entity_id: timer.alarm_clock_snooze
            state: 'active'

          - condition: state
            entity_id: input_boolean.alarm_clock_nap
            state: 'on'

      - condition: state
        entity_id: script.alarm_clock_stop
        state: 'off'

    action:
      - service: script.turn_on
        entity_id: script.alarm_clock_stop

#######################################################################################################################
## Alarm Clock - Snooze On
#######################################################################################################################
  - id: alarm_clock_snooze_on
    alias: "[Alarm Clock] Snooze On"
    description: "Pause media player and start snooze timer when snooze turned on."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.alarm_clock_snooze
        to: 'on'

      # run when startup complete to restart snooze timers
      - platform: state
        entity_id: variable.startup_complete
        to: 'true'

      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: snooze_alarm_clock

      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: snooze_alarm_clock

    condition:
      # if trigger is startup snooze boolean must be on
      - condition: template
        value_template: "{{ is_state('input_boolean.alarm_clock_snooze','on') if trigger.entity_id == 'variable.startup_complete' else true }}"

    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.alarm_clock_active
                state: 'off'

            sequence:
              - service: browser_mod.toast
                data:
                  message: "No active alarm clock. Snooze turned off."
                  duration: 30000

              - service: input_boolean.turn_off
                entity_id: input_boolean.alarm_clock_snooze

        default:
          - service: timer.start
            data:
              entity_id: timer.alarm_clock_snooze
              duration:
                minutes:  "{{ states('input_number.alarm_clock_snooze_time')|int }}"

          - choose:
            - conditions: "{{ is_state(states('sensor.alarm_clock_media_player'),'playing') }}"

              sequence:
                # turn off automation to prevent trigger when media player paused
                - service: automation.turn_off
                  entity_id: automation.alarm_clock_detect_snooze

                - service:  media_player.media_pause
                  data:
                    entity_id: "{{ states('sensor.alarm_clock_media_player') }}"

                - service: automation.turn_on
                  entity_id: automation.alarm_clock_detect_snooze

#######################################################################################################################
## Alarm Clock - Auto Increase Volume
## - runs independently from script.alarm_clock_play so it doesn't get reset on alarm clock restarts
#######################################################################################################################
  - id: alarm_clock_auto_increase_volume
    alias: "[Alarm Clock] Auto Increase Volume"
    description: "Turn up alarm clock volume every 5 min."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.alarm_clock_active
        to: 'on'
        for:
          minutes: 2

    condition:
      - condition: state
        entity_id:
          - binary_sensor.alarm_clock_active
          - input_boolean.alarm_clock_increase_volume
        state: 'on'

      - condition: state
        entity_id: input_boolean.alarm_clock_snooze
        state: 'off'

    action:
      - repeat:
          sequence:
            - service: media_player.volume_up
              data:
                entity_id: "{{ states('sensor.alarm_clock_media_player') }}"

            - delay:
                minutes: 2

          until:
            - condition: or
              conditions:
                - condition: state
                  entity_id: binary_sensor.alarm_clock_active
                  state: 'off'

                - condition: template
                  value_template: "{{ state_attr(states('sensor.alarm_clock_media_player'),'volume_level')|float > 0.8 }}"

#######################################################################################################################
## Alarm Clock - Volume Change
#######################################################################################################################
  - id: alarm_clock_volume_change
    alias: "[Alarm Clock] Volume Change"
    description: "Change media player volume when alarm clock volume control changed."
    initial_state: true
    mode: restart
    max: 5
    trigger:
      - platform: state
        entity_id:
          - input_number.alarm_clock_volume
          - input_number.alarm_clock_volume_auto
          - input_number.alarm_clock_volume_manual
          - input_number.alarm_clock_volume_nap

    condition:
      - condition: state
        entity_id: binary_sensor.alarm_clock_active
        state: 'on'

      - condition: state
        entity_id: script.alarm_clock_play
        state: 'off'

      # only run if volume input is for active alarm
      - condition: template
        value_template: >
          {% if trigger.entity_id == 'input_number.alarm_clock_volume' %} true
          {% elif trigger.entity_id == 'input_number.alarm_clock_volume_auto' and is_state('input_boolean.alarm_clock_active_auto','on') %} true
          {% elif trigger.entity_id == 'input_number.alarm_clock_volume_manual' and is_state('input_boolean.alarm_clock_active_manual','on') %} true
          {% elif trigger.entity_id == 'input_number.alarm_clock_volume_nap' and is_state('input_boolean.alarm_clock_active_nap','on') %} true
          {% endif %}

    action:
      # set main volume to alarm type value if active alarm type volume changed
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ not trigger.entity_id == 'input_number.alarm_clock_volume' }}"

            sequence:
              # this will retrigger automation to change media player volume
              - service: input_number.set_value
                data:
                  entity_id: input_number.alarm_clock_volume
                  value: >
                    {% if is_state('input_boolean.alarm_clock_active_auto','on') %}{{ states('input_number.alarm_clock_volume_auto')|float }}
                    {% elif is_state('input_boolean.alarm_clock_active_manual','on') %}{{ states('input_number.alarm_clock_volume_manual')|float }}
                    {% elif is_state('input_boolean.alarm_clock_active_nap','on') %}{{ states('input_number.alarm_clock_volume_nap')|float }}
                    {% endif %}

        default:
          # only change media player volume when master alarm clock volume changes
          # turn off volume automation to avoid recursive calls
          - service: automation.turn_off
            entity_id: automation.alarm_clock_media_player_volume_change

          # set media player volume to alarm clock volume value
          - service: media_player.volume_set
            data:
              entity_id: "{{ states('sensor.alarm_clock_media_player') }}"
              volume_level: "{{ states('input_number.alarm_clock_volume')|float / 100 }}"

          - service: automation.turn_on
            entity_id: automation.alarm_clock_media_player_volume_change

#######################################################################################################################
## Alarm Clock - Nap Timer Changed
#######################################################################################################################
  - id: alarm_clock_nap_timer_changed
    alias: "[Alarm Clock] Nap Timer Changed"
    description: "Restart nap timer when changed in UI."
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id: input_number.alarm_clock_nap_time

    condition:
      - condition: state
        entity_id: input_boolean.alarm_clock_nap
        state: 'on'

    action:
      - service: timer.start
        data:
          entity_id: timer.alarm_clock_nap
          duration:
            minutes: "{{ states('input_number.alarm_clock_nap_time')|int }}"

#######################################################################################################################
## Alarm Clock - Active Sound Change
#######################################################################################################################
  - id: alarm_clock_active_sound_change
    alias: "[Alarm Clock] Active Sound Change"
    description: "Change alarm clock sound option when active alarm option changed."
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - input_select.alarm_clock_sound_auto
          - input_select.alarm_clock_sound_manual
          - input_select.alarm_clock_sound_nap

    condition:
      - condition: state
        entity_id: binary_sensor.alarm_clock_active
        state: 'on'

      # only run if volume input is for active alarm
      - condition: template
        value_template: >
          {% if trigger.entity_id == 'input_select.alarm_clock_sound_auto' and is_state('input_boolean.alarm_clock_active_auto','on') %} true
          {% elif trigger.entity_id == 'input_select.alarm_clock_sound_manual' and is_state('input_boolean.alarm_clock_active_manual','on') %} true
          {% elif trigger.entity_id == 'input_select.alarm_clock_sound_nap' and is_state('input_boolean.alarm_clock_active_nap','on') %} true
          {% endif %}

    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.alarm_clock_sound
          option: "{{ states(trigger.entity_id) }}"

#######################################################################################################################
## Alarm Clock - Active Station Change
#######################################################################################################################
  - id: alarm_clock_active_radio_station_change
    alias: "[Alarm Clock] Active Radio Station Change"
    description: "Change alarm clock radio station when active alarm option changed."
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - input_select.alarm_clock_station_auto
          - input_select.alarm_clock_station_manual
          - input_select.alarm_clock_station_nap

    condition:
      - condition: state
        entity_id: binary_sensor.alarm_clock_active
        state: 'on'

      # only run if volume input is for active alarm
      - condition: template
        value_template: >
          {% if trigger.entity_id == 'input_select.alarm_clock_station_auto' and is_state('input_boolean.alarm_clock_active_auto','on') %} true
          {% elif trigger.entity_id == 'input_select.alarm_clock_station_manual' and is_state('input_boolean.alarm_clock_active_manual','on') %} true
          {% elif trigger.entity_id == 'input_select.alarm_clock_station_nap' and is_state('input_boolean.alarm_clock_active_nap','on') %} true
          {% endif %}

    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.alarm_clock_station
          option: "{{ states(trigger.entity_id) }}"

#######################################################################################################################
## Alarm Clock - Active Media Player Change
#######################################################################################################################
  - id: alarm_clock_active_media_player_change
    alias: "[Alarm Clock] Active Media player Change"
    description: "Change alarm clock radio media player when active alarm option changed."
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - input_select.alarm_clock_media_player_auto
          - input_select.alarm_clock_media_player_manual
          - input_select.alarm_clock_media_player_nap

    condition:
      - condition: state
        entity_id: binary_sensor.alarm_clock_active
        state: 'on'

      # only run if volume input is for active alarm
      - condition: template
        value_template: >
          {% if trigger.entity_id == 'input_select.alarm_clock_media_player_auto' and is_state('input_boolean.alarm_clock_active_auto','on') %} true
          {% elif trigger.entity_id == 'input_select.alarm_clock_media_player_manual' and is_state('input_boolean.alarm_clock_active_manual','on') %} true
          {% elif trigger.entity_id == 'input_select.alarm_clock_media_player_nap' and is_state('input_boolean.alarm_clock_active_nap','on') %} true
          {% endif %}

    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.alarm_clock_media_player
          option: "{{ states(trigger.entity_id) }}"

#######################################################################################################################
## Alarm Clock - Detect Snooze
#ISSUE this gets triggered if alarm is on and external source plays (eg launching spotify using google assistant)
#######################################################################################################################
  - id: alarm_clock_detect_snooze
    alias: "[Alarm Clock] Detect Snooze"
    description: "Detect alarm snooze (media player pause) and turn on snooze boolean."
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: &media_players !include /config/include/entities/media_player_entities_single.yaml
        to: paused

    condition:
      - condition: state
        entity_id: binary_sensor.alarm_clock_active
        state: 'on'

      # trigger entity is the current alarm clock media player or in alarm clock speaker group
      - !include /config/include/template/alarm_clock_media_player_condition.yaml

      #ISSUE when tts turns off any member of alarm clock group it turns off the others that arent part of tts group
      #- !include /config/include/template/alarm_clock_tts_media_player_condition.yaml
      - condition: state
        entity_id: binary_sensor.tts_playing
        state: 'off'

    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.alarm_clock_snooze

      - delay:
          seconds: 5 # avoid multiple triggers when additional group speakers pause


#######################################################################################################################
## Alarm Clock - Off From Media Player (tap once snooze tap again play - turns off)
## when player is snoozed (paused) if play started - turn alarm off
#######################################################################################################################
  - id: alarm_clock_off_from_media_player
    alias: "[Alarm Clock] Off From Media Player"
    description: "Stop alarm clock from media player (no off button)."
    initial_state: true
    mode: single
    max_exceeded: silent # triggered by multiple players if speaker group
    trigger:
      - platform: state
        entity_id: *media_players
        to: playing

    condition:
      - condition: state
        entity_id:
          - binary_sensor.alarm_clock_active
          - input_boolean.alarm_clock_snooze
        state: 'on'

      # trigger entity is the current alarm clock media player or in alarm clock speaker group
      - !include /config/include/template/alarm_clock_media_player_condition.yaml

      #ISSUE when tts turns off any member of tts group it turns off the others that arent part of tts group
      #- !include /config/include/template/alarm_clock_tts_media_player_condition.yaml
      - condition: state
        entity_id:
          - binary_sensor.tts_playing
          - script.tts_announcement # req because media players turn off before sensor turns on
        state: 'off'

    action:
      #ISSUE alarm clock turns off if snoozed and tts plays on alarm clock media player
      - service: script.turn_on
        entity_id: script.alarm_clock_stop


#######################################################################################################################
## Alarm Clock - Media Player Turned Off
## - monitor individual players, group turns off if any member entity turns off
#######################################################################################################################
  - id: alarm_clock_media_player_turned_off
    alias: "[Alarm Clock] Media Player Turned Off"
    description: "Turn off active alarm boolean when alarm clock media player is turned off."
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      # delay so state changes betomeen snooze/loops don't shut alarm off
      - platform: state
        to:
          - 'off'
          - unavailable
          - unknown
        entity_id: *media_players
        for:
          seconds: 30

      # allow long enough delay that alarm clock doesn't turn off after announcement
      - platform: state
        entity_id: *media_players
        to: 'idle'
        for:
          seconds: 30

    condition:
      - condition: state
        entity_id: binary_sensor.alarm_clock_active
        state: 'on'

      # trigger entity is the current alarm clock media player or in alarm clock speaker group
      - !include /config/include/template/alarm_clock_media_player_condition.yaml

      #ISSUE when alarm turns off any member of alarm clock group it turns off the others that arent part of tts group
      #- !include /config/include/template/alarm_clock_tts_media_player_condition.yaml
      - condition: state
        entity_id:
          - binary_sensor.tts_playing
          - script.tts_announcement # req because media players turn off before sensor turns on
          #- script.alarm_clock_play # req so we dont turn off alarm clock when looping or resuming from tts
        state: 'off'

    action:
      - service: script.turn_on
        entity_id: script.alarm_clock_stop

#######################################################################################################################
## Alarm Clock - Media Player Volume Change
## - media player is decimal value, input_number is percent
#######################################################################################################################
  - id: alarm_clock_media_player_volume_change
    alias: "[Alarm Clock] Media Player Volume Change"
    description: "Change volume on alarm clock control when volume on media player changed."
    initial_state: true
    mode: queued
    max: 5
    trigger:
      - platform: state
        entity_id: *media_players

    condition:
      - condition: state
        entity_id: binary_sensor.alarm_clock_active
        state: 'on'

      - condition: state
        entity_id: script.alarm_clock_play
        state: 'off'

      - !include /config/include/template/alarm_clock_media_player_condition.yaml
      - !include /config/include/template/alarm_clock_tts_media_player_condition.yaml

      # only run if the volume has changed on trigger entity
      - condition: template
        value_template: >
            {{ '%0.2f'|format(state_attr(trigger.from_state.entity_id,'volume_level')|float)
                 != '%0.2f'|format(state_attr(trigger.to_state.entity_id,'volume_level')|float) }}

      # only run if trigger state is not off or volume will be set to 0
      - condition: template
        value_template: "{{ not states(trigger.to_state.state)|lower in ['off','unknown','unavailable','none'] }}"

      # only run if the media player volume is not equal to the alarm clock volume
      - condition: template
        value_template: >
            {{ '%0.2f'|format(state_attr(trigger.entity_id,'volume_level')|float)
                 != '%0.2f'|format(states('input_number.alarm_clock_volume')|float/100) }}

    action:
      # turn off volume automation to prevent recursive calls
      - service: automation.turn_off
        entity_id: automation.alarm_clock_volume_change

      # set alarm clock volume input number to trigger media player volume level
      # media player volume float *100 format float to zero decimal for percent value
      - service: input_number.set_value
        data:
          entity_id: input_number.alarm_clock_volume
          value: "{{ '%0.0f'|format(state_attr(trigger.entity_id,'volume_level')|float*100 ) }}"

      - service: automation.turn_on
        entity_id: automation.alarm_clock_volume_change

#######################################################################################################################
## Alarm Clock - Play Failed
#######################################################################################################################
  - id: alarm_clock_play_failed
    alias: "[Alarm Clock] Play Failed"
    description: "Play announcement, reset alarm clock when failed."
    initial_state: true
    mode: single
    trigger:
      - platform: state
        entity_id: variable.alarm_clock_failed
        to: 'true'

    condition:
      - condition: state
        entity_id: binary_sensor.alarm_clock_active
        state: 'on'

    action:
      - service: script.turn_on
        data:
          entity_id: script.tts_announcement
          variables:
            play_message: |
              Attention!
              A scheduled alarm clock has failed to play.
              Again, a scheduled alarm clock has failed to play.
            quiet_play: true
            min_volume: "{{ 50 if states('sensor.tts_media_player') in state_attr('group.google_speaker_groups','entity_id') else 70 }}"

      - service: script.alarm_clock_stop

      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.alerts_enabled
                state: 'on'

            sequence:
              # delay to allow occupant to reset radio before notification
              - delay:
                  minutes: 5

              - condition: state
                entity_id: variable.alarm_clock_failed
                state: 'true'

              - service: !include /config/include/template/notify_jason_template.yaml
                data:
                  title: "Alarm Clock Failed"
                  message: "The alarm clock has failed to play!"
                  data:
                    tag: alarm_clock_play_failed
                    actions:
                      - action: close_alarm_clock_play_failed_alert
                        title: Close
                    timestamp: "{{ as_timestamp(now()) }}" #push
                    priority: normal
                    renotify: false #push
                    ttl: 3600
                    silent: true #push
                    requireInteraction: false #push
                    sticky: false #app
                    url: /lovelace/schedule #push
                    clickAction: /lovelace/schedule #app
                    color: !secret NOTIFY_COLOR #app
                    image: !secret ALARM_CLOCK_ALERT_IMAGE
                    icon: !secret ALERT_ICON #push
                    badge: !secret ALERT_BADGE #push

      # delay before resetting alarm status
      - delay:
          hours: 1

      - service: variable.set_variable
        data:
          variable: alarm_clock_failed
          value: false

#######################################################################################################################
## Alarm Clock - Close Alarm Clock Active Notifications
#######################################################################################################################
  - id: alarm_clock_close_alarm_clock_active_notifications
    alias: "[Alarm Clock] Close Alarm Clock Active Notifications"
    description: "Dismiss notifications on all devices."
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: alert.alarm_clock_active
        to:
          - idle
          - 'off'

      - platform: event
        event_type: html5_notification.closed
        event_data:
          tag: alarm_clock_active

      #BUG html5 closed event doesn't work if notification is in tray
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: snooze_alarm_clock

      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: close_alarm_clock

      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: turn_off_alarm_clock

      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: snooze_alarm_clock

      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: close_alarm_clock

      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: turn_off_alarm_clock

      # req if wakeup started w/o turning off alarm clock (switch, voice, phone alarm etc)
      - platform: state
        entity_id: script.scene_wake_up
        to: 'on'

    action:
      - service: script.close_notifications
        data:
          target: mobile_app_jphone
          category: alarm_clock
          tag: alarm_clock_active
          pause: false

#######################################################################################################################
## Alarm Clock - Close Alarm Clock Presence Notifications
#######################################################################################################################
  - id: alarm_clock_close_alarm_clock_presence_notifications
    alias: "[Alarm Clock] Close Alarm Clock Presence Notifications"
    description: "Dismiss notifications on all devices."
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: alert.alarm_clock_presence
        to:
          - idle
          - 'off'

      - platform: event
        event_type: html5_notification.closed
        event_data:
          tag: alarm_clock_presence

      #BUG html5 closed event doesn't work if notification is in tray
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: close_alarm_clock_presence

      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: pause_alarm_clock_presence

      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: close_alarm_clock_presence

      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: pause_alarm_clock_presence

    action:
      - service: script.close_notifications
        data:
          target: mobile_app_jphone
          category: alarm_clock
          tag: alarm_clock_presence
          pause: "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_alarm_clock_presence' }}{% endif %}"

#######################################################################################################################
## Alarm Clock - Alarm Clock Play Failed Notifications Closed
#######################################################################################################################
  - id: alarm_clock_play_failed_notifications_closed
    alias: "[Alarm Clock] Play Failed Notifications Closed"
    description: "Dismiss notifications on all devices."
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          tag: alarm_clock_play_failed

      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: close_alarm_clock_play_failed

    action:
      - service: script.close_notifications
        data:
          target: mobile_app_jphone
          tag: alarm_clock_play_failed