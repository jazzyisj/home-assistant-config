###############################################################################
## Package - Chill Scene
###############################################################################
input_boolean:
  chill_scene:
    name: 'Chill Scene'
    icon: mdi:creation

timer:
  chill_scene:
    name: 'Chill Scene Timer'
    icon: mdi:progress-clock

input_number:
  chill_scene_duration:
    name: 'Chill Scene Duration'
    unit_of_measurement: min
    min: 30
    max: 480
    step: 10

  rgb_blue_chill:
    name: 'RGB Blue'
    min: 0
    max: 255
    step: 1

  rgb_green_chill:
    name: 'RGB Green'
    min: 0
    max: 255
    step: 1

  rgb_red_chill:
    name: 'RGB Red'
    min: 0
    max: 255
    step: 1

template:
  - sensor:
      - name: 'RGB Chill Scene'
        unique_id: rgb_chill_scene
        icon: mdi:lightbulb
        state: >
          rgb({{ states('input_number.rgb_red_chill')|int }},
          {{- states('input_number.rgb_green_chill')|int }},
          {{- states('input_number.rgb_blue_chill')|int }})
        attributes:
          rgb_color: >
            [{{ states('input_number.rgb_red_chill')|int }},
              {{- states('input_number.rgb_green_chill')|int }},
              {{- states('input_number.rgb_blue_chill')|int }}]

script:
  set_light_color_chill:
    mode: restart
    sequence:
      - condition: template
        value_template: "{{ states('sensor.rgb_chill_scene')|lower not in ['unknown','unavailable','none'] }}"

      - service: light.turn_on
        target:
          entity_id: light.dining_room_rgb_light
        data:
          rgb_color: "{{ state_attr('sensor.rgb_chill_scene','rgb_color') }}"

automation:
  ###############################################################################
  ## Scene - Set Light Color Chill
  ###############################################################################
  - id: set_light_color_chill
    alias: 'Set Light Color Chill'
    mode: restart
    trigger:
      platform: state
      entity_id: sensor.rgb_chill_scene
    condition:
      - condition: state
        entity_id: input_boolean.chill_scene
        state: 'on'
    action:
      - service: script.set_light_color_chill

  ###############################################################################
  ## Scene - Chill Scene On
  ###############################################################################
  - id: scene_chill_scene_on
    alias: '[Scene] Chill Scene On'
    description: 'Turn on chill scene.'
    trigger:
      - platform: state
        entity_id: input_boolean.chill_scene
        to: 'on'
        from: 'off'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.occupancy_mode
                state:
                  - Night
                  - Away
                  - Vacation
            sequence:
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.chill_scene

              - service: browser_mod.toast
                data:
                  message: 'company scene cannot be turned on in Night or Away mode.'
                  duration: 30000
        default:
          - variables:
              scene_modes: "{{ ['movie_scene','company_scene'] }}"

          - repeat: # turn off other scenes
              count: '{{ scene_modes|count }}'
              sequence:
                - variables:
                    scene_mode: '{{ scene_modes[repeat.index-1] }}'

                - choose:
                    - conditions: "{{ is_state('input_boolean.' ~ scene_mode,'on') }}"
                      sequence:
                        - service: input_boolean.turn_off
                          target:
                            entity_id: 'input_boolean.{{ scene_mode }}'

          - service: script.turn_off
            target:
              entity_id:
                - script.waketime
                - script.morning_lights
                - script.bedtime
                - script.bedtime_lights

          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.bedtime_delayed

          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.light_automation
                    state: 'on'
                sequence:
                  - service: script.activate_scene
                    data:
                      scene: >
                        {{ 'chill_lights' if is_state('binary_sensor.nighttime_illuminance_lights','on')
                              or is_state('binary_sensor.daytime_illuminance_lights','on')
                            else 'chill_daytime_lights' }}

          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.media_player_automation
                    state: 'on'
                sequence:
                  - service: script.media_players_off
                  #IDEA should we leave bedroom/office media players on?

                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.media_preset_enabled_chill
                            state: 'on'
                        sequence:
                          - service: switch.turn_on
                            target:
                              entity_id: switch.media_preset_chill

          - service: timer.start
            target:
              entity_id: timer.chill_scene
            data:
              duration:
                minutes: "{{ states('input_number.chill_scene_duration')|int(0) }}"

  ###############################################################################
  ## Scene - Chill Scene Off
  ###############################################################################
  - id: scene_chill_scene_off
    alias: '[Scene] Chill Scene Off'
    description: 'Turn off chill scene.'
    max_exceeded: silent # recursive call
    trigger:
      - platform: state
        entity_id: input_boolean.chill_scene
        to: 'off'
        from: 'on'

      - platform: state
        entity_id: input_select.occupancy_mode
        to:
          - Night
          - Away
          - Vacation

      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.chill_scene
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.chill_scene

      - service: timer.cancel
        entity_id: timer.chill_scene

      - condition: state
        entity_id: input_select.occupancy_mode
        state:
          - Home
          - Guest

      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.bedtime_delayed

      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.media_preset_enabled_chill
                state: 'on'
            sequence:
              - service: switch.turn_off
                target:
                  entity_id: switch.media_preset_chill
