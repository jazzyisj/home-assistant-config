###############################################################################
## Package - Movie Scene
###############################################################################
input_boolean:
  movie_scene:
    name: 'Movie Scene'
    icon: mdi:creation

timer:
  movie_scene:
    name: 'Movie Scene Timer'
    icon: mdi:progress-clock

input_number:
  movie_scene_duration:
    name: 'Movie Scene Duration'
    unit_of_measurement: min
    min: 30
    max: 480
    step: 10

automation:
  ###############################################################################
  ## Scene - Movie Scene On
  ###############################################################################
  - id: scene_movie_scene_on
    alias: '[Scene] Movie Scene On'
    description: 'Turn on movie scene.'
    trigger:
      - platform: state
        entity_id: input_boolean.movie_scene
        to: 'on'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.occupancy_mode
                state:
                  - Night
                  - Away
                  - Vacation
            sequence:
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.movie_scene

              - service: browser_mod.toast
                data:
                  message: 'Movie Scene cannot be turned on in Night or Away mode.'
                  duration: 30000
        default:
          - variables:
              scene_modes: "{{ ['company_scene','chill_scene'] }}"

          - repeat: # turn off other scenes
              count: '{{ scene_modes|count }}'
              sequence:
                - variables:
                    scene_mode: '{{ scene_modes[repeat.index-1] }}'

                - choose:
                    - conditions: "{{ is_state('input_boolean.' ~ scene_mode,'on') }}"
                      sequence:
                        - service: input_boolean.turn_off
                          target:
                            entity_id: 'input_boolean.{{ scene_mode }}'

          - service: script.turn_off
            target:
              entity_id:
                - script.waketime
                - script.morning_lights
                - script.bedtime
                - script.bedtime_lights

          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.bedtime_delayed

          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.light_automation
                    state: 'on'
                sequence:
                  - service: script.activate_scene
                    data:
                      scene: >
                        {{ 'movie_lights' if is_state('binary_sensor.nighttime_auto_light','on')
                              or is_state('binary_sensor.daytime_illuminance_light','on')
                            else 'movie_daytime_lights' }}

          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.media_player_automation
                    state: 'on'
                sequence:
                  - service: script.media_players_off
                    #IDEA should we leave bedroom/office media players on?

                  - service: media_player.turn_on
                    target:
                      entity_id: media_player.living_room_tv

                  - wait_template: "{{ 'Netflix' in state_attr('media_player.living_room_tv','source_list') }}"

                  - service: media_player.select_source
                    target:
                      entity_id: media_player.living_room_tv
                    data:
                      source: Netflix

                  - service: media_player.volume_set
                    target:
                      entity_id: media_player.living_room_tv
                    data:
                      volume_level: 0.25

                  - service: media_player.volume_mute
                    target:
                      entity_id: media_player.living_room_tv
                    data:
                      is_volume_muted: false

          - service: timer.start
            target:
              entity_id: timer.movie_scene
            data:
              duration:
                minutes: "{{ states('input_number.movie_scene_duration')|int(0) }}"

  ###############################################################################
  ## Scene - Movie Scene Off
  ###############################################################################
  - id: scene_movie_scene_off
    alias: '[Scene] Movie Scene Off'
    description: 'Turn off movie scene.'
    max_exceeded: silent # recursive call
    trigger:
      - platform: state
        entity_id: input_boolean.movie_scene
        to: 'off'

      - platform: state
        entity_id: input_select.occupancy_mode
        to:
          - Night
          - Away
          - Vacation

      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.movie_scene
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.movie_scene

      - service: timer.cancel
        entity_id: timer.movie_scene

      - condition: state
        entity_id: input_select.occupancy_mode
        state:
          - Home
          - Guest

      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.bedtime_delayed

      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.media_player_automation
                state: 'on'
            sequence:
              - service: media_player.select_source
                target:
                  entity_id: media_player.living_room_tv
                data:
                  source: Live TV

              - service: media_player.turn_off
                target:
                  entity_id: media_player.living_room_tv
