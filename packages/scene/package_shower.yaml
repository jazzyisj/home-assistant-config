###############################################################################
## Package - Shower Scene
###############################################################################
input_boolean:
  shower_scene:
    name: 'Shower Scene'
    icon: mdi:shower-head

timer:
  shower_scene:
    name: 'Shower Scene Timer'
    icon: mdi:progress-clock

input_number:
  shower_scene_duration:
    name: 'Shower Scene Duration'
    unit_of_measurement: min
    min: 5
    max: 60
    step: 5

automation:
  ###############################################################################
  ## Scene - Shower Scene On
  ###############################################################################
  - id: scene_shower_scene_on
    alias: '[Scene] Shower Scene On'
    description: 'Turn on shower scene.'
    variables:
      shower_volume: "{{ states('input_number.media_preset_volume_shower')|float(-1)/100 }}"
    trigger:
      - platform: state
        entity_id: input_boolean.shower_scene
        to: 'on'
        from: 'off'
    condition:
      - condition: state
        entity_id: input_select.occupancy_mode
        state:
          - Home
          - Guest
    action:
      - service: timer.start
        target:
          entity_id: timer.shower_scene
        data:
          duration:
            minutes: "{{ states('input_number.shower_scene_duration')|int(0) }}"

      - choose:
          - conditions:
              - condition: state
                entity_id:
                  - input_boolean.media_player_automation
                  - input_boolean.media_preset_enabled_shower
                state: 'on'
            sequence:
              - choose:
                  - conditions:
                      - condition: state
                        entity_id: binary_sensor.tts
                        state: 'on'
                    sequence:
                      - service: input_number.set_value
                        target:
                          entity_id: input_number.bathroom_speaker_pre_shower_volume
                        data:
                          # volume of bathroom speaker before tts
                          value: "{{ states('input_number.bathroom_speaker_tts')|float }}"

                      - service: input_number.set_value
                        target:
                          entity_id: input_number.bathroom_speaker_tts
                        data:
                          # volume to restore when tts is done
                          value: '{{ shower_volume }}'

                      - wait_template: "{{ is_state('binary_sensor.tts','off') }}"
                        timeout: 120
                        continue_on_timeout: false

              - choose:
                  - conditions:
                      - condition: template
                        alias: 'Bathroom speaker already playing something'
                        value_template: "{{ states('media_player.bathroom_speaker') in ['playing','paused'] }}"
                    sequence:
                      - service: media_player.volume_set
                        target:
                          entity_id: media_player.bathroom_speaker
                        data:
                          volume_level: '{{ shower_volume }}'
                default:
                  - service: script.media_preset_play
                    data:
                      preset: shower

  ###############################################################################
  ## Scene - Shower Scene Off
  ###############################################################################
  - id: scene_shower_scene_off
    alias: '[Scene] Shower Scene Off'
    description: 'Turn off shower scene.'
    max_exceeded: silent # recursive call
    trigger:
      - platform: state
        entity_id: input_boolean.shower_scene
        to: 'off'
        from: 'on'

      - platform: state
        entity_id: input_select.occupancy_mode
        to:
          - Away
          - Vacation

      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.shower_scene
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.shower_scene

      - service: timer.cancel
        entity_id: timer.shower_scene

      - condition: state
        entity_id: input_select.occupancy_mode
        state:
          - Home
          - Guest

      - condition: state
        entity_id:
          - input_boolean.media_player_automation
          - input_boolean.media_preset_enabled_shower
        state: 'on'

      - choose:
          - conditions:
              - condition: template
                alias: 'Bathroom speaker is not in a playing speaker group.'
                value_template: >
                  {% set media_type = states('input_select.media_preset_type_shower')|lower %}
                  {{ is_state('binary_sensor.' ~ media_type,'on') and
                        states('sensor.' ~ media_type ~ '_media_player') == 'media_player.bathroom_speaker' }}
            sequence:
              - service: script.media_stop
                data:
                  media_type: "{{ states('input_select.media_preset_type_shower')|lower }}"
        default:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.tts
                    state: 'on'
                sequence:
                  # set bathroom speaker restore volumes (tts, pre shower) to media volume
                  # for appropriate post tts, shower off volume levels
                  - service: input_number.set_value
                    alias: 'Set bathroom speaker restore volumes to media volume'
                    target:
                      entity_id:
                        - input_number.bathroom_speaker_pre_shower_volume
                        - input_number.bathroom_speaker_tts
                    data:
                      value: >
                        {% set media_type = states('input_select.media_preset_type_shower')|lower %}
                        {{ states('input_number.' ~ media_type ~ '_volume')|float(-1)/100 }}

                  - wait_template: "{{ is_state('binary_sensor.tts','off') }}"
                    timeout: 120
                    continue_on_timeout: false

          - service: media_player.volume_set
            alias: 'Reset bathroom speaker to default media volume'
            target:
              entity_id: media_player.bathroom_speaker
            data:
              volume_level: "{{ states('input_number.bathroom_speaker_pre_shower_volume')|float(-1) }}"
