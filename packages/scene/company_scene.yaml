###############################################################################
## Package - Company Scene
###############################################################################
timer:
  company_scene:
    name: "Company Scene Timer"
    icon: mdi:progress-clock
    restore: true

input_number:
  company_scene_duration:
    name: "Company Scene Duration"
    icon: mdi:progress-clock
    unit_of_measurement: min
    mode: slider
    min: 30
    max: 480
    step: 10

  rgb_blue_company:
    name: "RGB Blue"
    icon: mdi:palette
    mode: slider
    min: 0
    max: 255
    step: 1

  rgb_green_company:
    name: "RGB Green"
    icon: mdi:palette
    mode: slider
    min: 0
    max: 255
    step: 1

  rgb_red_company:
    name: "RGB Red"
    icon: mdi:palette
    mode: slider
    min: 0
    max: 255
    step: 1

template:
  - sensor:
      - name: "RGB Company Scene"
        unique_id: rgb_company_scene
        icon: mdi:lightbulb
        state: >
          {% from 'light.jinja'import scene_rgb_state %}
          {{ scene_rgb_state('company') }}
        attributes:
          rgb_color: >
            {% from 'light.jinja'import scene_rgb_attribute %}
            {{ scene_rgb_attribute('company') }}

switch:
  - platform: template
    switches:
      company_scene:
        friendly_name: "Company Scene"
        unique_id: company_scene
        icon_template: mdi:account-group
        value_template: "{{ not is_state('timer.company_scene', 'idle') }}"
        turn_on:
          - if: "{{ is_state('input_select.occupancy_mode', ['Home', 'Guest']) }}"
            then:
              - service: script.scene_on
                data:
                  scene: company
            else:
              - service: script.turn_scene_off
                data:
                  scene: company
        turn_off:
          - if:
              - condition: state
                entity_id: input_boolean.alarm_triggered
                state: "off"

              - condition: state
                entity_id: input_boolean.media_preset_enabled_company
                state: "on"
            then:
              - service: script.turn_media_player_off
                data:
                  entity_id: >
                    {{ expand('group.media_players')
                        | selectattr('name', 'eq', states('select.media_preset_speaker_company'))
                        | map(attribute='entity_id') | list }}

          - service: timer.cancel
            target:
              entity_id: timer.company_scene

automation:
  ###############################################################################
  ## Scene - Company Scene Off
  ###############################################################################
  - id: scene_company_scene_off
    alias: "[Scene] Company Scene Off"
    description: "Turn off company scene."
    max_exceeded: silent
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.company_scene
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.company_scene
