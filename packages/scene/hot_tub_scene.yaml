###################################################################################################
## Package - Hot Tub Scene
###################################################################################################
timer:
  hot_tub_scene:
    name: "Hot Tub Scene Timer"
    icon: mdi:progress-clock
    restore: true

input_number:
  hot_tub_scene_duration:
    name: "Hot Tub Scene Duration"
    icon: mdi:progress-clock
    unit_of_measurement: min
    mode: slider
    min: 30
    max: 480
    step: 10

  rgb_blue_hot_tub:
    name: "RGB Blue"
    mode: slider
    min: 0
    max: 255
    step: 1

  rgb_green_hot_tub:
    name: "RGB Green"
    mode: slider
    min: 0
    max: 255
    step: 1

  rgb_red_hot_tub:
    name: "RGB Red"
    mode: slider
    min: 0
    max: 255
    step: 1

template:
  - sensor:
      - name: "RGB Hot Tub Scene"
        unique_id: rgb_hot_tub_scene
        icon: mdi:lightbulb
        state: >
          {%- from 'light.jinja'import scene_rgb_state %}
          {{- scene_rgb_state('hot_tub') -}}
        attributes:
          rgb_color: >
            {%- from 'light.jinja'import scene_rgb_attribute %}
            {{- scene_rgb_attribute('hot_tub') -}}

  - switch:
      - name: "Hot Tub Scene"
        unique_id: hot_tub_scene
        icon: mdi:creation
        state: "{{ not is_state('timer.hot_tub_scene', 'idle') }}"
        turn_on:
          - action: script.turn_hot_tub_scene_on
        turn_off:
          - action: scene.turn_on
            target:
              entity_id: scene.hot_tub_off
            continue_on_error: true

          - if:
              - condition: state
                entity_id: input_boolean.media_enabled_hot_tub
                state: "on"
            then:
              - action: script.turn_media_player_off
                data:
                  entity_id: media_player.deck_tv

script:
###################################################################################################
## Turn Hot Tub Scene On
###################################################################################################
  turn_hot_tub_scene_on:
    sequence:
      - action: scene.turn_on
        target:
          entity_id: scene.hot_tub_on
        continue_on_error: true

      - if:
          - condition: state
            entity_id: input_boolean.media_enabled_hot_tub
            state: "on"
        then:
          - action: script.turn_media_player_on
            data:
              entity_id: media_player.deck_tv

          - wait_template: "{{ is_state('media_player.deck_tv', 'on') }}"
            timeout: 60

          - if: "{{ wait.completed }}"
            then:
              - action: script.media_player_set_volumes
                data:
                  source: tv
                  entity_id: media_player.deck_tv
                  volume: 10

              - wait_template: "{{ 'Spotify - Music and Podcasts' in state_attr('media_player.deck_tv', 'source_list') }}"
                timeout: 60

              - if: "{{ wait.completed }}"
                then:
                  - action: media_player.select_source
                    target:
                      entity_id: media_player.deck_tv
                    data:
                      source: "Spotify - Music and Podcasts"

                  - wait_template: "{{ is_state_attr('media_player.deck_tv', 'source', 'Spotify - Music and Podcasts') }}"
                    timeout: 60

                  - if: "{{ wait.completed }}"
                    then:
                      - action: media_player.media_play_pause
                        target:
                          entity_id:
                            - media_player.deck_tv

automation:
  ###################################################################################################
  ## Turn Hot Tub Scene Off
  ###################################################################################################
  - id: turn_hot_tub_scene_off
    alias: "Turn Hot Tub Scene Off"
    description: "Turn off hot_tub scene."
    max_exceeded: silent
    trigger:
      - trigger: event
        event_type: timer.finished
        event_data:
          entity_id: timer.hot_tub_scene
    action:
      - action: switch.turn_off
        target:
          entity_id: switch.hot_tub_scene
