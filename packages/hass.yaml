###################################################################################################
## Package - Hass
###################################################################################################
homeassistant:
  customize:
    alert.available_updates:
      icon: mdi:cloud-upload
      category: hass
    alert.github_connected:
      entity_picture: !secret GITHUB_ICON
      category: hass
    alert.hass_backup:
      icon: mdi:backup-restore
      category: hass
    alert.low_battery:
      icon: mdi:battery-alert
      category: hass
    alert.offline_integrations:
      icon: mdi:api-off
      category: hass
    alert.remote_ui:
      icon: mdi:remote-desktop
      category: hass
    alert.unavailable_entities:
      icon: mdi:alert-circle
      category: hass
    alert.unknown_browsers:
      icon: mdi:monitor-dashboard
      category: hass
      tts_repeat: true
      tts_timeout: 15
      quiet_play: true
      save_message: true

    sensor.jlaptop_android_browser_user:
      authorized: true
    sensor.jlaptop_chrome_external_browser_user:
      authorized: true
    sensor.jlaptop_chrome_internal_browser_user:
      authorized: true
    sensor.jphone_app_external_browser_user:
      authorized: true
    sensor.jphone_app_internal_browser_user:
      authorized: true
    sensor.jtablet_app_external_browser_user:
      authorized: true
    sensor.jtablet_app_internal_browser_user:
      authorized: true
    sensor.jwork_chrome_external_browser_user:
      authorized: true

shell_command: # https://www.home-assistant.io/components/shell_command/
  alarm_snapshots_purge_all: "sh shell/alarm_snapshots_purge_all.sh"
  alarm_snapshots_purge_old: "sh shell/alarm_snapshots_purge_old.sh"
  git_update: "sh shell/gitupdate.sh"
  tts_purge_all: "sh shell/tts_purge_all.sh"
  tts_purge_old: "sh shell/tts_purge_old.sh"

input_boolean:
  hass_alerts:
    name: "Hass Alerts"
    icon: mdi:alert
  startup_pending:
    name: "Startup Pending"
    icon: mdi:restart-alert
    initial: true

input_text:
  base_url:
    initial: !secret BASE_URL_CLOUD

input_select:
  log_level:
    name: "Log Level"
    icon: mdi:format-indent-decrease
    options:
      - info
      - warn
      - error
      - critical
      - fatal
      - debug
      - notset

group:
  ignored_unavailable_entities:
    entities: !include /config/include/ignored_entities.yaml

sensor:
  - platform: folder
    folder: /config/tts # path must be in allowlist_external_dirs
    filter: "*"

  - platform: folder # https://www.home-assistant.io/integrations/folder/
    folder: /config/www/alarm_snapshots # path must be in allowlist_external_dirs
    filter: "*"

  - platform: folder #CHECK
    folder: "/media/music/Alarm Clock Sounds" # path must be in allowlist_external_dirs
    filter: "*"

  - platform: websocket_api # https://www.home-assistant.io/integrations/websocket_api/

alert:
  available_updates:
    name: "Available Updates"
    entity_id: binary_sensor.available_updates_alert
    state: "on"
    notifiers: log
    skip_first: true
    repeat: 999999
    data:
      tag: available_updates

  hass_backup:
    name: "HASS Backup"
    title: "HASS Backup"
    message: |-
      {%- if is_state('sensor.backup_backup_manager_state', 'blocked') %}
      Backup is blocked!
      {%- endif %}
      Last Backup: {{ time_since(as_datetime(states('sensor.backup_last_successful_automatic_backup'))) }} ago.
      Next Backup: In {{ time_until(as_datetime(states('sensor.backup_next_scheduled_automatic_backup'))) }}.
    done_message: clear_notification
    entity_id: binary_sensor.hass_backup_alert
    state: "on"
    repeat: 1440
    notifiers: jason
    data:
      tag: hass_backup
      group: System
      channel: Alert
      visibility: public
      notification_url: mdi:backup-restore
      icon_url: !secret HASS_ICON
      ledColor: !secret WARNING_COLOR
      color: !secret WARNING_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /config/backup/overview
      actions:
        - title: "Pause"
          action: pause_alert_hass_backup

  github_connected:
    name: "Github Connected"
    entity_id: binary_sensor.github_connected_alert
    state: "on"
    notifiers: log
    skip_first: true
    repeat: 999999
    data:
      tag: github_connected

  low_battery:
    name: "Low Battery"
    title: "Low Battery"
    message: |-
      {%- set entities = expand('group.low_batteries') %}
      {%- for item in entities %}
      {{- item.name | lower | replace('+', '') | replace(' battery level', '')
            | replace(': battery level', '') | replace(' battery', '') | title }} - {{ item.state_with_unit }}
      {%- if not loop.last %}<br/>{% endif %}
      {%- endfor %}
    done_message: clear_notification
    entity_id: binary_sensor.low_battery_alert
    state: "on"
    repeat: 1440
    notifiers: jason
    data:
      tag: low_battery
      group: System
      channel: Alert
      visibility: public
      notification_icon: mdi:battery-alert
      icon_url: !secret BATTERY_ICON
      ledColor: !secret WARNING_COLOR
      color: !secret WARNING_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /ui-hass/hass
      actions:
        - title: "Pause"
          action: pause_alert_low_battery

  offline_integrations:
    name: "Offline Integrations"
    entity_id: binary_sensor.offline_integrations_alert
    state: "on"
    notifiers: log
    skip_first: true
    repeat: 999999
    data:
      tag: offline_integrations

  remote_ui:
    name: "Remote UI"
    title: "Remote UI Offline"
    message: "Remote UI is disconnected."
    done_message: clear_notification
    entity_id: binary_sensor.remote_ui_alert
    state: "on"
    repeat: 1440
    notifiers: jason
    data:
      tag: remote_ui
      group: System
      channel: Alert
      visibility: public
      notification_url: mdi:network-off-outline
      icon_url: !secret HASS_ICON
      ledColor: !secret WARNING_COLOR
      color: !secret WARNING_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /ui-hass/hass
      actions:
        - title: "Pause"
          action: pause_alert_remote_ui

  unavailable_entities:
    name: "Unavailable Entities"
    entity_id: binary_sensor.unavailable_entities_alert
    state: "on"
    notifiers: log
    skip_first: true
    repeat: 999999
    data:
      tag: unavailable_entities

  unknown_browsers:
    name: "Unknown Browsers"
    entity_id: binary_sensor.unknown_browsers_alert
    state: "on"
    notifiers: log
    skip_first: true
    repeat: 999999
    data:
      tag: unknown_browsers
