###################################################################################################
## Package - Charlie Mealtime Reminder
###################################################################################################
input_boolean:
  charlie_mealtime_enabled:
    name: "Charlie Mealtime Enabled"
    icon: &charlie_icon mdi:dog
  charlie_mealtime_active:
    name: "Charlie Mealtime Active"
    icon: *charlie_icon
  charlie_mealtime_paused:
    name: "Charlie Mealtime Paused"
    icon: *charlie_icon
  charlie_mealtime_skipped:
    name: "Charlie Mealtime Skipped"
    icon: *charlie_icon

input_number:
  charlie_mealtime_notification_interval:
    name: "Charlie Mealtime Notification Interval"
    icon: mdi:calendar-range
    unit_of_measurement: minutes
    mode: slider
    min: 5
    max: 60
    step: 5

input_datetime:
  charlie_mealtime_days_1:
    name: "Charlie Mealtime Days 1"
    icon: mdi:clock
    has_date: false
    has_time: true
  charlie_mealtime_days_2:
    name: "Charlie Mealtime Days 2"
    icon: mdi:clock
    has_date: false
    has_time: true
  charlie_mealtime_afternoons_1:
    name: "Charlie Mealtime Afternoons 1"
    icon: mdi:clock
    has_date: false
    has_time: true
  charlie_mealtime_afternoons_2:
    name: "Charlie Mealtime Afternoons 2"
    icon: mdi:clock
    has_date: false
    has_time: true
  charlie_mealtime_weekends_1:
    name: "Charlie Mealtime Weekends 1"
    icon: mdi:clock
    has_date: false
    has_time: true
  charlie_mealtime_weekends_2:
    name: "Charlie Mealtime Weekends 2"
    icon: mdi:clock
    has_date: false
    has_time: true

template:
  - button:
      - name: "Charlie Mealtime Done"
        unique_id: charlie_mealtime_done
        icon: *charlie_icon
        press:
          - condition: state
            entity_id: input_boolean.charlie_mealtime_active
            state: "on"

          - action: input_boolean.turn_off
            target:
              entity_id: input_boolean.charlie_mealtime_active

          - action: browser_mod.notification
            data:
              message: "Charlie Mealtime reminder has been turned off."
              duration: 10000

      - name: "Skip Charlie Mealtime"
        unique_id: skip_charlie_mealtime
        icon: *charlie_icon
        press:
          - if:
              - condition: state
                entity_id: binary_sensor.charlie_mealtime_reminder
                state: "on"
            then:
              - action: input_boolean.turn_off
                target:
                  entity_id: input_boolean.charlie_mealtime_active
            else:
              - action: input_boolean.toggle
                target:
                  entity_id: input_boolean.charlie_mealtime_skipped

  - binary_sensor:
      - name: "Charlie Mealtime Reminder"
        unique_id: charlie_mealtime_reminder
        icon: *charlie_icon
        picture: >
          {% if is_state('input_boolean.charlie_mealtime_paused', 'on')
              or is_state('input_boolean.charlie_mealtime_skipped', 'on') %}
            /local/images/entity_icons/charlie_mealtime_paused.png
          {% elif is_state('input_boolean.charlie_mealtime_active', 'on') %}
            /local/images/entity_icons/charlie_mealtime.png
          {% else %}
            /local/images/entity_icons/charlie_mealtime_off.png
          {% endif %}
        state: >
          {{ is_state('input_boolean.charlie_mealtime_enabled', 'on')
                and is_state('input_boolean.charlie_mealtime_active', 'on') }}

automation:
  ###################################################################################################
  ## Turn Charlie Mealtime On
  ###################################################################################################
  - id: turn_charlie_mealtime_on
    alias: "Turn Charlie Mealtime On"
    description: "Turn on reminder active boolean."
    trigger:
      - trigger: template
        value_template: >
          {% set time = states('sensor.time') %}
          {% set shift = states('sensor.time_trigger_shift') %}
          {% if is_state('input_boolean.charlie_mealtime_enabled', 'on')
              and not is_state('input_select.occupancy_mode','Vacation') %}
            {{ (shift == 'days' and time == states('input_datetime.charlie_mealtime_days_1')[0:5])
                or (shift == 'days' and time == states('input_datetime.charlie_mealtime_days_2')[0:5])
                or (shift == 'afts' and time == states('input_datetime.charlie_mealtime_afternoons_1')[0:5])
                or (shift == 'afts' and time == states('input_datetime.charlie_mealtime_afternoons_2')[0:5])
                or (shift == 'wknd' and time == states('input_datetime.charlie_mealtime_weekends_1')[0:5])
                or (shift == 'wknd' and time == states('input_datetime.charlie_mealtime_weekends_2')[0:5]) }}
          {% endif %}
    action:
      - if:
          - condition: state
            entity_id:
              - input_boolean.charlie_mealtime_skipped
              - input_boolean.charlie_mealtime_paused
            state: "off"
        then:
          - action: input_boolean.turn_on
            target:
              entity_id: input_boolean.charlie_mealtime_active

  ###################################################################################################
  ## Charlie Mealtime Done
  ###################################################################################################
  - id: charlie_mealtime_done
    alias: "Charlie Mealtime Done"
    description: "Reset Charlie Mealtime."
    max_exceeded: silent
    trigger:
      - trigger: event
        event_type: mobile_app_notification_action
        event_data:
          action: charlie_mealtime_done
    condition:
      - condition: state
        entity_id: binary_sensor.charlie_mealtime_reminder
        state: "on"
    action:
      - action: button.press
        target:
          entity_id: button.charlie_mealtime_done

  ###################################################################################################
  ## Skip Charlie Mealtime
  ###################################################################################################
  - id: skip_charlie_mealtime
    alias: "Skip Charlie Mealtime"
    description: "Skip reminder."
    max_exceeded: silent
    trigger:
      - trigger: event
        event_type: mobile_app_notification_action
        event_data:
          action: skip_charlie_mealtime
    action:
      - action: button.press
        target:
          entity_id: button.skip_charlie_mealtime

  ###################################################################################################
  ## Pause Charlie Mealtime
  ###################################################################################################
  - id: pause_charlie_mealtime
    alias: "Pause Charlie Mealtime"
    description: "Pause charlie mealtime reminder."
    max_exceeded: silent
    trigger:
      - trigger: event
        event_type: mobile_app_notification_action
        event_data:
          action: pause_charlie_mealtime
    action:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.charlie_mealtime_paused

  ###################################################################################################
  ## Reset Pause Charlie Mealtime
  ###################################################################################################
  - id: reset_pause_charlie_mealtime
    alias: "Reset Pause Charlie Mealtime"
    description: "Reset reminder paused boolean."
    max_exceeded: silent
    trigger:
      - trigger: state
        entity_id: binary_sensor.charlie_mealtime_reminder
        to: "off"

      - trigger: state
        entity_id: input_boolean.charlie_mealtime_paused
        to: "on"
        for:
          hours: 4

      - trigger: state
        entity_id: binary_sensor.owner_home
        to: "on"
        for:
          minutes: 15
    condition:
      - condition: state
        entity_id:
          - binary_sensor.owner_home
          - input_boolean.charlie_mealtime_paused
        state: "on"
    action:
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.charlie_mealtime_paused

  ###################################################################################################
  ## Reset Charlie Mealtime Booleans
  ###################################################################################################
  - id: reset_charlie_mealtime_booleans
    alias: "Reset Charlie Mealtime Booleans"
    description: "Reset reminder booleans."
    trigger:
      - trigger: state
        id: enabled
        entity_id: input_boolean.charlie_mealtime_enabled
        to: "off"

      - trigger: state
        id: entity
        entity_id: &entities
          - input_boolean.charlie_mealtime_active
          - input_boolean.charlie_mealtime_skipped
          - input_boolean.charlie_mealtime_paused
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.charlie_mealtime_enabled
        state: "off"
    action:
      - if: "{{ trigger.id == 'entity' }}"
        then:
          - action: input_boolean.turn_off
            target:
              entity_id: "{{ trigger.entity_id }}"
        else:
          - action: input_boolean.turn_off
            target:
              entity_id: *entities

  ###################################################################################################
  ## Charlie Mealtime Notification
  ###################################################################################################
  - id: charlie_mealtime_notification
    alias: "Charlie Mealtime Notification"
    description: "Send notification until reminder is off."
    trigger:
      - trigger: homeassistant
        event: start

      - trigger: state
        entity_id: binary_sensor.charlie_mealtime_reminder
        to: "on"
        not_from:
          - unknown
          - unavailable
    condition:
      - condition: state
        entity_id: binary_sensor.charlie_mealtime_reminder
        state: "on"

      - condition: state
        entity_id: input_boolean.charlie_mealtime_paused
        state: "off"
    action:
      - if:
          - condition: state
            entity_id: input_boolean.charlie_mealtime_skipped
            state: "on"
        then:
          - action: input_boolean.turn_off
            target:
              entity_id: input_boolean.charlie_mealtime_skipped
        else:
          - repeat:
              sequence:
                - if: "{{ not is_state('input_select.occupancy_mode', 'Night') }}"
                  then:
                    - action: notify.jason
                      data:
                        message: "Time to feed Charlie!"
                        data:
                          tag: charlie_mealtime_reminder
                          group: Reminder
                          visibility: public
                          persistent: true
                          notification_icon: *charlie_icon
                          icon_url: !secret CHARLIE_ICON
                          actions:
                            - title: "Pause"
                              action: pause_charlie_mealtime

                            - title: "Skip"
                              action: skip_charlie_mealtime

                            - title: "Done"
                              action: charlie_mealtime_done

                    # wait to see if turned off before tts
                    - wait_template: >
                        {{ is_state('binary_sensor.charlie_mealtime_reminder', 'off')
                            or is_state('input_boolean.charlie_mealtime_paused', 'on') }}
                      timeout:
                        minutes: 2

                    - if:
                        - condition: state
                          entity_id: binary_sensor.charlie_mealtime_reminder
                          state: "on"

                        - condition: state
                          entity_id: input_boolean.charlie_mealtime_paused
                          state: "off"
                      then:
                        - action: script.turn_on
                          continue_on_error: true
                          target:
                            entity_id: script.tts_play
                          data:
                            variables:
                              message: |
                                Hey Charlie!
                                Charlie! Pay attention!
                                Are you a hungry doggie?
                                It's time to get your food!
                              quiet_play: true
                              save_message: true

                - wait_template: >
                    {{ is_state('binary_sensor.charlie_mealtime_reminder', 'off')
                        or is_state('input_boolean.charlie_mealtime_paused', 'on') }}
                  timeout:
                    minutes: "{{ states('input_number.charlie_mealtime_notification_interval') | int }}"
              until:
                - or:
                    - condition: state
                      entity_id: binary_sensor.charlie_mealtime_reminder
                      state: "off"

                    - condition: state
                      entity_id: input_boolean.charlie_mealtime_paused
                      state: "on"

  ###################################################################################################
  ## Clear Charlie Mealtime Notification
  ###################################################################################################
  - id: clear_charlie_mealtime_notification
    alias: "Clear Charlie Mealtime Notification"
    description: "Clear reminder notification."
    trigger:
      - trigger: state
        entity_id: binary_sensor.charlie_mealtime_reminder
        to: "off"

      - trigger: state
        entity_id:
          - input_boolean.charlie_mealtime_paused
          - input_boolean.charlie_mealtime_skipped
        to: "on"
    action:
      - action: notify.jason
        data:
          message: clear_notification
          data:
            tag: charlie_mealtime_reminder
