#######################################################################################################################
## Package - Scene
#######################################################################################################################
timer:
  company_mode:
    name: "Company Mode Timer"
    icon: mdi:movie-filter

  movie_mode:
    name: "Movie Mode Timer"
    icon: mdi:movie-filter

  shower_mode:
    name: "Shower Mode Timer"
    icon: mdi:movie-filter

input_number:
  company_mode_duration:
    name: "Company Mode Duration"
    icon: mdi:movie-filter
    unit_of_measurement: min
    min: 30
    max: 480
    step: 10

  movie_mode_duration:
    name: "Movie Mode Duration"
    icon: mdi:movie-filter
    unit_of_measurement: min
    min: 30
    max: 480
    step: 10

  shower_mode_duration:
    name: "Shower Mode Duration"
    icon: mdi:movie-filter
    unit_of_measurement: min
    min: 5
    max: 60
    step: 5

switch:
  - platform: template
    switches:
#######################################################################################################################
## Company Mode Switch
#######################################################################################################################
      company_mode:
        friendly_name: "Company Mode"
        icon_template: mdi:account-group
        turn_on:
          - service: script.save_media_mode_scene
            data:
              media_mode: company_mode

          - service: switch.turn_off
            entity_id: switch.light_flux_dining_room

          - service: script.activate_scene
            data:
              scene: "{{ 'company_mode' if is_state('binary_sensor.auto_light_on','on') else 'company_mode_daytime' }}"

          - service: timer.start
            target:
              entity_id: timer.company_mode
            data:
              duration:
                minutes: "{{ states('input_number.company_mode_duration')|int }}"
        turn_off:
          - service: timer.cancel
            entity_id: timer.company_mode

          - service: script.activate_scene
            data:
              scene: before_company_mode

          - service: switch.turn_on
            entity_id: switch.light_flux_dining_room

          # system mute was on, play any saved messages
          - service: script.tts_play_saved_messages
            data:
              skip_none: true

#######################################################################################################################
## Movie Mode Switch
#######################################################################################################################
      movie_mode:
        friendly_name: "Movie Mode"
        icon_template: mdi:movie-open
        turn_on:
          - service: script.save_media_mode_scene
            data:
              media_mode: movie_mode

          - service: switch.turn_off
            entity_id: switch.light_flux_dining_room

          - service: script.activate_scene
            data:
              scene: "{{ 'movie_mode' if is_state('binary_sensor.auto_light_on','on') else 'movie_mode_daytime' }}"

          - service: timer.start
            target:
              entity_id: timer.movie_mode
            data:
              duration:
                minutes: "{{ states('input_number.movie_mode_duration')|int }}"
        turn_off:
          - service: timer.cancel
            entity_id: timer.movie_mode

          - service: script.activate_scene
            data:
              scene: before_movie_mode

          - service: switch.turn_on
            entity_id: switch.light_flux_dining_room

          # system mute was on, play any saved messages
          - service: script.tts_play_saved_messages
            data:
              skip_none: true

#######################################################################################################################
## Shower Mode Switch
#######################################################################################################################
      shower_mode:
        friendly_name: "Shower Mode"
        icon_template: mdi:shower-head
        turn_on:
          - service: timer.start
            target:
              entity_id: timer.shower_mode
            data:
              duration:
                minutes: "{{ states('input_number.shower_mode_duration')|int }}"

          - service: switch.turn_off
            entity_id: switch.light_flux_bathroom

          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.light_automation
                    state: 'on'
                sequence:
                  - choose:
                      - conditions:
                          - condition: numeric_state
                            entity_id: sensor.upstairs_bathroom_sensor_illuminance
                            below: 50
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: light.upstairs_bathroom_vanity_rgb_light
                            data:
                              profile: warm_max

                  - service: light.turn_on
                    target:
                      entity_id: light.upstairs_bathroom_shower_light
                    data:
                      profile: warm_max

          - choose:
              - conditions:
                  - condition: state
                    entity_id:
                      - input_boolean.media_preset_enabled_shower
                      - input_boolean.media_player_automation
                    state: 'on'

                  - condition: not
                    conditions:
                      - condition: state
                        entity_id: input_select.occupancy_mode
                        state: Night
                sequence:
                  - choose:
                      - conditions:
                          - condition: or
                            alias: Radio/Spotify already playing in bathroom
                            conditions:
                              - condition: template
                                value_template: >
                                  {{ is_state('switch.radio','on') and expand(state_attr('sensor.radio_media_player','players'))
                                    |selectattr('entity_id','eq','media_player.bathroom_speaker')|list|count > 0 }}

                              - condition: template
                                value_template: >
                                  {{ is_state('switch.spotify','on') and expand(state_attr('sensor.spotify_media_player','players'))
                                    |selectattr('entity_id','eq','media_player.bathroom_speaker')|list|count > 0 }}
                        sequence:
                          - service: media_player.volume_set
                            target:
                              entity_id: media_player.bathroom_speaker
                            data:
                              volume_level: "{{ states('input_number.media_preset_volume_shower')|float/100 }}"
                    default:
                      - service: script.media_preset_play
                        data:
                          preset: shower

          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.vent_fan_automation
                    state: 'on'
                sequence:
                  - service: automation.turn_off # turn off automation so we don't trigger device in use timer
                    entity_id: automation.vent_fan_upstairs_bathroom_fan_in_use

                  - service: fan.turn_on
                    target:
                      entity_id: fan.upstairs_bathroom_fan
                    data:
                      percentage: 100

                  - delay: # delay to allow devices to change state
                      seconds: 5 #ZWAVE fans are slow to change

                  - service: automation.turn_on # turn off automation so we don't trigger device in use timer
                    entity_id: automation.vent_fan_upstairs_bathroom_fan_in_use
        turn_off:
          - service: timer.cancel
            entity_id: timer.shower_mode

          - service: switch.turn_on
            entity_id: switch.light_flux_bathroom

          - choose: # if shower media player is only bathroom speaker, turn it off
              - conditions:
                  - condition: state
                    entity_id:
                      - input_boolean.media_preset_enabled_shower
                      - input_boolean.media_player_automation
                    state: 'on'
                sequence:
                  - choose: # if shower media player is only bathroom speaker, turn it off
                      - conditions:
                          - condition: state
                            entity_id: media_player.bathroom_speaker
                            state:
                              - playing
                              - paused
                              - idle

                          - condition: or
                            conditions:
                              - condition: and
                                conditions:
                                  - condition: state
                                    entity_id: switch.radio
                                    state: 'on'

                                  - condition: state
                                    entity_id: sensor.radio_media_player
                                    state: media_player.bathroom_speaker

                              - condition: and
                                conditions:
                                  - condition: state
                                    entity_id: switch.spotify
                                    state: 'on'

                                  - condition: state
                                    entity_id: sensor.spotify_media_player
                                    state: media_player.bathroom_speaker
                        sequence:
                          - service: media_player.turn_off
                            entity_id: media_player.bathroom_speaker
                    default:
                      - choose:
                          - conditions:
                              - condition: template
                                value_template: >
                                  {{ is_state('switch.radio','on') and expand(state_attr('sensor.radio_media_player','players'))
                                    |selectattr('entity_id','eq','media_player.bathroom_speaker')|list|count > 0 }}
                            sequence:
                              - service: media_player.volume_set
                                target:
                                  entity_id: media_player.bathroom_speaker
                                data:
                                  volume_level: "{{ states('input_number.radio_volume')|float / 100 }}"

                          - conditions:
                              - condition: template
                                value_template: >
                                  {{ is_state('switch.spotify','on') and expand(state_attr('sensor.spotify_media_player','players'))
                                    |selectattr('entity_id','eq','media_player.bathroom_speaker')|list|count > 0 }}
                            sequence:
                              - service: media_player.volume_set
                                target:
                                  entity_id: media_player.bathroom_speaker
                                data:
                                  volume_level: "{{ states('input_number.spotify_volume')|float / 100 }}"
                        default:
                          - service: media_player.volume_set
                            target:
                              entity_id: media_player.bathroom_speaker
                            data:
                              volume_level: "{{ states('input_number.laundry_room_speaker_current_volume')|float }}"

          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.light_automation
                    state: 'on'
                sequence:
                  - choose:
                      - conditions:
                          - condition: numeric_state
                            entity_id: sensor.upstairs_bathroom_sensor_illuminance
                            below: input_number.bathroom_illuminance_threshold
                        sequence:
                          - service: light.turn_on # no motion will turn it off
                            target:
                              entity_id: light.upstairs_bathroom_vanity_rgb_light
                            data:
                              #OPTION brightness: 150
                              # color: rgb(255,175,70)
                              profile: warm
                              transition: 2
                    default:
                      - service: light.turn_off
                        target:
                          entity_id: light.upstairs_bathroom_vanity_rgb_light
                        data:
                          transition: 2

                  - service: light.turn_off
                    target:
                      entity_id: light.upstairs_bathroom_shower_light
                    data:
                      transition: 2
