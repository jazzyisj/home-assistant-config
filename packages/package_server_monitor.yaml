#######################################################################################################################
## Package - System Monitor
#######################################################################################################################
sensor:
#######################################################################################################################
## DNS IP Sensor
#######################################################################################################################
  - platform: dnsip

#######################################################################################################################
## Rpi CPU Temperature
#######################################################################################################################
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    value_template: "{{ '%0.1f'|format(value|float|multiply(0.001)) }}"
    unit_of_measurement: 'C'
    scan_interval: 300

#######################################################################################################################
## System Monitor
#######################################################################################################################
  - platform: systemmonitor
    resources:
      - type: last_boot
      - type: disk_use_percent
        arg: /home
      - type: memory_use_percent
      - type: swap_use_percent
      - type: processor_use
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: ipv6_address
        arg: eth0
      - type: network_in
        arg: eth0
      - type: network_out
        arg: eth0
      - type: throughput_network_in
        arg: eth0
      - type: throughput_network_out
        arg: eth0
      - type: packets_in
        arg: eth0
      - type: packets_out
        arg: eth0

  - platform: template
    sensors:
#######################################################################################################################
## Last Boot Date & Time
## display last boot date/time in friendly format
#######################################################################################################################
      last_boot_date_time:
        friendly_name: Last Boot Date
        unique_id: last_boot_date_time
        icon_template: mdi:clock-start
        value_template: >
          {% set date = as_timestamp(states('sensor.last_boot'))|timestamp_custom('%d') %}
          {% set date = '{:01}'.format(date|int) %}
          {% if date in ('1','21','31') %}{% set date = date ~ 'st' %}
          {% elif now().day in ('2','22') %}{% set date = date ~ 'nd' %}
          {% elif now().day in ('3','23') %}{% set date = date ~ 'rd' %}
          {% else %}{% set date = date ~ 'th' %}
          {% endif %}
          {{ as_timestamp(states('sensor.last_boot'))|timestamp_custom('%H:%M on %a') }} {{ date }} {{ as_timestamp(states('sensor.last_boot'))|timestamp_custom('%b %Y',true) }}

#######################################################################################################################
## Rpi Uptime Sensor
## display system uptime in friendly format
#######################################################################################################################
      rpi_uptime:
        friendly_name: RPi Uptime
        unique_id: rpi_uptime
        icon_template: mdi:clock-start
        value_template: >
          {% set up_time = as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}
          {% set minutes = (up_time // 60)|int %}
          {% set hours = (minutes // 60) %}
          {% set days = (hours // 24) %}
          {% set weeks = (days // 7) %}
          {% set minutes = (minutes % 60) %}
          {% set hours =  (hours % 24) %}
          {% set days = (days % 7) %}
          {% macro phrase(value, name) %}
            {%- set value = value %}
            {%- set end = 's' if value > 1 else '' %}
            {{- '{} {}{}'.format(value, name, end) if value|int > 0 else '' }}
          {%- endmacro %}
          {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ]|select('!=','')|list|join(', ') %}
          {% set last_comma = text.rfind(',') %}
          {% if last_comma != -1 %}
            {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
          {% endif %}
          {{ text }}

binary_sensor:
#######################################################################################################################
## WAN Connected  https://www.home-assistant.io/components/binary_sensor.ping/
#######################################################################################################################
  - platform: ping
    name: WAN Connected
    host: 8.8.8.8
    count: 2
    scan_interval: 300

  - platform: template
    sensors:
#######################################################################################################################
## WAN Connected Alert
#######################################################################################################################
      wan_connected_alert:
        friendly_name: Internet
        unique_id: wan_connected_alert
        icon_template: mdi:wan
        value_template: "{{ is_state('binary_sensor.wan_connected','off') }}"

######################################################################################################################
## RPI Power
######################################################################################################################
      rpi_power_alert:
        unique_id: rpi_power_alert
        value_template: "(( is_state('binary_sensor.rpi_power_status','on') and is_state('binary_sensor.alerts_enabled','on') }}"

#######################################################################################################################
## CPU Temperature
#######################################################################################################################
      cpu_temperature_alert:
        unique_id: cpu_temperature_alert
        delay_on:
          minutes: 10
        value_template: "{{ states('sensor.cpu_temperature')|int > 65 and is_state('binary_sensor.alerts_enabled','on') }}"

#######################################################################################################################
## Processor Use
#######################################################################################################################
      processor_use_alert:
        unique_id: processor_use_alert
        delay_on:
          minutes: 10 # delay before triggering alert to reduce alerts from temporary spikes
        value_template: "{{ states('sensor.processor_use')|int > 60 and is_state('binary_sensor.alerts_enabled','on') }}"

#######################################################################################################################
## Memory Use
#######################################################################################################################
      memory_use_alert:
        unique_id: memory_use_alert
        delay_on:
          minutes: 10 # delay before triggering alert to reduce alerts from temporary spikes
        value_template: "{{ states('sensor.memory_use_percent')|int > 75 and is_state('binary_sensor.alerts_enabled','on') }}"

#######################################################################################################################
## Swap File Use
#######################################################################################################################
      swap_use_alert:
        unique_id: swap_use_alert
        delay_on:
          minutes: 10 # delay before triggering alert to reduce alerts from temporary spikes
        value_template: "{{ states('sensor.swap_use_percent')|int > 80 and is_state('binary_sensor.alerts_enabled','on') }}"

#######################################################################################################################
## Disk Use
#######################################################################################################################
      disk_use_alert:
        unique_id: disk_use_alert
        value_template: "{{ states('sensor.disk_use_percent_home')|int > 60 and is_state('binary_sensor.alerts_enabled','on') }}"