###############################################################################
## Package - Appliances
###############################################################################
homeassistant:
  customize:
    alert.lg_thinq_connected:
      entity_picture: !secret LG_ICON
      category: appliance
    alert.co2_signal_connected:
      entity_picture: !secret CO2_ICON
      category: appliance
    alert.oeb_connected:
      entity_picture: !secret OEB_ICON
      category: appliance
    alert.shelly_connected:
      entity_picture: !secret SHELLY_ICON
      category: appliance
    alert.power_use:
      icon: mdi:flash-alert
      category: appliance
      tts_repeat: true
      tts_timeout: 60
      save_message: true
      alert: true
    alert.stove:
      icon: mdi:stove
      category: appliance
      tts_repeat: true
      tts_timeout: 60
      save_message: true
      alert: true
    alert.indoor_sump:
      icon: mdi:pump
      category: appliance
      tts_repeat: true
      tts_timeout: 60
      save_message: true
      alert: true
    alert.outdoor_sump:
      icon: mdi:pump
      category: appliance
      tts_repeat: true
      tts_timeout: 60
      save_message: true
      alert: true

input_boolean:
  appliance_alerts:
    name: "Appliance Alerts"
    icon: mdi:alert

sensor:
  - platform: history_stats
    name: "Indoor Sump Count"
    entity_id: binary_sensor.indoor_sump
    state: "on"
    type: count
    start: "{{ now() - timedelta(days=1) }}"
    duration:
      hours: 24

  - platform: history_stats
    name: "Indoor Sump Hours"
    entity_id: binary_sensor.indoor_sump
    state: "on"
    type: time
    start: >
      {{ states('button.indoor_sump_hours_reset') | as_datetime
          if has_value('button.indoor_sump_hours_reset') else now() }}
    end: "{{ now() }}"

  - platform: history_stats
    name: "Outdoor Sump Count"
    entity_id: binary_sensor.outdoor_sump
    state: "on"
    type: count
    start: "{{ now() - timedelta(days=1) }}"
    duration:
      hours: 24

  - platform: history_stats
    name: "Outdoor Sump Hours"
    entity_id: binary_sensor.outdoor_sump
    state: "on"
    type: time
    start: >
      {{ states('button.outdoor_sump_hours_reset') | as_datetime
          if has_value('button.outdoor_sump_hours_reset') else now() }}
    end: "{{ now() }}"

alert:
  power_use:
    name: "Power Use"
    title: "Power Use Alert"
    message: "Current power usage is {{ states('sensor.current_power_use_kw') }} kW!"
    done_message: clear_notification
    entity_id: binary_sensor.power_use_alert
    state: "on"
    repeat: 900
    notifiers: jason
    data:
      tag: power_use_alert
      group: Alert
      channel: Alert
      visibility: public
      notification_url: mdi:flash-alert
      icon_url: !secret POWER_ICON
      ledColor: !secret SEVERE_COLOR
      color: !secret SEVERE_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /ui-mobile/appliance
      actions:
        - title: "Pause"
          action: pause_alert_power_use

  stove:
    name: "Stove Alert"
    title: "Stove Alert"
    message: "The stove is on and nobody is home!"
    done_message: clear_notification
    entity_id: binary_sensor.stove_alert
    state: "on"
    repeat: 900
    notifiers: jason
    data:
      tag: stove_alert
      group: Alert
      channel: Alert
      visibility: public
      notification_url: mdi:stove
      icon_url: !secret STOVE_ICON
      ledColor: !secret SEVERE_COLOR
      color: !secret SEVERE_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /ui-mobile/appliance
      actions:
        - title: "Pause"
          action: pause_alert_stove

  indoor_sump:
    name: "Indoor Sump"
    title: "Indoor Sump Alert"
    message: |
      Power Use: {{ states('sensor.indoor_sump_power', with_unit=true) }}
      Power Alert: {{ states('binary_sensor.indoor_sump_overpowering') | title }}
      Device Temp: {{ states('sensor.indoor_sump_device_temperature', with_unit=true) }}
      Temp Alert: {{ states('binary_sensor.indoor_sump_overheating') | title }}
    done_message: clear_notification
    entity_id: binary_sensor.indoor_sump_alert
    state: "on"
    repeat: 300
    notifiers: jason
    data:
      tag: indoor_sump
      group: Alert
      channel: Alert
      visibility: public
      notification_url: mdi:pump
      icon_url: !secret SUMP_ICON
      ledColor: !secret SEVERE_COLOR
      color: !secret SEVERE_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /ui-mobile/appliance
      actions:
        - title: "Pause"
          action: pause_alert_indooor_sump

        - title: "Turn Sump On"
          action: turn_indoor_sump_on

  outdoor_sump:
    name: "Outdoor Sump"
    title: "Outdoor Sump Alert"
    message: |
      Power: {{ states('switch.outdoor_sump') | title }}
      Power Use: {{ states('sensor.outdoor_sump_power', with_unit=true) }}
      Power Alert: {{ states('binary_sensor.outdoor_sump_overpowering') | title }}
      Device Temp: {{ states('sensor.outdoor_sump_device_temperature', with_unit=true) }}
      Temp Alert: {{ states('binary_sensor.outdoor_sump_overheating') | title }}
    entity_id: binary_sensor.outdoor_sump_alert
    state: "on"
    repeat: 300
    notifiers: jason
    data:
      tag: outdooor_sump
      group: Alert
      channel: Alert
      visibility: public
      notification_url: mdi:pump
      icon_url: !secret SUMP_ICON
      ledColor: !secret SEVERE_COLOR
      color: !secret SEVERE_COLOR
      vibrationPattern: !secret ALERT_VIBRATION
      clickAction: /ui-mobile/appliance
      actions:
        - title: "Pause"
          action: pause_alert_outdooor_sump

        - title: "Turn Sump On"
          action: turn_outdoor_sump_on

  lg_thinq_connected:
    name: "LG ThinQ Connected"
    entity_id: binary_sensor.lg_thinq_connected_alert
    state: "on"
    notifiers: log
    skip_first: false
    repeat: 999999
    data:
      tag: lg_thinq_connected

  co2_signal_connected:
    name: "CO2 Signal Connected"
    entity_id: binary_sensor.co2_signal_connected_alert
    state: "on"
    notifiers: log
    skip_first: false
    repeat: 999999
    data:
      tag: co2_signal_connected

  oeb_connected:
    name: "OEB Connected"
    entity_id: binary_sensor.oeb_connected_alert
    state: "on"
    notifiers: log
    skip_first: false
    repeat: 999999
    data:
      tag: oeb_connected

  shelly_connected:
    name: "Shelly Connected"
    entity_id: binary_sensor.shelly_connected_alert
    state: "on"
    notifiers: log
    skip_first: false
    repeat: 999999
    data:
      tag: shelly_connected
