#######################################################################################################################
## Dark Sky Weather Integration Package
## https://www.home-assistant.io/integrations/darksky/
## sensor attributes: time_0, title_0, description_0, expires_0, severity_0, uri_0, regions_0
## severity values: warning, watch, advisory, statement
#######################################################################################################################
homeassistant:
  customize:
    alert.dark_sky_weather_alert:
      friendly_name: EnvCan Alert
      icon: mdi:weather-hurricane
      category: weather

    sensor.dark_sky_icon_0d:
      friendly_name: Icon
    sensor.dark_sky_summary_0d:
      friendly_name: Summary
    sensor.dark_sky_sunrise_0d:
      friendly_name: Sunrise
    sensor.dark_sky_sunset_0d:
      friendly_name: Sunset
    sensor.dark_sky_moon_phase_0d:
      friendly_name: Moon Phase
    sensor.dark_sky_daytime_high_temperature_0d:
      friendly_name: High Temperature
    sensor.dark_sky_overnight_low_temperature_0d:
      friendly_name: Low Temperature
    sensor.dark_sky_daytime_high_apparent_temperature_0d:
      friendly_name: High Apparent Temperature
    sensor.dark_sky_overnight_low_apparent_temperature_0d:
      friendly_name: Low Apparent Temperature
    sensor.dark_sky_dew_point_0d:
      friendly_name: Dew Point
    sensor.dark_sky_humidity_0d:
      friendly_name: Humidity
    sensor.dark_sky_pressure_0d:
      friendly_name: Pressure
    sensor.dark_sky_cloud_coverage_0d:
      friendly_name: Cloud Coverage
    sensor.dark_sky_visibility_0d:
      friendly_name: Visibility
    sensor.dark_sky_wind_speed_0d:
      friendly_name: Wind Speed
    sensor.dark_sky_wind_gust_0d:
      friendly_name: Wind Gust
    sensor.dark_sky_wind_bearing_0d:
      friendly_name: Wind Bearing
    sensor.dark_sky_ozone_0d:
      friendly_name: Ozone Level
    sensor.dark_sky_uv_index_0d:
      friendly_name: UV Index
    sensor.dark_sky_precip_0d:
      friendly_name: Precipitation Type
    sensor.dark_sky_precip_probability_0d:
      friendly_name: Precipitation Probability
    sensor.dark_sky_precip_accumulation_0d:
      friendly_name: Precipitation Accumulation
    sensor.dark_sky_precip_intensity_0d:
      friendly_name: Precipitation Intensity
    sensor.dark_sky_daily_max_precip_intensity_0d:
      friendly_name: Maximum Precipitation Intensity

input_text:
  current_dark_sky_alert_severity:
  previous_dark_sky_alert_severity:

binary_sensor:
  - platform: template
    sensors:
#######################################################################################################################
## Dark Sky Connected
#######################################################################################################################
      dark_sky_connected:
        friendly_name: Dark Sky
        unique_id: dark_sky_connected
        icon_template: "{{ 'mdi:weather-partly-snowy-rainy' if is_state('binary_sensor.dark_sky_connected','on') else 'mdi:alert-circle' }}"
        device_class: connectivity
        value_template: "{{ not states('sensor.dark_sky_temperature')|lower in ['unknown','unavailable','none'] }}"

      dark_sky_connected_alert:
        friendly_name: Dark Sky
        unique_id: dark_sky_connected_alert
        icon_template: mdi:weather-partly-snowy-rainy
        value_template: "{{ is_state('binary_sensor.dark_sky_connected','off') and is_state('binary_sensor.alerts_enabled','on') }}"

#######################################################################################################################
## Dark Sky Alert Active - do not disabled with alerts_enabled
#######################################################################################################################
      dark_sky_alert_active:
        friendly_name: EnvCan Alert
        unique_id: dark_sky_alert_active
        icon_template: mdi:weather-hurricane
        device_class: safety
        value_template: "{{ states('sensor.dark_sky_alerts')|int > 0 }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

sensor:
#######################################################################################################################
## Darksky Weather Platform
#######################################################################################################################
  - platform: darksky
    name: Dark Sky
    api_key: !secret DARKSKY_API
    scan_interval: '00:15'
    forecast:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
    hourly_forecast:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
    monitored_conditions:
      - alerts
      - icon
      - summary
      - minutely_summary
      - daily_summary
      - hourly_summary
      - precip_probability
      - precip_type
      - precip_accumulation
      - precip_intensity_max
      - precip_intensity
      - wind_speed
      - wind_bearing
      - wind_gust
      - cloud_cover
      - temperature_low
      - temperature_high
      - humidity
      - dew_point
      - nearest_storm_distance
      - nearest_storm_bearing
      - apparent_temperature
      - apparent_temperature_high
      - apparent_temperature_low
      - ozone
      - uv_index
      - temperature
      - pressure
      - visibility
      - sunrise_time
      - sunset_time
      - moon_phase

  - platform: template
    sensors:
#######################################################################################################################
## Dark Sky Severe Weather Alert # https://weather.gc.ca/warnings/index_e.html  #IDEA
## conditions list least severe to most -> last to match is attribute value
## always 2 alerts, first is usually a bs update so pull values from second alert
#######################################################################################################################
      dark_sky_severe_weather_alert: #TEST #VERIFY this is turning on for all these and/or warning severity for menu button
        unique_id: dark_sky_severe_weather_alert
        value_template: >
          {% set conditions = ['blowing snow','extreme cold','wind','rainfall','winter storm','snow squall','hail','freezing rain','snowfall','blizzard','tornado','storm surge','wreckhouse wind'] %}
          {% set found = namespace(value=0) %}
          {% for condition in conditions %}
            {% if condition in state_attr('sensor.dark_sky_alerts','description_1')|lower %}{% set found.value = 1 %}{% endif %}
          {% endfor %}
          {{ 'on' if is_state_attr('sensor.dark_sky_alerts','severity_1','warning') or found.value == 1 else 'off' }}
        attribute_templates:
          condition: >
            {% set conditions = ['blowing snow','extreme cold','wind','rainfall','winter storm','snow squall','hail','freezing rain','snowfall','blizzard','tornado','storm surge','wreckhouse wind'] %}
            {% set found = namespace() %}
            {% for condition in conditions %}
              {% if condition in state_attr('sensor.dark_sky_alerts','description_1')|lower %}{% set found.value = conditions[loop.index0] %}{% endif %}
            {% endfor %}
            {{ found.value|title if found.value != '' else 'No' }} Warning
        availability_template: "{{ states('sensor.dark_sky_alerts')|lower not in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Dark Sky Current Text
#######################################################################################################################
      dark_sky_current_text:
        unique_id: dark_sky_current_text
        value_template: >
          {% if is_state('sensor.dark_sky_icon','clear-day') %} Clear
          {% elif is_state('sensor.dark_sky_icon','clear-night') %} Clear
          {% elif is_state('sensor.dark_sky_icon','rain') %} Rain
          {% elif is_state('sensor.dark_sky_icon','snow') %} Snowy
          {% elif is_state('sensor.dark_sky_icon','fog') %} Foggy
          {% elif is_state('sensor.dark_sky_icon','sleet') %} Sleet
          {% elif is_state('sensor.dark_sky_icon','wind') %} Windy
          {% elif is_state('sensor.dark_sky_icon','cloudy') %} Cloudy
          {% elif is_state('sensor.dark_sky_icon','partly-cloudy-day') %} Partly Cloudy
          {% elif is_state('sensor.dark_sky_icon','partly-cloudy-night') %} Partly Cloudy
          {% elif is_state('sensor.dark_sky_icon','hail') %} Hailing
          {% elif is_state('sensor.dark_sky_icon','lightning') %} Lightning
          {% elif is_state('sensor.dark_sky_icon','thunderstorm') %} Thunderstorm
          {% endif %}
        availability_template: "{{ states('sensor.dark_sky_icon')|lower not in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Dark Sky Alt Wind - Dark Sky Lovelace Card
#https://github.com/iammexx/home-assistant-config/tree/master/ui/darksky
#######################################################################################################################
      dark_sky_alt_wind_speed:
        unique_id: dark_sky_alt_wind_speed
        value_template: >
          {% set directions = ['North','North-Northeast','Northeast','East-Northeast','East','East-Southeast','Southeast','South-Southeast','South','South-Southwest','Southwest','West-Southwest','West','West-Northwest','Northwest','North-Northwest','North'] %}
          {{ '%0.0f'|format(states('sensor.dark_sky_wind_speed')|float) }} mi/hour from the {{ directions[(('%0.0f'|format(states('sensor.dark_sky_wind_bearing')|float/360)*16)|float)] }}
        availability_template: "{{ states('sensor.dark_sky_wind_speed')|lower not in ['unknown','unavailable','none'] and  states('sensor.dark_sky_wind_bearing')|lower not in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Wind Direction - Cardinal
#######################################################################################################################
  - platform: template
    sensors:
      wind_cardinal_direction:
        unique_id: wind_cardinal_direction
        value_template: >
          {% set directions = ['N','NNE','NE','ENE','E','ESE','SE','SSE','suffix','SSW','SW','WSW','W','WNW','NW','NNW','N'] %}
          {{ directions[(states('sensor.dark_sky_wind_bearing')|float/360*16)|int] }}
        availability_template: "{{ states('sensor.dark_sky_wind_bearing')|lower not in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Storm Direction - Cardinal
#######################################################################################################################
  - platform: template
    sensors:
      storm_cardinal_direction:
        unique_id: storm_cardinal_direction
        value_template: >
          {% set directions = ['N','NNE','NE','ENE','E','ESE','SE','SSE','suffix','SSW','SW','WSW','W','WNW','NW','NNW','N'] %}
          {{ directions[(states('sensor.dark_sky_nearest_storm_bearing')|float/360*16)|int] }}
        availability_template: "{{ states('sensor.dark_sky_nearest_storm_bearing')|lower not in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Storm Direction - Full Cardinal
#######################################################################################################################
  - platform: template
    sensors:
      storm_full_cardinal_direction:
        unique_id: storm_full_cardinal_direction
        value_template: >
          {% set directions = ['North','North-Northeast','Northeast','East-Northeast','East','East-Southeast','Southeast','South-Southeast','South','South-Southwest','Southwest','West-Southwest','West','West-Northwest','Northwest','North-Northwest','North'] %}
          {{ directions[(states('sensor.dark_sky_nearest_storm_bearing')|float/360*16)|int] }}
        availability_template: "{{ states('sensor.dark_sky_nearest_storm_bearing')|lower not in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Dark Sky Forecasts
#######################################################################################################################
  - platform: template
    sensors:
      forecast_0d:
        friendly_name: Today
        unique_id: forecast_0d
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_daytime_high_temperature_0d')|float) -}} (
          {{- '%0.0f'|format(states('sensor.dark_sky_overnight_low_temperature_0d')|float) -}}°)
          {{- ' ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_0d')|float) }}%
        entity_picture_template: >
          {% set icon_name = 'cloudy-day-1' if states('sensor.dark_sky_icon_0d') == 'partly-cloudy-day' else states('sensor.dark_sky_icon_0d') %}
          {{ '/local/icons/weather_icons/animated/' ~ icon_name ~ '.svg'}}
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_1d:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (1 * 86400) -%}
          {{ date|timestamp_custom('Tomorrow (%min/%d)')|replace('(0','(')|replace('/0','/') }}
        unique_id: forecast_1d
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_daytime_high_temperature_1d')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_overnight_low_temperature_1d')|float) -}}°)
          {{- ' ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_1d')|float) }}%
        entity_picture_template: >
          {{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_1d') ~ '.svg'}}
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_2d:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (2 * 86400) -%}
          {{ date|timestamp_custom('%A (%min/%d)')|replace('(0','(')|replace('/0','/') }}
        unique_id: forecast_2d
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_daytime_high_temperature_2d')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_overnight_low_temperature_2d')|float) -}}°)
          {{- ' ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_2d')|float) }}%
        entity_picture_template: >
          {{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_2d') ~ '.svg'}}
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_3d:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (3 * 86400) -%}
          {{ date|timestamp_custom('%A (%min/%d)')|replace('(0','(')|replace('/0','/') }}
        unique_id: forecast_3d
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_daytime_high_temperature_3d')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_overnight_low_temperature_3d')|float) -}}°)
          {{- ' ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_3d')|float) }}%
        entity_picture_template: >
          {{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_3d') ~ '.svg'}}
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_4d:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (4 * 86400) -%}
          {{ date|timestamp_custom('%A (%min/%d)')|replace('(0','(')|replace('/0','/') }}
        unique_id: forecast_4d
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_daytime_high_temperature_4d')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_overnight_low_temperature_4d')|float) -}}°)
          {{- ' ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_4d')|float) }}%
        entity_picture_template: >
          {{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_4d') ~ '.svg'}}
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_5d:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (5 * 86400) -%}
          {{ date|timestamp_custom('%A (%min/%d)')|replace('(0','(')|replace('/0','/') }}
        unique_id: forecast_5d
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_daytime_high_temperature_5d')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_overnight_low_temperature_5d')|float) -}}°)
          {{- ' ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_5d')|float) }}%
        entity_picture_template: >
          {{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_5d') ~ '.svg'}}
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_6d:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (6 * 86400) -%}
          {{ date|timestamp_custom('%A (%min/%d)')|replace('(0','(')|replace('/0','/') }}
        unique_id: forecast_6d
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_daytime_high_temperature_6d')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_overnight_low_temperature_6d')|float) -}}°)
          {{- ' ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_6d')|float) }}%
        entity_picture_template: >
          {{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_6d') ~ '.svg'}}
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_7d:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (7 * 86400) -%}
          {{ date|timestamp_custom('%A (%min/%d)')|replace('(0','(')|replace('/0','/') }}
        unique_id: forecast_7d
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_daytime_high_temperature_7d')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_overnight_low_temperature_7d')|float) -}}°)
          {{- ' ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_7d')|float) }}%
        entity_picture_template: >
          {{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_7d') ~ '.svg'}}
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

#######################################################################################################################
## Dark Sky Hourly Forecast Sensors
#######################################################################################################################
      forecast_0h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 1 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 1 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 1 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_0h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_0h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_0h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_0h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_0h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_1h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 2 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 2 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 2 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_1h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_1h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_1h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_1h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_1h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_2h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 3 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 3 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 3 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_2h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_2h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_2h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_2h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_2h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_3h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 4 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 4 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 4 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_3h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_3h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_3h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_3h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_3h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_4h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 5 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 5 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 5 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_4h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_4h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_4h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_4h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_4h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_5h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 6 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 6 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 6 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_5h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_5h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_5h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_5h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_5h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_6h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 7 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 7 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 7 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_6h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_6h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_6h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_6h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_6h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_7h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 8 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 8 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 8 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_7h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_7h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_7h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_7h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_7h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_8h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 9 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 9 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 9 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_8h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_8h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_8h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_8h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_8h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_9h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 10 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 10 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 10 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_9h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_9h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_9h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_9h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_9h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_10h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 11 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 11 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 11 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_10h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_10h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_10h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_10h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_10h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_11h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 12 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 12 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 12 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
          {{- hour -}}:{{- '%02d'|format(min) ~ ' ' ~ suffix -}}
        unique_id: forecast_11h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_11h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_11h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_11h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_11h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

      forecast_12h:
        friendly_name_template: >
          {% set hour = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 13 * 3600)|timestamp_custom('%I')|int %}
          {% set min = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 13 * 3600)|timestamp_custom('%M')|int %}
          {% set suffix = (as_timestamp(strptime( states('sensor.date_time'), "%Y-%min-%d, %H:%M"))|float + 13 * 3600)|timestamp_custom('%p') %}
          {% if 0 > min <= 15 %}{% set min = 15 %}
          {% elif 15 > min <= 30 %}{% set min = 30 %}
          {% elif 30 > min <= 45 %}{% set min = 45 %}
          {% else %}{% set min = 0 %}
          {% endif %}
        unique_id: forecast_12h
        value_template: >
          {{- '%0.0f'|format(states('sensor.dark_sky_temperature_12h')|float) -}}° (
          {{- '%0.0f'|format(states('sensor.dark_sky_apparent_temperature_12h')|float) -}}°)
          {{- '  ' ~ '%0.0f'|format(states('sensor.dark_sky_precip_probability_12h')|float) -}}%
        entity_picture_template: "{{ '/local/icons/weather_icons/animated/' ~ states('sensor.dark_sky_icon_12h') ~ '.svg' }}"
        availability_template: "{{ is_state('binary_sensor.dark_sky_connected','on') }}"

alert:
  dark_sky_weather_alert:
    name: Envcan Weather Alert
    title: EnvCan Weather Alert
    message: |
      {{ state_attr('sensor.dark_sky_alerts','title_0') }}
      Severity: {{ state_attr('sensor.dark_sky_alerts','severity_0') }}
      {{ state_attr('sensor.dark_sky_alerts','description_1').split('###')[0] }}
    entity_id: binary_sensor.dark_sky_alert_active
    state: 'on'
    repeat: 720
    notifiers: mobile
    data:
      tag: darksky_alert
      group: General
      channel: Alert
      importance: max
      clickAction: /lovelace/weather
      color: !secret WEATHER_COLOR
      icon_url: !secret STORM_ICON
