###################################################################################################
## Someone Arrives Home
###################################################################################################
- id: someone_arrives_home
  alias: "Someone Arrives Home"
  description: "Determine who arrived home and run arrive home script."
  mode: parallel
  variables:
    person: >
      {% from 'presence.jinja' import trigger_person %}
      {{ trigger_person(trigger) }}
    first_home: "{{ state_attr('binary_sensor.someone_home', 'home') | count == 1 }}"
  triggers:
    - trigger: state
      entity_id:
        - binary_sensor.jason_home
        - binary_sensor.guest_home
      to: "on"
      from: "off"
      for: 5 # allow first_home to calculate
  actions:
    - action: input_select.select_option
      target:
        entity_id: input_select.last_person_to_arrive
      data:
        option: "{{ person | title }}"

    - event: set_variable
      event_data:
        key: last_to_arrive
        value: "{{ now() }}"
        set_timestamp: false

    - event: set_variable
      event_data:
        key: "last_arrived_{{ person }}"
        value: "{{ now() }}"
        set_timestamp: false

    - if:
        - condition: state
          entity_id: input_boolean.occupancy_announcements
          state: "on"
      then:
        - action: script.tts_play
          data:
            message: "{{ 'A guest has arrived.' if person == 'guest' else person | title ~ ' is home' }}"
            provider: "HASS"
            language: "English (USA)"
            voice: "Aria:friendly"
            save_message: false
          continue_on_error: true

    - if: # only if person still home (may have come and gone)
        - condition: template
          alias: "Person is Jason"
          value_template: "{{ person == 'jason' }}"
      then:
        - wait_template: "{{ is_state('binary_sensor.side_entrance_motion', 'on') }}"
          timeout: 300

    - delay: 60 # let person get in house

    - if: # only if person still home (may have come and gone)
        - condition: template
          alias: "Person is still home"
          value_template: "{{ is_state('binary_sensor.' ~ person ~ '_home', 'on') }}"
      then:
        - if:
            - condition: state
              entity_id: input_boolean.occupancy_announcements
              state: "on"
          then:
            - action: google_generative_ai_conversation.generate_content
              data:
                prompt: >
                  {% if person == 'jason' %}
                    You are a female and will welcome the male person Jason home using a cute pet version of his name
                    in an explicit and flirty manner using innuendos in 30 words or less and no emoticons.
                  {% elif person == 'guest' %}
                    Act surprised when noticing a new guest and welcome them to our home in a rude and
                    disappointed but very funny manner in 30 words or less and no emoticons.
                  {% endif %}
              response_variable: response

            - delay: 1

            - action: script.tts_play
              data:
                message: "{{ response['text'] }}"
                provider: "HASS"
                language: "English (USA)"
                voice: "{{ 'Aria:whispering' if person == 'jason' else 'Jane:unfriendly' }}"
                save_message: false
              continue_on_error: true

        - if: "{{ first_home }}"
          then:
            - if:
                - condition: numeric_state
                  entity_id: sensor.saved_tts_messages
                  above: 0
              then:
                - action: script.play_saved_tts_messages
                  continue_on_error: true

                - wait_template: "{{ is_state('script.play_saved_tts_messages', 'off') }}"
                  timeout:
                    minutes: 5

            - if: "{{ is_state('input_boolean.media_enabled_' ~ person, 'on') }}"
              then:
                - action: script.media_play
                  data:
                    preset: "{{ person }}"
