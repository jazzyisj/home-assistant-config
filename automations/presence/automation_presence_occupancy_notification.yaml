###############################################################################
## Presence - Occupancy Notification
###############################################################################
- id: presence_occupancy_notification
  alias: "[Presence] Occupancy Notification"
  description: "Send notification when occupancy mode or alarm state has changed."
  mode: restart
  variables:
    run_delay: 15
    occupancy_changed: >
      {{ is_state('input_boolean.occupancy_announcements','on')
          and now() - states.input_select.occupancy_mode.last_changed
            < timedelta(seconds=run_delay) }}
    alarm_changed: >
      {% if trigger.entity_id == 'alarm_control_panel.garage' %}
        {{ is_state('input_boolean.alarm_announcements','on')
            and now() - states.alarm_control_panel.garage.last_changed
              < timedelta(seconds=run_delay) }}
      {% elif trigger.entity_id == 'alarm_control_panel.house' %}
        {{ is_state('input_boolean.alarm_announcements','on')
            and now() - states.alarm_control_panel.house.last_changed
              < timedelta(seconds=run_delay) }}
      {% else %}
        {{ is_state('input_boolean.alarm_announcements','on')
            and now() - states.alarm_control_panel.master.last_changed
              < timedelta(seconds=run_delay) }}
      {% endif %}
    zone: "{{ iif(trigger.id in ['armed','disarmed'],trigger.entity_id.split('.')[1],'master') }}"
  trigger:
    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
        - Night
        - Away
        - Vacation

    - platform: state
      id: armed
      entity_id: &alarms
        - alarm_control_panel.master
        - alarm_control_panel.house
        - alarm_control_panel.garage
      to:
        - armed_home
        - armed_night
        - armed_away
        - armed_vacation

    - platform: state
      id: disarmed
      entity_id: *alarms
      to: disarmed
      from:
        - armed_home
        - armed_night
        - armed_away
        - armed_vacation
        - pending
        - triggered
  condition:
    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: "{{ iif(trigger.id == 'occupancy',is_state('input_boolean.occupancy_override','off'),true) }}"

    - condition: template
      alias: "Alarm enabled if alarm trigger"
      value_template: "{{ iif(trigger.id in ['armed','disarmed'],is_state('input_boolean.alarm_enabled','on'),true) }}"

    - condition: template
      alias: "If not master zone, only if state not same as master"
      value_template: >
        {% if trigger.id in ['armed','disarmed'] %}
          {{ iif(trigger.entity_id != 'alarm_control_panel.master',
              states(trigger.entity_id) != states('alarm_control_panel.master'),true) }}
        {% else %} true
        {% endif %}

    - not:
        - condition: state
          entity_id: *alarms
          state: &bad_states
            - triggered
            - pending
            - arming
  action:
    # allow alarm to enter arming state
    # allow corresponding occupancy/alarm mode state to set, prevent double tts
    - delay: "{{ run_delay }}"

    - not:
        - condition: state
          entity_id: *alarms
          state: *bad_states

    - parallel:
        - sequence:
            - if:
                - "{{ is_state('input_boolean.occupancy_announcements','on')
                  if trigger.id == 'occupancy' else true }}"
                - "{{ is_state('input_boolean.alarm_announcements','on')
                  if trigger.id in ['armed','disarmed'] else true }}"
              then:
                - service: script.tts_play
                  data:
                    message: >
                      {%- if occupancy_changed -%}
                      The house is now in {{ states('input_select.occupancy_mode') }} mode
                      {%- endif %}
                      {%- if occupancy_changed and alarm_changed %}, and the{% elif occupancy_changed %}.{% elif alarm_changed %} The{% endif %}
                      {%- if alarm_changed %} {{ iif(zone != 'master',zone,'') }} alarm is {{ states('sensor.master_alarm_status') }}.{% endif %}
                      {{ 'Personalized occupant automations are disabled in Guest mode.' if states('input_select.occupancy_mode') == 'Guest' }}
                    ignore_away: true
                  continue_on_error: true

                - wait_template: "{{ is_state('input_boolean.tts','off') }}"
                  timeout: 60

                - event: occupancy_notification
        - sequence:
            - if:
                - condition: state
                  entity_id: input_boolean.occupancy_notifications
                  state: "on"
              then:
                - service: notify.jason
                  data:
                    title: "{{ iif(is_state('input_boolean.alarm_triggered','on'),'Alarm Triggered','House Mode') }}"
                    message: > # font color doesn't work on some devices
                      <b>Occupancy Mode:</b> {{ states('input_select.occupancy_mode') }}<br/><b>Home:</b>
                      {%- if is_state('binary_sensor.someone_home','off') %} Nobody{% endif -%}
                      {%- if is_state('binary_sensor.jason_home','on') %} Jason{% endif -%}
                      {%- if is_state('binary_sensor.jason_home','on') and is_state('input_boolean.guest_home','on') %},{% endif -%}
                      {%- if is_state('input_boolean.guest_home','on') %} Guest{% endif -%}
                      {%- if is_state('input_boolean.charlie_home_alone','on') %}<br/><b>Charlie Alone:</b> On!{% endif -%}
                      <br/><b>Alarm Mode:</b> {{ states('sensor.master_alarm_status') }}
                      {%- if is_state('input_boolean.alarm_triggered','on') -%}
                        <br/><b>Alarm Trigger</b>: <span style="color:red">{{ states('input_text.current_alarm') }}</span>
                        <br/><b>Disarmed By</b>: {{ states('input_text.alarm_disarmed_by') -}}
                      {%- endif -%}
                      {%- if zone != 'master' -%}
                        <br/><b>House Alarm</b>: <span style="color:red">{{ states('sensor.house_alarm_status') }}</span><br/><b>Garage Alarm</b>: <span style="color:red">{{ states('sensor.garage_alarm_status') }}</span>
                      {%- endif -%}
                    data:
                      subject: "Occupancy Mode: {{ states('input_select.occupancy_mode') }}"
                      tag: occupancy_notification
                      group: General
                      channel: General
                      importance: max
                      ttl: 0
                      priority: high
                      visibility: private
                      notification_icon: "{{ states.input_select.occupancy_mode.attributes.icon }}"
                      icon_url: "/local/images/notification/{{ states('input_select.occupancy_mode')|lower }}_icon.png"
                      ledColor: !secret NOTIFY_COLOR
                      color: !secret NOTIFY_COLOR
                      vibrationPattern: !secret GENERAL_VIBRATION
                      clickAction: /ui-mobile/presence
                      actions:
                        - title: "Home"
                          action: set_home_mode

                        - title: "Away"
                          action: set_away_mode

                        - title: "Alarm"
                          action: URI
                          uri: !secret ALARM_URI
                  continue_on_error: true

###############################################################################
## Presence - Turn Off Occupancy Notifications
###############################################################################
- id: presence_turn_off_occupancy_notifications
  alias: "[Presence] Turn Off Occupancy Notifications"
  description: "Turn off occupancy notifications boolean."
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: turn_off_occupancy_notifications
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.occupancy_notifications

    - service: notify.jason
      data:
        message: clear_notification
        data:
          tag: occupancy_notification
