###############################################################################
## Presence - Occupancy Notification
###############################################################################
- id: presence_occupancy_notification
  alias: '[Presence] Occupancy Notification'
  description: 'Send notification when occupancy mode or alarm state has changed.'
  mode: restart
  variables:
    run_delay: 15
    arm_delay: "{{ state_attr('alarm_control_panel.master','delay')|int(0) }}"
    occupancy_changed: >
      {{ is_state('input_boolean.occupancy_announcements','on')
          and now() - states.input_select.occupancy_mode.last_changed
            < timedelta(seconds=run_delay) }}
    alarm_changed: >
      {{ is_state('input_boolean.alarm_announcements','on')
          and now() - states.alarm_control_panel.master.last_changed
            < timedelta(seconds=run_delay) }}
  trigger:
    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
        - Night
        - Away
        - Vacation

    - platform: state
      id: armed
      entity_id: alarm_control_panel.master
      to:
        - armed_home
        - armed_night
        - armed_away

    - platform: state
      id: disarmed
      entity_id: alarm_control_panel.master
      to: disarmed
      from:
        - armed_home
        - armed_night
        - armed_away
        - pending
        - triggered
  condition:
    - condition: template
      alias: 'Temp disarm override is not on'
      value_template: >
        {{ is_state('input_boolean.alarm_temp_override','off')
            if trigger.id == 'disarmed' else true }}

    - condition: template
      alias: 'Presence automation is enabled if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
              and is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}

    - condition: template
      alias: 'Alarm automation is enabled if alarm trigger'
      value_template: >
        {{ is_state('input_boolean.alarm_automation','on')
            if trigger.id in ['armed','disarmed'] else true }}

    - condition: not
      conditions:
        - condition: state
          entity_id: alarm_control_panel.master
          state:
            - triggered
            - pending
            - arming
  action:
    # allow alarm to enter arming state
    # allow corresponding occupancy/alarm mode state to set, prevents double tts
    - delay: '{{ run_delay }}'

    - condition: not
      conditions:
        - condition: state
          entity_id: alarm_control_panel.master
          state:
            - pending
            - triggered
            - arming

    - variables:
        occupancy_mode: "{{ states('input_select.occupancy_mode') }}"
        alarm_mode: "{{ states('sensor.alarm_status') }}"

    - choose:
        - conditions:
            - "{{ is_state('input_boolean.occupancy_announcements','on')
              if trigger.id == 'occupancy' else true }}"
            - "{{ is_state('input_boolean.alarm_announcements','on')
              if trigger.id in ['armed','disarmed'] else true }}"
          sequence:
            - service: script.turn_on
              target:
                entity_id: script.tts_play
              data:
                variables:
                  message: |
                    {%- if occupancy_changed -%}
                    The house is now in {{ occupancy_mode }} mode
                    {%- endif %}
                    {%- if occupancy_changed and alarm_changed %}, and the{% elif occupancy_changed %}.{% elif alarm_changed %} The{% endif %}
                    {%- if alarm_changed %} house alarm is {{ alarm_mode }}.{% endif %}
                    {{ 'Personalized occupant automations are disabled in Guest mode.' if occupancy_mode == 'Guest' }}
                  ignore_away: true
                  min_volume: "{{ 20 if is_state_attr(states('sensor.tts_media_player'),'type','group') else 30 }}"

    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.occupancy_notifications
              state: 'on'
          sequence:
            - service: notify.mobile
              data:
                title: "{{ iif(is_state('input_boolean.alarm_triggered','on'),'Alarm Triggered','House Mode') }}"
                message: >
                  <b>Mode: {{ occupancy_mode }} | {{ alarm_mode }}</b>
                  {%- if is_state('input_boolean.alarm_triggered','on') -%}
                    Alarm Trigger: {{ states('input_text.current_alarm') }}
                    <br/>Disarmed By: {{ states('input_text.alarm_disarmed_by') -}}
                  {%- else %}
                  {%- endif %}
                  {%- if is_state('binary_sensor.jason_home','on') -%}<br/> Jason is home. {% endif %}
                  {%- if is_state('binary_sensor.sheri_home','on') -%}<br/> Sheri is home. {% endif %}
                  {%- if is_state('input_boolean.guest_home','on') -%}<br/> A guest is home. {% endif %}
                data:
                  subject: 'Mode: {{ occupancy_mode }} | Alarm: {{ alarm_mode }}.'
                  tag: occupancy_notification
                  group: General
                  channel: General
                  importance: max
                  ttl: 0
                  priority: high
                  notification_icon: '{{ states.input_select.occupancy_mode.attributes.icon }}'
                  icon_url: !secret OCCUPANCY_ICON_TEMPLATE
                  ledColor: !secret NOTIFY_COLOR
                  color: !secret NOTIFY_COLOR
                  vibrationPattern: !secret GENERAL_VIBRATION
                  clickAction: /lovelace-mobile/presence
                  actions:
                    - title: 'Home'
                      action: set_home_mode

                    - title: 'Away'
                      action: set_away_mode

                    - title: 'Alarm'
                      action: URI
                      uri: app://com.thanksmister.iot.mqtt.alarmpanel

###############################################################################
## Presence - Turn Off Occupancy Notifications
###############################################################################
- id: presence_turn_off_occupancy_notifications
  alias: '[Presence] Turn Off Occupancy Notifications'
  description: 'Turn off occupancy notifications boolean.'
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: turn_off_occupancy_notifications
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.occupancy_notifications

    - service: notify.mobile
      data:
        message: clear_notification
        data:
          tag: occupancy_notification
