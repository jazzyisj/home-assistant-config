#######################################################################################################################
## Presence - Occupancy Mode Reset
#######################################################################################################################
- id: presence_occupancy_mode_reset
  alias: "[Presence] Occupancy Mode Reset"
  description: Select occupancy mode based on conditions.
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  condition:
    - condition: state
      entity_id: input_boolean.presence_automation
      state: 'on'
  action:
    - delay: 60 #VERIFY wait until person home sensor templates ready

    - service: input_select.select_option
      data: # default to Home/Guest if waketime_today or bedtime_today is Off
        entity_id: input_select.occupancy_mode
        option: >
          {% set time = states('sensor.time') %}
          {% set bed = states('sensor.bedtime_today') %}
          {% set wake = states('sensor.waketime_today') %}
          {% if is_state('binary_sensor.someone_home','off') %}
            {{ 'Vacation' if is_state('input_select.occupancy_mode','Vacation') else 'Away' }}
          {% elif bed == 'Off' or wake == 'Off' %}
            {{ 'Home' if is_state('binary_sensor.owner_home','on') else 'Guest' }}
          {% elif (bed < time < wake if bed < wake else ( bed < time > wake or bed > time < wake )) %}
            {{ 'Night' if is_state('input_boolean.bedtime_delayed','off') else ('Home' if is_state('binary_sensor.owner_home','on') else 'Guest') }}
          {% else %}
            {{ 'Home' if is_state('binary_sensor.owner_home','on') else 'Guest' }}
          {% endif %}
