###############################################################################
## Presence - Sync Home Away - sync presence booleans to current person state
###############################################################################
- id: presence_sync_home_away
  alias: "[Presence] Sync Home Away"
  description: "Keep occupancy booleans in sync with person state."
  variables:
    people: "{{ ['jason'] }}"
    person: >
      {% if 'jason' in trigger.entity_id %} jason
      {% else %} all
      {% endif %}
  trigger:
    - platform: state
      entity_id: person.jason
      to: home

    - platform: state
      entity_id: person.jason
      from: home

    - platform: state
      entity_id: input_boolean.jason_home
      to:
        - "on"
        - "off"

    - platform: state
      entity_id: input_boolean.home_override_jason
      to: "off"
  condition: "{{ person == 'all' or is_state('input_boolean.home_override_' ~ person,'off') }}"
  action:
    - service: automation.turn_off # turn off automation to prevent recursive trigger
      target:
        entity_id: "{{ this.entity_id }}"
      data:
        stop_actions: false

    - if: "{{ person == 'all' }}"
      then:
        - repeat:
            for_each: "{{ people }}"
            sequence:
              - variables:
                  person: "{{ people[repeat.index - 1] }}"

              - service: "{{ 'input_boolean.turn_on' if is_state('person.' ~ person,'home') else 'input_boolean.turn_off' }}"
                target: # switch boolean to current state
                  entity_id: "input_boolean.{{ person }}_home"
                continue_on_error: true

      else:
        - service: "{{ 'input_boolean.turn_on' if is_state('person.' ~ person,'home') else 'input_boolean.turn_off' }}"
          target: # switch boolean to current state
            entity_id: "input_boolean.{{ person }}_home"
          continue_on_error: true

    - service: automation.turn_on
      target:
        entity_id: "{{ this.entity_id }}"
