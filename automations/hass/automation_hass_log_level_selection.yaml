#######################################################################################################################
## Hass - Log Level Changed
#######################################################################################################################
- id: hass_log_level_changed
  alias: "[Hass] Log Level Changed"
  description: Change system log level to set value.
  initial_state: true
  variables:
    level: "{{ states('input_select.log_level') }}"
  trigger:
    - platform: state
      entity_id: input_select.log_level

  action:
    - service: logger.set_default_level
      data:
        level: "{{ level }}"

    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.supplemental_logging
              state: 'on'

          sequence:
            - service: system_log.write
              data:
                message: "***** HASS LOG LEVEL SET TO : {{ level }} *****"
                level: critical

#######################################################################################################################
## Hass - Component Log Level Changed
#######################################################################################################################
- id: hass_component_log_level_changed
  alias: "[Hass] Component Log Level Changed"
  description: Change component log level to set value.
  initial_state: true
  variables:
    level: "{{ states('input_select.component_log_level') }}"
  trigger:
    - platform: state
      entity_id: input_select.component_log_level

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
      for:
        seconds: 60

  action:
    - choose:
        - conditions: "{{ level == 'default' }}"
          sequence:
            - service: logger.set_level
              data: !include /config/logging/include/component_log_default.yaml

        - conditions: "{{ level == 'info' }}"
          sequence:
            - service: logger.set_level
              data: !include /config/logging/include/component_log_info.yaml

        - conditions: "{{ level == 'warn' }}"
          sequence:
            - service: logger.set_level
              data: !include /config/logging/include/component_log_warn.yaml

        - conditions: "{{ level == 'error' }}"
          sequence:
            - service: logger.set_level
              data: !include /config/logging/include/component_log_error.yaml

        - conditions: "{{ level == 'critical' }}"
          sequence:
            - service: logger.set_level
              data: !include /config/logging/include/component_log_critical.yaml

        - conditions: "{{ level == 'fatal' }}"
          sequence:
            - service: logger.set_level
              data: !include /config/logging/include/component_log_fatal.yaml

        - conditions: "{{ level == 'debug' }}"
          sequence:
            - service: logger.set_level
              data: !include /config/logging/include/component_log_debug.yaml

        - conditions: "{{ level == 'dev' }}"
          sequence:
            - service: logger.set_level
              data: !include /config/logging/include/component_log_dev.yaml

        - conditions: "{{ level == 'custom' }}"
          sequence:
            - service: logger.set_level
              data: !include /config/logging/include/component_log_custom.yaml
    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.supplemental_logging
              state: 'on'

          sequence:
            - service: system_log.write
              data:
                message: "***** COMPONENT LOG LEVEL SET TO : {{ level }} *****"
                level: critical



















