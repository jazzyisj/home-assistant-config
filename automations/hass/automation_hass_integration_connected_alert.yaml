#######################################################################################################################
## Hass - Integration Connected Alert
#######################################################################################################################
- id: hass_integration_connected_alert
  alias: "[Hass] Integration Connected Alert"
  description: Create persistent notification when alert turns on.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: alert.integration_connected
      to: 'on'

  action:
    - service: persistent_notification.create
      data:
        title: Integration Alert
        message: |
          - {{ expand('group.integration_connected_sensors')|selectattr('state','eq','off')|map(attribute='name')|join('\n- ') }}
        notification_id: integration_connected

#######################################################################################################################
## Hass - Close Integration Connected Notifications
#######################################################################################################################
- id: hass_close_integration_connected_notifications
  alias: "[Hass] Close Integration Connected Notifications"
  description: Dismiss notifications on all devices.
  initial_state: true
  mode: single
  #max_exceeded: silent
  trigger:
    - platform: state
      entity_id: alert.integration_connected
      to:
        - idle
        - 'off'

    #BUG from_state of dismissed persistent notifcations is unknown, use state_changed event
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: persistent_notification.integration_connected

    - platform: event
      event_type: mobile_app_notification_cleared
      event_data:
        tag: integration_connected

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: pause_integration_connected

  condition:
    #BUGFIX conditions required as workaround for unknown persistent notification state
    - condition: or
      conditions:
        - "{% if trigger.entity_id is defined %}{{ trigger.entity_id == 'alert.integration_connected' and states('alert.integration_connected') in ['idle','off'] }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['tag'] == 'integration_connected' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_integration_connected' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.event_type == 'state_changed' and not is_state('persistent_notification.integration_connected','notifying') }}{% endif %}"

  action:
    - service: script.close_notifications
      data:
        target: mobile_app_jphone
        tag: integration_connected
        pause: "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_integration_connected' }}{% endif %}"

    - delay:
        seconds: 180 # prevent recursive triggers
