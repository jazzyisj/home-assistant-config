###############################################################################
## Hass - Startup
###############################################################################
- id: hass_startup
  alias: "[Hass] Startup"
  description: "Turn off boolean when devices loaded, send restart notifications."
  trigger:
    - platform: homeassistant
      event: start
  action:
    - action: system_log.write
      data:
        logger: "{{ this.entity_id }}"
        level: critical
        message: "**** HOME ASSISTANT START ****"

    - action: persistent_notification.create
      data:
        title: "Automation Startup"
        message: "Waiting for startup to complete."
        notification_id: hass_restart

    # wait for entities to initialize before continuing
    # use offline zwave devices sensor - binary sensor will always be on at startup
    - wait_template: >
        {{ is_state('input_boolean.startup_pending', 'off')
            or (is_state('binary_sensor.wan', 'on')
              and is_state('sensor.offline_integrations', '0')
              and is_state('binary_sensor.zwave_network', 'on')
              and states('sensor.offline_zwave_devices') | int(-1) == 0) }}
      timeout:
        minutes: 5

    - action: input_boolean.turn_off
      entity_id: input_boolean.startup_pending

    - action: persistent_notification.create
      data:
        title: &start_title "HASS Restarted"
        message: &start_message "Restarted at {{ now().strftime('%-I:%M %p') }}."
        notification_id: hass_restart

    - if:
        - condition: state
          entity_id: input_boolean.hass_alerts
          state: "on"
      then:
        - action: notify.jason
          data:
            title: *start_title
            message: *start_message
            data:
              tag: hass_restart
              group: System
              icon_url: !secret HASS_ICON
              clickAction: /ui-mobile/home

        - if:
            - condition: state
              entity_id:
                - binary_sensor.wan # push causes error if no wan
                - binary_sensor.jason_home
              state: "on"

            - condition: state
              entity_id: device_tracker.jason_laptop_wifi
              state: home
          then:
            - action: notify.push
              data:
                title: *start_title
                message: *start_message
                target: jlaptop_external
                data:
                  tag: hass_restart
                  timestamp: "{{ now().timestamp() }}"
                  renotify: true
                  silent: true
                  requireInteraction: false
                  url: /lovelace
                  icon: !secret HASS_ICON
                  badge: !secret HASS_BADGE
                  actions:
                    - title: "Dismiss"
                      action: dismiss_hass_restart

    - action: system_log.write
      data:
        logger: "{{ this.entity_id }}"
        level: critical
        message: "**** HOME ASSISTANT STARTUP COMPLETE ****"

###############################################################################
## Hass - Shutdown
###############################################################################
- id: hass_shutdown
  alias: "[Hass] Shutdown"
  description: "Actions to perform on Hass shutdown."
  trigger:
    - platform: homeassistant
      event: shutdown
  action:
    - action: system_log.write
      data:
        logger: "{{ this.entity_id }}"
        level: critical
        message: "**** HOME ASSISTANT STOP ****"

###############################################################################
## Hass - Clear Restart Notification
###############################################################################
- id: hass_clear_restart_notification
  alias: "[Hass] Clear Restart Notification"
  description: "Clear notification."
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: html5_notification.closed
      event_data:
        tag: hass_restart

    - platform: event
      event_type: html5_notification.clicked
      event_data:
        action: dismiss_hass_restart

    - platform: event
      event_type: mobile_app_notification_cleared
      event_data:
        tag: hass_restart
  action:
    - action: notify.jason
      data:
        message: clear_notification
        data:
          tag: hass_restart

    - action: html5.dismiss
      data:
        data:
          tag: hass_restart

    - action: persistent_notification.dismiss
      data:
        notification_id: hass_restart

    - delay: # prevent recursive triggers
        seconds: 60
