###################################################################################################
## Update Unavailable Entities
###################################################################################################
- id: update_rapid_hass_entities
  alias: "Update Rapid HASS Entities"
  description: "Rapid update hass entity groups."
  mode: single
  max_exceeded: silent
  triggers:
    - trigger: homeassistant
      id: startup
      event: start

    - trigger: event
      event_type: call_service
      event_data:
        domain: group
        service: reload

    - trigger: time_pattern
      minutes: "/1"
  actions:
    - action: group.set
      data:
        object_id: unavailable_entities_filtered
        #TEMP exclude garage_inside - cam not working
        #TEMP exclude front_door_lock - lock not working
        #TEMP dlna_dmr - not being used
        # browser_mod - unknown when not active
        # balboa - hub cycles offline
        # wyze device - charlie/living room, turned off often
        # charlie_cam/living_room - frigate, cams are turned off,
        # ffmpeg_cpu_usage # frigate, often unknown
        # next_cycle - hydrawise, unknown when suspended
        # door_lock - unavailable until triggered
        # timers/alarms/next_alarm - google home, unknown when not set
        # media_artist/album - mass, unknown when not set
        # network throughput - unknown when not active
        # hp_color_laserjet_pro - unknown when not online
        entities: >
          {% set disabled = state_attr('sensor.disabled_device_entities', 'entities')
              | regex_replace(find='\[|\]|\{|\}|\'entity_id\':', replace='') %}
          {{ states
              | selectattr('state', 'in', ['unknown', 'unavailable'])
              | rejectattr('domain', 'in', ['button', 'conversation', 'device_tracker', 'event', 'group', 'image', 'input_button', 'input_text', 'remote', 'tts', 'scene', 'stt'])
              | rejectattr('entity_id', 'in', disabled)
              | rejectattr('entity_id', 'in', state_attr('group.ignored_unavailable_entities', 'entity_id'))
              | rejectattr('entity_id', 'in', integration_entities('browser_mod'))
              | rejectattr('entity_id', 'in', integration_entities('hassio'))
              | rejectattr('entity_id', 'in', integration_entities('dlna_dmr'))
              | rejectattr('entity_id', 'in', integration_entities('balboa'))
              | rejectattr('entity_id', 'in', integration_entities('unifi'))
              | rejectattr('entity_id', 'in', device_entities('3e74fe75b2372bbafe49b9642b97d322'))
              | rejectattr('entity_id', 'in', device_entities('95775b8130a626f30b27207298764c44'))
              | rejectattr('entity_id', 'contains', '_next_cycle')
              | rejectattr('entity_id', 'search', 'sensor.system_monitor_network_')
              | rejectattr('entity_id', 'search', 'charlie_cam_camera|living_room_camera|ffmpeg_cpu_usage')
              | rejectattr('entity_id', 'search', '_door_lock_intrusion|_door_lock_lock_jammed|_door_lock_keypad_temporary_disabled|_door_lock_system_hardware_failure')
              | rejectattr('entity_id', 'search', '_timers|_alarms|_next_alarm')
              | rejectattr('entity_id', 'search', 'select.media_artist_filter|select.media_album_filter')
              | rejectattr('entity_id', 'contains', 'hp_color_laserjet_pro')
              | rejectattr('entity_id', 'contains', 'garage_inside')
              | rejectattr('entity_id', 'contains', 'front_door_lock')
              | map(attribute='entity_id') | list | sort }}

    - action: group.set
      data:
        object_id: unknown_browsers
        entities: >
          {{ expand('group.connected_browsers')
              | selectattr('attributes.authorized', 'ne', true)
              | map(attribute='entity_id')
              | select('has_value') | list | sort }}

    - action: group.set
      data:
        object_id: offline_integrations
        entities: >
          {{ expand('group.integration_connected_sensors') | selectattr('state', 'in', ['off', 'unknown', 'unavailable'])
              | map(attribute='entity_id') | list | sort }}

###################################################################################################
## Update HASS Group Entities
###################################################################################################
- id: update_hass_group_entities
  alias: "Update HASS Group Entities"
  description: "Update HASS and miscellaneous entity groups."
  mode: single
  max_exceeded: silent
  triggers:
    - trigger: homeassistant
      id: startup
      event: start

    - trigger: event
      event_type: call_service
      event_data:
        domain: group
        service: reload

    - trigger: time_pattern
      minutes: "/15"
  actions:
    - action: group.set
      data:
        object_id: hass_alerts
        entities: >
          {{ states.alert
              | selectattr('attributes.category', 'in',
                  ['hass', 'network', 'system', 'zwave', 'bluetooth'])
                  | map(attribute='entity_id') | list | sort }}

    - action: group.set
      data:
        object_id: low_batteries
        entities: >
          {% set low_batteries = namespace(value=[]) %}
          {% set batteries = expand(integration_entities('battery_notes'))
              | selectattr('domain', 'eq', 'sensor')
              | selectattr('attributes.device_class', 'eq', 'battery')
              | map(attribute='entity_id') | list | sort %}
          {% for item in batteries %}
            {% if states(item) == 'on' or (states(item) | int(-1) != -1 and states(item) | int(0)
                < states('input_number.battery_alert_threshold') | int) %}
              {% set low_batteries.value = low_batteries.value + [item] %}
            {% endif %}
          {% endfor %}
          {{ low_batteries.value }}

    - action: group.set
      data:
        object_id: available_updates
        entities: >
          {{ states.update
              | selectattr('state', 'eq', 'on')
              | map(attribute='entity_id') | list | sort }}

    - action: group.set
      data:
        object_id: connected_browsers
        entities: >
          {{ states.sensor
              | selectattr('entity_id', 'contains', '_browser_user')
              | rejectattr('entity_id', 'contains', '_browser_useragent')
              | map(attribute='entity_id') | select('has_value') | list | sort }}

    - action: group.set
      data:
        object_id: integration_connected_sensors
        entities: >
          {{ states.binary_sensor
              | selectattr('entity_id', 'contains', '_integration_connected')
              | map(attribute='entity_id')
              | select('has_value') | list | sort }}

    - action: group.set
      data:
        object_id: add_on_memory_sensors
        entities: >
          {{ expand(integration_entities('hassio'))
              | selectattr('entity_id', 'contains', '_memory_percent')
              | rejectattr('entity_id', 'in', ['sensor.home_assistant_core_memory_percent',
                  'sensor.home_assistant_supervisor_memory_percent'])
              | map(attribute='entity_id')
              | select('has_value') | list | sort }}

    - action: group.set
      data:
        object_id: add_on_cpu_sensors
        entities: >
          {{ expand(integration_entities('hassio'))
              | selectattr('entity_id', 'contains', '_cpu_percent')
              | rejectattr('entity_id', 'in', ['sensor.home_assistant_core_cpu_percent',
                  'sensor.home_assistant_supervisor_cpu_percent'])
              | map(attribute='entity_id')
              | select('has_value') | list | sort }}

    - action: group.set
      data:
        object_id: google_home_timers
        entities: >
          {{ states.sensor | selectattr('attributes.integration', 'eq', 'google_home')
              | selectattr('entity_id', 'contains', 'timer')
              | map(attribute='entity_id') | list
              | select('has_value') | sort }}
