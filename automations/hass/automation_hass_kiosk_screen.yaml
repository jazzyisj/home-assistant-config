###############################################################################
## Hass - Kiosk Screen On
###############################################################################
- id: hass_kiosk_screen_on
  alias: "[Hass] Kiosk Screen On"
  description: "Turn kiosk screen on and adjust brightness."
  max_exceeded: silent
  variables:
    brightness: >
      {% if is_state('input_select.occupancy_mode','Night') %} 50
      {% elif is_state('binary_sensor.quiet_time','on') %} 125
      {% else %} 255
      {% endif %}
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
        - Night

    - platform: state
      entity_id: binary_sensor.kiosk_connected
      to: "on"
      from: "off"

    - platform: state
      id: motion
      entity_id: binary_sensor.kiosk_motion
      to: "on"
      from: "off"

    - platform: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.quiet_time
      to:
        - "on"
        - "off"
      from:
        - "on"
        - "off"
  condition:
    - condition: state
      entity_id:
        - binary_sensor.someone_home
        - binary_sensor.kiosk_connected
      state: "on"
  action:
    - if: "{{ state_attr('light.kiosk_internal_screen','brightness')|int(0) != brightness }}"
      then:
        - service: light.turn_on
          target:
            entity_id: light.kiosk_internal_screen
          data:
            brightness: "{{ brightness }}"

    #VERIFY visibility sensor not reliable
    - if: "{{ is_state('sensor.kiosk_internal_browser_visibility','hidden') }}"
      then:
        - service: button.press
          target:
            entity_id: button.fire_tablet_bring_to_foreground

###############################################################################
## Hass - Kiosk Screen Off
###############################################################################
- id: hass_kiosk_screen_off
  alias: "[Hass] Kiosk Screen Off"
  description: "Kiosk screen off."
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Night
        - Vacation
      for:
        minutes: 5

    - platform: state
      id: motion
      entity_id: binary_sensor.kiosk_motion
      to: "off"
      from: "on"
      for:
        minutes: 5
  condition:
    - condition: state
      entity_id: binary_sensor.kiosk_connected
      state: "on"

    - condition: template
      alias: "Occupancy mode is Night, Away, or Vacation"
      value_template: "{{ states('input_select.occupancy_mode') in ['Night','Away','Vacation'] }}"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.fire_tablet_screen
