###############################################################################
## Hass - Kiosk Screen Reset
###############################################################################
- id: hass_kiosk_screen_reset
  alias: "[Hass] Kiosk Screen Reset"
  description: "Toggle screen to reset MQTT screen sensor."
  trigger:
    - platform: homeassistant
      id: startup
      event: start

    - platform: state
      entity_id: binary_sensor.kiosk_screen
      to: unknown #VERIFY
  condition:
    - condition: state
      entity_id: binary_sensor.kiosk_online
      state: "on"
  action:
    - if: "{{ trigger.id == 'startup' }}"
      then:
        - delay:
            minutes: 5

    # toggle screen switch to populate MQTT screen on sensor
    - service: switch.turn_off
      continue_on_error: true
      target:
        entity_id: switch.fire_tablet_screen

    - service: switch.turn_on
      continue_on_error: true
      target:
        entity_id: switch.fire_tablet_screen

###############################################################################
## Hass - Kiosk Screen On
###############################################################################
- id: hass_kiosk_screen_on
  alias: "[Hass] Kiosk Screen On"
  description: "Turn kiosk screen on and adjust brightness."
  max_exceeded: silent
  variables:
    brightness: >
      {% if is_state('input_select.occupancy_mode','Night') %} 50
      {% elif is_state('binary_sensor.quiet_time','on') %} 125
      {% else %} 255
      {% endif %}
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
        - Night

    - platform: state
      entity_id:
        - binary_sensor.kiosk_online
        - binary_sensor.kiosk_motion
      to: "on"

    - platform: state
      entity_id: binary_sensor.quiet_time
      to:
        - "on"
        - "off"

    - platform: state
      entity_id: input_boolean.alarm_triggered
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.kiosk_online
      state: "on"
  action:
    - if: "{{ states('number.fire_tablet_screen_brightness')|int(0) != brightness }}"
      then:
        - service: switch.turn_on
          target:
            entity_id: switch.fire_tablet_screen

        - service: number.set_value
          target:
            entity_id: number.fire_tablet_screen_brightness
          data:
            value: "{{ brightness }}"

    - service: button.press
      target:
        entity_id: button.fire_tablet_bring_to_foreground

###############################################################################
## Hass - Kiosk Screen Off
###############################################################################
- id: hass_kiosk_screen_off
  alias: "[Hass] Kiosk Screen Off"
  description: "Kiosk screen off."
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 5

    - platform: state
      id: motion
      entity_id: binary_sensor.kiosk_motion
      to: "off"
      from: "on"
      for:
        minutes: 5
  condition:
    - condition: state
      entity_id: binary_sensor.kiosk_online
      state: "on"

    - condition: template
      alias: "Occupancy mode is Away, or Vacation"
      value_template: "{{ states('input_select.occupancy_mode') in ['Away','Vacation'] }}"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.fire_tablet_screen
