###############################################################################
## Hass - Kiosk Screen On
###############################################################################
- id: hass_kiosk_screen_on
  alias: '[Hass] Kiosk Screen On'
  description: 'Turn kiosk screen on and adjust brightness.'
  variables:
    current: "{{ (state_attr('light.fire_tablet_screen','brightness')|int(-1)/2.55)|int(-1) }}"
    brightness_pct: >
      {% if is_state('input_select.occupancy_mode','Night') %} 30
      {% elif is_state('binary_sensor.quiet_time','on') %} 50
      {% else %} 80
      {% endif %}
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
        - Night

    - platform: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.quiet_time
      to:
        - 'on'
        - 'off'
      from:
        - 'on'
        - 'off'
  condition:
    - condition: state
      entity_id:
        - binary_sensor.someone_home
        - binary_sensor.kiosk_connected
      state: 'on'

    - condition: template
      alias: 'Brightness below set value'
      value_template: '{{ current != brightness_pct }}'
  action:
    - service: light.turn_on
      target:
        entity_id: light.fire_tablet_screen
      data:
        brightness_pct: '{{ brightness_pct }}'

###############################################################################
## Hass - Kiosk Screen Off
###############################################################################
- id: hass_kiosk_screen_off
  alias: '[Hass] Kiosk Screen Off'
  description: 'Kiosk screen off.'
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
  condition:
    - condition: state
      entity_id: binary_sensor.kiosk_connected
      state: 'on'
  action:
    - service: light.turn_off
      target:
        entity_id: light.fire_tablet_screen
