#######################################################################################################################
## Hass - Unavailable Sensor Alert
#######################################################################################################################
- id: hass_unavailable_sensor_alert
  alias: "[Hass] Unavailable Sensor Alert"
  description: Create persistent notification when alert turns on.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: alert.unavailable_sensor
      to: 'on'

  action:
    - service: persistent_notification.create
      data:
        title: Unavailable Sensors
        message: >
          {%- if states.sensor.unavailable_sensors.attributes.entities is defined -%}
          {%- if states('sensor.unavailable_sensors')|int == 0 -%}
          No unavailable entities.
          {%- else -%}
          There are currently unavailable sensors.
          {%- for device in state_attr('sensor.unavailable_sensors','entities') %}
            - {{ state_attr(device,'friendly_name') }}
          {% endfor -%}
          {%- endif -%}
          {%- endif -%}
        notification_id: unavailable_sensor

#######################################################################################################################
## Hass - Close Unavailable Sensor Notifications
#######################################################################################################################
- id: hass_close_unavailable_sensor_notifications
  alias: "[Hass] Close Unavailable Sensor Notifications"
  description: Dismiss notifications on all devices.
  initial_state: true
  mode: single
  #max_exceeded: silent
  trigger:
    - platform: state
      entity_id: alert.unavailable_sensor
      to:
        - idle
        - 'off'

     #BUG from_state of dismissed persistent notifcations is unknown, use state_changed event
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: persistent_notification.unavailable_sensor

    - platform: event
      event_type: mobile_app_notification_cleared
      event_data:
        tag: unavailable_sensor

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: pause_unavailable_sensor

  condition:
    #BUGFIX conditions required as workaround for unknown persistent notification state
    - condition: or
      conditions:
        - "{% if trigger.entity_id is defined %}{{ trigger.entity_id == 'alert.unavailable_sensor' and states('alert.unavailable_sensor') in ['idle','off'] }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['tag'] == 'unavailable_sensor' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_unavailable_sensor' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.event_type == 'state_changed' and not is_state('persistent_notification.unavailable_sensor','notifying') }}{% endif %}"

  action:
    - service: script.close_notifications
      data:
        target: mobile_app_jphone
        tag: unavailable_sensor
        pause: "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_unavailable_sensor' }}{% endif %}"

    - delay:
        seconds: 180 # prevent recursive triggers
