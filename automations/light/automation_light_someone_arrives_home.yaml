#######################################################################################################################
## Light - Someone Arrives Home
#######################################################################################################################
- id: light_someone_arrives_home
  alias: "[Light] Someone Arrives Home"
  description: "Save current light scene, turn on arrive home lights."
  mode: restart
  variables:
    prev_mode: "{{ states('input_select.previous_occupancy_mode') }}"
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.jason_home
        - binary_sensor.sheri_home
        - input_boolean.guest_home
      to: 'on'
      from: 'off'
  condition:
    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - input_boolean.startup_pending
      state: 'off'

    - condition: state
      entity_id:
        - input_boolean.presence_automation
        - input_boolean.light_automation
      state: 'on'
  action:
    - choose:
        - conditions: "{{ states('input_select.occupancy_mode') not in ['Home','Guest'] }}"
          sequence:
            - wait_template: "{{ states('input_select.occupancy_mode') in ['Home','Guest'] }}"
              timeout:
                seconds: 5

    - service: scene.create
      data:
        scene_id: arrive_home_lights_restore
        entities: # do not restore dining room rgb light
          light.kitchen_potlights:
            state: "{{ states('light.kitchen_potlights') }}"
            brightness: "{{ state_attr('light.kitchen_potlights','brightness')|int(0) }}"
          light.dining_room_potlights:
            state: "{{ states('light.dining_room_potlights') }}"
            brightness: "{{ state_attr('light.dining_room_potlights','brightness')|int(0) }}"
          light.upstairs_hallway_potlights:
            state: "{{ states('light.upstairs_hallway_potlights') }}"
            brightness: "{{ state_attr('light.upstairs_hallway_potlights','brightness')|int(0) }}"

    - service: timer.start
      entity_id: timer.arrive_home_lights

    - choose: # always turn side entrance light on, restart in use timer if already on
        - conditions:
            - condition: state
              entity_id: light.side_entrance_light
              state: 'on'
          sequence:
            - service: timer.start
              entity_id: timer.side_entrance_light
      default:
        - service: light.turn_on
          target:
            entity_id: light.side_entrance_light

    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.nighttime_auto_light
              state: 'on'
          sequence:
            - service: light.turn_on
              target:
                entity_id: light.upstairs_potlights
              data:
                brightness: >
                  {% set b = state_attr('light.upstairs_hallway_potlights','brightness')|int(0) %}
                  {% if is_state('input_select.occupancy_mode','Night') %} 5
                  {% elif is_state('binary_sensor.quiet_hours','on') %} 20
                  {% elif b < 90 %} 90
                  {% else %}{{ b }}
                  {% endif %}

            - choose:
                - conditions: "{{ prev_mode in ['Away','Vacation'] }}"
                  sequence:
                    - service: light.turn_on
                      target:
                        entity_id: light.dining_room_rgb_light
                      data:
                        brightness: 90

    - alias: "Wait for arrive home timer to finish"
      wait_for_trigger:
        - platform: state
          entity_id: timer.arrive_home_lights
          to: 'idle'

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: template  # don't restore if nobody was home (lights were off)
      alias: "Previous occupancy mode is home or guest"
      value_template: "{{ prev_mode == 'Home','Guest' }}"

#NOTE if running when restarted, timer restarts and fires this but no restore scene!
#WARNING (MainThread) [homeassistant.helpers.service] Unable to find referenced entities scene.arrive_home_lights_restore

    - service: script.activate_scene
      data:
        scene: arrive_home_lights_restore
