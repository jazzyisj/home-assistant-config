#######################################################################################################################
## Light - LED Notification
#######################################################################################################################
- id: light_led_notification
  alias: "[Light] LED Notification"
  description: Set LED notification.
  initial_state: true
  mode: queued
  max: 25
  max_exceeded: error
  variables:
    alert_type: > # if trigger is switch/dimmer go to update
      {% if is_state('alarm_control_panel.alarmo','triggered') %} triggered
      {% elif is_state('input_boolean.alarm_triggered','on') %} was_triggered
      {% elif trigger.entity_id == 'input_boolean.alarm_triggered' %} reset
      {% elif trigger.entity_id in ['alarm_control_panel.alarmo','binary_sensor.open_sensor',
          'alert.door_lock_jammed','alert.door_lock_failed'] %} alarm
      {% elif trigger.entity_id in ['binary_sensor.jason_home','binary_sensor.sheri_home','input_boolean.jason_almost_home',
          'input_boolean.sheri_almost_home','proximity.jhome','proximity.shome'] %} presence
      {% elif trigger.entity_id in ['cover.garage_door_opener','alert.garage_door_not_closed','alert.garage_door_open',
          'binary_sensor.garage_door_connected','input_boolean.garage_door_switch_alert'] %} garage
      {% elif trigger.entity_id == 'binary_sensor.alarm_clock_active' %} alarm_clock
      {% elif trigger.entity_id in ['binary_sensor.outdoor_high_temperature_alert','binary_sensor.outdoor_low_temperature_alert',
          'binary_sensor.storm_approaching_alert','binary_sensor.envcan_alert','binary_sensor.noaa_alert',
          'binary_sensor.weather_led_alert'] %} weather
      {% elif trigger.entity_id in ['input_boolean.bedtime_delayed','binary_sensor.bedtime_active'] %} bedtime
      {% elif trigger.entity_id in ['input_boolean.maddie_mealtime_active','input_boolean.dexter_medication_active',
          'input_boolean.jason_medication_active'] %} reminder
      {% elif trigger.entity_id == 'input_boolean.mute_all' %} media
      {% elif trigger.entity_id == 'script.start_shower' %} shower
      {% elif trigger.entity_id == 'input_boolean.startup_pending' %} hass
      {% else %} update
      {% endif %}
    update: > # in priority order, no alert -> turn effect off
      {% if alert_type == 'update' %}
        {% set trigger_id = trigger.entity_id|replace('_rgb','') %}
        {% if is_state('binary_sensor.presence_led_alert','on') and is_state_attr(trigger_id,'led_presence',true) %} presence
        {% elif is_state('binary_sensor.alarm_clock_active','on') %} alarm_clock
        {% elif is_state('script.start_shower','on') and is_state_attr(trigger_id,'led_shower',true) %} shower
        {% elif is_state('binary_sensor.reminder_led_alert','on') and is_state_attr(trigger_id,'led_reminder',true) %} reminder
        {% elif is_state('binary_sensor.garage_led_alert','on') and is_state_attr(trigger_id,'led_garage',true) %} garage
        {% elif is_state('binary_sensor.weather_led_alert','on') and is_state_attr(trigger_id,'led_weather',true) %} weather
        {% elif is_state('binary_sensor.media_led_alert','on') and is_state_attr(trigger_id,'led_media',true) %} media
        {% elif is_state('binary_sensor.bedtime_led_alert','on') and is_state_attr(trigger_id,'led_bedtime',true) %} bedtime
        {% elif is_state_attr(trigger_id,'led_alarm',true)  %} alarm
        {% else %} reset
        {% endif %}
      {% endif %}
    rgb_lights: "{{ states.light|selectattr('attributes.rgb_light','eq','master')|map(attribute='entity_id')|list }}"
    entities: >
      {% if alert_type in ['triggered','was_triggered','reset'] %}
        {{ states.light|selectattr('attributes.notify_led','eq',true)|map(attribute='entity_id')|list }}
      {% elif alert_type != 'update' %}
        {{ states.light|selectattr('attributes.led_' ~ alert_type,'eq',true)|map(attribute='entity_id')|list }}
      {% else %}
        {% if trigger.entity_id in rgb_lights %}
          {{ trigger.entity_id|replace('_rgb','') }}
        {% else %}
          {{ trigger.entity_id }}
        {% endif %}
      {% endif %}
  trigger:
    - platform: state
      entity_id:
        - switch.back_yard_garden_light
        - switch.kitchen_sink_light

        - light.dining_room_rgb_light
        - light.upstairs_bathroom_vanity_rgb_light
        - light.upstairs_bedroom_rgb_light

        - light.side_entrance_light
        - light.living_room_cove_light
        - light.kitchen_potlights
        - light.dining_room_potlights
        - light.master_bedroom_light
        - light.upstairs_hallway_potlights
        - light.upstairs_bathroom_shower_light
        - light.master_bedroom_light
        - light.office_light
        - light.office_potlights
        - light.upstairs_bedroom_potlights
        - light.outside_garage_lights
        - light.front_porch_light
        - light.front_house_potlights
        - light.back_house_potlights
        - light.back_yard_tree_floodlights

        - binary_sensor.jason_home
        - binary_sensor.sheri_home

        - cover.garage_door_opener
        - alert.garage_door_not_closed
        - alert.garage_door_open
        - binary_sensor.garage_door_connected
        - input_boolean.garage_door_switch_alert

        - binary_sensor.outdoor_high_temperature_alert
        - binary_sensor.outdoor_low_temperature_alert
        - binary_sensor.storm_approaching_alert
        - binary_sensor.envcan_alert
        - binary_sensor.noaa_alert

        - input_boolean.bedtime_delayed
        - binary_sensor.bedtime_active

        - binary_sensor.alarm_clock_active

        - input_boolean.maddie_mealtime_active
        - input_boolean.dexter_medication_active
        - input_boolean.jason_medication_active

        - input_boolean.mute_all

        - input_boolean.alarm_triggered # on-was_triggered, off-reset
        - binary_sensor.open_sensor
        - alert.door_lock_jammed
        - alert.door_lock_failed

    - platform: state
      entity_id: script.start_shower
      to:
        - 'on'
        - 'off'
      from: # triggers when scripts reloaded
        - 'on'
        - 'off'

    - platform: state
      entity_id: alarm_control_panel.alarmo
      to: # triggered covered by input_boolean.alarm_triggered
        - armed_home
        - armed_night
        - armed_away
        - arming
        - pending
        - disarmed
      for: 2 # avoid triggering on temp state changes

    - platform: state
      entity_id:
        - input_boolean.jason_almost_home
        - input_boolean.sheri_almost_home
      for: 2 # prevent trigger on temporary state changes

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  condition:
    # don't trigger on anything but input_boolean.alarm_triggered is alarm is triggered
    - "{{ trigger.entity_id == 'input_boolean.alarm_triggered' if is_state('alarm_control_panel.alarmo','triggered') else true }}"
    # trigger on everything else except alarm,input_boolean.alarm_triggered only if input_boolean.alarm_triggered is off
    - "{{ is_state('input_boolean.alarm_triggered','off') if trigger.entity_id not in ['input_boolean.alarm_triggered','alarm_control_panel.alarmo'] else true }}"
  action:
    # - service: system_log.write
    #   data:
    #     logger: automation.light_led_notification
    #     level: critical
    #     message: |
    #       *
    #       entities: {{ entities }}
    #       alert_type: {{ alert_type }}
    #       update: {{ update }}
    #       trigger: {{ trigger.entity_id }}

    - choose: # reset leds
        - conditions: "{{ alert_type == 'reset' }}"
          sequence:
            - service: script.led_reset # must finish before script.led_notification runs
      default:
        - choose:
            - conditions: "{{ alert_type != 'update' or update not in ['',empty] }}"
              sequence:
                - choose:
                    - conditions: "{{ alert_type == 'hass' }}"
                      sequence:
                        - service: script.led_reset # must finish before script.led_notification runs
                        - delay: 5

                - service: script.turn_on
                  data:
                    entity_id: script.led_notification
                    variables:
                      entities: "{{ entities }}"
                      alert_type: "{{ alert_type if alert_type != 'update' else update }}"
          default:
            - service: script.turn_on
              data:
                entity_id: script.led_notification
                variables:
                  entities: "{{ entities }}"
                  alert_type: 'off'