#######################################################################################################################
## Light - Dining Room Light LED
#######################################################################################################################
- id: light_dining_room_light_led
  alias: "[Light] Dining Room Light LED"
  description: Renotify LED.
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      entity_id: light.dining_room_light

    - platform: state
      entity_id: binary_sensor.emergency_active

  condition:
    - condition: state
      entity_id: zwave.dining_room_light
      state: ready

  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.emergency_active
              state: 'on'

          sequence:
            - service: zwave.set_config_parameter
              data:
                node_id: "{{ state_attr('zwave.dining_room_light','node_id')|int }}"
                parameter: 16
                size: 4
                value: 67046143 # color: 255 , brightness 10, duration forever, fastblink

      default:
        - service: zwave.set_config_parameter
          data:
            node_id: "{{ state_attr('zwave.dining_room_light','node_id')|int }}"
            parameter: 16
            size: 4
            value: !include /config/include/template/led_weather_alert.yaml

#######################################################################################################################
## Light - Dining Room Light Nobody Home
#######################################################################################################################
- id: light_dining_room_light_nobody_home
  alias: "[Light] Dining Room Light Nobody Home"
  description: Turn light on when nobody is home.
  initial_state: true
  mode: single
  variables:
    current: "{{ state_attr('light.dining_room_rgb_light','brightness')|int }}"
    default: 90
    quiet: 30
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 10 # must be after away mode has run

    - platform: time_pattern
      minutes: '/15'

  condition:
    - condition: state
      entity_id:
        - input_boolean.light_automation
        - input_boolean.presence_automation
        - binary_sensor.auto_light_on
      state: 'on'

    - condition: state
      entity_id:
        - binary_sensor.emergency_active
        - input_boolean.alarm_triggered
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Away
        - Vacation

  action:
    - service: light.turn_on
      data:
        entity_id: light.dining_room_rgb_light
        brightness: "{{ quiet if is_state('binary_sensor.quiet_hours','on') else default }}"

#######################################################################################################################
## Light - Dining Room Light Auto On
#######################################################################################################################
- id: light_dining_room_light_auto_on
  alias: "[Light] Dining Room Light Auto On"
  description: Turn on lights.
  initial_state: true
  mode: single
  variables:
    current: "{{ state_attr('light.dining_room_rgb_light','brightness')|int }}"
    default: 90
    quiet: 30
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.auto_light_on
        - binary_sensor.illuminance_light_on
      to: 'on'

    - platform: state
      entity_id: binary_sensor.quiet_hours

    # delay to allow warning lights scene to save
    - platform: state
      entity_id: alarm_control_panel.house
      to: warning
      for:
        seconds: 5 # allow timer to cancel, occupant to leave

    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      for:
        seconds: 5 # allow light scripts to start

  condition:
    - condition: state
      entity_id: input_boolean.light_automation
      state: 'on'

    - condition: template
      value_template: >
        {% if trigger.entity_id == 'input_select.occupancy_mode' %}{{ is_state('input_boolean.presence_automation','on') }}
        {% elif trigger.entity_id == 'alarm_control_panel.house' %}{{ is_state('input_boolean.alarm_automation','on') }}
        {% else %} true
        {% endif %}

    - condition: state
      entity_id:
        - binary_sensor.emergency_active
        - input_boolean.alarm_triggered
      state: 'off'

    - condition: state
      entity_id: binary_sensor.light_scene_active
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest

    - condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.auto_light_on
          state: 'on'

        - condition: state
          entity_id: binary_sensor.illuminance_light_on
          state: 'on'

        - condition: state
          entity_id: alarm_control_panel.house
          state: warning

    - condition: template
      value_template: "{{ is_state('alarm_control_panel.house','warning') or (current > quiet if trigger.entity_id == 'binary_sensor.quiet_hours' else current < default) }}"

  action:
    - service: light.turn_on
      data:
        entity_id: light.dining_room_rgb_light
        brightness: "{{ default if is_state('alarm_control_panel.house','warning') else (quiet if is_state('binary_sensor.quiet_hours','on') else default) }}"

#######################################################################################################################
## Light - Dining Room Light Auto Off
#######################################################################################################################
- id: light_dining_room_light_auto_off
  alias: "[Light] Dining Room Light Auto Off"
  description: Turn off lights.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.auto_light_on
        - binary_sensor.illuminance_light_on
      to: 'off'

    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
        - Night
      for:
        minutes: 5 # allow timer to cancel, occupant to leave

  condition:
    - condition: state
      entity_id: input_boolean.light_automation
      state: 'on'

    - condition: template
      value_template: "{{ is_state('input_boolean.presence_automation','on') if trigger.entity_id == 'input_select.occupancy_mode' else true }}"

    - condition: state
      entity_id:
        - binary_sensor.emergency_active
        - input_boolean.alarm_triggered
      state: 'off'
      
    - condition: state
      entity_id: binary_sensor.light_scene_active
      state: 'off'

  action:
    - service: light.turn_off
      entity_id: light.dining_room_rgb_light

