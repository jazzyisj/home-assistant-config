#######################################################################################################################
## Light - Front Porch Light Nobody Home
#######################################################################################################################
- id: light_front_porch_light_nobody_home #OCC
  alias: "[Light] Front Porch Light Nobody Home"
  description: "Turn light on when nobody is home."
  variables:
    current: "{{ state_attr('light.front_porch_light','brightness')|int(0) }}"
    brightness: >
      {% if is_state('binary_sensor.quiet_hours','on') %}
        {{ 80 if current > 80 or current == 0 else current }}
      {% else %}
        {{ 125 if current < 125 else current }}
      {% endif %}
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_auto_light
      to: 'on'

    - platform: state
      id: quiet
      entity_id: binary_sensor.quiet_hours

    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # must be after away mode has run

    - platform: time_pattern
      minutes: '/15'
  condition:
    - condition: state
      entity_id:
        - input_boolean.light_automation
        - input_boolean.presence_automation
        - binary_sensor.nighttime_auto_light
      state: 'on'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Away
        - Vacation

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: template
      alias: "Light not on and already at set brightness."
      value_template: "{{ brightness != current if current > 0 else true }}"

    - condition: template
      alias: 'Light is on if trigger is quiet hours light.'
      value_template: "{{ is_state('light.front_porch_light','on') if trigger.id == 'quiet' else true }}"
  action:
    - service: light.turn_on
      target:
        entity_id: light.front_porch_light
      data:
        brightness: "{{ brightness }}"
        transition: 5

#######################################################################################################################
## Light - Front Porch Light Auto On
#######################################################################################################################
- id: light_front_porch_light_auto_on #OCC
  alias: "[Light] Front Porch Light Auto On"
  description: "Turn on light."
  max_exceeded: silent
  variables:
    current: "{{ state_attr('light.front_porch_light','brightness')|int(0) }}"
    brightness: >
      {% if is_state('binary_sensor.quiet_hours','on') %}
        {{ 80 if current > 80 or current == 0 else current }}
      {% else %}
        {{ 125 if current < 125 else current }}
      {% endif %}
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_auto_light
      to: 'on'

    - platform: state
      id: quiet
      entity_id: binary_sensor.quiet_hours

    - platform: state
      id: presence
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
        - Night
      from:
        - Away
        - Vacation
      for:
        seconds: 5 # allow scene_active to turn on
  condition:
    - condition: state
      entity_id:
        - input_boolean.light_automation
        - binary_sensor.nighttime_auto_light
      state: 'on'

    - condition: template
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
            if trigger.id == 'presence' else true }}

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest
        - Night

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: template
      alias: "Light not on and already at set brightness."
      value_template: "{{ brightness != current if current > 0 else true }}"

    - condition: template
      alias: 'Light is on if trigger is quiet hours light.'
      value_template: "{{ is_state('light.front_porch_light','on') if trigger.id == 'quiet' else true }}"
  action:
    - service: light.turn_on
      target:
        entity_id: light.front_porch_light
      data:
        brightness: "{{ brightness }}"
        transition: 5

#######################################################################################################################
## Light - Front Porch Light Auto Off
#######################################################################################################################
- id: light_front_porch_light_auto_off #OCC
  alias: "[Light] Front Porch Light Auto Off"
  description: "Turn off light."
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_auto_light
      to: 'off'
  condition:
    - condition: state
      entity_id:
        - light.front_porch_light
        - input_boolean.light_automation
      state: 'on'

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'
  action:
    - service: light.turn_off
      target:
        entity_id: light.front_porch_light
      data:
        transition: 5
