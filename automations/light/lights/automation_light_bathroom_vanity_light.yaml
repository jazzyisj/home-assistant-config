###############################################################################
## Light - Bathroom Vanity Light In Use
###############################################################################
- id: light_bathroom_vanity_light_in_use
  alias: '[Light] Bathroom Vanity Light In Use'
  description: 'Turn in use timer on/off when device state changes.'
  mode: restart
  trigger:
    - platform: state
      entity_id: light.bathroom_vanity_rgb_light
      to: 'off'
  action:
    - service: timer.cancel
      entity_id: timer.bathroom_vanity_light

###############################################################################
## Light - Bathroom Vanity Light Manual Control On
###############################################################################
- id: light_bathroom_vanity_light_manual_control_on
  alias: '[Light] Bathroom Vanity Light Manual Control On'
  description: 'Turn adaptive light manual control on.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Night

    - platform: state
      entity_id: light.bathroom_vanity_rgb_light
      to: ~
  condition:
    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state: Night
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_bathroom_lights
        lights: light.bathroom_vanity_rgb_light
        manual_control: true

###############################################################################
## Light - Bathroom Vanity Light Manual Control Off
###############################################################################
- id: light_bathroom_vanity_light_manual_control_off
  alias: '[Light] Bathroom Vanity Light Manual Control Off'
  description: 'Turn adaptive light manual control off.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.bathroom_vanity_light

    - platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.bathroom_vanity_light
  condition:
    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - not:
        - condition: state
          entity_id: input_select.occupancy_mode
          state: Night
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_bathroom_lights
        lights: light.bathroom_vanity_rgb_light
        manual_control: false

###############################################################################
## Light - Bathroom Vanity Light Auto On
###############################################################################
- id: light_bathroom_vanity_light_auto_on
  alias: '[Light] Bathroom Vanity Light Auto On'
  description: 'Turn on light.'
  mode: restart
  trigger:
    - platform: state
      id: motion
      entity_id: binary_sensor.bathroom_sensor_motion
      to: 'on'
      from: 'off'

    - platform: state
      id: shower
      entity_id: input_boolean.shower_scene
      to: 'on'
      from: 'off'
  condition:
    # don't reset with motion etc. if light already on
    - condition: state
      entity_id: light.bathroom_vanity_rgb_light
      state: 'off'

    - condition: template
      alias: 'Occupancy override is off if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}

    - or:
        - condition: state
          entity_id: binary_sensor.nighttime_illuminance_lights
          state: 'on'

        - condition: state
          entity_id: binary_sensor.bathroom_illuminance_light
          state: 'on'

    - condition: state
      entity_id: timer.bathroom_vanity_light
      state: idle
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.light_bathroom_vanity_light_in_use

    - choose:
        - conditions:
            - not:
                - condition: state
                  entity_id: input_boolean.shower_scene
                  state: 'on'

            - condition: state
              entity_id: input_select.occupancy_mode
              state: Night

            - condition: state
              entity_id: timer.bathroom_vanity_light
              state: idle
          sequence:
            - service: light.turn_on
              target:
                entity_id: light.bathroom_vanity_rgb_light
              data:
                profile: night_default
      default:
        - service: light.turn_on
          target:
            entity_id: light.bathroom_vanity_rgb_light
          data:
            brightness_pct: "{{ state_attr('switch.adaptive_lighting_bathroom_lights','brightness_pct')|int(60) }}"
            rgb_color: >
              {% set rgb = state_attr('switch.adaptive_lighting_bathroom_lights','rgb_color') %}
              {% if rgb != none %} {{ rgb }}
              {% else %} {{ [255, 214, 170] }}
              {% endif %}

    - wait_template: "{{ is_state('light.bathroom_vanity_rgb_light','on') }}"
      timeout: 30

    - service: automation.turn_on
      target:
        entity_id: automation.light_bathroom_vanity_light_in_use

###############################################################################
## Light - Bathroom Vanity Light Auto Off
## - no shower mode off, turns off with motion off
###############################################################################
- id: light_bathroom_vanity_light_auto_off
  alias: '[Light] Bathroom Vanity Light Auto Off'
  description: 'Turn off light.'
  mode: restart
  trigger:
    # don't use bathroom illuminance, lights keeps sensor on
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: 'off'
      from: 'on'

    - platform: state
      id: motion
      entity_id: binary_sensor.bathroom_sensor_motion
      to: 'off'
      from: 'on'
      for:
        minutes: 5

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Night
      for: 15 #BUGFIX allow adaptive lighting to turn off

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # allow timer to cancel, occupant to leave

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Home
      from: Night

    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.bathroom_vanity_light

    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.bathroom_shower_light

    # req if motion/timer expired during restart
    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
      from: 'on'
  condition:
    - condition: state
      entity_id: light.bathroom_vanity_rgb_light
      state: 'on'

    - condition: template
      alias: 'Occupancy override is off if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.bathroom_sensor_motion
        - input_boolean.shower_scene
      state: 'off'

    - condition: state
      entity_id:
        - timer.bathroom_vanity_light
        - timer.bathroom_shower_light
      state: idle
  action:
    - service: light.turn_off
      target:
        entity_id: light.bathroom_vanity_rgb_light

###############################################################################
## Light - Bathroom Vanity Night Light
###############################################################################
- id: light_bathroom_vanity_night_light
  alias: '[Light] Bathroom Vanity Night Light'
  description: 'Turn on light back on in night mode if manually turned off.'
  mode: restart
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to: Night

    - platform: state
      entity_id: light.bathroom_vanity_rgb_light
      to: 'off'

    - platform: state
      entity_id: switch.adaptive_lighting_bathroom_lights
      to: 'on'
  condition:
    - condition: state
      entity_id: input_select.occupancy_mode
      state: Night

    - condition: state
      entity_id: light.bathroom_vanity_rgb_light
      state: 'off'
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.light_bathroom_vanity_light_in_use

    - service: light.turn_on
      target:
        entity_id: light.bathroom_vanity_rgb_light
      data:
        profile: night_dim

    - wait_template: "{{ is_state('light.bathroom_vanity_rgb_light','on') }}"
      timeout: 30

    - service: automation.turn_on
      target:
        entity_id: automation.light_bathroom_vanity_light_in_use
