###############################################################################
## Light - Back House Potlights In Use
###############################################################################
- id: light_back_house_potlights_in_use
  alias: "[Light] Back House Potlights In Use"
  description: "Turn in use timer on/off when device state changes."
  mode: restart
  trigger:
    - platform: state
      entity_id: light.back_house_potlights
      to: "off"
  action:
    - service: timer.cancel
      entity_id: timer.back_house_potlights

###############################################################################
## Light - Back House Potlights Manual Control On
###############################################################################
- id: light_back_house_potlights_manual_control_on
  alias: "[Light] Back House Potlights Manual Control On"
  description: "Turn adaptive light manual control on."
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.back_house_potlights
  condition:
    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: "off"
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_outside_lights
        lights: light.back_house_potlights
        manual_control: true

###############################################################################
## Light - Back House Potlights Manual Control Off
###############################################################################
- id: light_back_house_potlights_manual_control_off
  alias: "[Light] Back House Potlights Manual Control Off"
  description: "Turn adaptive light manual control off."
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.back_house_potlights

    - platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.back_house_potlights
  condition:
    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: "off"
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_outside_lights
        lights: light.back_house_potlights
        manual_control: false

###############################################################################
## Light - Back House Potlights Nobody Home
###############################################################################
- id: light_back_house_potlights_nobody_home
  alias: "[Light] Back House Potlights Nobody Home"
  description: "Turn light on when nobody is home."
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: "on"
      not_from:
        - unknown
        - unavailable

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation

    - platform: time_pattern
      minutes: "/15"
  condition:
    - condition: state
      entity_id: light.back_house_potlights
      state: "off"

    - condition: state
      entity_id: binary_sensor.nighttime_illuminance_lights
      state: "on"

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Away
        - Vacation

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: "off"

    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: "{{ iif(trigger.id == 'occupancy',is_state('input_boolean.occupancy_override','off'),true) }}"
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.light_back_house_potlights_in_use

    - if:
        - condition: state
          entity_id: switch.adaptive_lighting_outside_lights
          state: "on"
      then:
        - service: adaptive_lighting.apply
          continue_on_error: true
          data:
            entity_id: switch.adaptive_lighting_outside_lights
            lights: light.back_house_potlights
            transition: 2
            adapt_brightness: true
            turn_on_lights: true
      else:
        - service: light.turn_on
          continue_on_error: true
          target:
            entity_id: light.back_house_potlights
          data:
            profile: "{{ iif(is_state('input_select.occupancy_mode','Night'),'default_low','default') }}"

    - wait_template: "{{ is_state('light.back_house_potlights','on') }}"
      timeout: 30

    - service: automation.turn_on
      target:
        entity_id: automation.light_back_house_potlights_in_use

###############################################################################
## Light - Back House Potlights Auto On
###############################################################################
- id: light_back_house_potlights_auto_on
  alias: "[Light] Back House Potlights Auto On"
  description: "Turn on light."
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: "on"
      not_from:
        - unknown
        - unavailable

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Away
        - Vacation
      for:
        seconds: 5 # allow scene_active to turn on
  condition:
    - condition: state
      entity_id: binary_sensor.nighttime_illuminance_lights
      state: "on"

    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: "{{ iif(trigger.id == 'occupancy',is_state('input_boolean.occupancy_override','off'),true) }}"

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: "off"

    - condition: time # prevent light from turning on in morning
      alias: "Not morning hours"
      before: input_datetime.day_reset
      after: "12:00"
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.light_back_house_potlights_in_use

    - if:
        - condition: state
          entity_id: switch.adaptive_lighting_outside_lights
          state: "on"
      then:
        - service: adaptive_lighting.apply
          continue_on_error: true
          data:
            entity_id: switch.adaptive_lighting_outside_lights
            lights: light.back_house_potlights
            transition: 2
            adapt_brightness: true
            turn_on_lights: true
      else:
        - service: light.turn_on
          continue_on_error: true
          target:
            entity_id: light.back_house_potlights
          data:
            profile: "{{ iif(is_state('input_select.occupancy_mode','Night'),'default_low','default') }}"

    - wait_template: "{{ is_state('light.back_house_potlights','on') }}"
      timeout: 30

    - service: automation.turn_on
      target:
        entity_id: automation.light_back_house_potlights_in_use

###############################################################################
## Light - Back House Potlights Auto Off
###############################################################################
- id: light_back_house_potlights_auto_off
  alias: "[Light] Back House Potlights Auto Off"
  description: "Turn off light."
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: "off"
      not_from:
        - unknown
        - unavailable

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Night
      for: 15 #BUGFIX allow adaptive lighting to turn off
  condition:
    - condition: state
      entity_id: light.back_house_potlights
      state: "on"

    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: "{{ iif(trigger.id == 'occupancy',is_state('input_boolean.occupancy_override','off'),true) }}"

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: "off"
  action:
    - service: light.turn_off
      target:
        entity_id: light.back_house_potlights
