###############################################################################
## Light - Back House Potlights Nobody Home
###############################################################################
- id: light_back_house_potlights_nobody_home
  alias: '[Light] Back House Potlights Nobody Home'
  description: 'Turn light on when nobody is home.'
  variables:
    current: "{{ state_attr('light.back_house_potlights','brightness')|int(0) }}"
    brightness: >
      {% if is_state('binary_sensor.quiet_time','on') %}
        {{ 80 if current > 80 or current == 0 else current }}
      {% else %}
        {{ 150 if current < 150 else current }}
      {% endif %}
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: 'on'
      from: 'off'

    - platform: state
      id: quiet
      entity_id: binary_sensor.quiet_time
      to:
        - 'on'
        - 'off'
      from:
        - 'on'
        - 'off'

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # must be after away mode has run

    - platform: time_pattern
      minutes: '/15'
  condition:
    - condition: state
      entity_id:
        - input_boolean.light_automation
        - binary_sensor.nighttime_illuminance_lights
      state: 'on'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Away
        - Vacation

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: template
      alias: 'Light not on and already at set brightness.'
      value_template: '{{ brightness != current if current > 0 else true }}'

    - condition: template
      alias: 'Light is on if trigger is quiet time light.'
      value_template: >
        {{ is_state('light.back_house_potlights','on')
            if trigger.id == 'quiet' else true }}

    - condition: template
      alias: 'Presence automation is enabled if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
              and is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}
  action:
    - service: light.turn_on
      target:
        entity_id: light.back_house_potlights
      data:
        brightness: '{{ brightness }}'
        transition: 5

###############################################################################
## Light - Back House Potlights Auto On
###############################################################################
- id: light_back_house_potlights_auto_on
  alias: '[Light] Back House Potlights Auto On'
  description: 'Turn on light.'
  max_exceeded: silent
  variables:
    current: "{{ state_attr('light.back_house_potlights','brightness')|int(0) }}"
    brightness: >
      {% if is_state('binary_sensor.quiet_time','on') %}
        {{ 80 if current > 80 or current == 0 else current }}
      {% else %}
        {{ 150 if current < 150 else current }}
      {% endif %}
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: 'on'
      from: 'off'

    - platform: state
      id: quiet
      entity_id: binary_sensor.quiet_time
      to:
        - 'on'
        - 'off'
      from:
        - 'on'
        - 'off'

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Away
        - Vacation
      for:
        seconds: 5 # allow scene_active to turn on
  condition:
    - condition: state
      entity_id:
        - input_boolean.light_automation
        - binary_sensor.nighttime_illuminance_lights
      state: 'on'

    - condition: template
      alias: 'Presence automation is enabled if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
              and is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: template
      alias: 'Light not on and already at set brightness.'
      value_template: '{{ brightness != current if current > 0 else true }}'

    - condition: template
      alias: 'Light is on if trigger is quiet time light.'
      value_template: "{{ is_state('light.back_house_potlights','on') if trigger.id == 'quiet' else true }}"

    - condition: time # prevent light from turning on in morning
      alias: 'Not morning hours'
      before: '02:00'
      after: '12:00'
  action:
    - service: light.turn_on
      target:
        entity_id: light.back_house_potlights
      data:
        brightness: '{{ brightness }}'
        transition: 5

###############################################################################
## Light - Back House Potlights Auto Off
###############################################################################
- id: light_back_house_potlights_auto_off
  alias: '[Light] Back House Potlights Auto Off'
  description: 'Turn off light.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: 'off'
      from: 'on'

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Night
  condition:
    - condition: state
      entity_id:
        - light.back_house_potlights
        - input_boolean.light_automation
      state: 'on'

    - condition: template
      alias: 'Presence automation is enabled if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
              and is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'
  action:
    - service: light.turn_off
      target:
        entity_id: light.back_house_potlights
      data:
        transition: 5
