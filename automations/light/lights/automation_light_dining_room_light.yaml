###############################################################################
## Light - Dining Room Light In Use
###############################################################################
- id: light_dining_room_light_in_use
  alias: '[Light] Dining Room Light In Use'
  description: 'Turn in use timer on/off when device state changes.'
  mode: restart
  trigger:
    - platform: state
      entity_id: light.dining_room_rgb_light
      to: 'off'
  action:
    - service: timer.cancel
      entity_id: timer.dining_room_light

###############################################################################
## Light - Dining Room Light Manual Control On
###############################################################################
- id: light_dining_room_light_manual_control_on
  alias: '[Light] Dining Room Light Manual Control On'
  description: 'Turn adaptive light manual control on.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.dining_room_light

    - platform: state
      entity_id:
        - alert.work_commute_jason
        - alert.work_commute_sheri
        - alert.late_for_work_jason
        - alert.late_for_work_sheri
      to: 'on'

    - platform: state
      entity_id:
        - binary_sensor.waketime_active
        - binary_sensor.scene_active
        - binary_sensor.work_commute_active
        - input_boolean.media_color_light_sync
        - input_boolean.chill_scene
        - input_boolean.company_scene
      to: 'on'
      from: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_rgb_lights
        lights: light.dining_room_rgb_light
        manual_control: true

###############################################################################
## Light - Dining Room Light Manual Control Off
###############################################################################
- id: light_dining_room_light_manual_control_off
  alias: '[Light] Dining Room Light Manual Control Off'
  description: 'Turn adaptive light manual control off.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Night
      for: 30 # allow group turn off before turning back on

    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.dining_room_light

    - platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.dining_room_light

    - platform: state
      entity_id:
        - binary_sensor.waketime_active
        - binary_sensor.scene_active
        - binary_sensor.work_commute_active
        - input_boolean.media_color_light_sync
        - input_boolean.chill_scene
        - input_boolean.company_scene
      to: 'off'
      from: 'on'
  condition:
    - condition: template
      alias: 'Occupancy override is off if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}

    # - condition: template
    #   alias: 'Not if night mode unless occupancy mode is trigger'
    #   value_template: >
    #     {{ true if trigger.id == 'occupancy'
    #         else not is_state('input_select.occupancy_mode','Night') }}

    - condition: state
      entity_id:
        - binary_sensor.waketime_active
        - binary_sensor.scene_active
        - binary_sensor.work_commute_active
        - input_boolean.media_color_light_sync
        - input_boolean.chill_scene
        - input_boolean.company_scene
      state: 'off'
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_rgb_lights
        lights: light.dining_room_rgb_light
        manual_control: false

###############################################################################
## Light - Dining Room Light Nobody Home
###############################################################################
- id: light_dining_room_light_nobody_home
  alias: '[Light] Dining Room Light Nobody Home'
  description: 'Turn light on when nobody is home.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: 'on'
      from: 'off'

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation

    - platform: time_pattern
      minutes: '/15'
  condition:
    - condition: state
      entity_id: light.dining_room_rgb_light
      state: 'off'

    - condition: state
      entity_id: binary_sensor.nighttime_illuminance_lights
      state: 'on'

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Away
        - Vacation

    - condition: template
      alias: 'Occupancy override is off if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.occupancy_override','off')
            if trigger.id in ['away','night'] else true }}
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.light_dining_room_light_in_use

    - service: light.turn_on
      target:
        entity_id: light.dining_room_rgb_light

    - wait_template: "{{ is_state('light.dining_room_rgb_light','on') }}"
      timeout: 30

    - service: automation.turn_on
      target:
        entity_id: automation.light_dining_room_light_in_use

###############################################################################
## Light - Dining Room Light Auto On
###############################################################################
- id: light_dining_room_light_auto_on
  alias: '[Light] Dining Room Light Auto On'
  description: 'Turn on light.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id:
        - binary_sensor.nighttime_illuminance_lights
        - binary_sensor.daytime_illuminance_lights
      to: 'on'
      from: 'off'

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Away
        - Vacation
      for:
        seconds: 5 # allow scene_active to turn on, current scene to save

    - platform: state
      id: scene
      entity_id:
        - binary_sensor.waketime_active
        - binary_sensor.scene_active
      to: 'off'
      from: 'on' # script/template reload
  condition:
    - condition: template
      alias: 'Occupancy override is off if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.occupancy_override','off')
            if trigger.id in ['away','night'] else true }}

    - or:
        - condition: state
          entity_id: binary_sensor.nighttime_illuminance_lights
          state: 'on'

        - condition: state
          entity_id: binary_sensor.daytime_illuminance_lights
          state: 'on'

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.scene_active
        - binary_sensor.waketime_active
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest

    - condition: template
      alias: 'Timer is not on if trigger is lux'
      value_template: "{{ is_state('timer.dining_room_light','idle') if trigger.id == 'lux' else true }}"
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.light_dining_room_light_in_use

    - service: light.turn_on
      target:
        entity_id: light.dining_room_rgb_light
      data:
        brightness_pct: "{{ state_attr('switch.adaptive_lighting_rgb_lights','brightness_pct')|int(60) }}"
        rgb_color: >
          {% set rgb = state_attr('switch.adaptive_lighting_rgb_lights','rgb_color') %}
          {% if rgb != none %} {{ rgb }}
          {% else %} {{ [255, 214, 170] }}
          {% endif %}

    - wait_template: "{{ is_state('light.dining_room_rgb_light','off') }}"
      timeout: 30

    - service: automation.turn_on
      target:
        entity_id: automation.light_dining_room_light_in_use

###############################################################################
## Light - Dining Room Light Auto Off
###############################################################################
- id: light_dining_room_light_auto_off
  alias: '[Light] Dining Room Light Auto Off'
  description: 'Turn off light.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id:
        - binary_sensor.nighttime_illuminance_lights
        - binary_sensor.daytime_illuminance_lights
      to: 'off'
      from: 'on'

    - platform: state
      id: scene
      entity_id:
        - binary_sensor.waketime_active
        - binary_sensor.scene_active
      to: 'off'
      from: 'on' # script/template reload

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Night
      for: 15 #BUGFIX allow adaptive lighting to turn off

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # allow timer to cancel, occupant to leave

    - platform: state
      id: startup
      entity_id: input_boolean.startup_pending
      to: 'off'
  condition:
    - condition: state
      entity_id: light.dining_room_rgb_light
      state: 'on'

    - condition: template
      alias: 'Occupancy override is off if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.scene_active
        - binary_sensor.waketime_active
      state: 'off'

    - condition: template
      value_template: >
        {{ is_state('binary_sensor.nighttime_illuminance_lights','off')
              and is_state('binary_sensor.daytime_illuminance_lights','off')
            if trigger.id in ['scene','startup'] else true }}

    - condition: template
      value_template: >
        {% if is_state('binary_sensor.someone_home','on') %}
          {% if trigger.entity_id == 'binary_sensor.daytime_illuminance_lights'%}
            {{ is_state('binary_sensor.nighttime_illuminance_lights','off') }}
          {% elif trigger.entity_id == 'binary_sensor.nighttime_illuminance_lights' %}
            {{ is_state('binary_sensor.daytime_illuminance_lights','off') }}
          {% else %} true
          {% endif %}
        {% else %} true
        {% endif %}

    - condition: template
      alias: 'Timer is idle if trigger is night mode, user turned on'
      value_template: "{{ is_state('timer.dining_room_light','idle') if trigger.id == 'night' else true }}"
  action:
    - service: light.turn_off
      target:
        entity_id: light.dining_room_rgb_light
