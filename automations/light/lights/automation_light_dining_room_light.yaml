
#######################################################################################################################
## Light - Dining Room Light Flux Control
#######################################################################################################################
- id: light_dining_room_light_flux_control #OCC
  alias: "[Light] Dining Room Light Flux Control"
  description: "Control light flux state."
  mode: restart
  trigger:
    - platform: state
      entity_id: light.dining_room_rgb_light
      to: 'off'

    - platform: state
      id: presence
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
        - Night
      from:
        - Night
        - Away
        - Vacation

    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.dining_room_light

    - platform: state
      entity_id:
        - script.morning_lights
        - binary_sensor.scene_active
        - binary_sensor.prework_active
      to: 'off'

    - platform: state #TEMP
      entity_id:
        - media_player.spotify
        - media_player.spotify_jason
        - media_player.spotify_sheri
      to:
        - 'off'
        - 'idle'
      for: 10 # don't turn off when switching players etc.
  condition:
    - condition: state
      entity_id: input_boolean.light_automation
      state: 'on'

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.light_scene_active
      state: 'off'
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.light_flux_dining_room

#######################################################################################################################
## Light - Dining Room Light Nobody Home
#######################################################################################################################
- id: light_dining_room_light_nobody_home #OCC
  alias: "[Light] Dining Room Light Nobody Home"
  description: "Turn light on when nobody is home."
  variables:
    current: "{{ state_attr('light.dining_room_rgb_light','brightness')|int }}"
    brightness: >
      {% if is_state('binary_sensor.quiet_hours','on') %}
        {{ 30 if current > 30 or current == 0 else current }}
      {% else %}
        {{ 90 if current < 90 else current }}
      {% endif %}
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # must be after away mode has run

    - platform: time_pattern
      minutes: '/15'
  condition:
    - condition: state
      entity_id:
        - input_boolean.light_automation
        - input_boolean.presence_automation
        - binary_sensor.nighttime_auto_light
      state: 'on'

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Away
        - Vacation
  action:
    - service: light.turn_on
      target:
        entity_id: light.dining_room_rgb_light
      data:
        brightness: "{{ brightness }}"
        transition: 5

#######################################################################################################################
## Light - Dining Room Night Light
#######################################################################################################################
- id: light_dining_room_night_light #OCC
  alias: "[Light] Dining Room Night Light"
  description: "Turn on light when night mode turns on."
  variables:
    current: "{{ state_attr('light.dining_room_rgb_light','brightness')|int }}"
    brightness: "{{ 50 if 50 < current or current == 0 else current }}"
  trigger:
    - platform: state
      id: presence
      entity_id: input_select.occupancy_mode
      to: Night
  condition:
    - condition: state
      entity_id:
        - input_boolean.light_automation
        - input_boolean.presence_automation
        - binary_sensor.nighttime_auto_light
      state: 'on'

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.light_scene_active
      state: 'off'
  action:
    - service: light.turn_on
      target:
        entity_id: light.dining_room_rgb_light
      data:
        brightness: "{{ brightness }}"
        transition: 5

#######################################################################################################################
## Light - Dining Room Light Auto On
#######################################################################################################################
- id: light_dining_room_light_auto_on #OCC
  alias: "[Light] Dining Room Light Auto On"
  description: "Turn on light."
  max_exceeded: silent # reloading templates (illuminance sensor)
  variables:
    current: "{{ state_attr('light.dining_room_rgb_light','brightness')|int }}"
    brightness: >
      {% if is_state('binary_sensor.daytime_illuminance_light','on') %}
        {{ 150 if current < 150 else current }}
      {% elif is_state('binary_sensor.quiet_hours','on') %}
        {{ 60 if current > 60 or current == 0 else current }}
      {% else %}
        {{ 90 if current < 90 else current }}
      {% endif %}
  trigger:
    - platform: state
      id: lux
      entity_id:
        - binary_sensor.nighttime_auto_light
        - binary_sensor.daytime_illuminance_light
      to: 'on'

    - platform: state
      id: quiet
      entity_id: binary_sensor.quiet_hours

    - platform: state
      id: presence
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Away
        - Vacation
      for:
        seconds: 5 # allow scene_active to turn on, current scene to save

    - platform: state
      id: scene
      entity_id:
        - script.morning_lights
        - binary_sensor.scene_active
      to: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.light_automation
      state: 'on'

    - condition: template
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
            if trigger.id == 'presence' else true }}

    - condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.nighttime_auto_light
          state: 'on'

        - condition: state
          entity_id: binary_sensor.daytime_illuminance_light
          state: 'on'

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.light_scene_active
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest

    - condition: template
      alias: "Timer is not on if trigger is lux"
      value_template: >
        {{ is_state('timer.dining_room_light','idle')
            if trigger.id in ['lux','quiet'] else true }}

    - condition: template
      alias: "Light not on and already at set brightness."
      value_template: "{{ brightness != current if current > 0 else true }}"
  action:
    - service: light.turn_on
      target:
        entity_id: light.dining_room_rgb_light
      data:
        brightness: "{{ brightness }}"
        transition: 5

#######################################################################################################################
## Light - Dining Room Light Auto Off
#######################################################################################################################
- id: light_dining_room_light_auto_off #OCC
  alias: "[Light] Dining Room Light Auto Off"
  description: "Turn off light."
  max_exceeded: silent # reloading templates (illuminance sensor)
  trigger:
    - platform: state
      id: lux
      entity_id:
        - binary_sensor.nighttime_auto_light
        - binary_sensor.daytime_illuminance_light
      to: 'off'

    - platform: state
      id: scene
      entity_id:
        - script.morning_lights
        - binary_sensor.scene_active
      to: 'off'

    - platform: state
      id: away
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # allow occupant to leave, timer cancel

    - platform: state
      id: night
      entity_id: input_select.occupancy_mode
      to: Night
      for:
        minutes: 5
  condition:
    - condition: state
      entity_id:
        - light.dining_room_rgb_light
        - input_boolean.light_automation
      state: 'on'

    - condition: template
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
            if trigger.id in ['away','night'] else true }}

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.light_scene_active
      state: 'off'

    - condition: template
      value_template: >
        {{ is_state('binary_sensor.nighttime_auto_light','off')
              and is_state('binary_sensor.daytime_illuminance_light','off')
            if trigger.id == 'scene' else true }}

    - condition: template
      value_template: >
        {% if is_state('binary_sensor.someone_home','on') %}
          {% if trigger.entity_id == 'binary_sensor.daytime_illuminance_light'%}
            {{ is_state('binary_sensor.nighttime_auto_light','off') }}
          {% elif trigger.entity_id == 'binary_sensor.nighttime_auto_light' %}
            {{ is_state('binary_sensor.daytime_illuminance_light','off') }}
          {% else %} true
          {% endif %}
        {% else %} true
        {% endif %}

    - condition: template
      alias: "Timer is idle if trigger is night mode"
      value_template: "{{ is_state('timer.dining_room_light','idle') if trigger.id == 'night' else true }}"
  action:
    - service: light.turn_off
      target:
        entity_id: light.dining_room_rgb_light
      data:
        transition: 5
