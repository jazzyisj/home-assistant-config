###############################################################################
## Light - Dining Room Potlights In Use
###############################################################################
- id: light_dining_room_potlights_in_use
  alias: '[Light] Dining Room Potlights In Use'
  description: 'Turn in use timer on/off when device state changes.'
  mode: restart
  trigger:
    - platform: state
      entity_id: light.dining_room_potlights
      to: ~
  condition:
    - condition: state
      entity_id: input_boolean.startup_pending
      state: 'off'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: light.dining_room_potlights
              state: 'on'
          sequence:
            - service: timer.start
              entity_id: timer.dining_room_potlights
      default:
        - service: timer.cancel
          entity_id: timer.dining_room_potlights

###############################################################################
## Light - Dining Room PotLights Manual Control On
###############################################################################
- id: light_dining_room_potlights_manual_control_on
  alias: '[Light] Dining Room PotLights Manual Control On'
  description: 'Turn adaptive light manual control on.'
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: binary_sensor.scene_active
      to: 'on'
      from: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.light_automation
      state: 'on'

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_main_lights
        lights: light.dining_room_potlights
        manual_control: true

###############################################################################
## Light - Dining Room PotLights Manual Control Off
###############################################################################
- id: light_dining_room_potlights_manual_control_off
  alias: '[Light] Dining Room PotLights Manual Control Off'
  description: 'Turn adaptive light manual control off.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.dining_room_potlights

    - platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.dining_room_potlights

    - platform: state
      entity_id: binary_sensor.scene_active
      to: 'off'
      from: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.light_automation
      state: 'on'

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.scene_active
        - script.morning_lights
      state: 'off'
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_main_lights
        lights: light.dining_room_potlights
        manual_control: false

###############################################################################
## Light - Dining Room Potlights Auto On
###############################################################################
- id: light_dining_room_potlights_auto_on
  alias: '[Light] Dining Room Potlights Auto On'
  description: 'Turn on light.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: 'on'
      from: 'off'
      for:
        minutes: 60

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Away
        - Vacation
      for:
        seconds: 5 # allow scene_active to turn on

    - platform: state
      id: scene
      entity_id:
        - script.morning_lights
        - binary_sensor.scene_active
      to: 'off'
      from: 'on' # script/template reload
  condition:
    - condition: state
      entity_id:
        - input_boolean.light_automation
        - binary_sensor.nighttime_illuminance_lights
      state: 'on'

    - condition: template
      alias: 'Presence automation is enabled if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
              and is_state('input_boolean.occupancy_override','off')
            if trigger.id in ['away','night'] else true }}

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.scene_active
        - script.morning_lights
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.light_dining_room_potlights_in_use

    - service: light.turn_on
      target:
        entity_id: light.dining_room_potlights

    - wait_template: "{{ is_state('light.dining_room_potlights','on') }}"
      timeout: 15

    - service: automation.turn_on
      target:
        entity_id: automation.light_dining_room_potlights_in_use

###############################################################################
## Light - Dining Room Potlights Auto Off
###############################################################################
- id: light_dining_room_potlights_auto_off
  alias: '[Light] Dining Room Potlights Auto Off'
  description: 'Turn off light.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: 'off'
      from: 'on'

    - platform: state
      id: scene
      entity_id:
        - script.morning_lights
        - binary_sensor.scene_active
      to: 'off'
      from: 'on' # script/template reload

    - platform: state
      id: away
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # allow timer to cancel, occupant to leave

    - platform: state
      id: night
      entity_id: input_select.occupancy_mode
      to: Night
  condition:
    - condition: state
      entity_id:
        - light.dining_room_potlights
        - input_boolean.light_automation
      state: 'on'

    - condition: template
      alias: 'Presence automation is enabled if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
              and is_state('input_boolean.occupancy_override','off')
            if trigger.id in ['away','night'] else true }}

    - condition: template
      value_template: >
        {{ is_state('binary_sensor.nighttime_illuminance_lights','off')
            if trigger.id == 'scene' else true }}

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.scene_active
        - script.morning_lights
      state: 'off'
  action:
    - service: light.turn_off
      target:
        entity_id: light.dining_room_potlights
