###############################################################################
## Light - Living Room Fan Light In Use
###############################################################################
- id: light_living_room_fan_light_in_use
  alias: '[Light] Living Room Fan Light In Use'
  description: 'Turn in use timer on/off when device state changes.'
  mode: restart
  trigger:
    - platform: state
      entity_id: light.living_room_fan_light
      to: 'off'
  action:
    - service: timer.cancel
      entity_id: timer.living_room_fan_light

###############################################################################
## Light - Living Room Fan Light Manual Control On
###############################################################################
- id: light_living_room_fan_light_manual_control_on
  alias: '[Light] Living Room Fan Light Manual Control On'
  description: 'Turn adaptive light manual control on.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.living_room_fan_light

    - platform: state
      entity_id: binary_sensor.scene_active
      to: 'on'
      from: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_main_lights
        lights: light.living_room_fan_light
        manual_control: true

###############################################################################
## Light - Living Room Fan Light Manual Control Off
###############################################################################
- id: light_living_room_fan_light_manual_control_off
  alias: '[Light] Living Room Fan Light Manual Control Off'
  description: 'Turn adaptive light manual control off.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.living_room_fan_light

    - platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.living_room_fan_light

    - platform: state
      entity_id: binary_sensor.scene_active
      to: 'off'
      from: 'on'
  condition:
    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.scene_active
      state: 'off'
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_main_lights
        lights: light.living_room_fan_light
        manual_control: false

###############################################################################
## Light - Living Room Fan Light Auto On
###############################################################################
- id: light_living_room_fan_light_auto_on
  alias: '[Light] Living Room Fan Light Auto On'
  description: 'Turn on lights.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: 'on'
      from: 'off'

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Away
        - Vacation
      for: 5 # allow scene_active to turn on

    - platform: state
      id: scene
      entity_id:
        - binary_sensor.waketime_active
        - binary_sensor.scene_active
      to: 'off'
      from: 'on' # script/template reload
  condition:
    - condition: template
      alias: 'Occupancy override is off if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.scene_active
        - binary_sensor.waketime_active
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest

    - condition: state
      entity_id: binary_sensor.nighttime_illuminance_lights
      state: 'on'

    - condition: template
      alias: 'Timer is not on if trigger is lux'
      value_template: >
        {{ is_state('timer.living_room_fan_light','idle')
            if trigger.id == 'lux' else true }}
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.light_living_room_fan_light_in_use

    - service: light.turn_on
      target:
        entity_id: light.living_room_fan_light

    - wait_template: "{{ is_state('light.living_room_fan_light','on') }}"
      timeout: 30

    - service: automation.turn_on
      target:
        entity_id: automation.light_living_room_fan_light_in_use

###############################################################################
## Light - Living Room Fan Light Auto Off
###############################################################################
- id: light_living_room_fan_light_auto_off
  alias: '[Light] Living Room Fan Light Auto Off'
  description: 'Turn off lights.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: 'off'
      from: 'on'

    - platform: state
      id: scene
      entity_id:
        - binary_sensor.waketime_active
        - binary_sensor.scene_active
      to: 'off'
      from: 'on' # script/template reload

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Night
      for: 15 #BUGFIX allow adaptive lighting to turn off

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # allow timer to cancel, occupant to leave

    - platform: state
      id: startup
      entity_id: input_boolean.startup_pending
      to: 'off'
  condition:
    - condition: state
      entity_id: light.living_room_fan_light
      state: 'on'

    - condition: template
      alias: 'Occupancy override is off if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.occupancy_override','off')
            if trigger.id == 'occupancy' else true }}

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.scene_active
        - binary_sensor.waketime_active
      state: 'off'

    - condition: template
      alias: 'Timer is not on if trigger is lux'
      value_template: >
        {{ is_state('timer.living_room_fan_light','idle')
            if trigger.id == 'lux' else true }}

    - condition: template
      alias: "Don't turn off after scene if night lux on"
      value_template: >
        {{ is_state('binary_sensor.nighttime_illuminance_lights','off')
            if trigger.id in ['scene','startup'] else true }}
  action:
    - service: light.turn_off
      target:
        entity_id: light.living_room_fan_light
