###############################################################################
## Light - Kitchen Sink Light In Use
###############################################################################
- id: light_kitchen_sink_light_in_use
  alias: "[Light] Kitchen Sink Light In Use"
  description: "Turn in use timer on/off when device state changes."
  mode: restart
  trigger:
    - platform: state
      entity_id: light.kitchen_sink_light
      to: "off"
  action:
    - service: timer.cancel
      entity_id: timer.kitchen_sink_light

###############################################################################
## Light - Kitchen Sink Light Auto Off
###############################################################################
- id: light_kitchen_sink_light_auto_off
  alias: "[Light] Kitchen Sink Light Auto Off"
  description: "Turn off light."
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to: "off"
      not_from:
        - unknown
        - unavailable

    - platform: state
      id: scene
      entity_id:
        - binary_sensor.waketime_active
        - binary_sensor.scene_active
      to: "off"
      not_from:
        - unknown
        - unavailable
      for: 5 # allow manual control to turn off

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Night
      for: 15 #BUGFIX allow adaptive lighting to turn off

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # allow timer to cancel, occupant to leave
  condition:
    - condition: state
      entity_id: light.kitchen_sink_light
      state: "on"

    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: "{{ iif(trigger.id == 'occupancy',is_state('input_boolean.occupancy_override','off'),true) }}"

    - condition: template
      alias: "If trigger is scene, night light is off"
      value_template: >
        {{ is_state('binary_sensor.nighttime_illuminance_lights','off')
            if trigger.id == 'scene' else true }}

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.scene_active
        - binary_sensor.waketime_active
      state: "off"
  action:
    - service: light.turn_off
      target:
        entity_id: light.kitchen_sink_light
