#######################################################################################################################
## Light - Kitchen Sink Light Auto On
#IDEA transfer this to under cabinet LED when installed
#######################################################################################################################
- id: light_kitchen_sink_light_auto_on
  alias: '[Light] Kitchen Sink Light Auto On'
  description: 'Turn on light.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: lux
      entity_id:
        - binary_sensor.nighttime_auto_light
        - binary_sensor.daytime_illuminance_light
      to: 'on'

    - platform: state
      id: scene
      entity_id:
        - script.morning_lights
        - binary_sensor.scene_active
      to: 'off'
      from: 'on' # script reload

  condition:
    - condition: state
      entity_id: input_boolean.light_automation
      state: 'on'

    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - binary_sensor.light_scene_active
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest

    - condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.nighttime_auto_light
          state: 'on'

        - condition: state
          entity_id: binary_sensor.daytime_illuminance_light
          state: 'on'
  action:
    - service: light.turn_on
      target:
        entity_id: light.kitchen_sink_light

#######################################################################################################################
## Light - Kitchen Sink Light Auto Off
#######################################################################################################################
- id: light_kitchen_sink_light_auto_off
  alias: '[Light] Kitchen Sink Light Auto Off'
  description: 'Turn off light.'
  max_exceeded: silent # reloading templates (illuminance sensor)
  trigger:
    - platform: state
      id: lux
      entity_id:
        - binary_sensor.nighttime_auto_light
        - binary_sensor.daytime_illuminance_light
      to: 'off'

    - platform: state
      id: scene
      entity_id:
        - script.morning_lights
        - binary_sensor.scene_active
      to: 'off'
      from: 'on' # script reload

    - platform: state
      id: away
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # allow occupant to leave, timer cancel

    - platform: state
      id: night
      entity_id: input_select.occupancy_mode
      to: Night

    - platform: event
      id: timer
      event_type: timer.finished
      event_data:
        entity_id: timer.kitchen_sink_light
  condition:
    - condition: state
      entity_id:
        - light.kitchen_sink_light
        - input_boolean.light_automation
      state: 'on'

    - condition: template
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
            if trigger.id in ['away','night'] else true }}

    - condition: state
      entity_id:
        - binary_sensor.light_scene_active
        - input_boolean.alarm_triggered
      state: 'off'

    - condition: template
      alias: 'Timer is not on if trigger is lux'
      value_template: >
        {{ is_state('timer.kitchen_sink_light','idle')
            if trigger.id == 'lux' else true }}

    - condition: template
      alias: 'If trigger is scene, auto light and lux light are off'
      value_template: >
        {{ is_state('binary_sensor.nighttime_auto_light','off')
              and is_state('binary_sensor.daytime_illuminance_light','off')
            if trigger.id == 'scene' else true }}

    - condition: template
      alias: 'If someone is home, auto light is off if trigger is lux, lux is off trigger is auto light'
      value_template: >
        {% if is_state('binary_sensor.someone_home','on') %}
          {% if trigger.entity_id == 'binary_sensor.daytime_illuminance_light'%}
            {{ is_state('binary_sensor.nighttime_auto_light','off') }}
          {% elif trigger.entity_id == 'binary_sensor.nighttime_auto_light' %}
            {{ is_state('binary_sensor.daytime_illuminance_light','off') }}
          {% else %} true
          {% endif %}
        {% else %} true
        {% endif %}
  action:
    - service: light.turn_off
      target:
        entity_id: light.kitchen_sink_light
