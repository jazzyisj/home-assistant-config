#######################################################################################################################
## Light -Side Entrance Ligt In Use
## - required in addition to zwave scene so timer activates to shut off light
#######################################################################################################################
- id: light_side_entrance_light_in_use
  alias: '[Light] Side Entrance Light In Use'
  description: Turn in use timer on when device state changes.
  mode: restart
  trigger:
    - platform: state
      entity_id: light.side_entrance_light
      to: 'on' # no in use timer for off state
  action:
    - service: timer.start
      data:
        entity_id: timer.side_entrance_light

#######################################################################################################################
## Light - Side Entrance Light Auto On
## - no timer, scene, or autolight conditions, always turn on
## - always start in use timer so we trigger auto light off
#######################################################################################################################
- id: light_side_entrance_light_auto_on
  alias: '[Light] Side Entrance Light Auto On'
  description: Turn on lights.
  initial_state: true
  max_exceeded: silent
  trigger:
    - platform: state # specify from state - unknown at startup
      entity_id:
        - binary_sensor.garage_door_open
        - binary_sensor.garage_sensor_motion
      to: 'on'
      from: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.light_automation
      state: 'on'

    - condition: template
      value_template: "{{ is_state('input_boolean.alarm_automation','on') if trigger.entity_id == 'alarm_control_panel.alarmo' else true }}"

    - condition: template # garage door automation if trigger is garage door/motion
      value_template: >
        {{ is_state('input_boolean.garage_door_automation','on') if trigger.entity_id == 'binary_sensor.garage_door_open'
            or trigger.entity_id == 'binary_sensor.garage_sensor_motion' else true }}

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'
  action:
    - service: automation.turn_off # turn of automation so we don't trigger device in use timer
      entity_id: automation.light_side_entrance_light_in_use

    - service: light.turn_on
      entity_id: light.side_entrance_light

    - delay:
        seconds: 5 #ZWAVE allow device to change state

    - service: automation.turn_on
      entity_id: automation.light_side_entrance_light_in_use

#######################################################################################################################
## Light - Side Entrance Light Auto Off
#######################################################################################################################
- id: light_side_entrance_light_auto_off #OCC
  alias: '[Light] Side Entrance Light Auto Off'
  description: Turn off lights.
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.auto_light_on
      to: 'off'

    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
        - Night
      for:
        minutes: 2 # allow timer to cancel, occupant to leave

    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.side_entrance_light

    - platform: state # specify from state - unknown at startup
      entity_id:
        - binary_sensor.garage_door_open
        - binary_sensor.garage_sensor_motion
      to: 'off'
      from: 'on'
      for:
        minutes: 15

    - platform: state # req in case motion/timer expired during restart
      entity_id: input_boolean.startup_pending
      to: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.light_automation
      state: 'on'

    - condition: template
      value_template: "{{ is_state('input_boolean.presence_automation','on') if trigger.entity_id == 'input_select.occupancy_mode' else true }}"

    - condition: state
      entity_id: timer.side_entrance_light
      state: idle

    - condition: state
      entity_id: binary_sensor.garage_sensor_motion
      state: 'off'

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'
  action:
    - service: automation.turn_off # turn of automation so we don't trigger device in use timer
      entity_id: automation.light_side_entrance_light_in_use

    - service: light.turn_off
      entity_id: light.side_entrance_light

    - delay:
        seconds: 5 #ZWAVE allow device to change state

    - service: automation.turn_on
      entity_id: automation.light_side_entrance_light_in_use
