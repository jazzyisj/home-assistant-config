###############################################################################
## Light - Occupancy Lighting
###############################################################################
- id: light_occupancy_lighting
  alias: "[Light] Occupancy Lighting"
  description: "Turn lights on based on occupancy mode."
  mode: restart
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Away
        - Vacation
      for: 5 # allow waketime_active / scene_active to turn on

    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # allow scene_active to turn on, occupant to exit

    - platform: state
      entity_id: input_select.occupancy_mode
      to: Night
      for: 5 # allow scene_active to turn off
  condition:
    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - input_boolean.occupancy_override
        - binary_sensor.scene_active
        - binary_sensor.waketime_active
        - binary_sensor.bedtime_active
      state: "off"
  action:
    - if: "{{ states('input_select.occupancy_mode') in ['Night','Away','Vacation'] }}"
      then:
        - service: script.turn_light_off
          data:
            bypass_timer: true

        - condition: state
          entity_id: binary_sensor.nighttime_illuminance_lights
          state: "on"

        - choose:
            - conditions:
                - condition: state
                  entity_id: input_select.occupancy_mode
                  match: any
                  state:
                    - Away
                    - Vacation
              sequence:
                - service: script.turn_light_on
                  data:
                    lights: >
                      {{states.light
                          |selectattr('attributes.away','defined')
                          |selectattr('attributes.away','eq',true)
                          |map(attribute='entity_id')|list }}
                    activate_timer: false

            - conditions:
                - condition: state
                  entity_id: input_select.occupancy_mode
                  state: Night
              sequence:
                - service: script.turn_light_on
                  data:
                    lights: >
                      {{states.light
                          |selectattr('attributes.night','defined')
                          |selectattr('attributes.night','eq',true)
                          |map(attribute='entity_id')|list }}
                    activate_timer: false
      else:
        - condition: state
          entity_id: binary_sensor.nighttime_illuminance_lights
          state: "on"

        - condition: time # prevent lights from turning on in middle of night/morning
          before: input_datetime.day_reset
          after: "12:00"

        - service: script.turn_light_on
          data:
            lights: >
              {{states.light
                  |selectattr('attributes.occupancy','defined')
                  |selectattr('attributes.occupancy','eq',true)
                  |map(attribute='entity_id')|list }}
            activate_timer: false
