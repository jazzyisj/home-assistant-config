###############################################################################
## Light - Illuminance Lighting
###############################################################################
- id: light_illuminance_lighting
  alias: "[Light] Illuminance Lighting"
  description: "Turn lights on based on outdoor illuminance."
  mode: restart
  max_exceeded: silent
  variables:
    day_lights: >
      {{ expand('group.lights')
        |selectattr('attributes.day_lux','defined')
        |selectattr('attributes.day_lux','eq',true)
        |map(attribute='entity_id')|list }}
    night_lights: >
      {{ expand('group.lights')
        |selectattr('attributes.night_lux','defined')
        |selectattr('attributes.night_lux','eq',true)
        |map(attribute='entity_id')|list }}
  trigger:
    - platform: homeassistant
      id: startup
      event: start

    - platform: state
      id: day_lux
      entity_id: binary_sensor.daytime_illuminance_lights
      to:
        - "on"
        - "off"
      not_from:
        - unknown
        - unavailable
      for: 60 # allow nighttime to turn on before off trigger

    - platform: state
      id: night_lux
      entity_id: binary_sensor.nighttime_illuminance_lights
      to:
        - "on"
        - "off"
      not_from:
        - unknown
        - unavailable

    - platform: state
      id: home
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Away
        - Vacation
      for: 5 # allow waketime_active / scene_active to turn on

    - platform: state
      id: away
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 2 # allow scene_active to turn off, occupant to exit

    - platform: state
      entity_id: input_select.occupancy_mode
      to: Night
      for: 5 # allow scene_active to turn off

    - platform: state
      entity_id: script.waketime_lights
      to: "off"
  condition:
    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - input_boolean.occupancy_override
        - script.waketime_lights
      state: "off"
  action:
    - if: "{{ trigger.id == 'startup' }}"
      then:
        - wait_template: "{{ has_value('group.lights') }}"
          timeout: 300

    - choose:
        - conditions: "{{ trigger.id == 'day_lux' }}"
          sequence:
            - condition: state
              entity_id: binary_sensor.nighttime_illuminance_lights
              state: "off"

            - condition: state
              entity_id: input_select.occupancy_mode
              match: any
              state:
                - Home
                - Guest

            - if:
                - condition: state
                  entity_id: binary_sensor.daytime_illuminance_lights
                  state: "on"
              then:
                - service: script.turn_light_on
                  data:
                    lights: "{{ day_lights }}"
                    activate_timer: false
              else:
                - service: script.turn_light_off
                  data:
                    lights: "{{ day_lights }}"
                    activate_timer: false
      default:
        - if:
            - condition: state
              entity_id: binary_sensor.nighttime_illuminance_lights
              state: "on"
          then:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: input_select.occupancy_mode
                      match: any
                      state:
                        - Home
                        - Guest
                  sequence:
                    - if: # no outside lights in morning
                        - condition: state
                          entity_id: binary_sensor.morning_hours
                          state: "on"
                      then:
                        - service: script.light_scene_on
                          data:
                            scene: morning
                      else:
                        # turn on night lights
                        - service: script.turn_light_on
                          data:
                            lights: "{{ night_lights }}"
                            activate_timer: false

                - conditions:
                    - condition: state
                      entity_id: input_select.occupancy_mode
                      match: any
                      state:
                        - Away
                        - Vacation
                  sequence:
                    # turn on away lights
                    - service: script.turn_light_on
                      data:
                        lights: >
                          {{ expand('group.lights')
                              |selectattr('attributes.away','eq',true)
                              |map(attribute='entity_id')|list }}
                        activate_timer: false
                        bypass_timer: true
                        reset: true

                    # turn off all lights except away lights
                    - service: script.turn_light_off
                      data:
                        lights: >
                          {{ expand('group.lights')
                              |rejectattr('attributes.away','eq',true)
                              |map(attribute='entity_id')|list }}
                        activate_timer: false
                        bypass_timer: true
                        reset: true

                - conditions:
                    - condition: state
                      entity_id: input_select.occupancy_mode
                      state: Night
                  sequence:
                    # turn on night lights
                    - service: script.turn_light_on
                      data:
                        lights: >
                          {{ expand('group.lights')
                              |selectattr('attributes.night','eq',true)
                              |map(attribute='entity_id')|list }}
                        activate_timer: false
                        bypass_timer: true

                    # turn off all lights except night/timed lights
                    - service: script.turn_light_off
                      data:
                        lights: >
                          {{ expand('group.lights')
                              |rejectattr('attributes.night','eq',true)
                              |rejectattr('attributes.timed','eq',true)
                              |map(attribute='entity_id')|list }}
                        activate_timer: false
                        bypass_timer: true
          else:
            - if:
                - condition: state
                  entity_id: binary_sensor.daytime_illuminance_lights
                  state: "on"

                - condition: state
                  entity_id: input_select.occupancy_mode
                  match: any
                  state:
                    - Home
                    - Guest
              then:
                # turn on day lights
                - service: script.turn_light_on
                  data:
                    lights: "{{ day_lights }}"
                    activate_timer: false

                # turn off all lights except day/timed lights
                - service: script.turn_light_off
                  data:
                    lights: >
                      {{ expand('group.lights')
                          |rejectattr('attributes.day','eq',true)
                          |rejectattr('attributes.timed','eq',true)
                          |map(attribute='entity_id')|list }}
                    activate_timer: false
              else:
                # turn off all lights
                - service: script.turn_light_off
                  data:
                    activate_timer: false
                    bypass_timer: "{{ states('input_select.occupancy_mode') in ['Night','Away','Vacation'] }}"
                    reset: "{{ states('input_select.occupancy_mode') in ['Night','Away','Vacation'] }}"
