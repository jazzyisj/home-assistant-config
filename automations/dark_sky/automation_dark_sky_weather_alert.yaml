#######################################################################################################################
## Dark Sky Weather Alert
#######################################################################################################################
- id: dark_sky_weather_alert
  alias: "[Dark Sky] Weather Alert"
  description: Display weather alert on UI, play alert/announcement for severe alerts.
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.dark_sky_alerts

    - platform: state
      entity_id: binary_sensor.startup_complete
      to: 'on'

  condition:
    - condition: state
      entity_id: binary_sensor.startup_complete
      state: 'on'

  action:
    # clear alert severity if no active alerts
    - choose:
        - conditions:
            - condition: numeric_state
              entity_id: sensor.dark_sky_alerts
              below: 1

          sequence:
            - service: input_text.set_value
              data:
                entity_id: input_text.previous_dark_sky_alert_severity
                value: cleared

            - service: input_text.set_value
              data:
                entity_id: input_text.current_dark_sky_alert_severity
                value: cleared

      default:
        # set previous alert severity (from current_dark_sky_alert_severity)
        - service: input_text.set_value
          data:
            entity_id: input_text.previous_dark_sky_alert_severity
            value: "{{ states('input_text.current_dark_sky_alert_severity')|lower }}"

        - service: input_text.set_value
          data:
            entity_id: input_text.current_dark_sky_alert_severity
            value: "{{ state_attr('sensor.dark_sky_alerts','severity_0')|lower }}"

        # only run if new alert is a watch or more severe than previous alert
        - condition: template
          value_template: >
            {% set previous = states('input_text.previous_dark_sky_alert_severity') %}
            {% set current = states('input_text.current_dark_sky_alert_severity') %}
            {% if is_state('sensor.dark_sky_severe_weather_alert','on') %} true
            {% else %}
              {{ previous == 'watch' and current in ['warning']
                  or previous == 'advisory' and current in ['warning','watch']
                  or previous == 'statement' and current in ['warning','watch','advisory']
                  or previous in ['cleared','unknown','unavailable','none']
                    and current in ['warning','watch','advisory','statement'] }}
            {% endif %}

        - service: input_boolean.turn_on
          entity_id: input_boolean.display_weather_alerts

        - service: script.tts_play
          data:
            alert: "{{ 'tornado' in state_attr('sensor.dark_sky_alerts','title_0')|lower }}"
            quiet_play: "{{ states('input_text.current_dark_sky_alert_severity') in ['warning','watch'] }}"
            play_message: |
              Attention!
              Weather Alert!
              Environment Canada has issued a {{ state_attr('sensor.dark_sky_alerts','title_0') }} for your immediate area.
              {{ state_attr('sensor.dark_sky_alerts','description_1').split('###')[0] }}

        - choose:
            - conditions:
                - condition: state
                  entity_id: sensor.dark_sky_severe_weather_alert
                  state: 'on' #TEST
                  # attribute: condition
                  # state: tornado

              sequence:
                - service: browser_mod.popup
                  data:
                    title: Emergency
                    deviceID: "{{ states.sensor|selectattr('attributes.type','eq','browser_mod')|map(attribute='attributes.deviceID')|list }}"
                    large: true
                    card: !include /config/lovelace/include/picture_entity/emergency_card.yaml