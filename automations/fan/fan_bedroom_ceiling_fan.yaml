###############################################################################
## Fan - Turn On Bedroom Ceiling Fan
###############################################################################
- id: fan_turn_on_bedroom_ceiling_fan
  alias: "[Fan] Turn On Bedroom Ceiling Fan"
  description: "Turn on bedroom ceiling fan."
  mode: queued
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.hvac_fan
        - binary_sensor.schedule_fan
        - binary_sensor.bedroom_temperature_fan
      to: "on"
      not_from:
        - unknown
        - unavailable

    - platform: state
      id: alert
      entity_id:
        - alert.indoor_low_temperature
        - alert.indoor_high_temperature
      to: "on"
  condition:
    - condition: state
      entity_id: fan.bedroom_fan
      state: "off"

    - condition: state
      alias: "Not waketime or bedtime"
      entity_id:
        - binary_sensor.bedtime_active
        - binary_sensor.waketime_active
      state: "off"

    - not:
        - condition: state
          entity_id: input_select.occupancy_mode
          state: Night
  action:
    - service: script.turn_fan_on
      data:
        fans: fan.bedroom_fan
        percentage: 50
        bypass_timer: "{{ trigger.id == 'alert' }}"

###############################################################################
## Fan - Turn Off Bedroom Ceiling Fan
###############################################################################
- id: fan_turn_off_bedroom_ceiling_fan
  alias: "[Fan] Turn Off Bedroom Ceiling Fan"
  description: "Turn off bedroom ceiling fan."
  mode: queued
  trigger:
    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 1 # allow timers to cancel

    - platform: state
      entity_id:
        - binary_sensor.hvac_fan
        - binary_sensor.schedule_fan
        - binary_sensor.bedroom_temperature_fan
      to: "off"
      not_from:
        - unknown
        - unavailable

    - platform: state
      id: alert
      entity_id:
        - alert.indoor_low_temperature
        - alert.indoor_high_temperature
      to: idle
  condition:
    - condition: state
      entity_id: fan.bedroom_fan
      state: "on"

    - condition: state
      entity_id:
        - binary_sensor.hvac_fan
        - binary_sensor.schedule_fan
        - binary_sensor.bedroom_temperature_fan
      state: "off"

    - condition: state
      entity_id:
        - alert.indoor_low_temperature
        - alert.indoor_high_temperature
      state: idle

    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: "{{ iif(trigger.id == 'occupancy', is_state('input_boolean.occupancy_override', 'off'), true) }}"
  action:
    - service: script.turn_fan_off
      data:
        fans: fan.bedroom_fan
        bypass_timer: "{{ trigger.id == 'occupancy' }}"
