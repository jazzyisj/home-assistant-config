###############################################################################
## Fan - Office Fan In Use
###############################################################################
- id: fan_office_fan_in_use
  alias: "[Fan] Office Fan In Use"
  description: "Turn in use timer on when device state changes."
  mode: restart
  trigger:
    - platform: state
      entity_id: fan.office_fan
      to: ~
      not_from:
        - unknown
        - unavailable
  action:
    - service: timer.start
      entity_id: timer.office_fan

###############################################################################
## Fan - Office Fan Auto On
###############################################################################
- id: fan_office_fan_auto_on
  alias: "[Fan] Office Fan Auto On"
  description: "Turn ceiling fan on."
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.hvac_fan
        - binary_sensor.schedule_fan
      to: "on"
      from: "off"
  condition:
    - condition: state
      entity_id: fan.office_fan
      state: "off"

    - condition: state
      entity_id: timer.office_fan
      state: idle
  action:
    # prevent triggering device in use timers
    - service: automation.turn_off
      entity_id: automation.fan_office_fan_in_use

    - service: fan.turn_on
      target:
        entity_id: fan.office_fan
      data:
        percentage: 50 # fan auto on default speed

    - wait_template: "{{ is_state('fan.office_fan','on') }}"
      timeout: 15

    - service: automation.turn_on
      entity_id: automation.fan_office_fan_in_use

###############################################################################
## Fan - Office Fan Auto Off
###############################################################################
- id: fan_office_fan_auto_off
  alias: "[Fan] Office Fan Auto Off"
  description: "Turn ceiling fan off."
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: fan.office_fan
      for:
        hours: 8

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation
      for:
        minutes: 1 # allow timer to cancel

    - platform: state
      id: schedule
      entity_id:
        - binary_sensor.hvac_fan
        - binary_sensor.schedule_fan
      to: "off"
      from: "on"
  condition:
    - condition: state
      entity_id: fan.office_fan
      state: "on"

    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: "{{ iif(trigger.id == 'occupancy',is_state('input_boolean.occupancy_override','off'),true) }}"

    - condition: state
      alias: "HVAC fan or fan schedule is not on"
      entity_id:
        - binary_sensor.hvac_fan
        - binary_sensor.schedule_fan
      state: "off"

    - condition: state
      entity_id: timer.office_fan
      state: idle
  action:
    # prevent triggering device in use timers
    - service: automation.turn_off
      entity_id: automation.fan_office_fan_in_use

    - service: fan.turn_off
      entity_id: fan.office_fan

    - wait_template: "{{ is_state('fan.office_fan','off') }}"
      timeout: 15

    - service: automation.turn_on
      entity_id: automation.fan_office_fan_in_use
