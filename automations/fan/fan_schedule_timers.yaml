###############################################################################
## Fan Schedule - On
###############################################################################
- id: fan_schedule_on
  alias: "[Fan] Schedule On"
  description: "Start fan schedule when turned on."
  mode: restart
  trigger:
    - platform: state
      entity_id: input_boolean.fan_schedule
      to: "on"

    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.fan_schedule_delay
  condition:
    - condition: state
      entity_id: input_boolean.fan_schedule
      state: "on"
  action:
    - service: timer.start
      target:
        entity_id: timer.fan_schedule_duration
      data:
        duration:
          minutes: "{{ states('input_number.fan_schedule_duration') | int(0) }}"

###############################################################################
## Fan Schedule - Off
###############################################################################
- id: fan_schedule_off
  alias: "[Fan] Schedule Off"
  description: "Stop fan schedule when turned off."
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: input_boolean.fan_schedule
      to: "off"

    - platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.fan_schedule_duration

    - platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.fan_schedule_delay
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.fan_schedule

    - if: "{{ is_state_attr('climate.thermostat', 'fan_mode', 'on') }}"
      then:
        - service: climate.set_fan_mode
          target:
            entity_id: climate.thermostat
          data:
            fan_mode: "off"

    - if:
        - condition: state
          entity_id: timer.fan_schedule_duration
          state:
            - paused
            - active
      then:
        - service: timer.cancel
          entity_id: timer.fan_schedule_duration

    - if:
        - condition: state
          entity_id: timer.fan_schedule_delay
          state:
            - paused
            - active
      then:
        - service: timer.cancel
          entity_id: timer.fan_schedule_delay

###############################################################################
## Fan Schedule Delay
###############################################################################
- id: fan_schedule_delay
  alias: "[Fan] Schedule Delay"
  description: "Start fan schedule delay."
  mode: restart
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.fan_schedule_duration
  condition:
    - condition: state
      entity_id: input_boolean.fan_schedule
      state: "on"
  action:
    - service: timer.start
      target:
        entity_id: timer.fan_schedule_delay
      data:
        duration:
          minutes: "{{ states('input_number.fan_schedule_delay') | int(0) }}"

###############################################################################
## Fan Schedule - Adjusted
###############################################################################
- id: fan_schedule_adjusted
  alias: "[Fan] Schedule Adjusted"
  description: "Reset fan schedule when duration/delay adjusted."
  mode: restart
  trigger:
    - platform: state
      entity_id:
        - input_number.fan_schedule_duration
        - input_number.fan_schedule_delay
  condition:
    - condition: state
      entity_id: input_boolean.fan_schedule
      state: "on"
  action:
    - delay: 30 # throttle to let user finish adjusting values

    - choose:
        - conditions:
            - condition: state
              entity_id: timer.fan_schedule_duration
              state:
                - active
                - paused
          sequence:
            - service: timer.start
              target:
                entity_id: timer.fan_schedule_duration
              data:
                duration:
                  seconds: "{{ states('input_number.fan_schedule_duration') | int(0)*60 + 5 }}"

        - conditions:
            - condition: state
              entity_id: timer.fan_schedule_delay
              state:
                - active
                - paused
          sequence:
            - service: timer.start
              target:
                entity_id: timer.fan_schedule_delay
              data:
                duration:
                  seconds: "{{ states('input_number.fan_schedule_delay') | int(0)*60 + 5 }}"

    - service: browser_mod.notification
      data:
        duration: 30000
        message: "Scheduled climate fan timers have been adjusted."
