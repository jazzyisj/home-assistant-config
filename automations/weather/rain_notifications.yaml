###############################################################################
## Weather - Radar Notification
###############################################################################
- id: weather_radar_notification
  alias: "[Weather] Radar Notification"
  description: "Send radar snapshot notification."
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: alert.rain_alert
      to: "on"

    - platform: time
      at: sensor.rain_start

    - platform: template
      value_template: >
        {{ is_state('binary_sensor.rain_today', 'on')
            and is_state('binary_sensor.work_today', 'on')
            and is_state('sensor.work_shift_today', 'Days')
            and states('sensor.time') == '15:50' }}

    - platform: template
      value_template: >
        {{ is_state('binary_sensor.rain_today', 'on')
            and ((is_state('binary_sensor.work_today', 'on')
                and is_state('sensor.work_shift_today', 'Afternoons'))
              or is_state('binary_sensor.work_today', 'off'))
            and states('sensor.time') == '10:45' }}
  condition:
    - condition: state
      entity_id: alert.rain_alert
      state: "on"

    - condition: time
      after: "10:00:00"
      before: "22:00:00"
  action:
    - variables:
        url: "{% from 'file.jinja' import snapshot_filename %}{{ snapshot_filename('weather_snapshots', 'windsor_radar') }}"

    - service: camera.snapshot
      target:
        entity_id: camera.windsor_radar
      data:
        filename: "/config/www{{ url }}"
      continue_on_error: true

    - service: notify.jason
      data:
        message: |
          {%- from 'value.jinja' import rain_text -%}
          {{- rain_text() -}}
        data:
          tag: windsor_radar
          group: General
          channel: Alert
          importance: max
          ttl: 0
          priority: high
          visibility: public
          notification_icon: mdi:weather-rainy
          icon_url: !secret STORM_ICON
          image: "/local{{ url }}"
          ledColor: !secret MINOR_COLOR
          color: !secret MINOR_COLOR
          vibrationPattern: !secret ALERT_VIBRATION
          clickAction: /ui-mobile/storm-radar
          actions:
            - title: "Pause"
              action: pause_alert_rain_alert
      continue_on_error: true

###############################################################################
## Weather - Rain Soon
###############################################################################
- id: weather_rain_soon
  alias: "[Weather] Rain Soon"
  description: "Reminder if it's going to rain soon."
  trigger:
    - platform: time
      at: sensor.rain_start
  condition:
    - condition: state
      entity_id: sensor.precipitation_type
      state: none

    - condition: state
      entity_id: alert.rain_alert
      state: "on"

    - condition: state
      entity_id: binary_sensor.jason_home
      state: "on"
  action:
    - service: script.tts_play
      data:
        message: |
          Hey Jay, just a reminder that it's probably going to rain soon.
          Have you left the Jeep windows open again you chucklefuck?
        quiet_play: true

###############################################################################
## Weather - Rain Start
###############################################################################
- id: weather_rain_start
  alias: "[Weather] Rain Start"
  description: "Reminder when it starts raining."
  trigger:
    - platform: state
      entity_id: sensor.precipitation_type
      to: rain
      from: none
  condition:
    - condition: state
      entity_id: sensor.precipitation_type
      state: none

    - condition: state
      entity_id: alert.rain_alert
      state: "on"

    - condition: state
      entity_id: binary_sensor.jason_home
      state: "on"
  action:
    - service: script.tts_play
      data:
        message: "Jay, it's starting to rain now.  Have you checked the damn Jeep windows yet?"
        quiet_play: true
