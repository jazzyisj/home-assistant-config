###############################################################################
## Weather - Precipitation Alert Notification
###############################################################################
- id: weather_precipitation_alert_notification
  alias: "[Weather] Precipitation Alert Notification"
  description: "Precipitation alert notification."
  max_exceeded: silent
  triggers:
    - platform: state
      entity_id: alert.precipitation
      to: "on"

    # notification after work - windows, walk dog etc.
    - platform: template
      value_template: >
        {{ is_state('binary_sensor.precipitation_likely_today', 'on')
            and is_state('binary_sensor.work_today', 'on')
            and is_state('sensor.work_shift_today', 'Days')
            and states('sensor.time') == '15:50' }}

    # notification before work - windows, walk dog etc.
    - platform: template
      value_template: >
        {{ is_state('binary_sensor.precipitation_likely_today', 'on')
            and ((is_state('binary_sensor.work_today', 'on')
                and is_state('sensor.work_shift_today', 'Afternoons'))
              or is_state('binary_sensor.work_today', 'off'))
            and states('sensor.time') == '10:45' }}
  conditions:
    - condition: time
      alias: "Prevent notifications at night"
      after: "08:00:00"
      before: "22:00:00"

    - condition: template
      alias: "Only once every 2 hours"
      value_template: >
        {{ true if this.attributes.last_triggered == none
            else now() - this.attributes.last_triggered > timedelta(hours=2) }}

    - condition: state
      entity_id: alert.precipitation
      state: "on"
  actions:
    - variables:
        file: >
          {%- from 'camera.jinja'import snapshot_filename -%}
          weather_snapshots/{{- snapshot_filename('windsor_radar') -}}

    - action: camera.snapshot
      target:
        entity_id: camera.windsor_radar
      data:
        filename: "/config/www/{{ file }}"
      continue_on_error: true

    - action: notify.jason
      data:
        message: |
          {%- from 'weather.jinja' import precipitation_text -%}
          {{- precipitation_text() -}}
        data:
          tag: windsor_radar
          group: Weather
          visibility: public
          notification_icon: mdi:weather-rainy
          icon_url: !secret STORM_ICON
          image: "/local/{{ file }}"
          ledColor: !secret MINOR_COLOR
          color: !secret MINOR_COLOR
          vibrationPattern: !secret ALERT_VIBRATION
          clickAction: /ui-mobile/storm-radar
          actions:
            - title: "Pause"
              action: pause_alert_precipitation

###############################################################################
## Weather - Rain Announcement
###############################################################################
- id: weather_rain_announcement
  alias: "[Weather] Rain Announcement"
  description: "Announcement when it's about to rain or it starts raining."
  triggers:
    - platform: state
      entity_id: alert.precipitation
      to: "on"
  conditions:
    - condition: state
      entity_id: binary_sensor.freezing
      state: "off"

    - condition: state
      entity_id: binary_sensor.jason_home
      state: "on"

    - condition: template
      alias: "Only once every 4 hours"
      value_template: >
        {{ true if this.attributes.last_triggered == none
            else now() - this.attributes.last_triggered > timedelta(hours=4) }}
  actions:
    - action: script.tts_play
      data:
        message: >
          Hey Knucklehead!
          {{ iif(is_state('sensor.precipitation_type','Rain'),'It is starting to rain.',
              'It is probably going to start raining soon.') }}
          Have you checked the Jeep windows yet?
        quiet_play: true
        save_message: "{{ is_state('binary_sensor.jason_home','on') }}"
