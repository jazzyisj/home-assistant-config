###############################################################################
## Lock - Status Update
###############################################################################
- id: lock_status_update
  alias: '[Lock] Status Update'
  description: 'Update lock status.'
  mode: parallel
  variables:
    node_id: "{{ trigger.event.data['node_id']|int(-1) }}"
    lock_name: >
      {{ (states.sensor|selectattr('attributes.node_id','eq',trigger.event.data['node_id']|int(-1))
            |map(attribute='entity_id')|join('')).split('.')[1][:-12] }}
    userID: >
      {% if trigger.event.data.parameters is defined %}
        {% if trigger.event.data.parameters['userId'] is defined %}
          {{ trigger.event.data.parameters['userId']|int(-1) }}
        {% endif %}
      {% endif %}
    user: >
      {% set users = ['Jason','Sheri','Dawn'] %}
      {{ 'Keypad' if userID|int(-1) < 1 else users[userID|int(-1) -1] }}
    event_label: "{{ trigger.event.data['event_label'] }}"
  trigger:
    - platform: event
      event_type: zwave_js_notification
  condition:
    - "{{ event_label.endswith('lock operation') and node_id > 0 }}"
    - "{{ lock_name != '' }}"
  action:
    - service: input_text.set_value
      target:
        entity_id: 'input_text.{{ lock_name }}_status'
      data:
        value: >
          {% if event_label == 'Manual unlock operation' %} Unlocked (Manual)
          {% elif event_label == 'Manual lock operation' %} Locked (Manual)
          {% elif event_label == 'RF unlock operation' %} Unlocked (Hassio)
          {% elif event_label == 'RF lock operation' %} Locked (Hassio)
          {% elif event_label == 'Keypad unlock operation' %} Unlocked ({{ user }})
          {% elif event_label == 'Keypad lock operation' %} Locked ({{ user }})
          {% else %} Unknown
          {% endif %}
