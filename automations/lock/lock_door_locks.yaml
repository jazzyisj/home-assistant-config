###################################################################################################
## Lock Door Locks
###################################################################################################
- id: lock_door_locks
  alias: "Lock Door Locks"
  description: "Lock entry door locks."
  mode: queued # not parallel so locks already locked are skipped, reduce zwave congestion
  triggers:
    - trigger: state
      id: alarm
      entity_id: alarm_control_panel.house
      to:
        - armed_home
        - armed_night
        - armed_away
        - armed_vacation

    - trigger: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Night
        - Away
        - Vacation
      for: 1 # allow occupancy mode reset

    - trigger: state
      id: unlocked
      entity_id:
        - lock.back_door_lock
        - lock.front_door_lock
        - lock.side_door_lock
        - lock.garage_side_door_lock
      to: unlocked
      for:
        minutes: 10

    - trigger: state
      id: lock_keypad
      entity_id:
        - sensor.back_door_lock_status
        - sensor.front_door_lock_status
        - sensor.side_door_lock_status
        - sensor.garage_side_door_lock_status
      to:
        - Locked (Keypad)
        - Locked (Guest)
        - Locked (Jason)
      not_from:
        - unknown
        - unavailable
      for:
        minutes: 1 # prevent trigger if user mistakenly locks, unlocks again right away
  conditions:
    - condition: template
      alias: "Alarm enabled if alarm trigger"
      value_template: "{{ is_state('input_boolean.alarm_enabled', 'on') if trigger.id == 'alarm' else true }}"

    - condition: template
      alias: "Alarm is not disarmed if trigger is unlocked, else one or more locks are unlocked"
      value_template: >
        {{ not is_state('alarm_control_panel.house', 'disarmed')
            if trigger.id == 'unlocked' else is_state('group.door_locks', 'unlocked') }}
  actions:
    - action: script.lock_door_locks
      data:
        entity_id: "{{ state_attr('group.door_locks', 'entity_id') }}"

    - delay: 60 # throttle
