#######################################################################################################################
## Alarm - Disarmed
#######################################################################################################################
- id: alarm_disarmed
  alias: "[Alarm] Disarmed"
  description: Play announcement and activate home mode when alarm disarmed.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: alarm_control_panel.house
      to: disarmed

  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.previous_alarm_state
        option: "{{ trigger.from_state.state }}"

    - service: timer.cancel
      entity_id:
        - timer.alarm_pending
        - timer.alarm_warning

    # cleared to ensure lasted changed attribute is updated
    - service: input_text.set_value
      data:
        entity_id: input_text.alarm_disarmed_by
        value: cleared

    - service: input_text.set_value
      data:
        entity_id: input_text.alarm_disarmed_by
        value: >
          {%- set cb = state_attr('alarm_control_panel.house','changedbyuser') -%}
          {%- if cb|lower in ['unknown','unavailable','none',''] -%} Unknown
          {%- else -%}
            {%- set name = namespace() -%}
            {%- for user in states.alarm_control_panel.house.attributes.users -%}
              {%- if states.alarm_control_panel.house.attributes.users[loop.index0].id == cb -%}
              {%- set name.value = states.alarm_control_panel.house.attributes.users[loop.index0].name|title -%}
              {%- endif -%}
            {%- endfor -%}
            {{- name.value -}}
          {%- endif -%}

    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.alarm_auto_arming
              state: 'on'

            - condition: state
              entity_id: input_text.alarm_disarmed_by
              state: 'Guest'

          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.guest_home

    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.someone_home
              state: 'on'

          sequence:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: input_boolean.alarm_auto_arming
                      state: 'on'

                  sequence:
                    - service: input_select.select_option
                      data:
                        entity_id: input_select.occupancy_mode
                        option: "{{ 'Night' if is_state('input_select.occupancy_mode','Night') else 'Home' if is_state('binary_sensor.owner_home','on') else 'Guest' }}"

                    - choose:
                        - conditions:
                            - condition: state
                              entity_id:
                                - input_boolean.media_player_automation
                                - input_boolean.alarm_warning
                              state: 'on'

                            - condition: state
                              entity_id: input_boolean.alarm_triggered
                              state: 'off'

                          sequence:
                            - service: script.resume_media_players_speaker

                            - service: script.set_media_player_volumes
                              data:
                                source: house_alarm_off

                    - choose:
                        - conditions:
                            - condition: state
                              entity_id: input_boolean.alarm_triggered
                              state: 'on'

                          sequence:
                            - service: timer.start
                              entity_id: timer.alarm_triggered_reset

      default:
        - service: browser_mod.close_popup

        # wait to see if someone comes home
        - delay:
            minutes: 5

        - condition: state
          entity_id: binary_sensor.someone_home
          state: 'off'

        - service: notify.alarm
          data:
            title: House Alarm Disarmed
            message: The house alarm was disarmed but nobody is home!
            data:
              subject: Disarmed Warning
              tag: alarm_disarmed_warning
              group: Alarm
              channel: Alert
              importance: max
              timeout: 3600
              clickAction: /lovelace/alarm
              color: !secret WARNING_COLOR
              icon_url: !secret ALERT_ICON
              actions:
                - title: Cameras
                  action: URI
                  uri: app://com.flir.consumer.flir.lorexcloud

        #OPTION - choose:
        #     - conditions:
        #         - condition: state
        #           entity_id: input_boolean.alarm_auto_arming
        #           state: 'on'

        #       sequence:
        #         - service: input_select.select_option
        #           data:
        #             entity_id: input_select.occupancy_mode
        #             option: "{{ states('input_select.previous_alarm_state') }}"






