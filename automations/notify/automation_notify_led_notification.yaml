###############################################################################
## Notify - LED Notification
###############################################################################
- id: notify_led_notification
  alias: '[Notify] LED Notification'
  description: 'Set LED notification.'
  mode: queued
  max: 50
  max_exceeded: error
  variables:
    alert_type: >
      {% if is_state('alarm_control_panel.master','triggered') %} triggered
      {% elif is_state('input_boolean.alarm_triggered','on') %} was_triggered
      {% elif trigger.entity_id == 'input_boolean.alarm_triggered' %} reset
      {% else %} {{ trigger.id }}
      {% endif %}
    entities: >
      {% if alert_type in ['triggered','was_triggered'] %}
        {{ states|selectattr('domain','in',['light','switch'])
            |selectattr('attributes.notify_led','eq',true)|map(attribute='entity_id')|list }}
      {% else %}
        {{ states|selectattr('domain','in',['light','switch'])
            |selectattr('attributes.led_' ~ alert_type,'eq',true)|map(attribute='entity_id')|list }}
      {% endif %}
  trigger:
    - platform: state
      id: media
      entity_id:
        - input_boolean.mute_all

    - platform: state
      id: alarm_clock
      entity_id:
        - binary_sensor.alarm_clock
        - input_boolean.alarm_clock_failed # use boolean, no delay

    - platform: state
      id: alarm
      entity_id:
        - input_boolean.alarm_triggered # on-was_triggered, off-reset
        - alert.door_lock_jammed
        - alert.door_lock_failed
        - binary_sensor.alarm_open_sensor_alert

    - platform: state
      id: alarm
      entity_id: alarm_control_panel.master
      to: # triggered covered by input_boolean.alarm_triggered
        - armed_home
        - armed_night
        - armed_away
        - arming
        - pending
        - disarmed
      for: 2 # avoid triggering on temp state changes, allow open/bypass sensor to set

    - platform: state
      id: reminder
      entity_id:
        - input_boolean.maddie_mealtime_active
        - input_boolean.dexter_medication_active
        - input_boolean.jason_medication_active
        - input_boolean.hot_tub_maintenance_active
        - input_boolean.garbage_alert
        - input_boolean.recycle_alert
        - input_boolean.yardwaste_alert

    - platform: state
      id: weather
      entity_id:
        - binary_sensor.outdoor_high_temperature_alert
        - binary_sensor.outdoor_low_temperature_alert
        - binary_sensor.storm_approaching_alert
        - binary_sensor.envcan_weather_alert
        - binary_sensor.noaa_weather_alert

    - platform: state
      id: scene
      entity_id:
        - binary_sensor.bedtime_active
        - input_boolean.bedtime_delayed
        - input_boolean.company_mode
        - input_boolean.movie_mode
        - input_boolean.chill_mode
      for: 5 # prevent trigger on temporary state changes

    - platform: state
      id: shower
      entity_id: input_boolean.shower_mode

    - platform: state
      id: garage
      entity_id:
        - cover.garage_door_opener
        - binary_sensor.garage_door_connected
        - input_boolean.garage_door_close_alert
        - input_boolean.garage_door_open_alert

    - platform: state
      id: presence
      entity_id:
        - binary_sensor.jason_home
        - binary_sensor.sheri_home
        - input_boolean.jason_almost_home
        - input_boolean.sheri_almost_home
        - binary_sensor.jason_phone_connected
        - binary_sensor.sheri_phone_connected
      for: 5 # prevent trigger on temporary state changes

    - platform: numeric_state
      id: presence
      entity_id:
        - proximity.jphone_home
        - proximity.sphone_home
      below: 4 # km

    - platform: state
      id: hass
      entity_id: input_boolean.startup_pending
      to: 'off'
  condition: >
    {{ true if is_state('input_boolean.alarm_triggered','off')
        else trigger.id == 'alarm' }}
  action:
    - choose:
        - conditions: "{{ alert_type == 'reset' }}"
          sequence:
            - service: script.led_reset
      default:
        - choose:
            - conditions: "{{ alert_type == 'hass' }}"
              sequence:
                - service: script.led_reset
                - delay: 5 #ZWAVE must finish reset before script.led_notification runs

        - service: script.turn_on
          target:
            entity_id: script.led_notification
          data:
            variables:
              entities: '{{ entities }}'
              alert_type: '{{ alert_type }}'
