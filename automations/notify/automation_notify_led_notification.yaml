#######################################################################################################################
## Notify - LED Notification
#######################################################################################################################
- id: notify_led_notification
  alias: "[Notify] LED Notification"
  description: "Set LED notification."
  mode: queued
  max: 50
  max_exceeded: error
  variables:
    alert_type: >
      {% if is_state('alarm_control_panel.master','triggered') %} triggered
      {% elif is_state('input_boolean.alarm_triggered','on') %} was_triggered
      {% elif trigger.entity_id == 'input_boolean.alarm_triggered' %} reset
      {% elif trigger.entity_id in ['alarm_control_panel.master','alert.door_lock_jammed','alert.door_lock_failed','binary_sensor.alarm_open_sensor_alert'] %} alarm
      {% elif trigger.entity_id in ['binary_sensor.jason_home','binary_sensor.sheri_home','input_boolean.jason_almost_home',
          'input_boolean.sheri_almost_home','proximity.jphone_home','proximity.sphone_home'] %} presence
      {% elif trigger.entity_id in ['cover.garage_door_opener','binary_sensor.garage_door_connected','input_boolean.garage_door_alert'] %} garage
      {% elif trigger.entity_id in ['binary_sensor.alarm_clock','input_boolean.alarm_clock_failed'] %} alarm_clock
      {% elif trigger.entity_id in ['binary_sensor.outdoor_high_temperature_alert','binary_sensor.outdoor_low_temperature_alert',
          'binary_sensor.storm_approaching_alert','binary_sensor.envcan_weather_alert','binary_sensor.noaa_weather_alert',
          'binary_sensor.weather_led_alert'] %} weather
      {% elif trigger.entity_id in ['input_boolean.bedtime_delayed','binary_sensor.bedtime_active'] %} bedtime
      {% elif trigger.entity_id in ['input_boolean.maddie_mealtime_active','input_boolean.dexter_medication_active',
          'input_boolean.jason_medication_active','input_boolean.hot_tub_maintenance_active'] %} reminder
      {% elif trigger.entity_id == 'input_boolean.mute_all' %} media
      {% elif trigger.entity_id == 'input_boolean.shower_mode' %} shower
      {% elif trigger.entity_id == 'input_boolean.startup_pending' %} hass
      {% endif %}
    entities: >
      {% if alert_type in ['triggered','was_triggered'] %}
        {{ states|selectattr('domain','in',['light','switch'])
            |selectattr('attributes.notify_led','eq',true)|map(attribute='entity_id')|list }}
      {% else %}
        {{ states|selectattr('domain','in',['light','switch'])
            |selectattr('attributes.led_' ~ alert_type,'eq',true)|map(attribute='entity_id')|list }}
      {% endif %}
  trigger:
    - platform: state
      entity_id:
        - cover.garage_door_opener
        - binary_sensor.garage_door_connected
        - input_boolean.garage_door_alert

        - binary_sensor.outdoor_high_temperature_alert
        - binary_sensor.outdoor_low_temperature_alert
        - binary_sensor.storm_approaching_alert
        - binary_sensor.envcan_weather_alert
        - binary_sensor.noaa_weather_alert

        - binary_sensor.bedtime_active
        - binary_sensor.alarm_clock
        - input_boolean.alarm_clock_failed # use boolean, no delay

        - input_boolean.maddie_mealtime_active
        - input_boolean.dexter_medication_active
        - input_boolean.jason_medication_active
        - input_boolean.hot_tub_maintenance_active

        - input_boolean.mute_all

        - input_boolean.alarm_triggered # on-was_triggered, off-reset
        - alert.door_lock_jammed
        - alert.door_lock_failed
        - binary_sensor.alarm_open_sensor_alert

    - platform: state
      entity_id: input_boolean.shower_mode

    - platform: state
      entity_id: alarm_control_panel.master
      to: # triggered covered by input_boolean.alarm_triggered
        - armed_home
        - armed_night
        - armed_away
        - arming
        - pending
        - disarmed
      for: 2 # avoid triggering on temp state changes, allow open/bypass sensor to set

    - platform: state
      entity_id:
        - binary_sensor.jason_home
        - binary_sensor.sheri_home
        - input_boolean.jason_almost_home
        - input_boolean.sheri_almost_home
        - input_boolean.bedtime_delayed
      for: 5 # prevent trigger on temporary state changes

    - platform: state
      entity_id: input_boolean.startup_pending
      to: 'off'
  condition: "{{ true if is_state('input_boolean.alarm_triggered','off') else trigger.entity_id == 'input_boolean.alarm_triggered' }}"
  action:
    - choose:
        - conditions: "{{ alert_type == 'reset' }}"
          sequence:
            - service: script.led_reset
      default:
        - choose:
            - conditions: "{{ alert_type == 'hass' }}"
              sequence:
                - service: script.led_reset # clear leds
                - delay: 5 #ZWAVE must finish reset before script.led_notification runs

        - service: script.turn_on
          target:
            entity_id: script.led_notification
          data:
            variables:
              entities: "{{ entities }}"
              alert_type: "{{ alert_type }}"
