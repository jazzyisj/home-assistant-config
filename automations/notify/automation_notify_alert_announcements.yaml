###############################################################################
## Notify - Alert Announcements
###############################################################################
- id: notify_alert_announcements
  alias: "[Notify] Alert Announcements"
  description: "Play alert tts announcement."
  mode: parallel
  variables:
    message: >
      {%- set t = trigger.entity_id %}
      {%- if t == 'alert.air_quality' %}
        Attention! There is an active air quality alert.
        The current air quality index is, {{ states('sensor.aqi_risk_level') }}.
      {%- elif t == 'alert.flu_risk' %}
        Attention! The flu risk alert is now on.
        The flu risk for today is {{ states('sensor.flu_risk_today') }}.
      {%- elif t == 'alert.asthma_risk' %}
        Attention! The asthma risk alert is now on.
        The asthma risk for today is {{ states('sensor.asthma_risk_today') }}, and it will be {{ states('sensor.asthma_risk_tomorrow') }} tomorrow.
      {%- elif t == 'alert.allergy_risk' %}
        Attention! The allergy risk alert is now on.
        The allergy risk for today is {{ states('sensor.allergy_risk_today')}}, and it will be {{ states('sensor.allergy_risk_tomorrow')}} tomorrow.
      {%- elif t == 'alert.storm_approaching' %}
        There is a {{ states('sensor.precipitation_type') if has_value('sensor.precipitation_type') }} storm
        {%- set dist = states('sensor.nearest_storm_distance')|int(-1) %}
        {{- dist if dist > 0 else ' in the immediate vicinity' }}
        {{- ' kilometer away' if dist == 1 else ' kilometers away' if dist > 1 }}
        {{- ', approaching from the ' ~ states('sensor.storm_full_direction') if has_value('sensor.storm_full_direction') }}.
        {%- if has_value('sensor.pirateweather_minutely_summary') %}
        The current forecast is {{ states('sensor.pirateweather_minutely_summary')|replace('<',' less than ')|replace('>','greater than') }}
        {%- endif %}
      {%- elif t == 'alert.strong_wind' %}
        Attention! It's getting a little windy out there!
        The current wind speed is {{ states('sensor.wind_speed')|int(0) }} kilometers per hour,
        with gusts approaching {{ states('sensor.wind_gust')|int(0) }} kilometers per hour.
      {%- elif t == 'alert.uv_risk' %}
        Attention! The UV risk alert is now on.
        You need to hide all you're pastey red headed step children right now!
        The current UV risk level is {{ states('sensor.current_uv_level') }},
        and today's maximum level will be {{ states('sensor.uv_risk_today') }}.
      {%- elif t == 'alert.outdoor_low_temperature' %}
        Yah shes colder den duh witches titties out dare for shore!
        The outdoor low temperature alert is now on.
        The current wind chill temperature is {{ '%0.1f'|format(states('sensor.outdoor_apparent_temperature')|float('unknown')) }} degrees.
      {%- elif t == 'alert.outdoor_high_temperature' %}
        Yep, it's hot as balls out there today folks!
        The outdoor high temperature alert is now on.
        The current humidex is {{ '%0.1f'|format(states('sensor.outdoor_apparent_temperature')|float('unknown')) }} nut sack soakin degrees.
      {# spa temp #}
      {%- elif t == 'alert.leak_detected' %}
        {% set entities = expand(state_attr('binary_sensor.leak_detected_alert','entity_id')) %}
        {% set names = entities|map(attribute='name')|join(', ') %}
        {% set clist = ', and ' if names.split(', ')|count > 2 else ' and ' %}
        {% set qty = entities|count %}
        {% set plural = 'sensors' if qty > 1 else 'sensor' %}
        Attention! Moisture has been detected by the
        {{ clist.join(names.rsplit(', ', 1)) }} {{ plural }}!
      {%- elif t == 'alert.unavailable_leak_sensor' %}
        {% set entities = expand(state_attr('binary_sensor.unavailable_leak_sensor','entity_id')) %}
        {% set names = entities|map(attribute='name')|join(', ') %}
        {% set clist = ', and ' if names.split(', ')|count > 2 else ' and ' %}
        {% set qty = entities|count %}
        {% set plural = 's are' if qty > 1 else ' is' %}
        Attention! The {{ clist.join(names.rsplit(', ', 1)) }} leak sensor{{ plural }} offline!
      {%- elif t == 'alert.power_use' %}
        Attention! The household power use alert is active.
        The current power usage is {{ states('sensor.current_power_use_kw') }} kilowatts!
        You should probably turn something off.
      {%- elif t == 'alert.garage_extended_heat' %}
        Attention! The garage heat has been on for a while.
        The garage temperature is {{ '%0.1f'|format(states('sensor.garage_sensor_air_temperature')|float(-99)) }} degrees.
      {%- elif t == 'alert.garage_high_temperature' %}
        Attention! The garage heat has been turned off because the high temperature alert is active.
        The garage temperature is {{ '%0.1f'|format(states('sensor.garage_sensor_air_temperature')|float(-99)) }} degrees,
        and the thermostat is set to {{ '%0.1f'|format(state_attr('climate.garage_thermostat','temperature')|float(-99)) }} degrees.
      {%- elif t == 'alert.garage_low_temperature' %}
        Attention! The garage low temperature alert is active.
        The garage temperature is {{ '%0.1f'|format(states('sensor.garage_sensor_air_temperature')|float(-99)) }} degrees,
        and the thermostat is set to {{ '%0.1f'|format(state_attr('climate.garage_thermostat','temperature')|float(-99)) }} degrees.
      {%- elif t == 'alert.garage_temperature_throttle' %}
        Attention! The garage temperature is {{ state_attr('climate.garage_thermostat','current_temperature') }} degrees,
        and the thermostat is set to {{ state_attr('climate.garage_thermostat','temperature') }} degrees.
      {%- elif t == 'alert.alarm_zone_sync' %}
        {%- set master = states('sensor.master_alarm_status') %}
        {%- set house = states('sensor.house_alarm_status') %}
        {%- set garage = states('sensor.garage_alarm_status') %}
        Attention! The master alarm is {{ master }}, but the
        {%- if garage != master %} garage alarm is {{ garage }}
        {%- elif house != master %} house alarm is {{ house }}
        {%- endif %}.
      {%- elif t == 'alert.indoor_high_humidity' %}
        {%- set thresh = states('input_number.high_humidity_threshold')|int(0) %}
        {%- set thermostat = states('sensor.thermostat_humidity')|int(0) %}
        {%- set bathroom = states('sensor.bathroom_sensor_humidity')|int(0) %}
        Attention!
        The indoor humidity alert is active.
        {%- if thermostat > thresh %} The current indoor humidity level is {{ t }} percent{% endif %}
        {%- if thermostat > thresh and bathroom > thresh %} and, {% endif %}
        {%- if bathroom > thresh %} The bathroom temperature is {{ bathroom }} percent{% endif %}.
      {%- elif t == 'alert.indoor_high_temperature' %}
        {%- set thresh = states('input_number.high_temperature_threshold')|float %}
        {%- set thermostat = '%0.1f'|format(states('sensor.thermostat_temperature')|float('unknown'))|float %}
        {%- set bathroom = '%0.1f'|format(states('sensor.bathroom_sensor_air_temperature')|float('unknown'))|float %}
        Attention!
        The indoor high temperature alert is active.
        {%- if thermostat > thresh %} The current indoor temperature is {{ t }} degrees{% endif %}
        {%- if thermostat > thresh and bathroom > thresh %} and, {% endif %}
        {%- if bathroom > thresh %} The bathroom temperature is {{ bathroom }} degrees{% endif %}.
      {%- elif t == 'alert.indoor_low_temperature' %}
        {%- set thresh = states('input_number.low_temperature_threshold')|float %}
        {%- set thermostat = '%0.1f'|format(states('sensor.thermostat_temperature')|float('unknown'))|float %}
        {%- set bathroom = '%0.1f'|format(states('sensor.bathroom_sensor_air_temperature')|float('unknown'))|float %}
        Attention!
        The indoor low temperature alert is active.
        {%- if thermostat < thresh %} The current indoor temperature is {{ t }} degrees{% endif %}
        {%- if thermostat < thresh and bathroom < thresh %} and, {% endif %}
        {%- if bathroom < thresh %} The bathroom temperature is {{ bathroom }} degrees{% endif %}.
      {%- elif t == 'alert.hvac_window_door_open' %}
        {%- set msg = namespace(value='') %}
        {%- set entities = expand(state_attr('binary_sensor.hvac_window_door_open_alert','entity_id')) %}
        {%- set qty = entities|count %}
        {%- for item in entities %}
          {%- if not loop.first %}{% set msg.value = msg.value ~ ', ' %}{% endif %}
          {%- set msg.value = msg.value ~ item.name|replace(' Open Alert','') %}
        {%- endfor %}
        {%- set clist = ', and ' if msg.value.split(', ')|count > 2 else ' and ' %}
        {%- set plural = ' are' if qty|int(0) > 1 else ' is' %}
        Attention! The thermostat has been turned off.
        The {{ clist.join(msg.value.rsplit(', ',1)) ~ plural }} open!
      {%- elif t == 'alert.bathroom_mold_risk' %}
        Attention! The bathroom mold risk alert is active.
      {%- elif t == 'alert.door_lock_malfunction' %}
        {%- set sensors = states.input_boolean
            |selectattr('entity_id','search','_door_lock_malfunction')
            |selectattr('state','eq','on')
            |map(attribute='entity_id')|list|sort %}
        {%- set msg = namespace(value='') %}
        {%- set qty = namespace(value=0) %}
        {%- for item in sensors if is_state(item,'on') %}
          {%- set qty.value = qty.value|int(0) +1 %}
          {%- if not loop.first %}{% set msg.value = msg.value ~ ', ' %}{% endif %}
          {%- set msg.value = msg.value + item.split('.')[1]|replace('_door_lock_malfunction','')|replace('_',' ')|title %}
        {%- endfor %}
        {%- set clist = ', and ' if msg.value.split(', ')|count > 2 else ' and ' %}
        {%- set plural = 's have' if qty.value|int(0) > 1 else ' has' %}
        Attention! {{ iif(sensors|count > 0,'The','A')}} {{ clist.join(msg.value.rsplit(', ', 1)) }} Door lock{{ plural }} malfunctioned!
      {%- elif t == 'alert.door_lock_jammed' %}
        {%- set sensors = states.input_boolean|selectattr('entity_id','search','_door_lock_jammed')
            |map(attribute='entity_id')|list|sort %}
        {%- set msg = namespace(value='') %}
        {%- set qty = namespace(value=0) %}
        {%- for item in sensors if is_state(item,'on') %}
          {%- set qty.value = qty.value|int(0) +1 %}
          {%- if not loop.first %}{% set msg.value = msg.value ~ ',' %}{% endif %}
          {%- set msg.value = item.split('.')[1]|replace('_door_lock_jammed','')|replace('_',' ')|title %}
        {%- endfor %}
        {%- set clist = ', and ' if msg.value.split(', ')|count > 2 else ' and ' %}
        {%- set plural = 's are' if qty|int(0) > 1 else ' is' %}
        Attention! The {{ clist.join(msg.value.rsplit(', ', 1)) }} door lock{{ plural }} jammed!
      {%- elif t == 'alert.door_lock_failed' %}
        {%- set sensors = states.input_boolean|selectattr('entity_id','search','_door_lock_hardware_failure')
            |map(attribute='entity_id')|list|sort %}
        {%- set msg = namespace(value='') %}
        {%- set qty = namespace(value=0) %}
        {%- for item in sensors if is_state(item,'on') %}
          {%- set qty.value = qty.value|int(0) +1 %}
          {%- if not loop.first %}{% set msg.value = msg.value ~ ',' %}{% endif %}
          {%- set msg.value = item.split('.')[1]|replace('_door_lock_hardware_failure','')|replace('_',' ')|title %}
        {%- endfor %}
        {%- set clist = ', and ' if msg.value.split(', ')|count > 2 else ' and ' %}
        {%- set plural = 's have' if qty|int(0) > 1 else ' has' %}
        Attention! The {{ clist.join(msg.value.rsplit(', ', 1)) }} door lock{{ plural }} failed!
      {%- elif t == 'alert.unknown_browsers' %}
        Attention! There is an unknown browser accessing Home Assistant!
      {%- elif t == 'alert.unknown_devices' %}
        Attention! There is an unknown device on the network!
      {%- endif %}
    alert: "{{ is_state_attr(trigger.entity_id,'alert',true) }}"
    quiet_play: >
      {{ is_state_attr(trigger.entity_id,'quiet_play',true)
          or trigger.entity_id in ['alert.door_lock_failed','alert.door_lock_malfunction'] }}
    night_play: >
      {{ is_state_attr(trigger.entity_id,'night_play',true)
          or trigger.entity_id in ['alert.door_lock_failed','alert.door_lock_malfunction'] }}
    save_message: >
      {{ is_state_attr(trigger.entity_id,'save_message',true)
          or trigger.entity_id in ['alert.door_lock_failed','alert.door_lock_malfunction'] }}
    tts_repeat: >
      {{ is_state_attr(trigger.entity_id,'tts_repeat',true)
          or trigger.entity_id in ['alert.door_lock_failed','alert.door_lock_malfunction'] }}
    tts_timeout: >
      {{ iif(trigger.entity_id in ['alert.door_lock_failed','alert.door_lock_malfunction'],
          5, state_attr(trigger.entity_id,'tts_timeout')|float(0)) }}
  trigger:
    - platform: state
      entity_id:
        - alert.unknown_devices
        - alert.unknown_browsers
        - alert.door_lock_failed
        - alert.door_lock_malfunction
      to: "on"
      not_from:
        - unknown
        - unavailable

    - platform: state
      entity_id:
        - alert.air_quality
        - alert.flu_risk
        - alert.asthma_risk
        - alert.allergy_risk
        - alert.storm_approaching
        - alert.strong_wind
        - alert.uv_risk
        - alert.outdoor_low_temperature
        - alert.indoor_high_temperature
        - alert.spa_low_temperature
        - alert.leak_detected
        - alert.unavailable_leak_sensor
        - alert.power_use
        - alert.garage_temperature_throttle
        - alert.garage_low_temperature
        - alert.garage_high_temperature
        - alert.garage_extended_heat
        - alert.indoor_high_humidity
        - alert.indoor_high_temperature
        - alert.indoor_low_temperature
        - alert.hvac_window_door_open
        - alert.bathroom_mold_risk
      to: "on"
      not_from:
        - unknown
        - unavailable
      for:
        minutes: 5

    - platform: state
      entity_id:
        - alert.alarm_zone_sync
      not_from:
        - unknown
        - unavailable
      for:
        minutes: 15
  action:
    - if: "{{ tts_repeat }}"
      then:
        - repeat:
            sequence:
              - service: script.turn_on
                target:
                  entity_id: script.tts_play
                data:
                  variables:
                    message: "{{ message }}"
                    alert: "{{ alert }}"
                    quiet_play: "{{ quiet_play }}"
                    night_play: "{{ night_play }}"
                    save_message: "{{ save_message }}"
                continue_on_error: true

              - wait_template: "{{ not is_state(trigger.entity_id,'on') }}"
                timeout:
                  minutes: "{{ tts_timeout }}"
            until:
              - condition: template
                value_template: "{{ not is_state(trigger.entity_id,'on') }}"
      else:
        - service: script.tts_play
          data:
            message: "{{ message }}"
            alert: "{{ alert }}"
            quiet_play: "{{ quiet_play }}"
            night_play: "{{ night_play }}"
            save_message: "{{ save_message }}"

        - delay:
            minutes: "{{ tts_timeout }}"
