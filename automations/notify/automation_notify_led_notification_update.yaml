#######################################################################################################################
## Notify - LED Notification Update
#######################################################################################################################
- id: notify_led_notification_update
  alias: "[Notify] LED Notification Update"
  description: "Update LED notification after light state changes."
  mode: queued
  max: 50
  max_exceeded: error
  variables:
    alert_type: > # listed in priority order
      {% if is_state('alarm_control_panel.master','triggered') %} triggered
      {% elif is_state('input_boolean.alarm_triggered','on') %} was_triggered
      {% else %}
        {% set trigger = trigger.entity_id|replace('_rgb','') %}
        {% if is_state('binary_sensor.alarm_clock_led_alert','on') and is_state_attr(trigger,'led_alarm_clock',true)%} alarm_clock
        {% elif is_state('binary_sensor.garage_led_alert','on') and is_state_attr(trigger,'led_garage',true) %} garage
        {% elif is_state('binary_sensor.presence_led_alert','on') and is_state_attr(trigger,'led_presence',true) %} presence
        {% elif is_state('switch.shower_mode','on') and is_state_attr(trigger,'led_shower',true) %} shower
        {% elif is_state('binary_sensor.reminder_led_alert','on') and is_state_attr(trigger,'led_reminder',true) %} reminder
        {% elif is_state('binary_sensor.weather_led_alert','on') and is_state_attr(trigger,'led_weather',true) %} weather
        {% elif is_state('binary_sensor.media_led_alert','on') and is_state_attr(trigger,'led_media',true) %} media
        {% elif is_state('binary_sensor.bedtime_led_alert','on') and is_state_attr(trigger,'led_bedtime',true) %} bedtime
        {% elif is_state_attr(trigger,'led_alarm',true) %} alarm
        {% else %} off
        {% endif %}
      {% endif %}
  trigger:
    - platform: state
      entity_id:
        - switch.back_yard_garden_light
        - switch.kitchen_sink_light
        - light.dining_room_rgb_light
        - light.upstairs_bathroom_vanity_rgb_light
        - light.upstairs_bedroom_rgb_light
        - light.side_entrance_light
        - light.living_room_cove_light
        - light.kitchen_potlights
        - light.dining_room_potlights
        - light.master_bedroom_light
        - light.upstairs_hallway_potlights
        - light.upstairs_bathroom_shower_light
        - light.master_bedroom_light
        - light.office_light
        - light.office_potlights
        - light.upstairs_bedroom_potlights
        - light.outside_garage_lights
        - light.front_porch_light
        - light.front_house_potlights
        - light.back_house_potlights
        - light.back_yard_tree_lights
  condition: "{{ alert_type != 'off' }}" # don't run if no alert type associated with entity
  action:
    - choose:
        conditions:
          - condition: state
            entity_id: input_boolean.alarm_triggered
            state: 'off'
        sequence:
          - delay: 5 # if dim reaches 0/100 before user releases switch will reset led to default

    - service: script.turn_on
      target:
        entity_id: script.led_notification
      data:
        variables:
          entities: "{{ trigger.entity_id|replace('_rgb','') }}"
          alert_type: "{{ alert_type }}"
          reset: true
