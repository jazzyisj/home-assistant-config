###################################################################################################
## Notify - Alert Announcements
###################################################################################################
- id: notify_alert_announcements
  alias: "[Notify] Alert Announcements"
  description: "Play alert tts announcement."
  mode: parallel
  variables:
    message: |
      {%- from 'speech_helpers.jinja' import array_to_clist %}
      {%- from 'speech_helpers.jinja' import plural %}
      {%- from 'speech_helpers.jinja' import plural_verb %}
      {%- set t = trigger.entity_id %}
      {%- if t == 'alert.open_windows' %}
      Looks like a beautiful {{ states('sensor.tod_greeting') }} out there!
      Perhaps you should open up a few windows?
      {%- elif t == 'alert.air_quality' %}
      Attention! There is an active air quality alert.
      The current air quality index is {{ states('sensor.aqi_risk_level') }}.
      {%- elif t == 'alert.flu_risk' %}
      Attention! The flu risk alert is now on.
      The flu risk for today is {{ states('sensor.flu_risk_today') }}.
      {%- elif t == 'alert.asthma_risk' %}
      Attention! The asthma risk alert is now on.
      The asthma risk for today is {{ states('sensor.asthma_risk_today') }}, and it will be {{ states('sensor.asthma_risk_tomorrow') }} tomorrow.
      {%- elif t == 'alert.allergy_risk' %}
      Attention! The allergy risk alert is now on.
      The allergy risk for today is {{ states('sensor.allergy_risk_today') }}, and it will be {{ states('sensor.allergy_risk_tomorrow') }} tomorrow.
      {%- elif t == 'alert.precipitation' %}
      {%- from 'weather.jinja' import precipitation_text %}
      Attention! {{- precipitation_text() }}
      Check the Jeep windows and make sure you get Charlie walked!
      {%- elif t == 'alert.wind' %}
      Hang on to yer hats people! It's getting a little windy out there!
      Wind speed is {{ states('sensor.wind_speed') | int('unknown') }} kilometers per hour, with gusts approaching {{ states('sensor.wind_gust') | int('unknown') }} kilometers per hour.
      {%- elif t == 'alert.uv_risk' %}
      Attention! The UV risk for today is {{ states('sensor.uv_risk_today') }}.
      You need to hide all your pastey red headed step children right now!
      The UV risk level is {{ states('sensor.current_uv_level') }}.
      {%- elif t == 'alert.outdoor_low_temperature' %}
      Oh Yah! She's a colder den duh witches titties out dare now!
      The wind chill is only {{ states('sensor.outdoor_apparent_temperature') | int('unknown') }} degrees.
      {%- elif t == 'alert.outdoor_high_temperature' %}
      Heads up! It's hot as balls out there today folks!
      The current humidex is {{ states('sensor.outdoor_apparent_temperature') | int('unknown') }} nut sack soakin degrees.
      {%- elif t == 'alert.spa_low_temperature' %}
      The spa temperature alert is on!  The spa temperature is only {{ states('sensor.spa_temperature') | int('unknown') }} degrees.
      {%- elif t == 'alert.spa_offline' %}
      The spa is offline.  Check the breaker and make sure the spa is on.
      {%- elif t == 'alert.leak_detected' %}
      {%- set entities = expand(state_attr('binary_sensor.leak_detected_alert', 'entity_id')) | map(attribute='name') | list %}
      Attention! Moisture has been detected by the {{ array_to_clist(entities, false) }} {{ plural('leak_sensor', entities | count) }}!
      {%- elif t == 'alert.unavailable_leak_sensor' %}
      {%- set entities = expand(state_attr('binary_sensor.unavailable_leak_sensor', 'entity_id')) | map(attribute='name') | list %}
      Attention! The {{ array_to_clist(entities, false) }} {{ plural('sensor') }} {{ plural_verb(entities | count) }} offline!
      {%- elif t == 'alert.indoor_sump' %}
      Attention! There is a critical issue with the indoor sump pump!
      {%- elif t == 'alert.outdoor_sump' %}
      Attention! There is a critical issue with the outdoor sump pump!
      {%- elif t == 'alert.power_use' %}
      Attention! The household power use alert is active.
      The current power usage is {{ states('sensor.current_power_use_kw') }} kilowatts!
      You should probably turn something off.
      {%- elif t == 'alert.garage_extended_heat' %}
      Attention! The garage heat has been on for a while.
      The garage temperature is {{ '%0.1f' | format(states('sensor.garage_sensor_air_temperature') | float(-99)) }} degrees.
      {%- elif t == 'alert.garage_high_temperature' %}
      Attention! The garage heat has been turned off because the high temperature alert is active.
      The garage temperature is {{ '%0.1f' | format(states('sensor.garage_sensor_air_temperature') | float(-99)) }} degrees,
      but the thermostat is set to {{ '%0.1f' | format(state_attr('climate.garage_thermostat', 'temperature') | float(-99)) }} degrees.
      {%- elif t == 'alert.garage_low_temperature' %}
      Attention! The garage low temperature alert is active.
      The garage temperature is {{ '%0.1f' | format(states('sensor.garage_sensor_air_temperature') | float(-99)) }} degrees,
      but the thermostat is set to {{ '%0.1f' | format(state_attr('climate.garage_thermostat', 'temperature') | float(-99)) }} degrees.
      {%- elif t == 'alert.garage_temperature_throttle' %}
      Attention! The garage temperature is {{ state_attr('climate.garage_thermostat', 'current_temperature') }} degrees,
      and the thermostat is set to {{ state_attr('climate.garage_thermostat', 'temperature') }} degrees.
      The furnace has been temporarily turned off.
      {%- elif t == 'alert.indoor_high_humidity' %}
      Attention! The indoor humidity alert is active.
      {%- set entities = state_attr('binary_sensor.indoor_high_humidity_alert', 'entity_id') %}
      {%- if entities != none %}
        {%- for item in entities %}
      The {{ area_name(item) }} humidity is {{ states(item) | int }} percent.
        {%- endfor %}
      {%- endif %}
      {%- elif t == 'alert.indoor_high_temperature' %}
      Attention! The indoor high temperature alert is active.
      {%- set entities = state_attr('binary_sensor.indoor_high_temperature_alert', 'entity_id') %}
      {%- if entities != none %}
        {%- for item in entities %}
      The {{ area_name(item) }} temperature is {{ states(item) | int }} degrees.
        {%- endfor %}
      {%- endif %}
      {%- elif t == 'alert.indoor_low_temperature' %}
      Attention! The indoor low temperature alert is active.
      {%- set entities = state_attr('binary_sensor.indoor_low_temperature_alert', 'entity_id') %}
      {%- if entities != none %}
        {%- for item in entities %}
      The {{ area_name(item) }} temperature is {{ states(item) | int }} degrees.
        {%- endfor %}
      {%- endif %}
      {%- elif t == 'alert.hvac_window_door_open' %}
      {%- set entities = expand(state_attr('binary_sensor.hvac_window_door_open_alert', 'entity_id'))
        | map(attribute='name') | list %}
      {%- set open_names = array_to_clist(entities, true) | replace(' Open Alert', '') %}
      Attention! The thermostat has been turned off because the {{ open_names }}{{ plural_verb(entities | count) }} open!
      {%- elif t == 'alert.bathroom_mold_risk' %}
      Attention! The bathroom mold risk alert is active.
      {%- elif t == 'alert.door_lock_jammed' %}
      {% from 'lock.jinja' import list_locks %}
      {%- set entities = states.binary_sensor
            | selectattr('entity_id', 'contains', '_door_lock_lock_jammed')
            | selectattr('state', 'eq', 'on')
            | map(attribute='object_id')
            | map('regex_replace', find='(.*)_door_lock_lock_jammed',
                replace='lock.\\1_door_lock', ignorecase=False)
            | list | sort %}
      Attention! The {{ list_locks(entities, 'lock') }} jammed!
      {%- elif t == 'alert.door_lock_failed' %}
      {%- from 'lock.jinja' import list_locks %}
      {%- set entities = states.binary_sensor
            | selectattr('entity_id', 'contains', '_door_lock_system_hardware_failure')
            | selectattr('state', 'eq', 'on')
            | map(attribute='object_id')
            | map('regex_replace', find='(.*)_door_lock_system_hardware_failure',
                replace='lock.\\1_door_lock', ignorecase=False)
            | list | sort %}
      {%- set plural = 's have' if entities | count > 1 else ' has' -%}
      Attention! The {{ list_locks(entities, 'lock failed alert') }} on!
      {%- elif t == 'alert.door_lock_keypad_disabled' %}
      {%- from 'lock.jinja' import list_locks %}
      {%- set entities = states.binary_sensor
            | selectattr('entity_id', 'contains', '_door_lock_keypad_temporary_disabled')
            | selectattr('state', 'eq', 'on')
            | map(attribute='object_id')
            | map('regex_replace', find='(.*)_door_lock_keypad_temporary_disabled',
                replace='lock.\\1_door_lock', ignorecase=False)
            | list | sort %}
      Attention! The {{ list_locks(entities, 'lock keypad') }} disabled!
      {%- elif t == 'alert.unknown_browsers' %}
      Attention! There is an unknown browser accessing Home Assistant!
      {%- elif t == 'alert.unknown_devices' %}
      Attention! There is an unknown device on the network!
      {%- endif %}
    alert: "{{ is_state_attr(trigger.entity_id, 'alert', true) }}"
    quiet_play: "{{ is_state_attr(trigger.entity_id, 'quiet_play', true) }}"
    always_play: "{{ is_state_attr(trigger.entity_id, 'always_play', true) }}"
    save_message: "{{ is_state_attr(trigger.entity_id, 'save_message', true) }}"
    tts_repeat: "{{ is_state_attr(trigger.entity_id, 'tts_repeat', true) }}"
    tts_timeout: "{{ state_attr(trigger.entity_id, 'tts_timeout') | float(0) }}"
  triggers:
    - trigger: state
      entity_id:
        - alert.unknown_devices
        - alert.unknown_browsers
        - alert.door_lock_failed
        - alert.door_lock_jammed
        - alert.door_lock_keypad_disabled
        - alert.leak_detected
        - alert.power_use
        - alert.indoor_sump
        - alert.outdoor_sump
        - alert.spa_offline
      to: "on"
      not_from:
        - unknown
        - unavailable

    - trigger: state
      entity_id:
        - alert.air_quality
        - alert.flu_risk
        - alert.asthma_risk
        - alert.allergy_risk
        - alert.precipitation
        - alert.wind
        - alert.uv_risk
        - alert.open_windows
        - alert.outdoor_low_temperature
        - alert.outdoor_high_temperature
        - alert.spa_low_temperature
        - alert.unavailable_leak_sensor
        - alert.garage_temperature_throttle
        - alert.garage_low_temperature
        - alert.garage_high_temperature
        - alert.garage_extended_heat
        - alert.hvac_window_door_open
      to: "on"
      not_from:
        - unknown
        - unavailable
      for:
        minutes: 5

    - trigger: state
      entity_id:
        - alert.indoor_high_humidity
        - alert.indoor_high_temperature
        - alert.indoor_low_temperature
        - alert.bathroom_mold_risk
      to: "on"
      not_from:
        - unknown
        - unavailable
      for:
        minutes: 60
  actions:
    - if: "{{ tts_repeat and tts_timeout > 0 }}"
      then:
        - repeat:
            sequence:
              - action: script.tts_play
                data:
                  message: "{{ message }}"
                  alert: "{{ alert }}"
                  quiet_play: "{{ quiet_play }}"
                  always_play: "{{ always_play }}"
                  save_message: "{{ save_message }}"
                continue_on_error: true

              - wait_template: "{{ not is_state(trigger.entity_id, 'on') }}"
                timeout:
                  minutes: "{{ tts_timeout }}"
            until:
              - condition: template
                value_template: "{{ not is_state(trigger.entity_id, 'on') }}"
      else:
        - action: script.tts_play
          data:
            message: "{{ message }}"
            alert: "{{ alert }}"
            quiet_play: "{{ quiet_play }}"
            always_play: "{{ always_play }}"
            save_message: "{{ save_message }}"
