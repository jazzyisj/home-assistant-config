#######################################################################################################################
## RPi Power Alert
#######################################################################################################################
- id: system_rpi_power_alert
  alias: "[System] RPi Power Alert"
  description: "Create persistent notification when alert turns on."
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: alert.rpi_power
      to: 'on'

  action:
    - service: persistent_notification.create
      data:
        title: "RPi Power Alert"
        message: "There is an issue with the Hassio RPi power source."
        notification_id: rpi_power

#######################################################################################################################
## System - Close RPi Power Notifications
#######################################################################################################################
- id: system_close_rpi_power_notifications
  alias: "[System] Close RPi Power Notifications"
  description: Dismiss notifications on all devices.
  initial_state: true
  mode: single
  #max_exceeded: silent
  trigger:
    - platform: state
      entity_id: alert.rpi_power
      to:
        - idle
        - 'off'

     #BUG from_state of dismissed persistent notifcations is unknown, use state_changed event
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: persistent_notification.rpi_power

    - platform: event
      event_type: mobile_app_notification_cleared
      event_data:
        tag: rpi_power

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: pause_rpi_power

  condition:
    #BUGFIX conditions required as workaround for unknown persistent notification state
    - condition: or
      conditions:
        - "{% if trigger.entity_id is defined %}{{ trigger.entity_id == 'alert.rpi_power' and states('alert.rpi_power') in ['idle','off'] }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['tag'] == 'rpi_power' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_rpi_power' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.event_type == 'state_changed' and not is_state('persistent_notification.rpi_power','notifying') }}{% endif %}"

  action:
    - service: script.close_notifications
      data:
        target: mobile_app_jphonem
        tag: rpi_power
        pause: "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_rpi_power' }}{% endif %}"
        
    - delay:
        seconds: 180 # prevent recursive triggers         