#######################################################################################################################
## System - Swap Use Alert
#######################################################################################################################
- id: system_swap_use_alert
  alias: "[System] Swap Use Alert"
  description: "Create persistent notification when alert turns on."
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: alert.swap_use
      to: 'on'

  action:
    - service: persistent_notification.create
      data:
        title: "Swap File Use Alert"
        message: "Swap Use - {{ states('sensor.swap_use_percent') }}%"
        notification_id: swap_use

#######################################################################################################################
## System - Close Swap Use Notifications
#######################################################################################################################
- id: system_close_swap_use_notifications
  alias: "[System] Close Swap Use Notifications"
  description: Dismiss notifications on all devices.
  initial_state: true
  mode: single
  #max_exceeded: silent
  trigger:
    - platform: state
      entity_id: alert.swap_use
      to:
        - idle
        - 'off'

     #BUG from_state of dismissed persistent notifcations is unknown, use state_changed event
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: persistent_notification.swap_use

    - platform: event
      event_type: mobile_app_notification_cleared
      event_data:
        tag: swap_use

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: pause_swap_use

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: reboot_server

  condition:
    #BUGFIX conditions required as workaround for unknown persistent notification state
    - condition: or
      conditions:
        - "{% if trigger.entity_id is defined %}{{ trigger.entity_id == 'alert.swap_use' and states('alert.swap_use') in ['idle','off'] }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['tag'] == 'swap_use' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_swap_use' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.event_type == 'state_changed' and not is_state('persistent_notification.swap_use','notifying') }}{% endif %}"

  action:
    - service: script.close_notifications
      data:
        target: mobile_app_jphone
        tag: swap_use
        pause: "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_swap_use' }}{% endif %}"

    - delay:
        seconds: 180 # prevent recursive triggers