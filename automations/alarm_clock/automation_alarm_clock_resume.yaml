#######################################################################################################################
## Alarm Clock - Resume
#######################################################################################################################
- id: alarm_clock_resume
  alias: "[Alarm Clock] Resume"
  description: "Restart alarm clock."
  mode: restart
  trigger:
    - platform: event
      id: finished
      event_type: timer.finished
      event_data:
        entity_id: timer.alarm_clock_snooze

    - platform: state
      entity_id: input_boolean.tts_playing
      to: 'off'

    - platform: state
      entity_id:
        - input_boolean.alarm_pending
        - input_boolean.alarm_triggered
      to: 'off'

    - platform: homeassistant
      id: hass
      event: start
  condition:
    - condition: state
      entity_id: binary_sensor.alarm_clock_active
      state: 'on'

    - condition: state
      entity_id:
        - input_boolean.alarm_pending
        - input_boolean.alarm_triggered
      state: 'off'
  action:
    #ERROR AttributeError: 'NoneType' object has no attribute 'resume_reading'+
    #BUG when changing settings rapidly alarm clock stuck in 30 sec default loop (alarm_clock_play), media player playing, no sound
    - service: script.turn_off #BUGFIX turn off any running instance of alarm_clock_play
      entity_id: script.alarm_clock_play

    - choose:
        - conditions: "{{ trigger.id == 'hass' }}"
          sequence:
            - delay: 10 # allow timers to restart

    - choose:
        - conditions:
            - condition: or
              conditions:
                - "{{ trigger.id == 'finished' }}"

                - condition: template
                  alias: "Resumed by system restart and snooze timer is idle"
                  value_template: >
                    {{ is_state('timer.alarm_clock_snooze','idle')
                        if trigger.platform == 'homeassistant' else false }}
          sequence:
            - service: automation.turn_off
              target:
                entity_id: automation.alarm_clock_off
              data:
                stop_actions: false

            - service: input_boolean.turn_off
              entity_id: input_boolean.alarm_clock_snooze

            - service: automation.turn_on
              entity_id: automation.alarm_clock_off

    - service: script.turn_on # let this automation finish, script loops if sound
      target:
        entity_id: script.alarm_clock_play
      data:
        variables:
          alarm_type: "{{ state_attr('binary_sensor.alarm_clock_active','alarm_type') }}"
          first_run: "{{ trigger.platform == 'homeassistant' }}" # first_run at startup to set volumes
          resume: "{{ trigger.entity_id == 'input_boolean.tts_playing' }}"


