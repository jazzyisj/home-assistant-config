#######################################################################################################################
## Alarm Clock - Next Alarm Off
#######################################################################################################################
- id: alarm_clock_next_alarm_off
  alias: "[Alarm Clock] Next Alarm Off"
  description: Turn off next alarm clock.
  initial_state: true
  mode: queued
  variables:
    source: "{{ state_attr('sensor.alarm_clock_next_alarm','alarm_source') }}"
    time: "{{states('sensor.time') }}"
    wake: "{{ states('sensor.waketime_tomorrow') if time > states('sensor.waketime_today') else states('sensor.waketime_today') }}"
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: next_alarm_off
  action:
    - choose:
        - conditions: "{{ source == 'auto' }}"
          sequence:
            - service: input_boolean.turn_off
              data:
                entity_id: >
                  {{ 'input_boolean.alarm_clock_auto_workdays'
                        if time < wake and is_state('binary_sensor.work_today','on')
                          else 'input_boolean.alarm_clock_auto_weekends' }}

            - service: input_boolean.turn_on
              data:
                entity_id: >
                  {{ 'input_boolean.alarm_clock_reset_auto_weekdays'
                        if time < wake and is_state('binary_sensor.work_today','on')
                          else 'input_boolean.alarm_clock_reset_auto_weekends' }}

        - conditions: "{{ source == 'manual' }}"
          sequence:
            - service: input_boolean.turn_off
              entity_id: input_boolean.alarm_clock_manual

            - service: input_boolean.turn_on
              entity_id: input_boolean.alarm_clock_reset_manual

        - conditions: "{{ source == 'nap' }}"
          sequence: # no reset for nap alarms
            - service: input_boolean.turn_off
              entity_id: input_boolean.alarm_clock_nap

    - condition: state
      entity_id: binary_sensor.bedtime_active
      state: 'on'

    - service: script.bedtime_notification #VERIFY

    # - service: notify.mobile # resend bedtime alert notification in case another alarm is set/confirm alarm is off
    #   data:
    #     title: Time For Bed!
    #     message: >
    #       {% if is_state('input_boolean.bedtime_delayed','on') %}
    #         Bedtime has been delayed for {{ states('input_number.stay_awake_delay')|int }} minutes.
    #       {% else %}
    #         Turn on the Bedtime Delay to delay to stay up for another {{ states('input_number.stay_awake_delay')|int }} minutes.
    #       {% endif %}
    #       {%- set src = state_attr('sensor.alarm_clock_next_alarm','alarm_source') -%}
    #       {% if not is_state('sensor.alarm_clock_next_alarm','Off') -%}
    #         Alarm Time: {{ as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.alarm_clock_next_alarm'))|timestamp_custom('%-I:%M %p',true) -}}
    #         <br/>Alarm Source:
    #         {%- if src == 'auto' %} Auto Alarm Clock
    #         {%- elif src == 'manual' %} Manual Alarm Clock
    #         {%- elif src == 'nap' %} Nap Alarm Clock
    #         {%- elif src == 'jphone' %} Jason's  Phone
    #         {%- elif src == 'sphone' %} Sheri's Phone
    #         {%- else %} None
    #         {%- endif -%}
    #         {% if src in ['auto','manual','nap'] %}
    #           <br/>Alarm Player:
    #           {%- if src == 'auto' %} {{ states('input_select.alarm_clock_media_player_auto') }}
    #           {%- elif src == 'manual' %} {{ states('input_select.alarm_clock_media_player_manual') }}
    #           {%- elif src == 'nap' %} {{ states('input_select.alarm_clock_media_player_nap') }}
    #           {%- endif -%}
    #         {% endif %}
    #       {%- else -%} Alarm: No alarm clock set.
    #         {%- endif %}
    #     data:
    #       tag: bedtime_alert
    #       group: General
    #       channel: Alert
    #       importance: max
    #       ttl: 0
    #       priority: high
    #       persistent: true
    #       sticky: true
    #       color: !secret NOTIFY_COLOR
    #       icon_url: !secret ALARM_CLOCK_ICON
    #       chronometer: true
    #       when: > #TODO change this to delay remaining if delayed, bedtime - now if not
    #         {%- if time < wake and is_state('binary_sensor.work_today','on') -%}
    #           {{ as_timestamp(strptime(now().strftime('%Y %m') ~ ' ' ~ now().strftime('%d') ~ ' ' ~ wake,'%Y %m %d %H:%M'))|int }}
    #         {%- else -%}
    #           {{ as_timestamp(strptime(now().strftime('%Y %m') ~ ' ' ~ (now().strftime('%d')|int +1)  ~ ' ' ~ wake,'%Y %m %d %H:%M'))|int }}
    #         {%- endif -%}
    #       clickAction: /lovelace/schedule
    #       actions:
    #         - action: bedtime_delayed
    #           title: Stay Up
    #         - action: bedtime_delayed_off
    #           title: Go To Bed
    #         - action: next_alarm_off
    #           title: Next Alarm Off

#######################################################################################################################
## Alarm Clock - Next Alarm Off Reset  - do not reset nap alarm
#######################################################################################################################
- id: alarm_clock_next_alarm_off_reset
  alias: "[Alarm Clock] Next Alarm Off Reset"
  description: Turn alarm clock enabled on if reset is on.
  initial_state: true
  mode: single
  max_exceeded: silent
  trigger:
    - platform: template
      value_template: "{{ is_state('sensor.time',states('sensor.waketime_today')) }}"

    - platform: state
      entity_id:
        - input_boolean.alarm_clock_reset_auto_weekdays
        - input_boolean.alarm_clock_reset_auto_weekends
        - input_boolean.alarm_clock_reset_manual
      to: 'off'
  action:
    - choose: # if trigger is waketime, delay so we don't trigger alarm clock
        - conditions: "{{ is_state('sensor.time',states('sensor.waketime_today')) }}"
          sequence:
            - delay: 65

    - choose:
        - conditions:
            - condition: or
              conditions:
                - "{{ trigger.entity_id == 'input_boolean.alarm_clock_reset_auto_weekdays' }}"
                - condition: state
                  entity_id: input_boolean.alarm_clock_reset_auto_weekdays
                  state: 'on'
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.alarm_clock_auto_workdays

            - service: input_boolean.turn_off
              entity_id: input_boolean.alarm_clock_reset_auto_weekdays
    - choose:
        - conditions:
            - condition: or
              conditions:
                - "{{ trigger.entity_id == 'input_boolean.alarm_clock_reset_auto_weekends' }}"
                - condition: state
                  entity_id: input_boolean.alarm_clock_reset_auto_weekends
                  state: 'on'
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.alarm_clock_auto_weekends

            - service: input_boolean.turn_off
              entity_id: input_boolean.alarm_clock_reset_auto_weekends

    - choose:
        - conditions:
            - condition: or
              conditions:
                - "{{ trigger.entity_id == 'input_boolean.alarm_clock_reset_manual' }}"
                - condition: state
                  entity_id: input_boolean.alarm_clock_reset_manual
                  state: 'on'
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.alarm_clock_manual

            - service: input_boolean.turn_off
              entity_id: input_boolean.alarm_clock_reset_manual
