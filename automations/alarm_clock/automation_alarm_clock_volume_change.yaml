#######################################################################################################################
## Alarm Clock - Volume Change
#######################################################################################################################
- id: alarm_clock_volume_change
  alias: "[Alarm Clock] Volume Change"
  description: Change media player volume when alarm clock volume control changed.
  initial_state: true
  mode: restart
  max: 5
  trigger:
    - platform: state
      entity_id:
        - input_number.alarm_clock_volume
        - input_number.alarm_clock_volume_auto
        - input_number.alarm_clock_volume_manual
        - input_number.alarm_clock_volume_nap

  condition:
    - condition: state
      entity_id: binary_sensor.alarm_clock_active
      state: 'on'

    - condition: state # don't change volume if alarm clock is snoozed, will be set on resume
      entity_id: input_boolean.alarm_clock_snooze
      state: 'off'

    - condition: template # only run if volume input is for active alarm
      value_template: >
        {% if trigger.entity_id == 'input_number.alarm_clock_volume' %} true
        {% elif trigger.entity_id == 'input_number.alarm_clock_volume_auto' and is_state('input_boolean.alarm_clock_active_auto','on') %} true
        {% elif trigger.entity_id == 'input_number.alarm_clock_volume_manual' and is_state('input_boolean.alarm_clock_active_manual','on') %} true
        {% elif trigger.entity_id == 'input_number.alarm_clock_volume_nap' and is_state('input_boolean.alarm_clock_active_nap','on') %} true
        {% endif %}

    - condition: template # only run if the new set volume is not already equal to the media player volume
      value_template: >
        {{ state_attr(states('sensor.alarm_clock_media_player'),'volume_level')|float|round(2)
            != states(trigger.entity_id)|float/100 }}

  action:
    - choose: # set main volume to alarm type value if active alarm type volume changed
        - conditions: "{{ not trigger.entity_id == 'input_number.alarm_clock_volume' }}"
          sequence:
            - service: input_number.set_value # this will retrigger automation to change media player volume
              data:
                entity_id: input_number.alarm_clock_volume
                value: >
                  {% if is_state('input_boolean.alarm_clock_active_auto','on') %}{{ states('input_number.alarm_clock_volume_auto')|float }}
                  {% elif is_state('input_boolean.alarm_clock_active_manual','on') %}{{ states('input_number.alarm_clock_volume_manual')|float }}
                  {% elif is_state('input_boolean.alarm_clock_active_nap','on') %}{{ states('input_number.alarm_clock_volume_nap')|float }}
                  {% endif %}

      default:
        - service: media_player.volume_set # set media player volume to alarm clock volume value
          data:
            entity_id: "{{ states('sensor.alarm_clock_media_player') }}"
            volume_level: "{{ states('input_number.alarm_clock_volume')|float / 100 }}"