#######################################################################################################################
## Alarm Clock - Volume Change
#######################################################################################################################
- id: alarm_clock_volume_change
  alias: "[Alarm Clock] Volume Change"
  description: Change media player volume when alarm clock volume control changed.
  initial_state: true
  mode: restart
  max: 5
  trigger:
    - platform: state
      entity_id:
        - input_number.alarm_clock_volume
        - input_number.alarm_clock_volume_auto
        - input_number.alarm_clock_volume_manual
        - input_number.alarm_clock_volume_nap

  condition:
    - condition: state
      entity_id: binary_sensor.alarm_clock_active
      state: 'on'

    - condition: state
      entity_id: script.alarm_clock_play
      state: 'off'

    # only run if volume input is for active alarm
    - condition: template
      value_template: >
        {% if trigger.entity_id == 'input_number.alarm_clock_volume' %} true
        {% elif trigger.entity_id == 'input_number.alarm_clock_volume_auto' and is_state('input_boolean.alarm_clock_active_auto','on') %} true
        {% elif trigger.entity_id == 'input_number.alarm_clock_volume_manual' and is_state('input_boolean.alarm_clock_active_manual','on') %} true
        {% elif trigger.entity_id == 'input_number.alarm_clock_volume_nap' and is_state('input_boolean.alarm_clock_active_nap','on') %} true
        {% endif %}

  action:
    # set main volume to alarm type value if active alarm type volume changed
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ not trigger.entity_id == 'input_number.alarm_clock_volume' }}"

          sequence:
            # this will retrigger automation to change media player volume
            - service: input_number.set_value
              data:
                entity_id: input_number.alarm_clock_volume
                value: >
                  {% if is_state('input_boolean.alarm_clock_active_auto','on') %}{{ states('input_number.alarm_clock_volume_auto')|float }}
                  {% elif is_state('input_boolean.alarm_clock_active_manual','on') %}{{ states('input_number.alarm_clock_volume_manual')|float }}
                  {% elif is_state('input_boolean.alarm_clock_active_nap','on') %}{{ states('input_number.alarm_clock_volume_nap')|float }}
                  {% endif %}

      default:
        # only change media player volume when master alarm clock volume changes
        # turn off volume automation to avoid recursive calls
        - service: automation.turn_off
          entity_id: automation.alarm_clock_media_player_volume_change

        # set media player volume to alarm clock volume value
        - service: media_player.volume_set
          data:
            entity_id: "{{ states('sensor.alarm_clock_media_player') }}"
            volume_level: "{{ states('input_number.alarm_clock_volume')|float / 100 }}"

        - service: automation.turn_on
          entity_id: automation.alarm_clock_media_player_volume_change