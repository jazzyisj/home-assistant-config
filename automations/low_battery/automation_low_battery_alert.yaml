#######################################################################################################################
## System - Low Battery Alert
#######################################################################################################################
- id: system_low_battery_alert
  alias: "[System] Low Battery Alert"
  description: Create notification when alert turns on.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: alert.low_battery
      to: 'on'

  condition:
    - condition: state
      entity_id: input_boolean.system_automation
      state: 'on'

  action:
    - repeat:
        sequence:
          - service: persistent_notification.create
            data:
              title: Low Battery Alert
              message: >
                {%- set ns = namespace(message='The battery level of the following device(s) is low:\n') -%}
                {%- set t = states('input_number.battery_alert_threshold')|int -%}
                {%- set b = states.zwave|selectattr('attributes.battery_level','defined')
                    |rejectattr('state','!=','ready')|selectattr('attributes.battery_level','>=',t) -%}
                {%- for i in b -%}
                  {%- set ns.m = ns.m ~ '- ' ~ i.name ~ ' (' ~ '%0.0f'|format(i.attributes.battery_level|float)|string ~ '%)\n' -%}
                {%- endfor -%}
                {%- set nb = expand('group.nest_batteries')|selectattr('state','eq','Replace') -%}
                {%- for i in nb -%}{%- set ns.m = ns.m ~ '- ' ~ i.name ~ '\n' -%}{%- endfor -%}
                {{ ns.m }}
              notification_id: low_battery

          # wait for alert to turned off/dismissed
          - wait_template: "{{ not is_state('alert.low_battery','on') }}"
            timeout:
              days: 1

        until:
          - condition: not
            conditions:
              - condition: state
                entity_id: alert.low_battery
                state: 'on'

#######################################################################################################################
## System - Close Low Battery Notifications
#######################################################################################################################
- id: system_close_low_battery_notifications
  alias: "[System] Close Low Battery Notifications"
  description: Dismiss notifications on all devices.
  initial_state: true
  mode: single
  #max_exceeded: silent
  trigger:
    - platform: state
      entity_id: alert.low_battery
      to:
        - idle
        - 'off'

    #BUG from_state of dismissed persistent notifcations is unknown, use state_changed event
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: persistent_notification.low_battery

    - platform: event
      event_type: mobile_app_notification_cleared
      event_data:
        tag: low_battery

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: pause_low_battery

  condition:
    #BUGFIX conditions required as workaround for unknown persistent notification state
    - condition: or
      conditions:
        - "{% if trigger.entity_id is defined %}{{ trigger.entity_id == 'alert.low_battery' and states('alert.low_battery') in ['idle','off'] }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['tag'] == 'low_battery' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_low_battery' }}{% endif %}"
        - "{% if trigger.event is defined %}{{ trigger.event.event_type == 'state_changed' and not is_state('persistent_notification.low_battery','notifying') }}{% endif %}"

  action:
    - service: script.close_notifications
      data:
        target: mobile_app_jphone
        tag: low_battery
        pause: "{% if trigger.event is defined %}{{ trigger.event.data['action'] == 'pause_low_battery' }}{% endif %}"

    - delay:
        seconds: 180 # prevent recursive triggers