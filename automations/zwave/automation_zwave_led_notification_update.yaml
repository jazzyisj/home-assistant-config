#######################################################################################################################
## ZWave - LED Notification Update
#######################################################################################################################
- id: zwave_led_notification_update
  alias: "[ZWave] LED Notification Update"
  description: Update LED notification after light state changes.
  initial_state: true
  mode: queued
  max: 50
  max_exceeded: error
  variables:
    alert_type: > # listed in priority order
      {% if is_state('alarm_control_panel.alarmo','triggered') %} triggered
      {% elif is_state('input_boolean.alarm_triggered','on') %} was_triggered
      {% else %}
        {% set trigger_id = trigger.entity_id|replace('_rgb','') %}
        {% if is_state('binary_sensor.alarm_clock_active','on') or is_state('binary_sensor.alarm_clock_failed','on') %} alarm_clock
        {% elif is_state('binary_sensor.presence_led_alert','on') and is_state_attr(trigger_id,'led_presence',true) %} presence
        {% elif is_state('script.shower_on','on') and is_state_attr(trigger_id,'led_shower',true) %} shower
        {% elif is_state('binary_sensor.reminder_led_alert','on') and is_state_attr(trigger_id,'led_reminder',true) %} reminder
        {% elif is_state('binary_sensor.garage_led_alert','on') and is_state_attr(trigger_id,'led_garage',true) %} garage
        {% elif is_state('binary_sensor.weather_led_alert','on') and is_state_attr(trigger_id,'led_weather',true) %} weather
        {% elif is_state('binary_sensor.media_led_alert','on') and is_state_attr(trigger_id,'led_media',true) %} media
        {% elif is_state('binary_sensor.bedtime_led_alert','on') and is_state_attr(trigger_id,'led_bedtime',true) %} bedtime
        {% elif is_state_attr(trigger_id,'led_alarm',true)  %} alarm
        {% else %} reset
        {% endif %}
      {% endif %}
    rgb_lights: "{{ states.light|selectattr('attributes.rgb_light','eq','master')|map(attribute='entity_id')|list }}"
    entities: > #TEST {% if alert_type in ['triggered','was_triggered','reset'] %}
      {% if alert_type in ['triggered','was_triggered'] %}
        {{ states|selectattr('domain','in',['light','switch'])
            |selectattr('attributes.notify_led','eq',true)|map(attribute='entity_id')|list }}
      {% else %}
        {% if trigger.entity_id in rgb_lights %}
          ['{{ trigger.entity_id|replace('_rgb','') }}']
        {% else %}
          ['{{ trigger.entity_id }}']
        {% endif %}
      {% endif %}
  trigger:
    - platform: state
      entity_id:
        - switch.back_yard_garden_light
        - switch.kitchen_sink_light

        - light.dining_room_rgb_light
        - light.upstairs_bathroom_vanity_rgb_light
        - light.upstairs_bedroom_rgb_light

        - light.side_entrance_light
        - light.living_room_cove_light
        - light.kitchen_potlights
        - light.dining_room_potlights
        - light.master_bedroom_light
        - light.upstairs_hallway_potlights
        - light.upstairs_bathroom_shower_light
        - light.master_bedroom_light
        - light.office_light
        - light.office_potlights
        - light.upstairs_bedroom_potlights
        - light.outside_garage_lights
        - light.front_porch_light
        - light.front_house_potlights
        - light.back_house_potlights
        - light.back_yard_tree_floodlights
  #TEST condition:
  #   - condition: state
  #     entity_id: input_boolean.alarm_triggered
  #     state: 'off'
  action:
    - service: script.turn_on
      data:
        entity_id: script.led_notification
        variables:
          entities: "{{ entities }}"
          alert_type: "{{ 'off' if alert_type == 'reset' else alert_type }}"