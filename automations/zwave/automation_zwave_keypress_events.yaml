###############################################################################
## ZWave - Keypress Events
###############################################################################
- id: zwave_keypress_events
  alias: "[ZWave] Keypress Events"
  description: "Respond to Inovelli zwave dimmer/switch keypress events."
  mode: parallel
  variables:
    entity: >
      {% set entity = (states
        |selectattr('attributes.node_id','defined')
        |selectattr('attributes.node_id','eq',trigger.event.data['node_id'])
        |map(attribute='entity_id')|join) %}

      {% if is_state_attr(entity,'rgb_light','control') %}
        {% set entity = states.light
            |selectattr('attributes.rgb_control','defined')
            |selectattr('attributes.rgb_control','eq',entity)
            |selectattr('attributes.rgb_light','defined')
            |selectattr('attributes.rgb_light','eq','master')
            |map(attribute='entity_id')|join %}
      {% endif %}
      {{ entity }}
    timer: >
      {% if is_state_attr(entity,'rgb_light','master') %}
        {% set entity = state_attr(entity,'rgb_control') %}
      {% endif %}
      {{ entity|replace('light.','timer.') }}
    key_value: "{{ trigger.event.data['value'] }}"
    key_name: "{{ trigger.event.data['property_key_name'] }}"
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyHeldDown

    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed

    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed1x

    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed2x

    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed3x

    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed4x

    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed5x
  condition: "{{ entity != '' }}"
  action:
    - choose:
        # key held down events
        - conditions: "{{ key_value == 'KeyHeldDown' and has_value(timer) }}"
          sequence:
            # required light state not changed for in_use_timer trigger
            - service: timer.start
              target:
                entity_id: "{{ timer }}"

        # 1x down events
        - conditions: "{{ key_value == 'KeyPressed' and key_name == '001' }}"
          sequence:
            # required light state not changed for in_use_timer trigger
            - service: script.turn_light_off
              data:
                lights: "{{ entity }}"
                activate_timer: >
                  {{ is_state(entity,'off')
                      and now() - states[entity].last_changed > timedelta(seconds=2) }}

        # 1x up events
        - conditions: "{{ key_value == 'KeyPressed' and key_name == '002' }}"
          sequence:
            - if: >
                {{ is_state(entity,'on') and has_value(timer)
                    and now() - states[entity].last_changed > timedelta(seconds=2) }}
              then:
                # required light state not changed for in_use_timer trigger
                - service: timer.start
                  target:
                    entity_id: "{{ timer }}"

            - service: script.turn_light_on
              data:
                lights: "{{ entity }}"
                profile: default
                activate_timer: true

        # 2x down events
        - conditions: "{{ key_value == 'KeyPressed2x' and key_name == '001' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - service: light.turn_off
                      target:
                        entity_id: light.upstairs_potlights
              default:
                - service: script.turn_room_off
                  data:
                    room: "{{ area_name(entity) }}"

        # 2x up events
        - conditions: "{{ key_value == 'KeyPressed2x' and key_name == '002' }}"
          sequence:
            - service: script.turn_light_on
              data:
                lights: "{{ entity }}"
                profile: default_max
                override: true
                activate_timer: true

        # 3x down events
        - conditions: "{{ key_value == 'KeyPressed3x' and key_name == '001' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - service: script.light_scene_on
                      data:
                        scene: evening

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - service: media_player.volume_down
                      target:
                        entity_id: >
                          {{ expand('group.single_media_players')
                              |selectattr('attributes.device_class','defined')
                              |rejectattr('attributes.device_class','eq','tv')
                              |selectattr('state','in',['playing','paused','buffering','on'])
                              |map(attribute='entity_id')|list }}

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - service: media_player.volume_down
                      target:
                        entity_id: media_player.bathroom_speaker

                - conditions: "{{ is_state_attr(entity,'garage_led',true) }}"
                  sequence:
                    - service: input_boolean.turn_off
                      target:
                        entity_id: input_boolean.garage_door_active_alert

                - conditions: "{{ is_state_attr(entity,'scene_led',true) }}"
                  sequence:
                    - service: script.toggle
                      target:
                        entity_id: script.bedtime

                - conditions: "{{ entity == 'switch.living_room_cove_light' }}"
                  sequence:
                    - service: input_boolean.toggle
                      data:
                        entity_id: input_boolean.bedtime_delayed

        # 3x up events
        - conditions: "{{ key_value == 'KeyPressed3x' and key_name == '002' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - service: script.turn_light_on
                      data:
                        lights: light.upstairs_potlights
                        profile: default_low
                        override: true
                        activate_timer: true

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - service: media_player.volume_up
                      target:
                        entity_id: >
                          {{ expand('group.single_media_players')
                              |selectattr('attributes.device_class','defined')
                              |rejectattr('attributes.device_class','eq','tv')
                              |selectattr('state','in',['playing','paused','buffering','on'])
                              |map(attribute='entity_id')|list }}

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - service: media_player.volume_up
                      target:
                        entity_id: media_player.bathroom_speaker

                - conditions: "{{ is_state_attr(entity,'garage_led',true) }}"
                  sequence:
                    - service: script.garage_door_toggle

                - conditions: "{{ is_state_attr(entity,'scene_led',true) }}"
                  sequence:
                    - service: script.waketime_switch

        # 4x down events
        - conditions: "{{ key_value == 'KeyPressed4x' and key_name == '001' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - service: script.light_scene_on
                      data:
                        scene: evening

                - conditions: "{{ entity == 'light.dining_room_light_rgb' }}"
                  sequence:
                    - service: script.waste_collection_alert_off

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - service: script.media_players_pause

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - service: script.media_players_pause
                      data:
                        entity_id: media_player.bathroom_speaker

                - conditions: "{{ entity in ['light.back_house_potlights','light.outside_garage_lights'] }}"
                  sequence:
                    - service: script.backyard_off

                - conditions: "{{ is_state_attr(entity,'alarm_led',true) }}"
                  sequence:
                    - condition: state
                      entity_id: binary_sensor.someone_home
                      state: "on"

                    - service: script.arm_alarm
                      data:
                        mode: night

        # 4x up events
        - conditions: "{{ key_value == 'KeyPressed4x' and key_name == '002' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - service: script.turn_light_on
                      data:
                        lights: light.upstairs_potlights
                        profile: default
                        override: true
                        activate_timer: true

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - service: script.media_players_resume

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - service: script.media_players_resume
                      data:
                        entity_id: media_player.bathroom_speaker

                - conditions: "{{ entity in ['light.back_house_potlights','light.outside_garage_lights'] }}"
                  sequence:
                    - service: script.backyard_on

                - conditions: "{{ is_state_attr(entity,'alarm_led',true) }}"
                  sequence:
                    - condition: state
                      entity_id: binary_sensor.someone_home
                      state: "on"

                    - service: script.arm_alarm
                      data:
                        mode: home

        # 5x down events
        - conditions: "{{ key_value == 'KeyPressed5x' and key_name == '001' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - service: script.turn_light_off
                      data:
                        bypass_timer: true

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - service: switch.toggle
                      target:
                        entity_id: switch.system_mute

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - if:
                        - condition: state
                          entity_id: media_player.bathroom_speaker
                          attribute: is_volume_muted
                          state: true
                      then:
                        - service: media_player.volume_mute
                          data:
                            entity_id: media_player.bathroom_speaker
                            is_volume_muted: false
                      else:
                        - service: media_player.volume_mute
                          target:
                            entity_id: media_player.bathroom_speaker
                          data:
                            is_volume_muted: true

                - conditions: "{{ is_state_attr(entity,'alarm_led',true) }}"
                  sequence:
                    - service: script.arm_alarm
                      data:
                        mode: away

                    - if: "{{ entity == 'light.side_entrance_light' }}"
                      then:
                        - service: input_boolean.turn_on
                          target:
                            entity_id: input_boolean.home_override_jason

                        - service: input_boolean.turn_off
                          target:
                            entity_id: input_boolean.jason_home

                - conditions: "{{ is_state_attr(entity,'alarm_clock_led',true) }}"
                  sequence:
                    - service: script.alarm_clock_off

        # 5x up events
        - conditions: "{{ key_value == 'KeyPressed5x' and key_name == '002' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - service: script.turn_light_on
                      data:
                        lights: light.upstairs_potlights
                        profile: default_max
                        override: true
                        activate_timer: true

                - conditions: "{{ entity == 'light.dining_room_light_rgb' }}"
                  sequence:
                    - service: script.weather_report

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - service: switch.toggle
                      target:
                        entity_id: switch.shower_scene

                - conditions: "{{ is_state_attr(entity,'alarm_led',true) }}"
                  sequence:
                    - condition: state
                      entity_id: binary_sensor.someone_home
                      state: "on"

                    - service: script.disarm_alarm
                      data:
                        zone: "{{ iif(entity in ['light.outside_garage_lights'],'garage','master') }}"
                        person: hassio

                    - if: "{{ entity == 'light.side_entrance_light' and not is_state('person.jason','home') }}"
                      then:
                        - service: input_boolean.turn_on
                          target:
                            entity_id: input_boolean.home_override_jason

                        - service: input_boolean.turn_on
                          target:
                            entity_id: input_boolean.jason_home
