###############################################################################
## ZWave - Keypress Events
###############################################################################
- id: zwave_keypress_events
  alias: "[ZWave] Keypress Events"
  description: "Respond to Inovelli zwave dimmer/switch keypress events."
  mode: parallel
  variables:
    entity: >
      {% set entity = states.light
        | selectattr('attributes.node_id', 'defined')
        | selectattr('attributes.node_id', 'eq', trigger.event.data['node_id'])
        | map(attribute='entity_id') | join %}
      {{ entity }}
    light: >
      {% if is_state_attr(entity, 'rgb_light', 'control') %}
        {% set entity = states.light
            | selectattr('attributes.rgb_control', 'defined')
            | selectattr('attributes.rgb_control', 'eq', entity)
            | map(attribute='entity_id') | join %}
      {% endif %}
      {{ entity | replace('switch.', 'light.') }}
    timer: "{{ 'timer.' ~ states[entity].object_id | replace('_rgb', '') if entity != '' else '' }}"
    key_value: "{{ trigger.event.data['value'] }}"
    key_name: "{{ trigger.event.data['property_key_name'] }}"
  triggers:
    - trigger: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyHeldDown

    - trigger: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed

    - trigger: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed1x

    - trigger: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed2x

    - trigger: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed3x

    - trigger: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed4x

    - trigger: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed5x
  actions:
    - if: "{{ entity == '' }}"
      then:
        - stop: "No valid entities."
          error: true

    - choose:
        # key held down events
        - conditions: "{{ key_value == 'KeyHeldDown' and has_value(timer) }}"
          sequence:
            # required light state not changed for in_use_timer trigger
            - action: timer.start
              target:
                entity_id: "{{ timer }}"

        # 1x down events
        - conditions: "{{ key_value == 'KeyPressed' and key_name == '001' }}"
          sequence:
            # activate timer if light not just turned off
            - action: script.turn_light_off
              data:
                lights: "{{ light }}"
                activate_timer: >
                  {{ is_state(light, 'off')
                      and not is_state(timer, 'active')
                      and now() - states[light].last_changed > timedelta(seconds=2) }}
                bypass_timer: true
                reset: true

        # 1x up events
        - conditions: "{{ key_value == 'KeyPressed' and key_name == '002' }}"
          sequence:
            - if:
                - "{{ entity == 'light.bathroom_vanity_light' }}"

                - condition: state
                  entity_id: input_select.occupancy_mode
                  state: Night
              then:
                - action: script.turn_light_on
                  data:
                    lights: "{{ light }}"
                    profile: default
                    activate_timer: true
                    bypass_timer: true

            - if: >
                {{ (is_state(light, 'on')
                    and now() - states[light].last_changed > timedelta(seconds=2)) }}
              then:
                - action: script.turn_light_on
                  data:
                    lights: "{{ light }}"
                    profile: default
                    activate_timer: true
                    bypass_timer: true

                - if: "{{ has_value(timer) }}"
                  then:
                    # required light state not changed for in_use_timer trigger
                    - action: timer.start
                      target:
                        entity_id: "{{ timer }}"

        # 2x down events
        - conditions: "{{ key_value == 'KeyPressed2x' and key_name == '001' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - action: light.turn_off
                      target:
                        entity_id: light.upstairs_potlights

                - conditions: "{{ entity == 'light.side_entrance_light' }}"
                  sequence:
                    - action: input_boolean.toggle
                      target:
                        entity_id: input_boolean.charlie_home #NEXT use tracker

                    - action: script.inovelli_led_control
                      data:
                        entities: light.side_entrance_light
                        duration: 60
                        color: "{{ iif(is_state('input_boolean.charlie_home', 'on'), 150, 50) }}"
                        brightness: 10
                        effect: Chase

              default:
                - action: script.turn_room_off
                  data:
                    room: "{{ area_name(entity) }}"

        # 2x up events
        - conditions: "{{ key_value == 'KeyPressed2x' and key_name == '002' }}"
          sequence:
            - action: script.turn_light_on
              data:
                lights: "{{ light }}"
                profile: default_max
                activate_timer: true
                bypass_timer: true
                override: true

            - choose:
                # extend vanity light timer on 2x up
                - conditions: "{{ entity == 'light.bathroom_vanity_light' }}"
                  sequence:
                    - action: timer.start
                      target:
                        entity_id: timer.bathroom_vanity_light
                      data:
                        duration:
                          minutes: 30

        # 3x down events
        - conditions: "{{ key_value == 'KeyPressed3x' and key_name == '001' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - action: script.light_scene_on
                      data:
                        scene: evening

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - action: media_player.volume_down
                      target:
                        entity_id: >
                          {{ expand('group.single_media_players')
                              | selectattr('attributes.device_class', 'defined')
                              | rejectattr('attributes.device_class', 'eq', 'tv')
                              | selectattr('state', 'in', ['playing', 'paused', 'buffering', 'on'])
                              | map(attribute='entity_id') | list }}

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - action: media_player.volume_down
                      target:
                        entity_id: media_player.bathroom_speaker

                - conditions: "{{ is_state_attr(entity, 'scene_led', true) }}"
                  sequence:
                    - action: script.toggle
                      target:
                        entity_id: script.bedtime

                - conditions: "{{ entity == 'light.living_room_cove_light' }}"
                  sequence:
                    - action: input_boolean.toggle
                      data:
                        entity_id: input_boolean.bedtime_delayed

        # 3x up events
        - conditions: "{{ key_value == 'KeyPressed3x' and key_name == '002' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'switch.living_room_cove_light' }}"
                  sequence:
                    - action: input_boolean.toggle
                      target:
                        entity_id: input_boolean.charlie_home

                    - if: "{{ is_state('input_boolean.charlie_home', 'on') }}"
                      then:
                        - action: script.inovelli_led_control
                          data:
                            entities: light.side_entrance_light
                            duration: 60
                            color: 255
                            brightness: 10
                            effect: Chase
                      else:
                        - action: script.inovelli_led_control
                          data:
                            entities: light.side_entrance_light
                            duration: 60
                            color: 5
                            brightness: 10
                            effect: Chase

                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - action: script.turn_light_on
                      data:
                        lights: light.upstairs_potlights
                        profile: default_low
                        activate_timer: true

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - action: media_player.volume_up
                      target:
                        entity_id: >
                          {{ expand('group.single_media_players')
                              | selectattr('attributes.device_class', 'defined')
                              | rejectattr('attributes.device_class', 'eq', 'tv')
                              | selectattr('state', 'in', ['playing', 'paused', 'buffering', 'on'])
                              | map(attribute='entity_id') | list }}

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - action: media_player.volume_up
                      target:
                        entity_id: media_player.bathroom_speaker

                - conditions: "{{ is_state_attr(entity, 'garage_led', true) }}"
                  sequence:
                    - action: script.tts_play #TEMP garage door toggle when new garage door controller,
                      data:
                        message: "Garage door is offline!"
                        quiet_play: true

                - conditions: "{{ is_state_attr(entity, 'scene_led', true) }}"
                  sequence:
                    - action: script.waketime

        # 4x down events
        - conditions: "{{ key_value == 'KeyPressed4x' and key_name == '001' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - action: script.light_scene_on
                      data:
                        scene: evening

                - conditions: "{{ entity == 'light.dining_room_light_rgb' }}"
                  sequence:
                    - action: input_boolean.turn_off
                      target:
                        entity_id:
                          - input_boolean.garbage_alert
                          - input_boolean.recycle_alert
                          - input_boolean.yardwaste_alert

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - action: script.media_players_pause

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - action: script.media_players_pause
                      data:
                        entity_id: media_player.bathroom_speaker

                - conditions: "{{ entity in ['light.back_house_potlights', 'light.outside_garage_lights'] }}"
                  sequence:
                    - action: light.turn_off
                      target:
                        entity_id: &back_lights
                          - light.outside_garage_lights
                          - light.back_house_potlights
                          - light.back_yard_tree_lights
                          - light.back_yard_garden_lights

                - conditions: "{{ is_state_attr(entity, 'alarm_led', true) }}"
                  sequence:
                    - condition: state
                      entity_id: binary_sensor.someone_home
                      state: "on"

                    - action: script.arm_alarm
                      data:
                        mode: night

        # 4x up events
        - conditions: "{{ key_value == 'KeyPressed4x' and key_name == '002' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - action: script.turn_light_on
                      data:
                        lights: light.upstairs_potlights
                        profile: default
                        activate_timer: true

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - action: script.media_players_resume

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - action: script.media_players_resume
                      data:
                        entity_id: media_player.bathroom_speaker

                - conditions: "{{ entity in ['light.back_house_potlights', 'light.outside_garage_lights'] }}"
                  sequence:
                    - action: script.turn_light_on
                      data:
                        lights: *back_lights
                        activate_timer: false

                - conditions: "{{ is_state_attr(entity, 'alarm_led', true) }}"
                  sequence:
                    - condition: state
                      entity_id: binary_sensor.someone_home
                      state: "on"

                    - action: script.arm_alarm
                      data:
                        mode: home

        # 5x down events
        - conditions: "{{ key_value == 'KeyPressed5x' and key_name == '001' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - action: script.turn_light_off
                      data:
                        bypass_timer: true
                        reset: true

                - conditions: "{{ entity == 'light.dining_room_potlights' }}"
                  sequence:
                    - action: switch.toggle
                      target:
                        entity_id: switch.system_mute

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - if:
                        - condition: state
                          entity_id: media_player.bathroom_speaker
                          attribute: is_volume_muted
                          state: true
                      then:
                        - action: media_player.volume_mute
                          data:
                            entity_id: media_player.bathroom_speaker
                            is_volume_muted: false
                      else:
                        - action: media_player.volume_mute
                          target:
                            entity_id: media_player.bathroom_speaker
                          data:
                            is_volume_muted: true

                - conditions: "{{ is_state_attr(entity, 'alarm_led', true) }}"
                  sequence:
                    - action: script.arm_alarm
                      data:
                        mode: away

                    - if: "{{ entity == 'light.side_entrance_light' }}"
                      then:
                        - action: input_boolean.turn_on
                          target:
                            entity_id: input_boolean.home_override_jason

                        - action: input_boolean.turn_off
                          target:
                            entity_id: input_boolean.jason_home

                - conditions: "{{ is_state_attr(entity, 'alarm_clock_led', true) }}"
                  sequence:
                    - action: script.alarm_clock_stop

        # 5x up events
        - conditions: "{{ key_value == 'KeyPressed5x' and key_name == '002' }}"
          sequence:
            - choose:
                - conditions: "{{ entity == 'light.hallway_potlights' }}"
                  sequence:
                    - action: script.turn_light_on
                      data:
                        lights: light.upstairs_potlights
                        profile: default_max
                        activate_timer: true

                - conditions: "{{ entity == 'light.dining_room_light_rgb' }}"
                  sequence:
                    - action: button.press
                      target:
                        entity_id: button.weather_report

                - conditions: "{{ entity == 'light.bathroom_shower_light' }}"
                  sequence:
                    - action: switch.toggle
                      target:
                        entity_id: switch.shower_scene

                - conditions: "{{ is_state_attr(entity, 'alarm_led', true) }}"
                  sequence:
                    - condition: state
                      entity_id: binary_sensor.someone_home
                      state: "on"

                    - action: script.disarm_alarm
                      data:
                        zone: "{{ iif(entity in ['light.outside_garage_lights'], 'garage', 'master') }}"
                        person: hassio
