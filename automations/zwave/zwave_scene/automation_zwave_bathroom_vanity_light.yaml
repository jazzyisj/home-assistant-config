###############################################################################
## ZWave Bathroom Vanity Light Held Down
###############################################################################
- id: zwave_bathroom_vanity_light_held_down
  alias: "[ZWave] Bathroom Vanity Light Held Down"
  description: "Respond to light switch Held Down command."
  mode: restart
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyHeldDown
        property_key_name: "001"

    - platform: event
      enabled: false #DISABLED not req
      event_type: zwave_js_value_notification
      event_data:
        value: KeyReleased
        property_key_name: "001"
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(0) }}"
  action:
    - if: "{{ is_state('light.bathroom_vanity_rgb_light','on') }}"
      then:
        - service: timer.start
          target:
            entity_id: timer.bathroom_vanity_light

###############################################################################
## ZWave Bathroom Vanity Light Held Up
###############################################################################
- id: zwave_bathroom_vanity_light_held_up
  alias: "[ZWave] Bathroom Vanity Light Held Up"
  description: "Respond to light switch Held Up command."
  mode: restart
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyHeldDown
        property_key_name: "002"

    - platform: event
      enabled: false #DISABLED not req
      event_type: zwave_js_value_notification
      event_data:
        value: KeyReleased
        property_key_name: "002"
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(0) }}"
  action:
    - if: "{{ is_state('light.bathroom_vanity_rgb_light','on') }}"
      then:
        - service: timer.start
          target:
            entity_id: timer.bathroom_vanity_light

###############################################################################
## ZWave Bathroom Vanity Light 1D
###############################################################################
- id: zwave_bathroom_vanity_light_1D
  alias: "[ZWave] Bathroom Vanity Light 1D"
  description: "Respond to light switch 1X up command."
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed
        property_key_name: "001"
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(-1) }}"
  action:
    - service: light.turn_off
      target:
        entity_id: light.bathroom_vanity_rgb_light
      data:
        transition: 1

###############################################################################
## ZWave Bathroom Vanity Light 1U
###############################################################################
- id: zwave_bathroom_vanity_light_1U
  alias: "[ZWave] Bathroom Vanity Light 1U"
  description: "Respond to light switch 1X up command."
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed
        property_key_name: "002"
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(-1) }}"
  action:
    - service: timer.start
      target:
        entity_id: timer.bathroom_vanity_light

    - if:
        - condition: state
          entity_id: switch.adaptive_lighting_bathroom_lights
          state: "on"
      then:
        - if: "{{ is_state('light.bathroom_vanity_rgb_light','off') }}"
          then:
            - service: adaptive_lighting.apply
              data:
                entity_id: switch.adaptive_lighting_bathroom_lights
                lights: light.bathroom_vanity_rgb_light
                transition: 2
                adapt_brightness: true
                adapt_color: true
                prefer_rgb_color: true
                turn_on_lights: true
          else:
            - service: light.turn_on
              target:
                entity_id: light.bathroom_vanity_rgb_light
              data:
                profile: "{{ iif(is_state('input_select.occupancy_mode','Night'),'default_low','default') }}"
      else:
        - service: light.turn_on
          target:
            entity_id: light.bathroom_vanity_rgb_light
          data:
            profile: "{{ iif(is_state('input_select.occupancy_mode','Night'),'default_low','default') }}"
            transition: 1

###############################################################################
## ZWave Bathroom Vanity Light 2U
###############################################################################
- id: zwave_bathroom_vanity_light_2U
  alias: "[ZWave] Bathroom Vanity Light 2U"
  description: "Respond to light switch 2X up command."
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed2x
        property_key_name: "002"
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(0) }}"
  action:
    - service: timer.start
      target:
        entity_id: timer.bathroom_vanity_light

    - service: light.turn_on
      target:
        entity_id:
          - light.bathroom_vanity_light_rgb_bulb_1
          - light.bathroom_vanity_light_rgb_bulb_2
      data:
        profile: default_max
