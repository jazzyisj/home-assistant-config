###############################################################################
## ZWave Bathroom Vanity Light Held Down
###############################################################################
- id: zwave_bathroom_vanity_light_held_down
  alias: '[ZWave] Bathroom Vanity Light Held Down'
  description: 'Respond to light switch Held Down command.'
  mode: restart
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyHeldDown
        property_key_name: '001'

    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyReleased
        property_key_name: '001'
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(0) }}"
  action:
    - service: timer.start
      target:
        entity_id: timer.bathroom_vanity_light

###############################################################################
## ZWave Bathroom Vanity Light Held Up
###############################################################################
- id: zwave_bathroom_vanity_light_held_up
  alias: '[ZWave] Bathroom Vanity Light Held Up'
  description: 'Respond to light switch Held Up command.'
  mode: restart
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyHeldDown
        property_key_name: '002'

    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyReleased
        property_key_name: '002'
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(0) }}"
  action:
    - service: timer.start
      target:
        entity_id: timer.bathroom_vanity_light

###############################################################################
## ZWave Bathroom Vanity Light 1D
###############################################################################
- id: zwave_bathroom_vanity_light_1D
  alias: '[ZWave] Bathroom Vanity Light 1D'
  description: 'Respond to light switch 1X up command.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed
        property_key_name: '001'
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(-1) }}"
  action:
    - service: light.turn_off
      target:
        entity_id: light.bathroom_vanity_rgb_light

###############################################################################
## ZWave Bathroom Vanity Light 1U
###############################################################################
- id: zwave_bathroom_vanity_light_1U
  alias: '[ZWave] Bathroom Vanity Light 1U'
  description: 'Respond to light switch 1X up command.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed
        property_key_name: '002'
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(-1) }}"
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_rgb_lights
        lights: light.bathroom_vanity_rgb_light
        manual_control: true

    - choose:
        - conditions:
            - condition: state
              entity_id: input_select.occupancy_mode
              state: Night
          sequence:
            - service: light.turn_on
              target:
                entity_id: light.bathroom_vanity_rgb_light
              data:
                profile: default_low

        - conditions:
            - condition: state
              entity_id: switch.adaptive_lighting_bathroom_lights
              state: 'on'
          sequence:
            - service: light.turn_on
              target:
                entity_id: light.bathroom_vanity_rgb_light
              data:
                brightness_pct: "{{ state_attr('switch.adaptive_lighting_bathroom_lights','brightness_pct') }}"
                rgb_color: "{{ state_attr('switch.adaptive_lighting_bathroom_lights','rgb_color') }}"
      default:
        - service: light.turn_on
          target:
            entity_id: light.bathroom_vanity_rgb_light
          data:
            profile: default

    - service: timer.start
      target:
        entity_id: timer.bathroom_vanity_light

###############################################################################
## ZWave Bathroom Vanity Light 2U
###############################################################################
- id: zwave_bathroom_vanity_light_2U
  alias: '[ZWave] Bathroom Vanity Light 2U'
  description: 'Respond to light switch 2X up command.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        value: KeyPressed2x
        property_key_name: '002'
  condition: "{{ trigger.event.data['node_id'] == state_attr('sensor.bathroom_vanity_light_node_status','node_id')|int(0) }}"
  action:
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_rgb_lights
        lights: light.bathroom_vanity_rgb_light
        manual_control: true

    - service: light.turn_on
      target:
        entity_id:
          - light.bathroom_vanity_light_rgb_bulb_1
          - light.bathroom_vanity_light_rgb_bulb_2
      data:
        profile: default_max
