#######################################################################################################################
## Presence - Jason Home Away
## sync presence booleans to current state
#######################################################################################################################
- id: presence_jason_home_away
  alias: "[Presence] Jason Home Away"
  description: "Keep occupancy booleans in sync with current person state (home/away)."
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: person.jason
      to: home

    - platform: state
      entity_id: person.jason
      from: home

    - platform: state
      entity_id: input_boolean.jason_home

    - platform: state
      entity_id: input_boolean.jason_home_override
      to: 'off'

    - platform: state
      entity_id: variable.startup_complete
      to: 'true'

  condition:
    - condition: state
      entity_id: input_boolean.jason_home_override
      state: 'off'

  action:
    # turn off automation to prevent recursive trigger
    - service: automation.turn_off
      data:
        entity_id: automation.presence_jason_home_away
        stop_actions: false

    # switch boolean to current state
    - service: "{{ 'input_boolean.turn_on' if is_state('person.jason','home') else 'input_boolean.turn_off' }}"
      data:
        entity_id: input_boolean.jason_home

    - service: automation.turn_on
      entity_id: automation.presence_jason_home_away

#######################################################################################################################
## Presence - Sheri Home Away
## sync presence booleans to current state
#######################################################################################################################
- id: presence_sheri_home_away
  alias: "[Presence] Sheri Home Away"
  description: "Keep occupancy booleans in sync with current person state (home/away)"
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: person.sheri
      to: home

    - platform: state
      entity_id: person.sheri
      from: home

    - platform: state
      entity_id: input_boolean.sheri_home

    - platform: state
      entity_id: input_boolean.sheri_home_override
      to: 'off'

    - platform: state
      entity_id: variable.startup_complete
      to: 'true'

  condition:
    - condition: state
      entity_id: input_boolean.sheri_home_override
      state: 'off'

  action:
    # turn off automation to prevent recursive trigger
    - service: automation.turn_off
      data:
        entity_id: automation.presence_sheri_home_away
        stop_actions: false

    # switch boolean to current state
    - service: "{{ 'input_boolean.turn_on' if is_state('person.sheri','home') else 'input_boolean.turn_off' }}"
      data:
        entity_id: input_boolean.sheri_home

    - service: automation.turn_on
      entity_id: automation.presence_sheri_home_away