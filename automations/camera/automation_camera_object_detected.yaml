###############################################################################
## Camera - Object Detected
###############################################################################
- id: camera_object_detected
  alias: "[Camera] Object Detected"
  description: "Object detected notification."
  mode: parallel
  trace:
    stored_traces: 50
  variables:
    id: "{{ trigger.payload_json['after']['id'] }}"
    object: "{{ trigger.payload_json['after']['label'] }}"
    camera: "{{ trigger.payload_json['after']['camera'][:-8] }}"
    start_time: "{{ trigger.payload_json['after']['start_time'] }}"
    new: "{{ trigger.payload_json['type'] == 'new' }}"
    entered_zones: "{{ trigger.payload_json['after']['entered_zones'] }}"
  trigger:
    - platform: mqtt
      topic: frigate/events
  condition:
    - condition: template
      value_template: "{{ new }}"

    - condition: template
      value_template: "{{ object in ['person','car'] }}"

    - condition: template
      value_template: "{{ iif(camera == 'front_drive','driveway' in entered_zones,true) }}"

    - condition: template
      value_template: "{{ iif(camera == 'front_door','porch' in entered_zones,true) }}"
  action:
    - if:
        - condition: template
          value_template: >
            {{ is_state('input_boolean.object_tts_notifications','on')
                and is_state('binary_sensor.someone_home','on')
                and (is_state('binary_sensor.camera_object_tod','on')
                  or camera in ['front_door','side_door']) }}
      then:
        - service: script.turn_on
          target:
            entity_id: script.tts_play
          data:
            variables:
              media_player: media_player.kiosk_internal
              min_volume: 60
              quiet_play: true
              night_play: true
              tts_service: tts.cloud_say
              gender: male
              language: en-GB
              message: >
                {% if camera in ['front_door','side_door','back_door','patio_door','back_house',
                    'side_gate_front','side_gate_back'] %}
                  There is a {{ object }} at the {{ camera|replace('_',' ') }}!
                {% elif camera in ['side_drive','front_drive'] %}
                  There is a {{ object }} in the {{ camera|replace('_',' ') }}way!
                {% elif camera in ['front_yard','back_yard'] %}
                  There is a {{ object }} in the {{ camera|replace('_',' ') }}!
                {% elif camera == 'garage_inside' %}
                  There is a {{ object }} inside the garage!
                {% else %}
                  An object was detected!
                {% endif %}
          continue_on_error: true

        - service: script.turn_on
          target:
            entity_id: script.cast_camera
          data:
            variables:
              camera: "{{ camera }}"
          continue_on_error: true

    - if:
        - condition: state
          entity_id: input_boolean.object_mobile_notifications
          state: "on"

        - condition: template
          value_template: "{{ object != 'dog' }}"
      then:
        - service: notify.jason
          data:
            title: "{{ camera|replace('_',' ')|title }} Camera"
            message: "A {{ object }} was detected @ {{ start_time|timestamp_custom('%-I:%M %p') }}."
            data:
              tag: "{{ id }}"
              group: Alarm
              channel: Alert
              importance: max
              ttl: 0
              priority: high
              visibility: public
              when: "{{ start_time }}"
              notification_icon: mdi:cctv
              icon_url: !secret ALARM_ICON
              image: "{{ states('input_text.base_url') }}/api/frigate/notifications/{{ id }}/thumbnail.jpg?format=android"
              ledColor: !secret WARNING_COLOR
              color: !secret WARNING_COLOR
              vibrationPattern: !secret ALERT_VIBRATION
              clickAction: /ccab4aaf_frigate-fa/dashboard
              actions:
                - title: "Alarm"
                  action: URI
                  uri: !secret ALARM_URI

                - title: "Cameras"
                  action: URI
                  uri: !secret LOREX_URI

                - title: "Alerts Off"
                  action: turn_off_camera_alerts
