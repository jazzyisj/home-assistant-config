###################################################################################################
## Update Camera Group Entities
###################################################################################################
- id: update_camera_group_entities
  alias: "Update Camera Group Entities"
  description: "Update camera entities."
  mode: single
  max_exceeded: silent
  triggers:
    - trigger: homeassistant
      id: startup
      event: start

    - trigger: event
      event_type: call_service
      event_data:
        domain: group
        service: reload

    - trigger: time
      at: input_datetime.day_reset

    - trigger: state
      entity_id:
        - binary_sensor.wyze_integration_connected
        - binary_sensor.frigate_integration_connected
      to:
        - "on"
        - "off"
      not_from:
        - unknown
        - unavailable

    - trigger: state
      entity_id: &cameras
        - camera.side_driveway
        - camera.side_door
        - camera.front_driveway
        - camera.front_door
        - camera.front_yard
        - camera.side_gate_front
        - camera.side_gate_back
        - camera.back_yard
        - camera.back_door
        - camera.patio_door
        - camera.back_house
        - camera.garage_inside
        - camera.charlie_cam
        - camera.living_room
      to:
        - unknown
        - unavailable
      for: 60 # throttle

    - trigger: state
      entity_id: *cameras
      from:
        - unknown
        - unavailable
      for: 60 # throttle
  actions:
    - if: "{{ trigger.id == 'startup' }}"
      then:
        - wait_template: >
            {{ expand(integration_entities('frigate'))
                | map(attribute='entity_id')
                | select('has_value') | list | count > 0 }}
          timeout: 300

        - if: "{{ not wait.completed }}"
          then:
            - action: notify.persistent_notification
              data:
                title: "Startup Error"
                message: |-
                  Camera groups did not load.
                  Try reloading groups using Developer Tools.

            - stop: "Integration did not load."

    - action: group.set
      data:
        object_id: indoor_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.location', 'defined')
              | selectattr('attributes.location', 'eq', 'indoor')
              | map(attribute='entity_id') | sort }}

    - action: group.set
      data:
        object_id: outdoor_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.location', 'defined')
              | selectattr('attributes.location', 'eq', 'outdoor')
              | map(attribute='entity_id') | sort }}

    - action: group.set
      data:
        object_id: wyze_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.source', 'defined')
              | selectattr('attributes.source', 'eq', 'wyze')
              | map(attribute='entity_id') | sort }}

    - action: group.set
      data:
        object_id: frigate_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.frigate', 'defined')
              | selectattr('attributes.frigate', 'eq', true)
              | map(attribute='entity_id') | sort }}

    - action: group.set
      data:
        object_id: frigate_all_count_sensors
        entities: >
          {{ expand(integration_entities('frigate'))
              | selectattr('entity_id', 'contains', '_all_count')
              | map(attribute="entity_id") | select('has_value') | sort }}

    - action: group.set
      data:
        object_id: security_occupancy_sensors
        entities:
          - binary_sensor.back_door_person_occupancy
          - binary_sensor.back_house_person_occupancy
          - binary_sensor.back_yard_person_occupancy
          - binary_sensor.front_door_person_occupancy
          - binary_sensor.front_yard_person_occupancy
          - binary_sensor.patio_door_person_occupancy
          - binary_sensor.side_driveway_person_occupancy
          - binary_sensor.side_gate_back_person_occupancy
          - binary_sensor.side_gate_front_person_occupancy

    - action: group.set
      data:
        object_id: offline_cameras
        # indoor cams are off when somebody home
        entities: >
          {% from 'hass.jinja' import ignored_device_entities %}
          {% set indoor = state_attr('group.indoor_cameras', 'entity_id') | list
              if is_state('binary_sensor.someone_home', 'off')
                and state_attr('group.indoor_cameras', 'entity_id') != none else [] %}
          {% set outdoor = state_attr('group.outdoor_cameras', 'entity_id') | list
              if state_attr('group.outdoor_cameras', 'entity_id') != none else [] %}
          {{ expand(union(indoor, outdoor))
              | rejectattr('entity_id', 'in', ignored_device_entities())
              | rejectattr('entity_id', 'in', label_entities('ignored'))
              | map(attribute='entity_id') | reject('has_value') | sort }}

    - action: group.set
      data:
        object_id: indoor_camera_switches
        entities: >
          {{ expand('group.wyze_cameras')
              | select('in', expand('group.indoor_cameras'))
              | map(attribute='entity_id') | list
              | map('regex_replace', find='camera.(.*)',
                replace='switch.\\1_camera_power', ignorecase=False) | sort }}