###############################################################################
## Camera - Update Group Entities
###############################################################################
- id: camera_update_group_entities
  alias: "[Camera] Update Group Entities"
  description: "Update camera entities."
  mode: restart
  trigger:
    - platform: homeassistant
      id: startup
      event: start

    - platform: state
      entity_id: input_boolean.startup_pending
      to: "off"

    - platform: state
      entity_id:
        - binary_sensor.wyze_connected
        - binary_sensor.frigate_connected
      to:
        - "on"
        - "off"
      not_from:
        - unknown
        - unavailable

    - platform: event
      event_type: call_service
      event_data:
        domain: group
        service: reload

    - platform: state
      entity_id: &cameras
        - camera.side_drive_frigate
        - camera.side_door_frigate
        - camera.front_drive_frigate
        - camera.front_door_frigate
        # - camera.front_yard_frigate #DISABLED
        # - camera.side_gate_front_frigate
        # - camera.side_gate_back_frigate
        # - camera.back_yard_frigate
        - camera.back_door_frigate
        - camera.patio_door_frigate
        - camera.back_house_frigate
        # - camera.garage_inside_frigate #DISABLED not working
        - camera.charlie_crate_frigate
        - camera.living_room_frigate
      to:
        - unknown
        - unavailable
      for: 60 # throttle

    - platform: state
      entity_id: *cameras
      from:
        - unknown
        - unavailable
      for: 60 # throttle
  action:
    - if:
        - condition: trigger
          id: startup
      then:
        - delay: 60 # let devices come online

    - service: group.set
      data:
        object_id: camera_tamper
        entities: >
          {{ states.binary_sensor
              | selectattr('entity_id', 'in', integration_entities('onvif'))
              | selectattr('entity_id', 'contains', '_tamper_detection')
              | map(attribute='entity_id') | list | sort }}

    - service: group.set
      data:
        object_id: frigate_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.frigate', 'defined')
              | selectattr('attributes.frigate', 'eq', true)
              | map(attribute='entity_id') | list | sort }}

    - service: group.set
      data:
        object_id: frigate_motion_controls
        entities: >
          {{ expand(integration_entities('frigate'))
              | selectattr('domain', 'eq', 'switch')
              | selectattr('entity_id', 'contains', '_motion')
              | rejectattr('entity_id', 'search', 'charlie_crate | living_room')
              | map(attribute="entity_id") | select('has_value') | list }}

    - service: group.set
      data:
        object_id: frigate_detection_controls
        entities: >
          {{ expand(integration_entities('frigate'))
              | selectattr('domain', 'eq', 'switch')
              | selectattr('entity_id', 'contains', '_detect')
              | rejectattr('entity_id', 'search', 'charlie_crate | living_room')
              | map(attribute="entity_id") | select('has_value') | list }}

    - service: group.set
      data:
        object_id: frigate_snapshot_controls
        entities: >
          {{ expand(integration_entities('frigate'))
              | selectattr('domain', 'eq', 'switch')
              | selectattr('entity_id', 'contains', '_snapshots')
              | rejectattr('entity_id', 'search', 'charlie_crate | living_room')
              | map(attribute="entity_id") | select('has_value') | list }}

    - service: group.set
      data:
        object_id: frigate_recording_controls
        entities: >
          {{ expand(integration_entities('frigate'))
              | selectattr('domain', 'eq', 'switch')
              | selectattr('entity_id', 'contains', '_recordings')
              | rejectattr('entity_id', 'search', 'charlie_crate | living_room')
              | map(attribute="entity_id") | select('has_value') | list }}

    - service: group.set
      data:
        object_id: frigate_contrast_controls
        entities: >
          {{ expand(integration_entities('frigate'))
              | selectattr('domain', 'eq', 'switch')
              | selectattr('entity_id', 'contains', '_improve_contrast')
              | rejectattr('entity_id', 'search', 'charlie_crate | living_room')
              | map(attribute="entity_id") | select('has_value') | list }}

    - service: group.set
      data:
        object_id: indoor_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.location', 'defined')
              | selectattr('attributes.location', 'eq', 'indoor')
              | map(attribute='entity_id') | list | sort }}

    - service: group.set
      data:
        object_id: wyze_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.source', 'defined')
              | selectattr('attributes.source', 'eq', 'wyze')
              | map(attribute='entity_id') | list | sort }}
