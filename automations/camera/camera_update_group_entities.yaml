###############################################################################
## Camera - Update Group Entities
###############################################################################
- id: camera_update_group_entities
  alias: "[Camera] Update Group Entities"
  description: "Update camera entities."
  mode: single
  max_exceeded: silent
  triggers:
    - trigger: homeassistant
      id: startup
      event: start

    - trigger: state
      entity_id: input_boolean.startup_pending
      to: "off"

    - trigger: state
      entity_id:
        - binary_sensor.wyze_integration_connected
        - binary_sensor.frigate_integration_connected
      to:
        - "on"
        - "off"
      not_from:
        - unknown
        - unavailable

    - trigger: event
      event_type: call_service
      event_data:
        domain: group
        service: reload

    - trigger: time_pattern
      minutes: "/15"

    - trigger: state
      entity_id: &cameras
        - camera.side_driveway
        - camera.side_door
        - camera.front_driveway
        - camera.front_door
        - camera.front_yard
        - camera.side_gate_front
        - camera.side_gate_back
        - camera.back_yard
        - camera.back_door
        - camera.patio_door
        - camera.back_house
        - camera.garage_inside
        - camera.charlie_cam
        - camera.living_room
      to:
        - unknown
        - unavailable
      for: 60 # throttle

    - trigger: state
      entity_id: *cameras
      from:
        - unknown
        - unavailable
      for: 60 # throttle
  actions:
    - action: group.set
      data:
        object_id: indoor_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.location', 'defined')
              | selectattr('attributes.location', 'eq', 'indoor')
              | map(attribute='entity_id') | list | sort }}

    - action: group.set
      data:
        object_id: outdoor_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.location', 'defined')
              | selectattr('attributes.location', 'eq', 'outdoor')
              | map(attribute='entity_id') | list | sort }}

    - action: group.set
      data:
        object_id: wyze_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.source', 'defined')
              | selectattr('attributes.source', 'eq', 'wyze')
              | map(attribute='entity_id') | list | sort }}

    - action: group.set
      data:
        object_id: frigate_cameras
        entities: >
          {{ states.camera
              | selectattr('attributes.frigate', 'defined')
              | selectattr('attributes.frigate', 'eq', true)
              | map(attribute='entity_id') | list | sort }}

    - action: group.set
      data:
        object_id: frigate_all_count_sensors
        entities: >
          {{ expand(integration_entities('frigate'))
              | selectattr('entity_id', 'contains', '_all_count')
              | map(attribute="entity_id") | select('has_value') | list | sort }}

    - action: group.set
      data:
        object_id: offline_cameras
        # indoor cams are off when somebody home
        entities: >
          {% set indoor = state_attr('group.indoor_cameras', 'entity_id') | list
              if is_state('binary_sensor.someone_home', 'off')
                and state_attr('group.indoor_cameras', 'entity_id') != none else [] %}
          {% set outdoor = state_attr('group.outdoor_cameras', 'entity_id') | list
              if state_attr('group.outdoor_cameras', 'entity_id') != none else [] %}
          {{ expand(indoor + outdoor) | map(attribute='entity_id') | reject('has_value') | list | sort }}
