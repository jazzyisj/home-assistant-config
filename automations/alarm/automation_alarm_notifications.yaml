###############################################################################
## Alarm - Notifications
###############################################################################
- id: alarm_notifications
  alias: '[Alarm] Notifications'
  description: 'Create alarm snapshots, send alarm notifications.'
  mode: restart
  variables:
    trigger_entity: "{{ expand(state_attr('alarm_control_panel.master','open_sensors'))|map(attribute='entity_id')|join('') }}"
    message: >
      {{ states('input_text.current_alarm') }}
      <br>Triggered at: {{ as_local(states.alarm_control_panel.master.last_changed).strftime('%-I:%M %p')  }}
  trigger:
    - platform: state
      entity_id: alarm_control_panel.master
      to:
        - pending
        - triggered
      for: 2 # allow current_alarm to populate
  condition:
    - condition: state
      entity_id: input_boolean.alarm_alerts
      state: 'on'

    - condition: state
      entity_id: binary_sensor.danger_alarm
      state: 'off'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: alarm_control_panel.master
              state: pending

            - condition: template
              alias: 'A TV is on'
              value_template: "{{ states('sensor.notify_service_tv') != 'none' }}"
          sequence:
            - service: "notify.{{ states('sensor.notify_service_tv') }}"
              data:
                message: '{{ message }}'

        - conditions:
            - condition: state
              entity_id: alarm_control_panel.master
              state: triggered
          sequence:
            - service: persistent_notification.create
              data:
                title: 'Alarm Triggered!'
                message: '{{ message }}'
                notification_id: alarm_triggered

            - condition: template
              alias: 'A TV is on'
              value_template: "{{ states('sensor.notify_service_tv') != 'none' }}"

            - service: "notify.{{ states('sensor.notify_service_tv') }}"
              data:
                message: '{{ message }}'

    - repeat:
        sequence:
          # create and store security camera snapshot filenames
          - service: input_text.set_value
            target:
              entity_id: "input_text.{{ 'cam1_snapshot' ~ repeat.index }}"
            data:
              value: '/alarm_snapshots/cam1_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg'

          - service: input_text.set_value
            target:
              entity_id: "input_text.{{ 'cam2_snapshot' ~ repeat.index }}"
            data:
              value: '/alarm_snapshots/cam2_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg'

          - service: input_text.set_value
            target:
              entity_id: "input_text.{{ 'cam3_snapshot' ~ repeat.index }}"
            data:
              value: '/alarm_snapshots/cam3_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg'

          - service: input_text.set_value
            target:
              entity_id: "input_text.{{ 'cam4_snapshot' ~ repeat.index }}"
            data:
              value: '/alarm_snapshots/cam4_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg'

          # create camera snapshots
          - service: camera.snapshot
            target:
              entity_id: >
                {% if trigger_entity in ['binary_sensor.kitchen_window_open_alert','binary_sensor.family_room_window_open_alert'] %}
                  camera.side_drive
                {% elif trigger_entity in ['binary_sensor.garage_door_open','binary_sensor.side_door_lock_intrusion',
                  'binary_sensor.side_door_lock_keypad_disabled','binary_sensor.side_door_open_alert'] %}
                    camera.side_door
                {% elif trigger_entity in ['binary_sensor.front_door_lock_intrusion','binary_sensor.front_door_lock_keypad_disabled',
                  'binary_sensor.living_room_window_1_open_alert','binary_sensor.living_room_window_2_open_alert',
                  'binary_sensor.living_room_window_3_open_alert','binary_sensor.living_room_window_4_open_alert',
                  'binary_sensor.front_door_open_alert'] %}
                    camera.front_door
                {% elif trigger_entity in ['binary_sensor.bedroom_front_window_open_alert','binary_sensor.office_window_open_alert'] %}
                  camera.front_yard
                {% elif trigger_entity in ['binary_sensor.bedroom_side_window_open_alert','binary_sensor.master_bedroom_window_open_alert'] %}
                  camera.side_gate_front
                {% elif trigger_entity in ['binary_sensor.laundry_room_window_open_alert','binary_sensor.master_bathroom_window_open_alert']  %}
                  camera.side_gate_back
                {% elif  trigger_entity in ['binary_sensor.back_door_lock_intrusion','binary_sensor.back_door_lock_keypad_disabled',
                  'binary_sensor.back_door_open_alert'] %}
                    camera.back_door
                {% elif  trigger_entity in ['binary_sensor.patio_door_open_alert'] %}
                    camera.patio_door
                {% elif trigger_entity in ['binary_sensor.garage_door_lock_intrusion','binary_sensor.garage_door_lock_keypad_disabled',
                  'binary_sensor.kitchen_sink_window_open_alert','binary_sensor.garage_side_door_open_alert'] %}
                    camera.back_house
                {% elif trigger_entity == 'binary_sensor.garage_sensor_motion' %}
                  camera.garage_inside
                {% endif %}
            data:
              filename: "/config/www{{ states('input_text.cam1_snapshot' ~ repeat.index) }}"

          - service: camera.snapshot
            target:
              entity_id: >
                {% if trigger_entity in ['binary_sensor.kitchen_window_open_alert','binary_sensor.family_room_window_open_alert'] %}
                  camera.side_door
                {% elif trigger_entity in ['binary_sensor.garage_door_open','binary_sensor.side_door_lock_intrusion',
                  'binary_sensor.side_door_lock_keypad_disabled','binary_sensor.side_door_open_alert'] %}
                    camera.side_drive
                {% elif trigger_entity in ['binary_sensor.front_door_lock_intrusion','binary_sensor.front_door_lock_keypad_disabled',
                  'binary_sensor.living_room_window_1_open_alert','binary_sensor.living_room_window_2_open_alert',
                  'binary_sensor.living_room_window_3_open_alert','binary_sensor.living_room_window_4_open_alert',
                  'binary_sensor.front_door_open_alert'] %}
                    camera.front_yard
                {% elif trigger_entity in ['binary_sensor.bedroom_front_window_open_alert','binary_sensor.office_window_open_alert'] %}
                  camera.front_door
                {% elif trigger_entity in ['binary_sensor.bedroom_side_window_open_alert','binary_sensor.master_bedroom_window_open_alert'] %}
                  camera.side_gate_back
                {% elif trigger_entity in ['binary_sensor.laundry_room_window_open_alert','binary_sensor.master_bathroom_window_open_alert']  %}
                  camera.side_gate_front
                {% elif  trigger_entity in ['binary_sensor.back_door_lock_intrusion','binary_sensor.back_door_lock_keypad_disabled',
                  'binary_sensor.back_door_open_alert'] %}
                    camera.patio_door
                {% elif trigger_entity in ['binary_sensor.garage_door_lock_intrusion','binary_sensor.garage_door_lock_keypad_disabled',
                  'binary_sensor.kitchen_sink_window_open_alert','binary_sensor.garage_side_door_open_alert','binary_sensor.patio_door_open_alert'] %}
                    camera.back_door
                {% elif trigger_entity == 'binary_sensor.garage_sensor_motion' %}
                  camera.side_door
                {% endif %}
            data:
              filename: "/config/www{{ states('input_text.cam2_snapshot' ~ repeat.index) }}"

          - service: camera.snapshot
            target:
              entity_id: >
                {% if trigger_entity in ['binary_sensor.kitchen_window_open_alert','binary_sensor.family_room_window_open_alert'] %}
                  camera.front_yard
                {% elif trigger_entity in ['binary_sensor.garage_door_open','binary_sensor.side_door_lock_intrusion',
                  'binary_sensor.side_door_lock_keypad_disabled','binary_sensor.side_door_open_alert'] %}
                    camera.back_house
                {% elif trigger_entity in ['binary_sensor.front_door_lock_intrusion','binary_sensor.front_door_lock_keypad_disabled',
                  'binary_sensor.living_room_window_1_open_alert','binary_sensor.living_room_window_2_open_alert',
                  'binary_sensor.living_room_window_3_open_alert','binary_sensor.living_room_window_4_open_alert',
                  'binary_sensor.front_door_open_alert'] %}
                    camera.side_drive
                {% elif trigger_entity in ['binary_sensor.bedroom_front_window_open_alert','binary_sensor.office_window_open_alert'] %}
                  camera.side_drive
                {% elif trigger_entity in ['binary_sensor.bedroom_side_window_open_alert','binary_sensor.master_bedroom_window_open_alert'] %}
                  camera.front_door
                {% elif trigger_entity in ['binary_sensor.laundry_room_window_open_alert','binary_sensor.master_bathroom_window_open_alert']  %}
                  camera.patio_door
                {% elif  trigger_entity in ['binary_sensor.back_door_lock_intrusion','binary_sensor.back_door_lock_keypad_disabled',
                  'binary_sensor.back_door_open_alert','binary_sensor.patio_door_open_alert'] %}
                    camera.back_house
                {% elif trigger_entity in ['binary_sensor.garage_door_lock_intrusion','binary_sensor.garage_door_lock_keypad_disabled',
                  'binary_sensor.kitchen_sink_window_open_alert','binary_sensor.garage_side_door_open_alert'] %}
                    camera.side_door
                {% elif trigger_entity == 'binary_sensor.garage_sensor_motion' %}
                  camera.back_house
                {% endif %}
            data:
              filename: "/config/www{{ states('input_text.cam3_snapshot' ~ repeat.index) }}"

          - service: camera.snapshot
            target:
              entity_id: >
                {% if trigger_entity in ['binary_sensor.kitchen_window_open_alert','binary_sensor.family_room_window_open_alert'] %}
                  camera.back_house
                {% elif trigger_entity in ['binary_sensor.garage_door_open','binary_sensor.side_door_lock_intrusion',
                  'binary_sensor.side_door_lock_keypad_disabled','binary_sensor.side_door_open_alert'] %}
                    camera.front_drive
                {% elif trigger_entity in ['binary_sensor.front_door_lock_intrusion','binary_sensor.front_door_lock_keypad_disabled',
                  'binary_sensor.living_room_window_1_open_alert','binary_sensor.living_room_window_2_open_alert',
                  'binary_sensor.living_room_window_3_open_alert','binary_sensor.living_room_window_4_open_alert',
                  'binary_sensor.front_door_open_alert'] %}
                    camera.front_drive
                {% elif trigger_entity in ['binary_sensor.bedroom_front_window_open_alert','binary_sensor.office_window_open_alert'] %}
                  camera.side_gate_front
                {% elif trigger_entity in ['binary_sensor.bedroom_side_window_open_alert','binary_sensor.master_bedroom_window_open_alert'] %}
                  camera.side_drive
                {% elif trigger_entity in ['binary_sensor.laundry_room_window_open_alert','binary_sensor.master_bathroom_window_open_alert']  %}
                  camera.back_door
                {% elif  trigger_entity in ['binary_sensor.back_door_lock_intrusion','binary_sensor.back_door_lock_keypad_disabled',
                  'binary_sensor.back_door_open_alert'] %}
                    camera.side_gate_back
                {% elif trigger_entity in ['binary_sensor.garage_door_lock_intrusion','binary_sensor.garage_door_lock_keypad_disabled',
                  'binary_sensor.kitchen_sink_window_open_alert','binary_sensor.garage_side_door_open_alert'] %}
                    camera.side_door
                {% elif trigger_entity == 'binary_sensor.garage_sensor_motion','binary_sensor.patio_door_open_alert' %}
                  camera.side_drive
                {% endif %}
            data:
              filename: "/config/www{{ states('input_text.cam4_snapshot' ~ repeat.index) }}"

          - choose:
              - conditions:
                  - condition: state
                    entity_id: alarm_control_panel.master
                    state: pending
                sequence:
                  - service: notify.jason #TEMP mobile
                    data:
                      title: 'Alarm Pending'
                      message: '{{ message }}'
                      data:
                        tag: alarm_pending
                        group: Alarm
                        channel: Alert
                        importance: max
                        ttl: 0
                        priority: high
                        persistent: true
                        sticky: true
                        chronometer: true
                        when: "{{ (now().timestamp() + state_attr('alarm_control_panel.master','delay')|int(0))|int }}"
                        notification_icon: '{{ states.input_boolean.alarm_pending.attributes.icon }}'
                        icon_url: !secret ALARM_ICON
                        image: !secret ALARM_IMAGE
                        ledColor: !secret CRITICAL_COLOR
                        color: !secret CRITICAL_COLOR
                        vibrationPattern: !secret ALERT_VIBRATION
                        clickAction: /lovelace-mobile/alarm
                        actions:
                          - title: 'Alarm'
                            action: URI
                            uri: !secret ALARM_URI

                          - title: 'Cameras'
                            action: URI
                            uri: !secret LOREX_URI

                          - title: 'Dismiss'
                            action: clear_pending

              - conditions:
                  - condition: state
                    entity_id: alarm_control_panel.master
                    state: triggered
                sequence:
                  - service: notify.jason #TEMP mobile
                    data:
                      title: 'Alarm Triggered'
                      message: '{{ message }}'
                      data:
                        tag: 'alarm_triggered{{ repeat.index }}'
                        group: Alarm
                        channel: alarm_stream
                        importance: max
                        ttl: 0
                        priority: high
                        persistent: true
                        sticky: true
                        notification_icon: '{{ states.input_boolean.alarm_triggered.attributes.icon }}'
                        icon_url: !secret ALARM_ICON
                        image: !secret ALARM_IMAGE
                        ledColor: !secret CRITICAL_COLOR
                        color: !secret CRITICAL_COLOR
                        vibrationPattern: !secret ALARM_STREAM_VIBRATION
                        clickAction: /lovelace-mobile/alarm
                        actions:
                          - title: 'Alarm'
                            action: URI
                            uri: !secret ALARM_URI

                          - title: 'Cameras'
                            action: URI
                            uri: !secret LOREX_URI

                          - title: 'Dismiss'
                            action: clear_triggered

                  - if:
                      - condition: state
                        entity_id: input_boolean.alarm_emails
                        state: 'on'
                    then: # send email notification, send to work also if at work
                      - service: "{{ 'notify.jason_email_work' if is_state('person.jason','Work') else 'notify.jason_email' }}"
                        data:
                          title: 'House Alarm Alert!'
                          message: |
                            The house alarm was triggered by the {{ state_attr(trigger_entity,'friendly_name') }} at {{ now().strftime('%-I:%M %p') }}.

                            Jason is {{ 'home' if is_state('binary_sensor.jason_home','on')
                                else ('Away' if is_state('person.jason','not_home') else 'at ' ~ states('person.jason')|title) }}.
                            Sheri is {{ 'home' if is_state('binary_sensor.sheri_home','on')
                                else ('Away' if is_state('person.sheri','not_home') else 'at ' ~ states('person.sheri')|title) }}.
                            {% if is_state('input_boolean.guest_home','on') %} There is a guest at home. {% endif %}
                          data:
                            images:
                              - "/config/www{{ states('input_text.cam1_snapshot' ~ repeat.index) }}"
                              - "/config/www{{ states('input_text.cam2_snapshot' ~ repeat.index) }}"
                              - "/config/www{{ states('input_text.cam3_snapshot' ~ repeat.index) }}"
                              - "/config/www{{ states('input_text.cam4_snapshot' ~ repeat.index) }}"

                  - service: persistent_notification.create
                    data:
                      title: 'Alarm Snapshots!'
                      notification_id: 'alarm_snapshots{{ repeat.index }}'
                      message: |
                        Snapshot Time: {{ now().strftime('%a %-I:%M %p') }}

                        ![image](/local{{ states('input_text.cam1_snapshot' ~ repeat.index) }})

                        ![image](/local{{ states('input_text.cam2_snapshot' ~ repeat.index) }})

                        ![image](/local{{ states('input_text.cam3_snapshot' ~ repeat.index) }})

                        ![image](/local{{ states('input_text.cam4_snapshot' ~ repeat.index) }})

          - if:
              - condition: state
                entity_id: alarm_control_panel.master
                state: triggered
            then:
              - delay: 60 # seconds between alerts
        until:
          - condition: template
            value_template: "{{ not is_state('alarm_control_panel.master','triggered') or repeat.index == 3 }}"

###############################################################################
## Alarm - Clear Notifications
###############################################################################
- id: alarm_clear_notifications
  alias: '[Alarm] Clear Notifications'
  description: 'Clear alarm notifications.'
  mode: queued
  trigger:
    - platform: event
      id: pending
      event_type: mobile_app_notification_action
      event_data:
        action: clear_pending

    - platform: event
      id: triggered
      event_type: mobile_app_notification_action
      event_data:
        action: clear_triggered
  action:
    - if: "{{ trigger.id == 'pending' }}"
      then:
        - service: notify.jason #TEMP mobile
          data:
            message: clear_notification
            data:
              tag: alarm_pending

    - if: "{{ trigger.id == 'triggered' }}"
      then:
        - repeat:
            count: 3
            sequence:
              - service: notify.jason #TEMP mobile
                data:
                  message: clear_notification
                  data:
                    tag: 'alarm_triggered{{ repeat.index }}'

              - delay: 5 # throttle notifications

    - service: input_text.set_value
      target:
        entity_id:
          - input_text.cam1_snapshot1
          - input_text.cam1_snapshot2
          - input_text.cam1_snapshot3
          - input_text.cam2_snapshot1
          - input_text.cam2_snapshot2
          - input_text.cam2_snapshot3
          - input_text.cam3_snapshot1
          - input_text.cam3_snapshot2
          - input_text.cam3_snapshot3
          - input_text.cam4_snapshot1
          - input_text.cam4_snapshot2
          - input_text.cam4_snapshot3
      data:
        value: ''
