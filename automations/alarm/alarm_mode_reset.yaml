###############################################################################
## Alarm - Mode Reset
###############################################################################
- id: alarm_mode_reset
  alias: "[Alarm] Mode Reset"
  description: "Reset alarm mode on restart."
  triggers:
    - trigger: homeassistant
      id: startup
      event: start

    - trigger: state
      id: alarm
      entity_id:
        - input_boolean.alarm_enabled
        - input_boolean.alarm_auto_arming
      to: "on"
  conditions:
    - condition: template
      value_template: >
        {{ ((is_state('binary_sensor.someone_home', 'off')
                or is_state('input_select.occupancy_mode', 'Away'))
              and not is_state('alarm_control_panel.master', 'armed_away'))
            or (is_state('binary_sensor.someone_home', 'on')
              and is_state('alarm_control_panel.master', 'armed_away'))
            or (is_state('input_select.occupancy_mode', 'Night')
              and not is_state('alarm_control_panel.master', 'armed_night')) }}

    - condition: state
      entity_id:
        - input_boolean.alarm_pending
        - input_boolean.alarm_triggered
      state: "off"

    - condition: state
      entity_id:
        - input_boolean.alarm_enabled
        - input_boolean.alarm_auto_arming
      state: "on"
  actions:
    - if:
        - condition: trigger
          id: startup
      then:
        - delay: 60 # automation.presence_occupancy_mode_reset should always run first

    - wait_template: "{{ not is_state('alarm_control_panel.master', 'arming') }}"

    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.someone_home
              state: "off"

            - condition: state
              entity_id: input_select.occupancy_mode
              state: Vacation

            - not:
                - condition: state
                  entity_id: alarm_control_panel.master
                  state: armed_vacation
          sequence:
            - action: script.arm_alarm
              data:
                mode: vacation

        - conditions:
            - or:
                - condition: state
                  entity_id: binary_sensor.someone_home
                  state: "off"

                - condition: state
                  entity_id: input_select.occupancy_mode
                  state: Away

            - not:
                - condition: state
                  entity_id: alarm_control_panel.master
                  state: armed_away
          sequence:
            - action: script.arm_alarm
              data:
                mode: away

        - conditions:
            - condition: state
              entity_id: binary_sensor.someone_home
              state: "on"

            - condition: state
              entity_id: alarm_control_panel.master
              match: any
              state:
                - armed_away
                - armed_vacation
          sequence:
            - action: script.arm_alarm
              data:
                mode: home

        - conditions:
            - condition: state
              entity_id: binary_sensor.someone_home
              state: "on"

            - condition: state
              entity_id: input_select.occupancy_mode
              state: Night
          sequence:
            - action: script.arm_alarm
              data:
                mode: night
