###################################################################################################
## Alarm Open Sensor
###################################################################################################
- id: alarm_open_sensor
  alias: "Alarm Open Sensor"
  description: "Announcement, notification on alarm open sensor."
  max_exceeded: silent
  variables:
    #ALARMO alarmo loses arm_mode on disarmed if exit delay and open sensors
    alarm_mode: "{{ states('input_select.current_arm_mode') | replace('armed_', '') }}"
  triggers:
    - trigger: state
      entity_id: binary_sensor.alarm_open_sensor_alert
      to:
        - "on"
        - "off"
      not_from:
        - unknown
        - unavailable
      for: 5 # toggles for an instant when rearmed with open sensor
  conditions:
    - condition: state
      entity_id: input_boolean.alarm_enabled
      state: "on"

    # caused alarm to arm away after disarming
    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: "off"
  actions:
    - if:
        - condition: state
          entity_id: binary_sensor.alarm_open_sensor_alert
          state: "on"
      then:
        - repeat:
            sequence:
              - if:
                  - condition: state
                    entity_id: alarm_control_panel.house
                    state: disarmed
                then:
                  - if:
                      - condition: state
                        entity_id: input_boolean.alarm_announcements
                        state: "on"
                    then:
                      - action: script.turn_on
                        target:
                          entity_id: script.tts_play
                        data:
                          variables:
                            message: |
                              {%- from 'speech_helpers.jinja' import array_to_clist %}
                              {%- from 'speech_helpers.jinja' import plural_verb %}
                              {%- set entities = expand(state_attr('alarm_control_panel.house', 'open_sensors'))
                                | map(attribute='name') | list %}
                              {%- set sensors = array_to_clist(entities, true) | replace(' Open Alert', '') %}
                              Attention! The house alarm could not be armed!
                              The {{ sensors }}{{ plural_verb(entities|count) }} open!
                            alert: true
                            save_message: false
                        continue_on_error: true

                  - if:
                      - condition: state
                        entity_id: input_boolean.alarm_notifications
                        state: "on"
                    then:
                      - action: notify.jason
                        data:
                          title: "Open Sensors"
                          message: |
                            {%- set sensors = expand(state_attr('alarm_control_panel.house', 'open_sensors'))
                                  | map(attribute='name') | sort -%}
                            {%- for item in sensors %}
                            {{ item | replace('Alert', '') }}
                            {%- endfor -%}
                          data:
                            tag: open_sensor
                            group: Alarm
                            channel: Urgent
                            persistant: true
                            sticky: true
                            notification_icon: "{{ state_attr('binary_sensor.alarm_open_sensor_alert', 'icon') }}"
                            icon_url: !secret ALARM_ICON
                            ledColor: !secret CRITICAL_COLOR
                            color: !secret CRITICAL_COLOR
                            vibrationPattern: !secret ALERT_VIBRATION
                            clickAction: /ui-mobile/alarm
                            actions:
                              - title: "Home"
                                action: arm_alarm_home_override

                              - title: "Night"
                                action: arm_alarm_night_override

                              - title: "Away"
                                action: arm_alarm_away_override

              - wait_template: "{{ is_state('binary_sensor.alarm_open_sensor_alert', 'off') }}"
                timeout:
                  seconds: 60 # delay between alerts

            until: "{{ is_state('binary_sensor.alarm_open_sensor_alert', 'off') or repeat.index == 3 }}"

        # if still disarmed, bypass open sensors and arm alarm
        - if:
            - condition: state
              entity_id: alarm_control_panel.house
              state: disarmed
          then:
            - action: script.arm_alarm
              data:
                mode: "{{ alarm_mode }}"
                override: true
      else:
        - action: notify.jason
          data:
            message: clear_notification
            data:
              tag: open_sensor
