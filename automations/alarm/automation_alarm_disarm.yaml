###############################################################################
## Alarm - Disarm
###############################################################################
- id: alarm_auto_disarm
  alias: "[Alarm] Auto Disarm"
  description: "Automatically disarm house alarm."
  trigger:
    - platform: state
      entity_id: input_boolean.alarm_enabled
      to: "off"
      for: 5 # allow automation check to turn boolean back on
  condition:
    - not:
        - condition: state
          entity_id: alarm_control_panel.master
          state: disarmed
  action:
    - service: script.disarm_alarm
      data:
        zone: master
        person: hassio

###############################################################################
# Alarm - Disarm Arrive Home
###############################################################################
- id: alarm_disarm_arrive_home
  alias: "[Alarm] Disarm Arrive Home"
  description: "Disarm alarm when arriving home."
  mode: queued
  variables:
    person: >
      {% if trigger.id == 'lock' %}
        {% set to_state = trigger.to_state.state %}
      {% elif trigger.event is defined %}
        {% set action = trigger.event.data['action'] %}
      {% endif %}
      {% if action in ['disarm_alarm_jason','open_garage_jason'] or to_state == 'Unlocked (Jason)' %} jason
      {% elif to_state == 'Unlocked (Keypad)' %} hassio
      {% endif %}
  trigger:
    - platform: state
      id: lock
      entity_id:
        - sensor.side_door_lock_status
        - sensor.front_door_lock_status
        - sensor.back_door_lock_status
      to: #LOCK_USER
        - Unlocked (Jason)
        - Unlocked (Keypad)
      not_from:
        - unknown
        - unavailable

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: disarm_alarm_jason

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: open_garage_jason
  condition:
    - condition: state
      entity_id: input_boolean.alarm_enabled
      state: "on"
  action:
    - if:
        - condition: template
          alias: "An alarm zones is not disarmed"
          value_template: >
            {{ not is_state('alarm_control_panel.house','disarmed')
                or not is_state('alarm_control_panel.garage','disarmed') }}
      then:
        - if:
            - condition: trigger
              alias: "Alarm was disarmed with a lock keypad"
              id: lock
          then:
            - service: script.disarm_alarm
              data:
                person: "{{ person }}"
                zone: master
          else:
            - wait_template:
                > #TEMP #ISSUE locked sensor not updating fast enough
                {% if person == 'jason' %}
                  {{ (states('binary_sensor.jphone_device_locked') in ['on','off']
                        and (is_state('binary_sensor.jason_home','on') or is_state('input_boolean.jason_almost_home','on')))
                      or is_state('alarm_control_panel.master','disarmed') }}
                {% endif %}
              timeout:
                minutes: 5

            - if:
                - not:
                    - condition: state
                      entity_id: alarm_control_panel.master
                      state: disarmed
              then:
                - if: "{{ wait.completed }}" # device unlocked
                  then:
                    - service: script.disarm_alarm
                      data:
                        person: "{{ person }}"
                        zone: master
                  else:
                    - service: browser_mod.notification
                      data:
                        duration: 30000
                        message: "{{ person|title }} attempted to disarm the alarm with a locked device."

                    - service: notify.jason
                      data:
                        title: "Locked Device"
                        message: "{{ person|title }} attempted to disarm the alarm with a locked device."
                        data:
                          tag: "{{ person }}_locked_device"
                          group: Alarm
                          channel: Alert
                          importance: max
                          ttl: 0
                          priority: high
                          visibility: private
                          timeout: 3600
                          notification_icon: mdi:shield-alert
                          icon_url: !secret ALERT_ICON
                          ledColor: !secret WARNING_COLOR
                          color: !secret WARNING_COLOR
                          vibrationPattern: !secret ALERT_VIBRATION
                          clickAction: /ui-mobile/alarm
                          actions:
                            - title: "Alarm"
                              action: URI
                              uri: !secret ALARM_URI

                            - title: "Cameras"
                              action: URI
                              uri: !secret LOREX_URI

        # wait, then rearm alarm if nobody home/night mode and not already rearmed
        - wait_template: >
            {{ not is_state('alarm_control_panel.house','disarmed') if trigger.id == 'lock'
                else not is_state('alarm_control_panel.master','disarmed') }}
          timeout:
            minutes: 5

        - choose:
            - conditions:
                - condition: state
                  entity_id: binary_sensor.someone_home
                  state: "off"
              sequence:
                - service: script.arm_alarm
                  data:
                    mode: away

            - conditions:
                - condition: state
                  entity_id: input_select.occupancy_mode
                  state: Night
              sequence:
                - service: script.arm_alarm
                  data:
                    mode: night
      else:
        - if: "{{ person != 'hassio' }}"
          then:
            - service: "notify.{{ person }}"
              data:
                message: clear_notification
                data:
                  tag: "{{ person }}_arriving_home"

###############################################################################
## Alarm - Danger Warning Disarm
###############################################################################
- id: alarm_danger_warning_disarm
  alias: "[Alarm] Danger Warning Disarm"
  description: "Disarm danger trigger house alarm."
  trigger:
    - platform: state
      entity_id: binary_sensor.danger_alarm
      to: "off"
      from: "on"

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: disarm_alarm_danger
  condition:
    - condition: state
      entity_id: alarm_control_panel.master
      state: triggered
  action:
    - service: script.disarm_alarm
      data:
        person: hassio
        zone: master
