###############################################################################
## Alarm - Open Sensor
###############################################################################
- id: alarm_open_sensor
  alias: '[Alarm] Open Sensor'
  description: 'Announcement, notification on alarm open sensor.'
  variables:
    #BUG #ALARMO alarmo loses arm_mode on disarmed if exit delay used and open sensors
    #TEMP #BUGFIX default to most secure mode 'away'
    mode: >
      {% set mode =  state_attr('alarm_control_panel.master','arm_mode')|replace('armed_','') %}
      {{ mode if mode == nothing else 'away' }}
  trigger:
    - platform: state
      entity_id: binary_sensor.alarm_open_sensor_alert
      to: 'on'
      from: 'off'
  action:
    - repeat:
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: alarm_control_panel.master
                    state: disarmed
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.alarm_announcements
                            state: 'on'
                        sequence:
                          - service: script.turn_on
                            target:
                              entity_id: script.tts_play
                            data:
                              variables:
                                message: >
                                  {%- set sensors = expand(state_attr('alarm_control_panel.master','open_sensors')) -%}
                                  {%- set names = sensors|map(attribute='name')|join(', ') -%}
                                  {%- set clist = ', and ' if names.split(', ')|count > 2 else ' and ' -%}
                                  {%- set qty = sensors|count -%}
                                  {%- set plural = 'are' if qty > 1 else 'is' -%}
                                  Attention!  The house alarm could NOT be armed!
                                  The {{ clist.join(names.rsplit(', ', 1)) }}, {{ plural }} open!
                                ignore_away: true
                                night_play: true

                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.alarm_alerts
                            state: 'on'
                        sequence:
                          - service: "notify.{{ states('sensor.notify_service_home') }}"
                            data:
                              title: 'Open Sensors'
                              message: >
                                The house alarm could not be armed!
                                {%- set sensors = expand(state_attr('alarm_control_panel.master','open_sensors'))|map(attribute='name')|list -%}
                                {%- for item in sensors %}
                                    <br/>{{ item|replace('Alert','') }}
                                {%- endfor -%}
                              data:
                                tag: open_sensor
                                group: Alarm
                                channel: Alert
                                importance: max
                                ttl: 0
                                priority: high
                                persistant: true
                                sticky: true
                                notification_icon: '{{ states.binary_sensor.alarm_open_sensor_alert.attributes.icon }}'
                                icon_url: !secret ALARM_ICON
                                ledColor: !secret CRITICAL_COLOR
                                color: !secret CRITICAL_COLOR
                                vibrationPattern: !secret ALERT_VIBRATION
                                clickAction: /lovelace-mobile/alarm
                                actions:
                                  - title: 'Home'
                                    action: arm_alarm_home_override

                                  - title: 'Night'
                                    action: arm_alarm_night_override

                                  - title: 'Away'
                                    action: arm_alarm_away_override

          - delay: 60 # delay between alerts
        until: > # until open sensors are off or repeat is 3
          {% set still_open = namespace(value=0) %}
          {% if state_attr('alarm_control_panel.master','open_sensors')|lower != 'none' %}
            {% for item in state_attr('alarm_control_panel.master','open_sensors') %}
            {% if is_state(item,'on') %}{% set still_open.value = 1 %}{% endif %}
            {% endfor %}
          {% endif %}
          {{ still_open.value == 0 or repeat.index == 3 }}

    - choose: # if still disarmed, bypass open sensors and arm
        - conditions:
            - condition: state
              entity_id: alarm_control_panel.master
              state: disarmed
          sequence:
            - service: script.arm_alarm
              data:
                mode: '{{ mode }}'
                override: "{{ true if is_state('binary_sensor.alarm_open_sensor_alert','on') else false }}"

    - wait_template: "{{ is_state('binary_sensor.alarm_open_sensor_alert','off') }}"

    - service: "notify.{{ states('sensor.notify_service_home') }}"
      data:
        message: clear_notification
        data:
          tag: open_sensor
