###################################################################################################
# Alarm Announcements
###################################################################################################
- id: alarm_announcements
  alias: "Alarm Announcements"
  description: "House alarm TTS announcements."
  mode: queued
  variables:
    mode: "{{ state_attr('alarm_control_panel.house', 'arm_mode') | replace('armed_', '') }}"
    current_alarm: "{{ states('input_text.current_alarm') }}"
  triggers:
    - trigger: state
      entity_id: alarm_control_panel.house
      to:
        - pending
        - triggered
      for: 5 # allow input_text.current_alarm to populate

    - trigger: state
      id: master
      entity_id: alarm_control_panel.house
      to:
        - armed_home
        - armed_night
        - armed_away
        - armed_vacation
        - arming

    - trigger: state
      id: master
      entity_id: alarm_control_panel.house
      to: disarmed
      from:
        - armed_home
        - armed_night
        - armed_away
        - armed_vacation
        - triggered
  conditions:
    - condition: state
      entity_id:
        - input_boolean.alarm_enabled
        - input_boolean.alarm_announcements
      state: "on"

    # don't duplicate occupancy mode announcement
    - condition: template
      value_template: >
        {{ iif(trigger.to_state.state in ['disarmed', 'armed_home', 'armed_night', 'armed_away', 'armed_vacation'],
            is_state('input_boolean.occupancy_announcements', 'off'), true) }}
  actions:
    - choose:
        - conditions: "{{ is_state('alarm_control_panel.house', 'arming') }}"
          sequence:
            - action: script.turn_on
              target:
                entity_id: script.tts_play
              data:
                variables:
                  message: "The alarm is now being armed in {{ mode }} mode."
                  save_message: false
                  ignore_away: true
              continue_on_error: true

        - conditions: "{{ is_state('alarm_control_panel.house', 'pending') }}"
          sequence:
            - repeat:
                while: "{{ is_state('alarm_control_panel.house', 'pending') }}"
                sequence:
                  - action: script.turn_on
                    target:
                      entity_id: script.tts_play
                    data:
                      variables:
                        # media_player: media_player.broadcast_speakers #DISABLED for #MASS resume
                        min_volume: 40
                        always_play: true
                        save_message: false
                        message: |
                          Warning! The alarm has been triggered by the {{ current_alarm }}.
                          Disarm the system or the alarm will sound.
                    continue_on_error: true

                  - wait_template: "{{ not is_state('alarm_control_panel.house', 'pending') }}"
                    timeout: 30 # delay between announcements

        - conditions:
            - condition: template
              value_template: "{{ is_state('alarm_control_panel.house', 'triggered') }}"

            - condition: state
              entity_id:
                - binary_sensor.smoke_alarm # handled by nest
                - binary_sensor.co_alarm # handled by nest
                - binary_sensor.heat_alarm # handled by nest
              state: "off"
          sequence:
            - wait_template: "{{ not current_alarm == '' }}"
              timeout: 10 # wait for current alarm to popuplate

            - action: script.turn_on
              target:
                entity_id: script.tts_play
              data:
                variables:
                  alert: true
                  save_message: false
                  message: "Attention! Alarm! {{ current_alarm }}"
              continue_on_error: true

            - delay: 30 # wait for disarmed before repeating announcememt

            # check if disarmed yet
            - if: "{{ is_state('alarm_control_panel.house', 'triggered') }}"
              then:
                - repeat:
                    sequence:
                      - action: script.turn_on
                        target:
                          entity_id: script.tts_play
                        data:
                          variables:
                            alert: true
                            save_message: false
                            message: |
                              Attention! Alarm! {{ current_alarm }}
                              Your intrusion has been detected and confirmed.
                              The owners have been notified and the police have now been called.
                        continue_on_error: true

                      - wait_template: "{{ not is_state('alarm_control_panel.house', 'triggered') }}"
                        timeout: 60 # delay between announcements

                    until: "{{ not is_state('alarm_control_panel.house', 'triggered') }}"

        - conditions:
            - condition: template
              value_template: >
                {{ states('alarm_control_panel.house')
                    in ['disarmed', 'armed_home', 'armed_night', 'armed_away', 'armed_vacation'] }}

            # disable on auto disarm when open sensor
            - condition: template
              value_template: >
                {{ not is_state('alarm_control_panel.house', 'disarmed')
                    if is_state('binary_sensor.alarm_open_sensor_alert', 'on') else true }}
          sequence:
            - action: script.turn_on
              target:
                entity_id: script.tts_play
              data:
                variables:
                  message: |
                    {%- if is_state('alarm_control_panel.house', 'disarmed') %} The alarm has been disarmed.
                    {%- else %} The alarm is armed in {{ mode }} mode.
                    {%- endif -%}
                  ignore_away: true
