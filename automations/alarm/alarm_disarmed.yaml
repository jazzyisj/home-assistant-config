###############################################################################
## Alarm - Disarmed
###############################################################################
- id: alarm_disarmed
  alias: "[Alarm] Disarmed"
  description: "Set alarm disarmed text."
  trigger:
    - platform: state
      entity_id: alarm_control_panel.master
      to: disarmed
  condition:
    - condition: state
      entity_id: input_boolean.alarm_enabled
      state: "on"

    # alarm not disarmed by alarmo
    - condition: state
      entity_id:
        - binary_sensor.alarm_open_sensor_alert
        - binary_sensor.alarm_bypassed_sensor_alert
      state: "off"
  action:
    #ALARMO reset current arm mode to away - default if alarm armed with no arming state
    - action: input_select.select_option
      target:
        entity_id: input_select.current_arm_mode
      data:
        option: armed_away

    # clear to ensure lasted changed attribute is updated if changed_by doesn't change
    - action: input_text.set_value
      target:
        entity_id: input_text.alarm_changed_by
      data:
        value: ""

    - action: input_text.set_value
      target:
        entity_id: input_text.alarm_changed_by
      data:
        value: "{{ state_attr('alarm_control_panel.master', 'changed_by') }}"

    - wait_template: "{{ is_state('binary_sensor.someone_home','on') }}"
      timeout: 30
      continue_on_timeout: false

    # set proper occupancy mode if still away/vacation and someone home
    - if:
        - condition: state
          entity_id: input_select.occupancy_mode
          state:
            - Away
            - Vacation
      then:
        - action: input_select.select_option
          target:
            entity_id: input_select.occupancy_mode
          data:
            option: >
              {% from 'presence.jinja' import occupancy_mode %}
              {{ occupancy_mode() }}
