###############################################################################
## Alarm - Arm Master
###############################################################################
- id: alarm_arm_master
  alias: "[Alarm] Arm Master"
  description: "Arm alarm master zone."
  mode: restart
  trigger:
    - platform: state
      id: disarmed
      entity_id: alarm_control_panel.master
      to: disarmed
      for: # wait to see if someone comes home (almost home, plug in dead phone)
        minutes: 5

    - platform: state
      id: away
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation

    - platform: state
      id: night
      entity_id: input_select.occupancy_mode
      to: Night

    - platform: state
      id: keypad
      entity_id: # do not auto arm master with garage side door
        - sensor.back_door_lock_status
        - sensor.front_door_lock_status
        - sensor.side_door_lock_status
      to: #LOCK_USER
        - Locked (Keypad)
        - Locked (Jason)
        - Locked (Sheri) #SHERI
      not_from:
        - unknown
        - unavailable
      for:
        minutes: 1 # prevent trigger if user mistakenly locks, unlocks again right away

    - platform: state
      id: manual
      entity_id:
        - sensor.back_door_lock_status
        - sensor.front_door_lock_status
        - sensor.side_door_lock_status
      to: Locked (Manual)
      not_from:
        - unknown
        - unavailable
      for: 300 # time to get into garage and leave w/o arming alarm
  condition:
    - condition: state
      entity_id:
        - input_boolean.alarm_enabled
        - input_boolean.alarm_auto_arming
      state: "on"

    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: "{{ iif(trigger.id in ['disarmed','away','night'],is_state('input_boolean.occupancy_override','off'),true) }}"
  action:
    # wait for garage door to close (auto close when alarm armed/occupancy mode)
    - wait_template: "{{ is_state('binary_sensor.garage_door_open','off') }}"
      timeout: 120

    - choose:
        - conditions: "{{ trigger.id == 'disarmed' }}"
          sequence:
            # rearm alarm if still disarmed and nobody home
            - if:
                - condition: state
                  entity_id: binary_sensor.someone_home
                  state: "off"
              then:
                - service: script.arm_alarm
                  data:
                    mode: away
                    skip_delay: true

        - conditions: "{{ trigger.id == 'away' }}"
          sequence:
            - wait_template: "{{ not is_state('alarm_control_panel.master','arming') }}"
              timeout: 120

            - service: script.arm_alarm
              data:
                mode: away

        - conditions: "{{ trigger.id in ['keypad','manual'] }}"
          sequence:
            - wait_template: "{{ not is_state('alarm_control_panel.master','arming') }}"
              timeout: 120

            - service: script.arm_alarm
              data:
                mode: "{{ 'night' if is_state('input_select.occupancy_mode','Night') else 'home' }}"
                skip_delay: true

        - conditions: "{{ trigger.id == 'night' }}"
          sequence:
            - wait_template: "{{ not is_state('alarm_control_panel.master','arming') }}"
              timeout: 120

            - service: script.arm_alarm
              data:
                mode: night
                skip_delay: true
