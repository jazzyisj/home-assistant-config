###############################################################################
# Alarm - Current Alarm
###############################################################################
- id: alarm_current_alarm
  alias: "[Alarm] Current Alarm"
  description: "Set active alarm message for tts, display in UI"
  max_exceeded: silent # called by triggered after pending
  variables:
    trigger_entity: >
      {% if state_attr('alarm_control_panel.master','open_sensors')|count > 0 %}
      {{ (expand(state_attr('alarm_control_panel.master','open_sensors'))
          |map(attribute='name')|list)[0]
          |replace('Open Alert','')
          |replace('Frigate Motion','Motion')
          |title }}
      {% else %} No Sensor
      {% endif %}
  trigger:
    - platform: state
      entity_id: alarm_control_panel.master
      to:
        - pending
        - triggered
  condition:
    - condition: state
      entity_id: input_boolean.alarm_enabled
      state: "on"
  action:
    - if: >
        {{ is_state('input_boolean.alarm_pending','off')
            if is_state('alarm_control_panel.master','triggered') else true }}
      then: # only set when triggered if not pending first
        - service: input_text.set_value
          target:
            entity_id: input_text.current_alarm
          data:
            value: >
              {% if is_state('binary_sensor.smoke_alarm','on') %} Smoke Alert
              {% elif is_state('binary_sensor.co_alarm','on') %} Carbon Monoxide Alert
              {% elif is_state('binary_sensor.heat_alarm','on') %} Heat/Fire Alert
              {% else %} {{ trigger_entity }}
              {% endif %}

    - delay: 5 # allow booleans to turn on

    - wait_template: >
        {{ is_state('input_boolean.alarm_pending','off')
            and is_state('input_boolean.alarm_triggered','off') }}

    - service: input_text.set_value
      target:
        entity_id: input_text.current_alarm
      data:
        value: ""
