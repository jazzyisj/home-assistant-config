#######################################################################################################################
## Garage Door - Auto Close
## - opener automatically closes after 10 min
## - don't override user hold in garage is on so no time based close trigger here
#######################################################################################################################
- id: garage_door_auto_close
  alias: "[Garage Door] Auto Close"
  description: Automatically close garage door when conditions met.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Night
        - Away
        - Vacation

  condition:
    - condition: state
      entity_id:
        - input_boolean.garage_door_automation
        - input_boolean.presence_automation
        - binary_sensor.garage_door_open
      state: 'on'

  action:
    - service: cover.close_cover
      entity_id: cover.garage_door_opener

#######################################################################################################################
## Garage Door - Open
#######################################################################################################################
- id: garage_door_mobile_open
  alias: "[Garage Door] Mobile Open"
  description: Open garage door.
  initial_state: true
  mode: single
  variables:
    unlocked: > #UNLOCKED
      {{ (is_state('binary_sensor.jason_home','on') or is_state('input_boolean.jason_almost_home','on'))
          or (is_state('binary_sensor.sheri_home','on') or is_state('input_boolean.sheri_almost_home','on')) }}
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: open_garage_jphone

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: open_garage_sphone

  action:
    - service: script.garage_door_open
      data:
        override: "{{ true if unlocked else false }}"
        mobile: >
          {% if trigger.event.data['action'] == 'open_garage_jphone' %} jphone
          {% elif trigger.event.data['action'] == 'open_garage_sphone' %} sphone
          {% endif %}

#######################################################################################################################
## Garage Door Opening
#######################################################################################################################
- id: garage_door_opening
  alias: "[Garage Door] Opening"
  description: Display notification when garage door opening.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: cover.garage_door_opener
      to: opening

  condition:
    - condition: state
      entity_id: input_boolean.garage_door_automation
      state: 'on'

  action:
    - service: browser_mod.toast
      data:
        message: "The garage door is opening."
        duration: 30000

#######################################################################################################################
## Garage Door Open
#######################################################################################################################
- id: garage_door_open
  alias: "[Garage Door] Open"
  description: Display notification, announcement when door is open.
  initial_state: true
  mode: single
  trigger:
    # must specify from states so we don't trigger when closing state repeat (closing -> open )
    - platform: state
      entity_id: cover.garage_door_opener
      to: open
      from:
        - opening
        - closed

  condition:
    - condition: state
      entity_id: input_boolean.garage_door_automation
      state: 'on'

    - condition: not
      conditions:
        - condition: template
          value_template: "{{ states('alarm_control_panel.house') in ['warning','triggered'] }}"

  action:
    - service: script.tts_play
      data:
        play_message: "The garage door is open."
        ignore_away: true
        quiet_play: true

#######################################################################################################################
## Garage Door Closing
#######################################################################################################################
- id: garage_door_closing
  alias: "[Garage Door] Closing"
  description: Display notification, repeat if door doesn't close.
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      entity_id: cover.garage_door_opener
      to: closing

  condition:
    - condition: state
      entity_id: input_boolean.garage_door_automation
      state: 'on'

  action:
    - repeat:
        sequence:
          - service: browser_mod.toast
            data:
              message: "The garage door is closing."
              duration: 30000

          # try to close the garage door again (for repeats)
          - service: cover.close_cover
            entity_id: cover.garage_door_opener

          - wait_template: "{{ is_state('binary_sensor.garage_door_open','off') }}"
            timeout:
              seconds: 180
            continue_on_timeout: true

          - condition: state
            entity_id: binary_sensor.garage_door_open
            state: 'on'

          - service: script.tts_play
            data:
              play_message: "Attention! The garage door did not close."
              quiet_play: true
              min_volume: "{{ 30 if is_state_attr(states('sensor.tts_media_player'),'speaker_group',true) else 40 }}"

          - service: notify.mobile
            data:
              title: Garage Door Alert
              message: Garage door did not close!
              data:
                tag: garage_door_not_closed
                group: General
                channel: Alert
                importance: max
                clickAction: /lovelace/garage
                color: !secret WARNING_COLOR
                icon_url: !secret GARAGE_OPEN_ICON
                actions:
                  - title: Close Garage Door
                    action: close_garage_door

          # wait until garage door closed or delay before running sequence again
          - wait_template: "{{ is_state('cover.garage_door_opener','closed') }}"
            timeout:
              minutes: 5
            continue_on_timeout: true

        until:
          - condition: or
            conditions:
              # run until garage door state is closed
              - condition: state
                entity_id: cover.garage_door_opener
                state: closed

              # only run 5 times
              - condition: template
                value_template: "{{ repeat.index == 5 }}"

#######################################################################################################################
## Garage Door Closed
#######################################################################################################################
- id: garage_door_closed
  alias: "[Garage Door] Closed"
  description: Display notification, announcement when door is closed.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: cover.garage_door_opener
      to: closed
      from:
       - closing
       - opening
       - open

  condition:
    - condition: state
      entity_id: input_boolean.garage_door_automation
      state: 'on'

  action:
    - service: script.tts_play
      data:
        play_message: "The garage door is closed."
        ignore_away: true

#######################################################################################################################
## Garage Door - Close Did Not Close Notifications
#######################################################################################################################
- id: garage_door_close_did_not_close_notifications
  alias: "[Garage Door] Close Did Not Close Notifications"
  description: Dismiss notifications on all devices.
  initial_state: true
  mode: single
  #max_exceeded: silent
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_door_open
      to: 'off'
      from: 'on' # sensor unavailable -> off when myq reconnects

    - platform: event
      event_type: mobile_app_notification_cleared
      event_data:
        tag: garage_door_not_closed

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: close_garage_door

  action:
    - service: script.close_notifications
      data:
        target: mobile
        tag: garage_door_not_closed

    - delay:
        seconds: 180 # prevent recursive triggers