###############################################################################
## Mobile - Sheri Alert Announcements
###############################################################################
- id: mobile_sheri_alert_announcements
  alias: "[Mobile] Sheri Alert Announcements"
  description: "Play alert tts announcement."
  mode: parallel
  variables:
    message: >
      {% set t = trigger.entity_id %}
      {% if t == 'alert.sheri_phone_wifi_off' %}
        Sheri, your phone wifi is off.
      {% elif t == 'alert.sheri_phone_wifi_disconnected' %}
        Sheri, your phone wifi has not connected to the home network.
      {% elif t == 'alert.sheri_phone_ringer_off' %}
        Sheri, your phone ringer is off.
      {% elif t == 'alert.sheri_phone_offline' %}
        Sheri, your mobile phone went offline at
        {{ as_local(states.binary_sensor.sheri_phone_connected.last_changed).strftime('%-I:%M %p') }}
      {% elif t == 'alert.sheri_phone_bluetooth_off' %}
        Sheri, your phone bluetooth is off.
      {% elif t == 'alert.sheri_phone_bluetooth_disconnected' %}
        Sheri, your phone bluetooth is disconnected from Home Assistant.
      {% elif t == 'alert.sheri_phone_bluetooth_device' %}
        Sheri, get your shit together.
        {% if is_state('binary_sensor.sheri_phone_headphones_connected','on') %}
          Your headphones are connected to your phone!
        {% elif is_state('binary_sensor.sheri_phone_jeep_connected','on') %}
          Your phone is still connected to the Jeep uconnect!
        {% endif %}
      {% elif t == 'alert.sheri_phone_battery_low' %}
          Pay attention Sheri!  You've let your phone battery get down to
          {{ states('sensor.jphone_battery_level') }}%. Plug the friggin thing in!
      {% elif t == 'alert.sheri_phone_high_accuracy' %}
          Sheri, your phone high accuracy mode is on.
      {% endif %}
  trigger:
    - platform: state
      entity_id: &alerts
        - alert.sheri_phone_wifi_off
        - alert.sheri_phone_wifi_disconnected
        - alert.sheri_phone_ringer_off
        - alert.sheri_phone_offline
        - alert.sheri_phone_bluetooth_off
        - alert.sheri_phone_bluetooth_disconnected
        - alert.sheri_phone_bluetooth_device
        - alert.sheri_phone_battery_low
        - alert.sheri_phone_high_accuracy
      to: "on"
      for:
        minutes: 15

    - platform: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Home
      from: Night
      for:
        minutes: 30

    - platform: state
      id: occupancy
      entity_id: binary_sensor.sheri_home
      to: "on"
      from: "off"
      for:
        minutes: 15
  condition:
    - condition: state
      entity_id: *alerts
      state: "on"
      match: any

    - condition: state
      entity_id: binary_sensor.sheri_home
      state: "on"

    - condition: state
      entity_id: input_select.occupancy_mode
      state: Home

    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: "{{ iif(trigger.id == 'occupancy',is_state('input_boolean.occupancy_override','off'),true) }}"
  action:
    - repeat:
        sequence:
          - service: script.turn_on
            continue_on_error: true
            target:
              entity_id: script.tts_play
            data:
              variables:
                message: "{{ message }}"
                quiet_play: true

          - wait_template: "{{ not is_state(trigger.entity_id,'on') }}"
            timeout:
              hours: 1

        until:
          - condition: template
            value_template: "{{ not is_state(trigger.entity_id,'on') }}"
