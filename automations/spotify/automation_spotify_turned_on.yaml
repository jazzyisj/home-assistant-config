#######################################################################################################################
## Radio Turned On
#######################################################################################################################
- id: spotify_turned_on
  alias: "[Spotify] Turned On"
  description: Play spotify with current settings.
  initial_state: true
  mode: single
  #max_exceeded: silent
  trigger:
    - platform: state
      entity_id:
        - input_boolean.spotify_on
        - binary_sensor.spotify_active # picks up when started by script, spotcast
      to: 'on'

    - platform: state
      entity_id: binary_sensor.startup_complete
      to: 'on'

  condition:
    # run at startup if spotify boolean/sensor is on
    - condition: template
      value_template: >
        {{ is_state('input_boolean.spotify_on','on') or is_state('binary_sensor.spotify_active','on')
            if trigger.entity_id == 'binary_sensor.startup_complete' else true }}

  action:
    - choose:
        - conditions:
            # spotify already running - turn on boolean
            - condition: state
              entity_id: binary_sensor.spotify_active
              state: 'on'

          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.spotify_on

      default:
        - service: script.turn_on
          data:
            entity_id: script.spotify_play
            variables:
              playlist: "{{ states('input_select.spotify_playlist') }}"
              device: "{{ states('input_select.spotify_media_player') }}"
              volume: "{{ states('input_number.spotify_volume')|float }}"
              random: "{{ is_state('input_boolean.spotify_random','on') }}"
              shuffle: "{{ is_state('input_boolean.spotify_shuffle','on') }}"
              repeat: "{{ is_state('input_boolean.spotify_repeat','on') }}"


