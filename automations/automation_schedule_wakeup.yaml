#######################################################################################################################
## Schedule - Wakeup
#######################################################################################################################
- id: schedule_wakeup
  alias: "[Schedule] Wakeup"
  description: "Play alarm clock, run wake up routine."
  initial_state: true
  mode: single
  trigger:
    - platform: template
      # will trigger on waketime today and again on auto alarm time if still night mode
      value_template: >
        {{ is_state('sensor.time',states('sensor.waketime_today'))
            or is_state('sensor.time',states('sensor.alarm_clock_auto')) }}

  condition:
    - condition: state
      entity_id:
        - input_boolean.schedule_automation
        - binary_sensor.someone_home
      state: 'on'

    # schedule_morning_before_alarm might have put house into override mode
    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Override
        - Night

    - condition: not
      conditions:
        - condition: state
          entity_id: alarm_control_panel.house
          state: triggered

  action:
    # turn auto alarm on if enabled and is wake time (prevents alarm clock from turning on if wakeup manually called before waketime)
    - choose:
        - conditions:
            - condition: state
              entity_id: sensor.alarm_clock_next_alarm
              attribute: source
              state: auto

            - condition: template
              value_template: >
                {% if is_state('binary_sensor.owner_home','off') %}{{ is_state('input_boolean.alarm_clock_guest','on') }}
                {% else %}{{ is_state('input_boolean.alarm_clock_auto_workdays','on') if is_state('binary_sensor.work_today','on') else is_state('input_boolean.alarm_clock_auto_weekends','on') }}
                {% endif %}

          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.alarm_clock_active_auto

            # continue when alarm is turned off or after 60 minutes
            - wait_template: "{{ is_state('binary_sensor.alarm_clock_active','off') }}"
              timeout:
                minutes: 60
              continue_on_timeout: true

    #ISSUE can't determine phone alarm state house wakes up whether phone alarm snoozed/turned off or not

    # only continue if workday/weekend/guest morning enabled
    # this is not in conditions so the auto alarm clock can still function
    - condition: template
      value_template: >
        {% if is_state('binary_sensor.owner_home','off') %}{{ is_state('input_boolean.guest_morning','on') }}
        {% else %}{{ is_state('input_boolean.workday_morning','on') if is_state('binary_sensor.work_today','on') else is_state('input_boolean.weekend_morning','on') }}
        {% endif %}

    - service: script.scene_wake_up

#######################################################################################################################
## Schedule - Manual Wake Up
#######################################################################################################################
- id: schedule_manual_wake_up
  alias: "[Schedule] Manual Wake Up"
  description: "Someone is up before alarm and has manually selected Home/Guest mode."
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Override

  condition:
    - condition: state
      entity_id: input_boolean.schedule_automation
      state: 'on'

    - condition: state
      entity_id: script.scene_wake_up
      state: 'off'

    # only after 4am and before scheduled wake time
    - condition: template
      value_template:  "{{ '4:00' < states('sensor.time') < states('sensor.waketime_today') }}"

    - condition: template
      value_template: >
        {{ (is_state('input_boolean.weekend_morning','on') and is_state('binary_sensor.work_today','on'))
          or (is_state('binary_sensor.work_today','off') and is_state('input_boolean.weekend_morning','on'))
          or (is_state('binary_sensor.owner_home','off') and is_state('input_boolean.guest_morning','on')) }}

  action:
    - service: script.scene_wake_up