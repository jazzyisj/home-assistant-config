#######################################################################################################################
## Climate - Settings Adjusted - must be disabled in script.climate_set_temperature or we get recursive call
#######################################################################################################################
- id: climate_settings_adjusted
  alias: "[Climate] Settings Adjusted"
  description: "Reset temperatures to preset values when HVAC settings have been changed."
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      entity_id:
        - sensor.upstairs_thermostat_operation_mode
        - input_number.home_heat_temperature
        - input_number.home_cool_temperature
        - input_number.night_heat_temperature
        - input_number.night_cool_temperature
        - input_number.guest_heat_temperature
        - input_number.guest_cool_temperature

  condition:
    - condition: state
      entity_id: input_boolean.climate_automation
      state: 'on'

    - condition: not
      conditions:
        - condition: state
          entity_id: climate.upstairs_thermostat
          state: 'off'

    # only run if in corresponding occupancy mode if trigger is temperature preset adjusted
    - condition: template
      value_template: >
        {% if trigger.entity_id in ['input_number.home_heat_temperature','input_number.home_cool_temperature'] %}
          {{ is_state('input_select.occupancy_mode','Home') or is_state('input_select.occupancy_mode','Override') }}
        {% elif trigger.entity_id in ['input_number.night_heat_temperature','input_number.night_cool_temperature'] %}
          {{ is_state('input_select.occupancy_mode','Night') }}
        {% elif trigger.entity_id in ['input_number.guest_heat_temperature','input_number.guest_cool_temperature'] %}
          {{ is_state('input_select.occupancy_mode','Guest') }}
        {% else %}
          true
        {% endif %}

  action:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ trigger.entity_id != 'sensor.upstairs_thermostat_operation_mode' }}"

          sequence:
            # delay to allow user to finish setting temps before adjusting thermostat, restart mode, only last call will run
            - delay:
                seconds: 60

    - service: script.turn_on
      entity_id: script.set_climate_temperature