#######################################################################################################################
## Media Player - Media Turned On
#######################################################################################################################
- id: media_player_media_turned_on
  alias: "[Media Player] Media Turned On"
  description: Play media when boolean turned on.
  initial_state: true
  max_exceeded: silent # recursive call
  variables:
    media_type: >
      {% if trigger.entity_id == 'input_boolean.radio' %} radio
      {% elif trigger.entity_id in ['input_boolean.spotify','binary_sensor.spotify_active'] %} spotify
      {% endif %}
  trigger:
    - platform: state
      entity_id:
        - input_boolean.radio
        - input_boolean.spotify
        - binary_sensor.spotify_active # picks up spotify started by spotcast/app
      to: 'on'
  condition:
    - condition: state
      alias: Ignore triggers during media play.
      entity_id: script.media_play
      state: 'off'
  action:
    - choose:
        - conditions: "{{ trigger.entity_id == 'binary_sensor.spotify_active' }}"
          alias: Spotify turned on by spotcast or app.
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.spotify
      default:
        - choose:
            - conditions: "{{ media_type == 'spotify'}}"
              sequence:
                - service: script.turn_on
                  data:
                    entity_id: script.media_play
                    variables:
                      media_type: spotify
                      playlist: "{{ states('input_select.spotify_playlist_hassio') }}"
                      device: "{{ states('input_select.spotify_media_player') }}"
                      volume: "{{ states('input_number.spotify_volume')|float }}"
                      random: "{{ is_state('input_boolean.spotify_random','on') }}"
                      shuffle: "{{ is_state('input_boolean.spotify_shuffle','on') }}"
                      repeat: "{{ is_state('input_boolean.spotify_repeat','on') }}"
          default:
            - service: script.turn_on
              data:
                entity_id: script.media_play
                variables:
                  media_type: "{{ media_type }}"