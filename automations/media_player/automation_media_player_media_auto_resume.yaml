#######################################################################################################################
## Media Player - Media Auto Resume  #SPOTIFY how do we resume jason/sheri spotify players?
#######################################################################################################################
- id: media_player_media_auto_resume
  alias: '[Media Player] Media Auto Resume'
  description: Restart radio after announcement, alarm clock, or spotify settings are changed.
  mode: queued
  max: 5
  max_exceeded: error
  variables:
    media_types: "{{ ['radio','spotify'] }}"
    media_resume: >
      {% if is_state('input_boolean.radio','off') and is_state('input_boolean.spotify','off') %} none
      {% elif trigger.entity_id in ['input_boolean.startp_pending','input_boolean.tts_playing','binary_sensor.alarm_clock_active'] %} all
      {% elif is_state('input_boolean.radio','on')
          and trigger.entity_id in ['input_select.radio_media_player','input_select.radio_station'] %} radio
      {% elif is_state('input_boolean.spotify','on')
          and trigger.entity_id in ['input_select.spotify_media_player','input_select.spotify_playlist_hassio'] %} spotify
      {% else %} none
      {% endif %}
    speaker_groups: "{{ state_attr('sensor.media_player_groups','players') }}"
    alarm_player: "{{ states('sensor.alarm_clock_media_player') }}"
    alarm_group: "{{ state_attr('sensor.alarm_clock_media_player','players') }}"
  trigger:
    - platform: state # resume after setting change
      entity_id:
        - input_select.radio_media_player
        - input_select.radio_station
        - input_select.spotify_media_player
        - input_select.spotify_playlist

    - platform: state
      entity_id:
        - input_boolean.startup_pending # resume all after startup
        - input_boolean.tts_playing
        - binary_sensor.alarm_clock_active
      to: 'off'
  condition:
    - condition: template
      value_template: "{{ media_resume != 'none' }}"
  action:
    - repeat:
        count: "{{ media_types|count }}"
        sequence:
          - variables:
              media_type: "{{ media_types[repeat.index -1] }}"

          - choose:
              - conditions:
                  - condition: template
                    alias: Resuming play or media type is on.
                    value_template: >
                      {{ media_type == media_resume
                          or (trigger.entity_id == 'input_boolean.startup_pending' and is_state('input_boolean.' ~ media_type,'on'))
                          or (media_resume == 'all' and is_state('input_boolean.resume_' ~ media_type,'on')) }}

                  - condition: template
                    alias: Trigger media player is not an active alarm clock media player.
                    value_template: >
                      {% if is_state('binary_sensor.alarm_clock_active','on') %}
                        {% set found = namespace(value=0) %}
                        {% set media_player = states('sensor.' ~ media_type ~ '_media_player') %}
                        {% set media_group = state_attr('sensor.' ~ media_type ~ '_media_player','players') %}
                        {% if media_player in speaker_groups %}
                          {% for item in media_group %}
                            {% if alarm_player in speaker_groups %}
                              {% for alarm_item in alarm_group %}
                                {% if alarm_item == item %}{% set found.value = 1 %}{% endif %}
                              {% endfor %}
                            {% elif item == alarm_player %}
                              {% set found.value = 1 %}
                            {% endif %}
                          {% endfor %}
                        {% else %}
                          {% if alarm_player in speaker_groups %}
                            {% for alarm_item in alarm_group %}
                              {% if alarm_item == media_player %}{% set found.value = 1 %}{% endif %}
                            {% endfor %}
                          {% elif media_player == alarm_player %}
                            {% set found.value = 1 %}
                          {% endif %}
                        {% endif %}
                        {{ found.value|int != 1 }}
                      {% else %} true
                      {% endif %}
                sequence:
                  - service: script.turn_on
                    data:
                      entity_id: script.media_play
                      variables:
                        media_type: "{{ media_type }}"
                        resume: >
                          {% if trigger.entity_id == 'input_select.spotify_playlist_hassio' %} playlist
                          {% elif trigger.entity_id == 'input_select.radio_station' %} station
                          {% elif trigger.entity_id in ['input_select.radio_media_player','input_select.spotify_media_player'] %} player
                          {% else %} true
                          {% endif %}

