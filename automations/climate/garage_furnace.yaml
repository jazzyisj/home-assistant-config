###################################################################################################
## Turn Garage Freeze Protection On
###################################################################################################
- id: turn_garage_freeze_protection_on
  alias: "Turn Garage Freeze Protection On"
  description: "Turn garage freeze protection boolean on."
  mode: restart
  triggers:
    - trigger: state
      entity_id: climate.garage
      attribute: preset_mode
      to: eco
  actions:
    - action: input_boolean.turn_on
      target:
        entity_id: input_boolean.garage_freeze_protection

###################################################################################################
## Turn Garage Furnace On
###################################################################################################
- id: turn_garage_furnace_on
  alias: "Turn Garage Furnace On"
  description: "Turn garage furnace on."
  mode: restart
  triggers:
    - trigger: state
      id: freeze
      entity_id: input_boolean.garage_freeze_protection
      to: "on"

    - trigger: state
      id: furnace
      entity_id: switch.garage_furnace
      to: "on"
      for: 5 # switch can bounce back to off

    - trigger: state
      id: thermostat
      entity_id: climate.garage
      to: "off"
  conditions:
    - condition: state
      entity_id: climate.garage
      state: "off"

    - condition: template
      value_template: >
        {{ is_state('input_boolean.garage_freeze_protection', 'on')
            if trigger.id == 'thermostat' else true }}
  actions:
    - if: "{{ trigger.id != 'furnace' }}"
      then:
        - wait_template: "{{ is_state('binary_sensor.garage_door', 'off') }}"
          timeout:
            minutes: 15
          continue_on_timeout: false

    - if: "{{ trigger.id == 'furnace' or is_state('binary_sensor.garage_door', 'off') }}"
      then:
        - action: climate.set_preset_mode
          target:
            entity_id: climate.garage
          data:
            # eco is freeze protection
            preset_mode: "{{ iif(trigger.id in ['freeze', 'thermostat'], 'eco', 'home') }}"
          continue_on_error: true

    - action: climate.turn_on
      target:
        entity_id: climate.garage

###################################################################################################
## Turn Garage Furnace Off
###################################################################################################
- id: turn_garage_furnace_off
  alias: "Turn Garage Furnace Off"
  description: "Turn garage furnace off."
  mode: restart
  triggers:
    - trigger: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
        - Night
        - Away
        - Vacation
      for: 1 # allow reset

    - trigger: state
      id: high_temp
      entity_id: alert.garage_high_temperature
      to: "on"
      for:
        minutes: 5

    - trigger: state
      id: garage
      entity_id: binary_sensor.garage_door
      to: "on"
      from: "off"
      for:
        minutes: 2

    - trigger: state
      entity_id: switch.garage_furnace
      to: "off"
      for: 5 # switch can bounce back to on

    - trigger: state
      id: freeze
      entity_id: input_boolean.garage_freeze_protection
      to: "off"

    - trigger: state
      id: thermostat
      entity_id: climate.garage
      to: heat
  conditions:
    - condition: state
      entity_id: climate.garage
      state: heat

    - condition: template
      value_template: >
        {{ iif(trigger.id == 'thermostat',
            is_state('binary_sensor.garage_door', 'on'), true) }}
  actions:
    - action: climate.turn_off
      target:
        entity_id: climate.garage
      continue_on_error: true

    - if: "{{ trigger.id in ['garage', 'thermostat'] }}"
      then:
        - action: script.turn_on
          target:
            entity_id: script.tts_play
          data:
            variables:
              message: "The garage heat has been turned off because the garage door is open."
          continue_on_error: true

        - wait_template: "{{ is_state('binary_sensor.garage_door', 'off') }}"
          timeout:
            minutes: 15
          continue_on_timeout: false

        - condition: template
          value_template: "{{ is_state('binary_sensor.garage_occupied', 'on') }}"

        - action: climate.turn_on
          target:
            entity_id: climate.garage
          continue_on_error: true

        - action: script.turn_on
          target:
            entity_id: script.tts_play
          data:
            variables:
              message: |
                The garage heat has been turned back on.
                The thermostat is set to {{ state_attr('climate.garage', 'temperature') }} degrees.
                The current garage temperature is {{ states('sensor.garage_sensor_air_temperature') }} degrees.
              media_player: media_player.office_speaker
