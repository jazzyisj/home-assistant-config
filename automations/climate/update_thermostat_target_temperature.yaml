###################################################################################################
## Update Thermostat Target Temperature
###################################################################################################
- id: update_thermostat_target_temperature
  alias: "Update Thermostat Target Temperature"
  description: "Update stored thermostat target temperature."
  mode: restart
  variables:
    temp: >
      {% set hvac = states('climate.thermostat') %}
      {% set temp = state_attr('climate.thermostat', 'temperature') %}
      {% set high = state_attr('climate.thermostat', 'target_temp_high') %}
      {% set low = state_attr('climate.thermostat', 'target_temp_low') %}
      {% set stored = states('sensor.indoor_temperature_target') %}
      {% set outdoor = states('sensor.outdoor_temperature') %}
      {% if hvac in ['heat', 'cool'] %}{{ temp | int if is_number(temp) else stored }}
      {% elif hvac == 'heat_cool' %}
        {% if is_number(high)and is_number(low) and is_number(outdoor) %}
          {% if outdoor | int > high %} {{ high | int }}
          {% else %} {{ low | int }}
          {% endif %}
        {% else %} {{ low }} {# defaults to heat target if no outdoor temp #}
        {% endif %}
      {% else %} {{ stored }} {# defaults to stored if hvac off #}
      {% endif %}
  triggers:
    - trigger: state
      entity_id: climate.thermostat
      attribute: temperature
  conditions:
    - condition: numeric_state
      entity_id: climate.thermostat
      attribute: temperature
      above: 0

    - condition: state
      entity_id: script.set_thermostat
      state: "off"
  actions:
    - action: input_number.set_value
      target:
        entity_id: input_number.thermostat_target_temperature
      data:
        value: "{{ temp }}"
