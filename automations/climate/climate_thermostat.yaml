###############################################################################
## Climate - Turn Off Presence Override
###############################################################################
- id: climate_turn_off_presence_override
  alias: "[Climate] Turn Off Presence Override"
  description: "Turn off climate presence override."
  triggers:
    - trigger: state
      entity_id: binary_sensor.someone_home
      to: "on"

    - trigger: state
      entity_id: input_boolean.hvac_manual_mode
      to: "on"

    - trigger: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Away
        - Vacation

    - trigger: state
      entity_id: input_boolean.hvac_presence_override
      to: "on"
      for:
        minutes: 60
  conditions:
    - condition: state
      entity_id: input_boolean.hvac_presence_override
      state: "on"
  actions:
    - action: input_boolean.turn_off
      entity_id: input_boolean.hvac_presence_override

###############################################################################
## Climate - Turn Off Thermostat
###############################################################################
- id: climate_turn_off_thermostat
  alias: "[Climate] Turn Off Thermostat"
  description: "Turn off thermostat"
  max_exceeded: silent
  triggers:
    - trigger: event
      event_type: mobile_app_notification_action
      event_data:
        action: turn_thermostat_off
  conditions:
    - not:
        - condition: state
          entity_id: climate.thermostat
          state: "off"
  actions:
    - action: climate.turn_off
      target:
        entity_id: climate.thermostat

###############################################################################
## Climate - Thermostat Mode Changed
###############################################################################
- id: climate_thermostat_mode_changed
  alias: "[Climate] Thermostat Mode Changed"
  description: "Update stored HVAC mode when climate mode is manually changed."
  mode: restart
  triggers:
    - trigger: state
      entity_id: climate.thermostat
      to:
        - heat
        - cool
        - heat_cool
        - fan_only
        - "off"
      not_from:
        - unknown
        - unavailable
  conditions:
    - condition: state
      entity_id: script.set_thermostat
      state: "off"

    - condition: state
      alias: "HVAC Window Door Open alert is not active"
      entity_id: alert.hvac_window_door_open
      state: idle
  actions:
    - action: input_select.select_option
      target:
        entity_id: input_select.hvac_mode
      data:
        option: "{{ states('climate.thermostat') }}"

###############################################################################
## Climate - Update Thermostat Target Temperature
###############################################################################
- id: climate_update_thermostat_target_temperature
  alias: "[Climate] Update Thermostat Target Temperature"
  description: "Update stored thermostat target temperature."
  mode: restart
  variables:
    temp: >
      {% set hvac = states('climate.thermostat') %}
      {% set temp = state_attr('climate.thermostat', 'temperature') %}
      {% set high = state_attr('climate.thermostat', 'target_temp_high') %}
      {% set low = state_attr('climate.thermostat', 'target_temp_low') %}
      {% set stored = states('sensor.indoor_temperature_target') %}
      {% set outdoor = states('sensor.outdoor_temperature') %}
      {% if hvac in ['heat', 'cool'] %}{{ temp | int if is_number(temp) else stored }}
      {% elif hvac == 'heat_cool' %}
        {% if is_number(high)and is_number(low) and is_number(outdoor) %}
          {% if outdoor | int > high %} {{ high | int }}
          {% else %} {{ low | int }}
          {% endif %}
        {% else %} {{ low }} {# defaults to heat target if no outdoor temp #}
        {% endif %}
      {% else %} {{ stored }} {# defaults to stored if hvac off #}
      {% endif %}
  triggers:
    - trigger: state
      entity_id: climate.thermostat
      attribute: temperature
  conditions:
    - condition: numeric_state
      entity_id: climate.thermostat
      attribute: temperature
      above: 0

    - condition: state
      entity_id: script.set_thermostat
      state: "off"
  actions:
    - action: input_number.set_value
      target:
        entity_id: input_number.thermostat_target_temperature
      data:
        value: "{{ temp }}"

###############################################################################
## Climate - Set Thermostat
###############################################################################
- id: climate_set_thermostat
  alias: "[Climate] Set Thermostat"
  description: "Set thermostat temperatures."
  mode: restart
  triggers:
    - trigger: homeassistant
      id: startup
      event: start

    - trigger: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to:
      for: 15 # prevent trigger on quick changes in state

    - trigger: state
      id: override
      entity_id: input_boolean.hvac_presence_override
      to:

    - trigger: state
      id: manual
      entity_id: input_boolean.hvac_manual_mode
      to: "off"

    - trigger: state
      id: home
      entity_id:
        - input_number.home_heat_temperature
        - input_number.home_cool_temperature
      to:
      for: 5 # throttle

    - trigger: state
      id: night
      entity_id:
        - input_number.night_heat_temperature
        - input_number.night_cool_temperature
      to:
      for: 5 # throttle

    - trigger: state
      id: guest
      entity_id:
        - input_number.guest_heat_temperature
        - input_number.guest_cool_temperature
      to:
      for: 5 # throttle

    - trigger: state
      entity_id: input_select.hvac_mode
      to:

    - trigger: state
      id: boost
      entity_id: sensor.hvac_boost
      to:
  conditions:
    - condition: state
      entity_id: input_boolean.hvac_manual_mode
      state: "off"

    - condition: or
      conditions:
        - not:
            - condition: state
              entity_id: climate.thermostat
              state: "off"

            - condition: state
              entity_id: alert.hvac_window_door_open
              state: "on"

        - condition: template
          value_template: "{{ trigger.id == 'startup' }}"

    - condition: template
      alias: "HVAC boost is a valid number if trigger is boost"
      value_template: >
        {% if trigger.id == 'boost' %} {{ is_number(states(trigger.entity_id)) }}
        {% else %} {{ true }}
        {% endif %}

    - condition: template
      alias: "Occupancy override is off if occupancy trigger"
      value_template: >
        {{ iif(trigger.id == 'occupancy',
            is_state('input_boolean.occupancy_override', 'off'), true) }}

    - condition: template
      alias: "Current occupancy mode corresponds to trigger preset"
      value_template: >
        {% if trigger.id == 'home' %} {{ is_state('input_select.occupancy_mode', 'Home') }}
        {% elif trigger.id == 'night' %} {{ is_state('input_select.occupancy_mode', 'Night') }}
        {% elif trigger.id == 'guest' %} {{ is_state('input_select.occupancy_mode', 'Guest') }}
        {% else %} true
        {% endif %}
  actions:
    #ERROR Error from API: 429: RESOURCE_EXHAUSTED: Rate limited for the Thermostat.: Too Many Requests
    # delay to allow user to finish setting temps, restart mode - will finish with last set value
    # prevent multiple set_thermostat triggers withc override on/off, occupancy mode etc.
    - delay: 60

    - action: script.set_thermostat
