#######################################################################################################################
## Radio - Volume Change
## - media player expects float value, input_number is percent (/100)
## - if night/quiet mode check volume level, reset volume if necessary
#######################################################################################################################
- id: radio_volume_change
  alias: "[Radio] Volume Change"
  description: Change media player volume when radio volume control changed.
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      entity_id:
        - input_number.radio_volume
        - input_boolean.volume_override

  condition:
    - condition: state
      entity_id: input_boolean.radio_on
      state: 'on'

    - condition: state
      entity_id:
        - script.radio_play
        - script.radio_stop
      state: 'off'

  action:
    # reset volume if set value > night/quiet mode value unless override on
    - service: input_number.set_value
      data:
        entity_id: input_number.radio_volume
        value: >
          {% set radio = states('input_number.radio_volume')|int %}
          {% set quiet = states('input_number.media_quiet_volume')|int %}
          {% if is_state('input_boolean.volume_override','on') %}{{ radio }}
          {% elif is_state('binary_sensor.quiet_hours','on') and radio > quiet %}{{ quiet }}
          {% else %}{{ radio }}
          {% endif %}

    # set media player volume to input_number value
    - service: media_player.volume_set
      data:
        entity_id: "{{ states('sensor.radio_media_player') }}"
        volume_level: " {{ states('input_number.radio_volume')|float / 100 }}"