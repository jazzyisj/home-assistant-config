###############################################################################
## TTS - Finished
###############################################################################
- id: tts_finished
  alias: "[TTS] Finished"
  description: "Reset tts queue."
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: script.tts_play
      to: "off"
      for: 2 # let any queued tts message play

    - platform: state
      entity_id: input_boolean.tts
      to: "on"
      for:
        minutes: 2
  action:
    # reset tts boolean
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.tts

    # let any queued tts messages start - backup for delayed trigger
    - wait_template: "{{ is_state('input_boolean.tts','on') }}"
      timeout: 10

    - condition: state
      entity_id: input_boolean.tts
      state: "off"

    - service: automation.turn_on
      target:
        entity_id: automation.media_player_save_volume

    # only resume/reset volume if tts not muted
    - if:
        - condition: state
          entity_id:
            - input_boolean.tts
            - input_boolean.tts_muted
          state: "off"
      then:
        - if: "{{ is_state('input_boolean.resume_mass','on') }}"
          then:
            - variables:
                mass_players: "{{ states('input_text.tts_restore_mass').split(',')|list }}"

            - repeat:
                for_each: "{{ mass_players }}"
                sequence:
                  - service: mass.queue_command
                    data:
                      player_id: "{{ mass_players[repeat.index-1] }}"
                      command: snapshot_restore #MASS #TODO not working
                    continue_on_error: true

            - service: input_boolean.turn_off
              target:
                entity_id: input_boolean.resume_mass

            - service: input_text.set_value
              target:
                entity_id: input_text.tts_restore_mass
              data:
                value: ""

            - wait_template: "{{ expand(mass_players)|selectattr('state','ne','playing')|list|count == 0 }}"
              timeout: 15

        - service: script.media_player_set_volumes
          data:
            source: tts_off
          continue_on_error: true

    # reset tts booleans
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.tts_muted

###############################################################################
## TTS - Override Off
###############################################################################
- id: tts_override_off
  alias: "[TTS] Override Off"
  description: "Reset manual tts player, volume."
  trigger:
    - platform: state
      entity_id: input_boolean.tts_override
      to: "off"
  action:
    - service: select.select_option
      target:
        entity_id: select.tts_media_player_manual
      data:
        option: "None Selected"

    - service: input_number.set_value
      target:
        entity_id: input_number.tts_volume_manual
      data:
        value: 0

###############################################################################
## TTS - Manual Media Player Selection Reset
###############################################################################
- id: tts_manual_media_player_selection_reset
  alias: "[TTS] Manual Media Player Selection Reset"
  description: "Reset manual tts player selection."
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: select.tts_media_player_manual
      to: ~

    - platform: state
      entity_id:
        - input_boolean.tts
        - input_boolean.tts_override
      to: "off"
  condition:
    - condition: state
      entity_id:
        - script.tts_play
        - input_boolean.tts
        - input_boolean.tts_override
      state: "off"
  action:
    - if:
        - not:
            - condition: state
              entity_id: select.tts_media_player_manual
              match: any
              state:
                - "None Selected"
                - unknown
                - unavailable
      then:
        - service: select.select_option
          target:
            entity_id: select.tts_media_player_manual
          data:
            option: "None Selected"

    - service: input_number.set_value
      target:
        entity_id: input_number.tts_volume_manual
      data:
        value: 0
