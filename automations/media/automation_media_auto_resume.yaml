###############################################################################
## Media Auto Resume
###############################################################################
- id: media_auto_resume
  alias: '[Media] Auto Resume'
  description: 'Resume media.'
  mode: queued
  variables:
    media_types: "{{ state_attr('sensor.media_types','media_types') }}"
    media_on: "{{ state_attr('binary_sensor.media_on','media_types') }}"
    media_type: >
      {% if trigger.id in ['startup','alarm_clock','tts'] %} all
      {% elif media_types != none %}
        {% for type in media_types %}
          {% if type in trigger.id %}
            {{ type }}
          {% endif %}
        {% endfor %}
      {% endif %}
  trigger:
    - platform: state
      id: radio_playlist
      entity_id: select.radio_playlist
      to: ~

    - platform: state
      id: radio_media_player
      entity_id: select.radio_media_player
      to: ~

    - platform: state
      id: spotify_hassio_playlist
      entity_id: select.spotify_hassio_playlist
      to: ~

    - platform: state
      id: spotify_hassio_media_player
      entity_id: select.spotify_hassio_media_player
      to: ~

    - platform: state
      id: spotify_jason_playlist
      entity_id: select.spotify_jason_playlist
      to: ~

    - platform: state
      id: spotify_jason_media_player
      entity_id: select.spotify_jason_media_player
      to: ~

    - platform: state
      id: spotify_sheri_playlist
      entity_id: select.spotify_sheri_playlist
      to: ~

    - platform: state
      id: spotify_sheri_media_player
      entity_id: select.spotify_sheri_media_player
      to: ~

    - platform: state
      id: youtube_playlist
      entity_id: input_select.youtube_player_playlist
      to: ~

    - platform: state
      id: youtube_media_player
      entity_id: input_select.youtube_player_speaker
      to: ~

    - platform: event
      id: radio_restart
      event_type: mobile_app_notification_action
      event_data:
        action: radio_restart

    - platform: event
      id: spotify_hassio_restart
      event_type: mobile_app_notification_action
      event_data:
        action: spotify_hassio_restart

    - platform: event
      id: spotify_jason_restart
      event_type: mobile_app_notification_action
      event_data:
        action: spotify_jason_restart

    - platform: event
      id: spotify_sheri_restart
      event_type: mobile_app_notification_action
      event_data:
        action: spotify_sheri_restart

    - platform: event
      id: youtube_restart
      event_type: mobile_app_notification_action
      event_data:
        action: youtube_restart

    - enabled: false
      platform: state
      id: startup
      entity_id: input_boolean.startup_pending
      to: 'off'
      from: 'on'
      for: 60 # allow alerts/tts to play

    - platform: state
      id: alarm_clock
      entity_id: binary_sensor.alarm_clock
      to: 'off'
      from: 'on'

    - platform: state
      id: tts
      entity_id: binary_sensor.tts
      to: 'off'
      from: 'on'
  condition:
    - condition: template
      value_template: '{{ media_on != none and media_types != none }}'

    - condition: template
      alias: 'Any media is on if media type is all else media type is on'
      value_template: >
        {{ is_state('binary_sensor.media_on','on') if media_type == 'all'
            else is_state('binary_sensor.' ~ media_type,'on') }}

    - condition: state
      entity_id: input_boolean.startup_pending
      state: 'off'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest
  action:
    - if: "{{ 'media_player' in trigger.id }}"
      then:
        # turn off current media players
        - service: script.media_players_off
          data:
            entity_id: "{{ state_attr('sensor.' ~ media_type ~ '_media_player','entity_id') }}"

    - repeat:
        count: "{{ media_on|count if media_type == 'all' else 1 }}"
        sequence:
          - variables:
              media_type: "{{ media_on[repeat.index -1] if media_type == 'all' else media_type }}"

          - if:
              - condition: template
                alias: 'Trigger is playlist or player, or media type resume boolean is on'
                value_template: >
                  {{ is_state('input_boolean.resume_' ~ media_type,'on')
                      or 'media_player' in trigger.id
                      or 'playlist' in trigger.id }}

              - condition: template
                alias: 'Trigger media player is not an active alarm clock media player'
                value_template: >
                  {% set media_sensor ='sensor.' ~ media_type ~ '_media_player' %}
                  {% set alarm_player = states('sensor.alarm_clock_media_player') %}
                  {% set alarm_group = state_attr('sensor.alarm_clock_media_player','entity_id') %}

                  {% if is_state('binary_sensor.alarm_clock','off') %} true
                  {% else %}
                    {% set found = namespace(value=0) %}
                    {% set media_player = states(media_sensor) %}
                    {% set media_group = state_attr(media_sensor,'entity_id') %}
                    {% if is_state_attr(media_player,'type','group') %}
                      {% for item in media_group %}
                        {% if is_state_attr(alarm_player,'type','group') %}
                          {% for alarm_item in alarm_group %}
                            {% if alarm_item == item %}{% set found.value = 1 %}{% endif %}
                          {% endfor %}
                        {% elif item == alarm_player %}
                          {% set found.value = 1 %}
                        {% endif %}
                      {% endfor %}
                    {% else %}
                      {% if is_state_attr(alarm_player,'type','group') %}
                        {% for alarm_item in alarm_group %}
                          {% if alarm_item == media_player %}{% set found.value = 1 %}{% endif %}
                        {% endfor %}
                      {% elif media_player == alarm_player %}
                        {% set found.value = 1 %}
                      {% endif %}
                    {% endif %}
                    {{ found.value != 1 }}
                  {% endif %}
            then:
              - service: script.media_play
                data:
                  media_type: '{{ media_type }}'
                  resume: '{{ trigger.id }}'
