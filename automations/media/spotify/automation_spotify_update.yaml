###############################################################################
## Spotify - Spotify Hassio Update
###############################################################################
- id: spotify_spotify_hassio_update
  alias: '[Spotify] Spotify Hassio Update'
  description: 'Update Spotify Hassio media player.'
  initial_state: false #TEMP - keep or kill?
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: media_player.spotify_hassio
      to: 'playing'
  condition:
    - condition: state
      entity_id: binary_sensor.wan_connected
      state: 'on'

    - condition: state
      entity_id: input_boolean.startup_pending
      state: 'off'

    - condition: state
      entity_id: media_player.spotify_hassio
      state: 'playing'
  action:
    - repeat:
        while:
          - condition: state
            entity_id: media_player.spotify_hassio
            state: 'playing'
        sequence:
          - service: homeassistant.update_entity
            target:
              entity_id: media_player.spotify_hassio

          - delay: 5

###############################################################################
## Spotify - Playlist Update
###############################################################################
- id: spotify_playlist_update
  alias: '[Spotify] Playlist Update'
  description: 'Update spotify playlist input options, restore previous selection.'
  initial_state: true
  mode: restart
  variables:
    selected_playlists: "{{ expand('group.spotify_selected_playlists')|map(attribute='entity_id')|list }}"
    stored_playlists: "{{ expand('group.spotify_stored_playlists')|map(attribute='entity_id')|list }}"
    playlists: ''
  trigger:
    - platform: state
      id: startup
      entity_id: input_boolean.startup_pending
      to: 'off'

    - platform: state
      entity_id: sensor.playlists_sensor
      attribute: playlists
  condition:
    - condition: state
      entity_id:
        - binary_sensor.spotify_connected
        - binary_sensor.wan_connected
      state: 'on'

    - condition: state
      entity_id: input_boolean.startup_pending
      state: 'off'
  action:
    - wait_template: >
        {{ state_attr('sensor.playlists_sensor','playlists')|lower
            not in ['','[]','unknown','unavailable','none'] }}
      timeout:
        minutes: 10
      continue_on_timeout: false

    - service: automation.turn_off
      target:
        entity_id: &spotify_automations
          - automation.spotify_store_playlist_selection # don't overwrite stored values
          - automation.media_auto_resume # triggered by input_select.spotify_playlist
      data:
        stop_actions: false

    - service: input_select.set_options
      target:
        entity_id:
          - input_select.spotify_playlist
          - input_select.media_preset_spotify_wake
          - input_select.media_preset_spotify_morning
          - input_select.media_preset_spotify_sleep
          - input_select.media_preset_spotify_jason
          - input_select.media_preset_spotify_sheri
          - input_select.media_preset_spotify_guest
          - input_select.media_preset_spotify_shower
          - input_select.media_preset_spotify_chill
          - input_select.media_preset_spotify_company
          - input_select.alarm_clock_spotify_auto
          - input_select.alarm_clock_spotify_manual
          - input_select.alarm_clock_spotify_nap
      data:
        options: >
          [{% for item in state_attr('sensor.playlists_sensor','playlists') -%}
            "{{- item.name }}"{{ ',' if not loop.last -}}{% endfor %}]

    - repeat: # restore previous selection (values reset when options reloaded)
        count: '{{ selected_playlists|count }}'
        sequence:
          - choose:
              - conditions: "{{ states(stored_playlists[repeat.index-1])|lower not in ['','unknown','unavailable','none'] }}"
                sequence:
                  - service: input_select.select_option
                    target:
                      entity_id: '{{ selected_playlists[repeat.index-1] }}'
                    data:
                      option: '{{ states(stored_playlists[repeat.index-1]) }}'

    - service: automation.turn_on
      target:
        entity_id: *spotify_automations

###############################################################################
## Spotify - Playlist Selection Update
###############################################################################
- id: spotify_playlist_selection_update
  alias: '[Spotify] Playlist Selection Update'
  description: 'Update spotify playlist input selection.'
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      entity_id: media_player.spotify
      attribute: media_playlist
  condition: "{{ state_attr(trigger.entity_id,'media_playlist') in state_attr('input_select.spotify_playlist','options') }}"
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.media_auto_resume # triggered by input_select.spotify_playlist
      data:
        stop_actions: false

    - service: input_select.select_option
      target:
        entity_id: input_select.spotify_playlist
      data:
        option: "{{ state_attr(trigger.entity_id,'media_playlist') }}"

    - service: automation.turn_on
      target:
        entity_id: automation.media_auto_resume

###############################################################################
## Spotify - Store Playlist Selection
###############################################################################
- id: spotify_store_playlist_selection
  alias: '[Spotify] Store Playlist Selection'
  description: 'Update stored spotify playlist selection.'
  initial_state: true
  mode: queued
  max: 25
  max_exceeded: error
  variables:
    entity: "{{ 'input_select.spotify_playlist_' ~ trigger.entity_id|replace('media_player.spotify_','') }}"
    playlist: "{{ state_attr(trigger.entity_id,'media_playlist') }}"
  trigger:
    - platform: state
      entity_id:
        - input_select.spotify_playlist
        - input_select.spotify_jason_playlist
        - input_select.spotify_sheri_playlist
        - input_select.media_preset_spotify_wake
        - input_select.media_preset_spotify_morning
        - input_select.media_preset_spotify_sleep
        - input_select.media_preset_spotify_guest
        - input_select.media_preset_spotify_shower
        - input_select.media_preset_spotify_chill
        - input_select.media_preset_spotify_company
        - input_select.alarm_clock_spotify_auto
        - input_select.alarm_clock_spotify_manual
        - input_select.alarm_clock_spotify_nap
        - input_select.media_preset_spotify_jason
        - input_select.media_preset_spotify_sheri
  condition:
    - condition: state
      entity_id:
        - binary_sensor.spotify_connected
        - binary_sensor.wan_connected
      state: 'on'
  action:
    - service: input_text.set_value
      target:
        entity_id: "{{ trigger.entity_id|replace('input_select','input_text') }}"
      data:
        value: '{{ states(trigger.entity_id) }}'
