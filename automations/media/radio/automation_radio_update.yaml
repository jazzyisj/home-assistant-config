###############################################################################
## Radio - Playlist Update
###############################################################################
- id: radio_playlist_update
  alias: '[Radio] Playlist Update'
  description: 'Update radio station select options, restore previous selection on startup.'
  mode: restart
  variables:
    selected_playlists: "{{ state_attr('group.radio_selected_playlists','entity_id') }}"
    stored_playlists: "{{ state_attr('group.radio_stored_playlists','entity_id') }}"
    playlists: "{{ state_attr('sensor.streaming_radio_stations','stations') }}"
  trigger:
    - platform: homeassistant
      id: startup
      event: start

    - platform: state
      id: stations
      entity_id: sensor.streaming_radio_stations #TEMPLATE trigger on reload
      attribute: stations
  condition:
    - condition: template
      alias: 'Playlist is populated if trigger is not startup'
      value_template: "{{ playlists != none and playlists|count > 0 if trigger.id != 'startup' else true }}"
  action:
    # wait for sensor to populate (startup)
    - wait_template: '{{ playlists != none and playlists|count > 0 }}'
      timeout:
        minutes: 10
      continue_on_timeout: false

    - delay: 1 # allow sensor to populate

    - service: automation.turn_off
      target:
        entity_id: &radio_automations
          - automation.radio_store_playlist_selection # don't overwrite stored values
          - automation.media_auto_resume # triggered by input_select.radio_playlist
      data:
        stop_actions: false

    - service: input_select.set_options
      target:
        entity_id: &radio_selects
          - input_select.radio_playlist
          - input_select.media_preset_radio_wake
          - input_select.media_preset_radio_morning
          - input_select.media_preset_radio_sleep
          - input_select.media_preset_radio_jason
          - input_select.media_preset_radio_sheri
          - input_select.media_preset_radio_guest
          - input_select.media_preset_radio_shower
          - input_select.media_preset_radio_chill
          - input_select.media_preset_radio_company
          - input_select.alarm_clock_radio_auto
          - input_select.alarm_clock_radio_manual
          - input_select.alarm_clock_radio_nap
      data:
        options: >
          {% set options = namespace(value=[]) %}
          {% for item in playlists -%}
            {% set options.value = options.value + [item.name ] %}
          {% endfor %}
          {{ options.value }}

    - choose:
        - conditions: "{{ trigger.id == 'startup' }}" #NOTE only req on startup, now automatic
          sequence:
            - repeat: # restore previous selection (values reset when options reloaded)
                count: '{{ selected_playlists|count }}'
                sequence:
                  - variables:
                      select_entity: '{{ selected_playlists[repeat.index-1] }}'
                      stored_value: '{{ states(stored_playlists[repeat.index-1]) }}'

                  - choose:
                      - conditions: "{{ stored_value in state_attr(select_entity,'options') }}"
                        sequence:
                          - service: input_select.select_option
                            target:
                              entity_id: '{{ select_entity }}'
                            data:
                              option: '{{ stored_value }}'

    - service: automation.turn_on
      target:
        entity_id: *radio_automations

###############################################################################
## Radio - Store Playlist Selection
###############################################################################
- id: radio_store_playlist_selection
  alias: '[Radio] Store Playlist Selection'
  description: 'Update stored radio playlist selection.'
  mode: queued
  max: 25
  trigger:
    - platform: state
      entity_id: *radio_selects
  condition: "{{ states(trigger.entity_id)|lower not in ['unknown','unavailable','none'] }}"
  action:
    - service: input_text.set_value
      target:
        entity_id: "{{ trigger.entity_id|replace('input_select','input_text') }}"
      data:
        value: '{{ states(trigger.entity_id) }}'
