###################################################################################################
## Media Player Night Mode
###################################################################################################
- id: media_player_night_mode
  alias: "Media Player Night Mode"
  description: "Turn media players night mode on or off."
  max_exceeded: silent
  variables:
    switches: >
      {{ states.switch | selectattr('entity_id', 'in', integration_entities('google_home'))
          | selectattr('entity_id', 'contains', '_do_not_disturb')
          | map(attribute='entity_id') | list }}
    pm_tvs: "{{ ['media_player.living_room_tv', 'media_player.bedroom_tv'] }}"
    night: "{{ is_state('input_select.occupancy_mode', 'Night') }}"
  triggers:
    - trigger: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      to: Night
      for: 1 # allow occupancy mode reset

    - trigger: state
      id: occupancy
      entity_id: input_select.occupancy_mode
      from: Night
      for: 1 # allow occupancy mode reset

    - trigger: state
      id: living_room_tv
      entity_id: media_player.living_room_tv
      attribute: source
      to: ~

    - trigger: state
      id: bedroom_tv
      entity_id: media_player.bedroom_tv
      attribute: source
      to: ~
  actions:
    - if: "{{ trigger.id == 'occupancy' }}"
      then:
        - action: "switch.turn_{{ 'on' if night else 'off' }}"
          target:
            entity_id: "{{ switches }}"

    - repeat:
        count: "{{ pm_tvs | count }}"
        sequence:
          - variables:
              tv: "{{ pm_tvs[repeat.index - 1] }}"

          - if: >
              {{ states(tv) not in ['off', 'unknown', 'unavailable']
                  and (trigger.id == 'occupancy' or trigger.entity_id == tv) }}
            then:
              - action: "script.{{ trigger.id }}_picture_mode"
                data:
                  picture_mode: "{{ 'expert2' if night else 'cinema' }}"