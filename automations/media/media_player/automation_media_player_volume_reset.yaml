###############################################################################
## Media Player - Volume Reset
#BUG #TV webOS TV's excluded - don't report volume level - volume gets set to 0
###############################################################################
- id: media_player_volume_reset
  alias: "[Media Player] Volume Reset"
  description: "Reset media player volumes when home mode or quiet time change."
  max_exceeded: silent
  variables:
    active_players: >
      {{ expand('group.single_media_players')|selectattr('state','in',['playing','pause','on'])
          |map(attribute='entity_id')|list }}
    inactive_players: >
      {{ expand('group.single_media_players')|selectattr('state','in',['off','idle','home','standby'])
          |map(attribute='entity_id')|list }}
  trigger: # also called by automation.trigger
    - platform: state
      entity_id: binary_sensor.quiet_time
      to:
        - "on"
        - "off"
      from:
        - "on"
        - "off"
  condition:
    - not:
        - condition: state
          entity_id: group.single_media_players
          state:
            - unknown
            - unavailable
  action:
    - if:
        - condition: state
          entity_id: binary_sensor.mobile_phone_in_use
          state: "on"
      then:
        - alias: "Store new volumes for active players to restore when phone turns off"
          service: script.media_players_save_volumes
          data:
            entity_id: "{{ active_players }}"
            source: reset
      else:
        - alias: "Set new volumes for active players"
          service: script.media_players_set_volumes
          data:
            entity_id: "{{ active_players }}"
            source: reset

    - if:
        - condition: state
          entity_id: binary_sensor.alarm_clock
          state: "on"
      then:
        - alias: "Store new volumes for alarm clock players to restore when alarm clock turns off"
          service: script.media_players_save_volumes
          data:
            entity_id: "{{ state_attr('sensor.alarm_clock_media_player','entity_id') }}"
            source: reset

    - if:
        - condition: state
          entity_id: input_boolean.tts
          state: "on"
      then:
        - alias: "Store new volumes for tts players to restore when tts finished"
          service: script.media_players_save_volumes
          data:
            entity_id: "{{ state_attr('sensor.tts_media_player','entity_id') }}"
            source: reset

    - if: "{{ inactive_players|count > 0 }}"
      then:
        - alias: "Set new volumes for inactive players"
          service: script.media_players_set_volumes
          data:
            entity_id: "{{ inactive_players }}"
            source: reset
