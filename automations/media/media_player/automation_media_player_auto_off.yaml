###############################################################################
## Media Player - Auto Off
###############################################################################
- id: media_player_auto_off
  alias: '[Media Player] Auto Off'
  description: 'Automatically stop and turn off media players.'
  mode: restart
  variables:
    media_players: >
      {% set media_players = expand(state_attr('group.single_media_players','entity_id')) %}
      {% set media_players = media_players|rejectattr('attributes.device_class','eq','tv')
          if trigger.id in ['alarm','mute'] else media_players %}
      {{ media_players|map(attribute='entity_id')|list }}
  trigger:
    - platform: state
      id: away
      entity_id: input_select.occupancy_mode
      to:
        - Away
        - Vacation

    - platform: state
      id: night
      entity_id: input_select.occupancy_mode
      to: Night
      for: 60

    - platform: state
      id: alarm
      entity_id: alarm_control_panel.alarm
      to: triggered

    - platform: state
      id: mute
      entity_id: switch.system_mute
      to: 'on'
      from: 'off'
      for:
        minutes: 15
  condition:
    - condition: state
      entity_id: input_boolean.media_player_automation
      state: 'on'

    - condition: template
      alias: 'Presence automation is enabled if occupancy trigger'
      value_template: >
        {{ is_state('input_boolean.presence_automation','on')
              and is_state('input_boolean.occupancy_override','off')
            if trigger.id in ['away','night'] else true }}

    - condition: template
      alias: 'Alarm automation is enabled if alarm trigger'
      value_template: >
        {{ is_state('input_boolean.alarm_automation','on')
            if trigger.id == 'alarm' else true }}
  action:
    - service: script.media_players_off
      data:
        media_players: '{{ media_players }}'
