###############################################################################
## Media Media Player Save Volume
###############################################################################
- id: media_player_save_volume
  alias: "[Media Player] Save Volume"
  description: "Save media volume when media player volume changes."
  mode: queued
  max: 20
  max_exceeded: error
  trace:
    stored_traces: 20
  variables:
    volume_level: "{{ '%0.2f'|format(state_attr(trigger.entity_id,'volume_level')|float(-1))|float }}"
  trigger:
    - platform: state
      entity_id: !include /config/include/media_player_entities_single.yaml
      attribute: volume_level
      to: ~
      for: 5 # wait until volume settles
  condition:
    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: "off"

    - condition: template
      alias: "Valid volume level"
      value_template: "{{ volume_level != -1 }}"

    - condition: template
      alias: "Trigger not an active alarm clock media player"
      value_template: > #MASS changes trigger to mass player
        {% set player = trigger.entity_id ~ '_2' %}
        {{ iif(is_state('binary_sensor.alarm_clock','on'),
            player not in state_attr('sensor.alarm_clock_media_player','entity_id'),true) }}

    - condition: template
      alias: "Trigger not an active tts media player"
      value_template: >
        {{ iif(is_state('input_boolean.tts','on'),
            trigger.entity_id not in state_attr('sensor.tts_media_player','entity_id'),true) }}
  action:
    - service: input_number.set_value
      target:
        entity_id: "input_number.{{ trigger.entity_id.split('.')[1] }}_current_volume"
      data:
        value: "{{ volume_level }}"
