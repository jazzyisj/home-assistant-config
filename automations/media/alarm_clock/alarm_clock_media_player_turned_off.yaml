###################################################################################################
## Alarm Clock Media Player Turned Off
###################################################################################################
- id: alarm_clock_media_player_turned_off
  alias: "Alarm Clock Media Player Turned Off"
  description: "Turn off active alarm when alarm clock media player is turned off."
  max_exceeded: silent
  variables:
    alarm_type: "{{ states('input_select.alarm_clock_type') }}"
    media_player: "{{ states('sensor.alarm_clock_active_media_player') }}"
  triggers:
    - trigger: state
      entity_id: !include /config/include/media_player_entities_single.yaml
      to:
        - "off"
        - idle
        - unavailable
        - unknown
      for:
        seconds: 5 # delay to avoid trigger between snooze/play
  conditions:
    - condition: state
      entity_id: binary_sensor.alarm_clock
      state: "on"

    - condition: template
      alias: "Media player is an active alarm_clock player"
      value_template: >
        {% from 'alarm_clock.jinja' import alarm_clock_player %}
        {{ bool(alarm_clock_player(trigger.entity_id)) }}

    - condition: template
      alias: "Media player is not an active tts player"
      value_template: >
        {% from 'tts.jinja' import tts_player %}
        {{ not bool(tts_player(trigger.entity_id)) }}

    - condition: state
      entity_id:
        - switch.alarm_clock_snooze
        - script.alarm_clock_play
        - script.alarm_clock_stop
      state: "off"
  actions:
    - if: "{{ trigger.to_state.state in ['unknown', 'unavailable'] }}"
      then:
        - action: input_boolean.turn_on
          target:
            entity_id: input_boolean.alarm_clock_failed
      else:
        - action: switch.turn_off
          target:
            entity_id: "switch.alarm_clock_{{ alarm_type }}"
