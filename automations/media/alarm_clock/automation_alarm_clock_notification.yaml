#######################################################################################################################
## Alarm Clock - Notification
#######################################################################################################################
- id: alarm_clock_notification
  alias: '[Alarm Clock] Notification'
  description: 'Notifications for active alarm clock.'
  mode: restart
  variables:
    person: >
      {% if (is_state('input_boolean.jphone_alarm_clock_notifications','on')
          and is_state('binary_sensor.jason_home','on'))
        and (is_state('input_boolean.sphone_alarm_clock_notifications','on')
          and is_state('binary_sensor.sheri_home','on')) %} mobile
      {% elif is_state('input_boolean.jphone_alarm_clock_notifications','on')
        and is_state('binary_sensor.jason_home','on') %} jason
      {% elif is_state('input_boolean.sphone_alarm_clock_notifications','on')
        and is_state('binary_sensor.sheri_home','on') %} sheri
      {% endif %}
  trigger:
    - platform: state
      entity_id: binary_sensor.alarm_clock
      to: 'on'
      for: 5 # allow switch to turn back off if conditions fail

    - platform: state
      entity_id: binary_sensor.alarm_clock
      to: 'off'
  condition:
    - condition: state
      entity_id:
        - input_boolean.alarm_clock_alerts
        - binary_sensor.owner_home
      state: 'on'

    - condition: state
      entity_id: input_boolean.alarm_clock_test_play
      state: 'off'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.alarm_clock
              state: 'on'
          sequence:
            - repeat:
                sequence:
                  - choose:
                      - conditions: # don't send notification if snoozed
                          - condition: state
                            entity_id: switch.alarm_clock_snooze
                            state: 'off'
                        sequence:
                          - service: 'notify.{{ person }}'
                            data:
                              title: 'Wake Up Alarm!'
                              message: >
                                {% set current = now().strftime('%-I:%M %p') %}
                                {% set alarm = (now().timestamp() + states('input_number.alarm_clock_play_delay')|int)
                                    |timestamp_custom('%-I:%M %p',true,'unknown') %}
                                Wake up! It's {{ current }}!
                                {% if current != alarm %}<br/>The alarm will sound at {{ alarm }}.{% endif %}
                              data:
                                tag: alarm_clock
                                group: General
                                channel: alarm_stream
                                importance: max
                                ttl: 0
                                priority: high
                                persistent: true
                                sticky: true
                                color: !secret NOTIFY_COLOR
                                icon_url: !secret ALARM_CLOCK_ICON
                                chronometer: true
                                # countdown to alarm play, then how long playing (-)
                                when: "{{ now().timestamp() + states('input_number.alarm_clock_play_delay')|int }}"
                                actions:
                                  - action: snooze_alarm_clock
                                    title: 'Snooze Alarm'
                                  - action: turn_off_alarm_clock
                                    title: 'Turn Off Alarm'

                          - wait_template: "{{ is_state('binary_sensor.alarm_clock','off') }}"
                            timeout: 120 # send a notification every 2 minutes
                until:
                  - condition: state
                    entity_id: binary_sensor.alarm_clock
                    state: 'off'
      default:
        - service: 'notify.{{ person }}'
          data:
            message: clear_notification
            data:
              tag: alarm_clock
