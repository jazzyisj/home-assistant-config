#######################################################################################################################
## Schedule - Before Work
#######################################################################################################################
- id: schedule_before_work
  alias: "[Schedule] Before Work"
  description: "Play announcement when before work active turns on."
  trigger:
    - platform: state
      entity_id: binary_sensor.prework_active # 30 min
      to: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.owner_home
      state: 'on'
    - condition: state
      entity_id: binary_sensor.owner_home
      state: 'on'
  action:
    - service: script.tts_play
      data:
        message: |
          You better get yer ass in gear there big guy.
          You need to leave for work in {{ state_attr('binary_sensor.prework_active','leave_min') }} minutes!
        quiet_play: true
        min_volume: 50
        media_player: media_player.broadcast_speakers

    - service: scene.create
      data:
        scene_id: prework_active
        entities:
          light.dining_room_rgb_light:
            state:  >
              {% set state = states('light.dining_room_rgb_light') %}
              {{ 'off' if state|lower in ['unknown','unavailable','none'] else state }}
            brightness: "{{ state_attr('light.dining_room_rgb_light','brightness')|int }}"
            rgb_color: "{{ state_attr('light.dining_room_rgb_light','rgb_color') }}"

    - choose:
        - conditions:
            - condition: or
              conditions:
                - condition: state
                  entity_id: binary_sensor.nighttime_auto_light
                  state: 'on'

                - condition: state
                  entity_id: binary_sensor.daytime_illuminance_light
                  state: 'on'
          sequence:
            - service: light.turn_on
              entity_id: light.side_entrance_light

    #IDEA change these to switch LED notification? prework led notification?
    - choose:
        - conditions:
            - condition: state
              entity_id:
                - input_boolean.weather_automation
                - binary_sensor.rain_today
              state: 'on'
          sequence:
            - service: switch.turn_off
              target:
                entity_id: switch.light_flux_dining_room

            - service: light.turn_on
              target:
                entity_id: light.dining_room_rgb_light
              data:
                brightness: 255
                rgb_color:
                  - 0
                  - 0
                  - 255

    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.commute_alerts
              state: 'on'
          sequence:
            - repeat: # commute alert, must be last, repeat here to keep checking commute alert
                sequence:
                  - choose:
                      - conditions:
                          - condition: or
                            conditions:
                              - condition: state
                                entity_id:
                                  - binary_sensor.jason_home
                                  - binary_sensor.work_commute_jason_alert
                                state: 'on'

                              - condition: state
                                entity_id:
                                  - binary_sensor.sheri_home
                                  - binary_sensor.work_commute_sheri_alert
                                state: 'on'
                        sequence:
                          - service: switch.turn_off
                            target:
                              entity_id: switch.light_flux_dining_room

                          - service: light.turn_on
                            target:
                              entity_id: light.dining_room_rgb_light
                            data:
                              brightness: 255
                              rgb_color:
                                - 56
                                - 125
                                - 255

                  - delay: 60 # check every minute
                until: "{{ is_state('input_select.occupancy_mode','Away') or repeat.index == 60 }}"  # 1h total
      default:
        - wait_template: "{{ is_state('input_select.occupancy_mode','Away') }}"
          timeout:
            minutes: 60

    - choose:
        - conditions:
            - condition: state
              entity_id: light.dining_room_rgb_light
              state: 'on'

            - condition: state
              entity_id: input_select.occupancy_mode
              state:
                - Home
                - Guest
          sequence:
            - service: light.turn_on # reset rgb req if off in prework_active scene
              target:
                entity_id: light.dining_room_rgb_light
              data:
                profile: warm_min

            - delay: 1 # allow light states to change

            - service: script.activate_scene
              data:
                scene: prework_active

