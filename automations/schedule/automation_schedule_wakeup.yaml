###############################################################################
## Schedule - Wakeup
## triggers on next_waketime and again on auto alarm time if still override/night mode
## #NOTE can't determine phone/google alarm state, house wakes up whether phone/google alarm snoozed/turned off or not
## auto alarm will not run if wakeup manually called before waketime (Home mode)
###############################################################################
- id: schedule_wakeup
  alias: '[Schedule] Wakeup'
  description: 'Play alarm clock, run wake up routine.'
  trigger:
    - platform: template
      value_template: >
        {% if states('sensor.next_waketime')|lower not in ['','off','unknown','unavailable','none'] %}
          {% set time = now().replace(second=0,microsecond=0).isoformat() %}
          {{ time == states('sensor.next_waketime') or time == states('sensor.alarm_clock_auto') }}
        {% endif %}
  condition:
    - condition: state
      entity_id:
        - input_boolean.schedule_automation
        - binary_sensor.someone_home
      state: 'on'

    - condition: state
      entity_id: input_select.occupancy_mode
      state: Night

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'
  action:
    - choose: #
        - conditions:
            - condition: state
              entity_id: sensor.alarm_clock_next_alarm
              attribute: source
              state: auto

            - condition: template
              value_template: >
                {% if is_state('binary_sensor.owner_home','off') %}
                  {{ is_state('input_boolean.alarm_clock_guest','on') }}
                {% else %}
                  {{ is_state('input_boolean.alarm_clock_auto_workdays','on')
                      if is_state('binary_sensor.work_today','on')
                        else is_state('input_boolean.alarm_clock_auto_weekends','on') }}
                {% endif %}
          sequence:
            - service: switch.turn_on
              entity_id: switch.alarm_clock_auto

            # wait for alarm clock to turn on
            - wait_template: "{{ is_state('binary_sensor.alarm_clock','on') }}"
              timeout: 120

            # wait for alarm clock to turn back off, wake house up after an hour even if alarm clock still on
            - wait_template: "{{ is_state('binary_sensor.alarm_clock','off') }}"
              timeout:
                minutes: 60

    - condition: template # these are not in conditions so the auto alarm clock can still function
      alias: Wake up enabled.
      value_template: >
        {% if is_state('sensor.next_waketime','off') %}
          false
        {% elif is_state('binary_sensor.owner_home','off') %}
          {{ is_state('input_boolean.guest_morning','on') }}
        {% else %}
          {{ is_state('input_boolean.workday_morning','on')
              if is_state('binary_sensor.work_today','on')
                else is_state('input_boolean.weekend_morning','on') }}
        {% endif %}

    - service: script.wake_up

###############################################################################
## Schedule - Manual Wake Up
###############################################################################
- id: schedule_manual_wake_up #OCC
  alias: '[Schedule] Manual Wake Up'
  description: 'Someone is up before alarm and has manually selected Home/Guest mode.'
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
  condition:
    - condition: state
      entity_id: input_boolean.schedule_automation
      state: 'on'

    - condition: state
      entity_id: script.wake_up
      state: 'off'

    - condition: template
      alias: After 4am and before scheduled wake time, default to house waketime if next_waketime is Off
      value_template: >
        {{ '4:00' < states('sensor.time') < states('input_datetime.house_waketime')[0:5]
          if is_state('sensor.next_waketime','off') else states('sensor.next_waketime') }}

    - condition: template
      value_template: >
        {{ (is_state('input_boolean.weekend_morning','on') and is_state('binary_sensor.work_today','on'))
          or (is_state('binary_sensor.work_today','off') and is_state('input_boolean.weekend_morning','on'))
          or (is_state('binary_sensor.owner_home','off') and is_state('input_boolean.guest_morning','on')) }}
  action:
    - service: script.wake_up
