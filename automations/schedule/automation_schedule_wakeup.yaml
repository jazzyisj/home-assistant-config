#######################################################################################################################
## Schedule - Wakeup
#######################################################################################################################
- id: schedule_wakeup
  alias: "[Schedule] Wakeup"
  description: Play alarm clock, run wake up routine.
  initial_state: true
  trigger:
    - platform: template # will trigger on waketime today if before auto alarm time and again on auto alarm time if still override/night mode
      value_template: "{{ is_state('sensor.time',states('sensor.waketime_today')) or is_state('sensor.time',states('sensor.alarm_clock_auto')) }}"
  condition:
    - condition: state
      entity_id:
        - input_boolean.schedule_automation
        - binary_sensor.someone_home
      state: 'on'

    - condition: state
      entity_id: input_select.occupancy_mode
      state: # auto alarm will not run if wakeup manually called before waketime (in Home mode)
        - Override # schedule_morning_before_alarm might have put house into override mode
        - Night

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'
  action:
    - choose: #
        - conditions:
            - condition: state
              entity_id: sensor.alarm_clock_next_alarm
              attribute: alarm_source
              state: auto

            - condition: template
              value_template: >
                {% if is_state('binary_sensor.owner_home','off') %}{{ is_state('input_boolean.alarm_clock_guest','on') }}
                {% else %}{{ is_state('input_boolean.alarm_clock_auto_workdays','on') if is_state('binary_sensor.work_today','on') else is_state('input_boolean.alarm_clock_auto_weekends','on') }}
                {% endif %}

          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.alarm_clock_active_auto

    - wait_template: "{{ is_state('binary_sensor.alarm_clock_active','on') }}"
      timeout: 120 # wait for alarm clock to turn on

    - wait_template: "{{ is_state('binary_sensor.alarm_clock_active','off') }}"
      timeout: # wait for alarm clock to turn off, wake house up after an hour even if alarm clock still on
        minutes: 60

    #NOTE can't determine phone alarm state, house wakes up whether phone alarm snoozed/turned off or not

    - condition: template # these are not in conditions so the auto alarm clock can still function
      alias: Run if workday/weekend/guest morning routine is enabled is on.
      value_template: >
        {% if is_state('sensor.waketime_today','Off') %} false
        {% elif is_state('binary_sensor.owner_home','off') %}{{ is_state('input_boolean.guest_morning','on') }}
        {% else %}{{ is_state('input_boolean.workday_morning','on') if is_state('binary_sensor.work_today','on') else is_state('input_boolean.weekend_morning','on') }}
        {% endif %}

    - service: script.scene_wake_up

#######################################################################################################################
## Schedule - Manual Wake Up
#######################################################################################################################
- id: schedule_manual_wake_up #OCC
  alias: "[Schedule] Manual Wake Up"
  description: Someone is up before alarm and has manually selected Home/Guest mode.
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from:
        - Night
        - Override
  condition:
    - condition: state
      entity_id: input_boolean.schedule_automation
      state: 'on'

    - condition: state
      entity_id: script.scene_wake_up
      state: 'off'

    - condition: template
      alias: After 4am and before scheduled wake time, default to house waketime if waketime_today is Off
      value_template: >
        {{ '4:00' < states('sensor.time') < states('input_datetime.house_waketime')[0:5]
          if is_state('sensor.waketime_today','Off') else states('sensor.waketime_today') }}

    - condition: template
      value_template: >
        {{ (is_state('input_boolean.weekend_morning','on') and is_state('binary_sensor.work_today','on'))
          or (is_state('binary_sensor.work_today','off') and is_state('input_boolean.weekend_morning','on'))
          or (is_state('binary_sensor.owner_home','off') and is_state('input_boolean.guest_morning','on')) }}
  action:
    - service: script.scene_wake_up