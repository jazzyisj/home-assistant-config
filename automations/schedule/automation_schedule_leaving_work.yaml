#######################################################################################################################
## Schedule - Leaving Work
## - turn eco mode off to preheat/cool house at end of scheduled work day
## - default to days shift if shift state unknown
#######################################################################################################################
- id: schedule_leaving_work
  alias: "[Schedule] Leaving Work"
  description: "House to override occupancy mode to preheat/cool house at end of work day."
  initial_state: true
  mode: single
  max_exceeded: silent  
  trigger:
    # run at shift dependent leave work commute times
    - platform: template
      value_template: >
        {{ states('sensor.time') == (as_timestamp(states('sensor.date') ~ ' ' ~
              states('input_datetime.afternoons_leave_work_time')[0:5]) - 1800)|timestamp_custom('%H:%M',true)
            if is_state('sensor.current_shift','Afternoons')
            else states('sensor.time') == (as_timestamp(states('sensor.date') ~ ' ' ~
              states('input_datetime.days_leave_work_time')[0:5]) - 1800)|timestamp_custom('%H:%M',true) }}

  condition:
    - condition: state
      entity_id:
        - input_boolean.schedule_automation
        - input_boolean.climate_automation
      state: 'on'

    - condition: state
      entity_id: binary_sensor.someone_home
      state: 'off'

    - condition: not
      conditions:
        - condition: state
          entity_id: input_select.occupancy_mode
          state: Override

    - condition: or
      conditions:
        - condition: state
          entity_id: person.jason
          state: Work

        - condition: state
          entity_id: person.sheri
          state: Work

  action:
    # put house into override so HVAC eco mode turns off
    - service: input_select.select_option
      data:
        entity_id: input_select.occupancy_mode
        option: Override

