###############################################################################
## Schedule - Waste Collection On
###############################################################################
- id: schedule_waste_collection_on
  alias: '[Schedule] Waste Collection On'
  description: 'Turn on waste collection alert boolean.'
  mode: parallel # allow multiple waste types on same day
  variables:
    waste_type: '{{ trigger.entity_id[12:-4] }}'
  trigger:
    - platform: state
      entity_id:
        - sensor.next_garbage_day
        - sensor.next_recycle_day
        - sensor.next_yardwaste_day
      to: Tomorrow

    - platform: state
      entity_id:
        - sensor.next_garbage_day
        - sensor.next_recycle_day
        - sensor.next_yardwaste_day
      from: Tomorrow
  action:
    - choose:
        - conditions: "{{ is_state(trigger.entity_id,'Tomorrow') }}"
          sequence:
            - service: input_boolean.turn_on
              target:
                entity_id: 'input_boolean.{{ waste_type }}_alert'
      default:
        - service: input_boolean.turn_off
          target:
            entity_id: 'input_boolean.{{ waste_type }}_alert'

###############################################################################
## Schedule - Waste Collection Alert
###############################################################################
- id: schedule_waste_collection_alert
  alias: '[Schedule] Waste Collection Alert'
  description: 'Play TTS announcement.'
  variables:
    waste_type: >
      {% if is_state('sensor.next_garbage_day','Tomorrow') %} garbage
      {% elif is_state('sensor.next_recycle_day','Tomorrow') %} recycle
      {% elif is_state('sensor.next_yardwaste_day','Tomorrow') %} yardwaste
      {% endif %}
  trigger:
    - platform: time
      at: '11:00'

    - platform: time
      at: '17:00'

    - platform: time
      at: '21:00'

  condition:
    - condition: template
      value_template: >
        {{ (is_state('sensor.next_garbage_day','Tomorrow') and is_state('input_boolean.garbage_alert','on'))
            or (is_state('sensor.next_recycle_day','Tomorrow') and is_state('input_boolean.recycle_alert','on'))
            or (is_state('sensor.next_yardwaste_day','Tomorrow') and is_state('input_boolean.yardwaste_alert','on')) }}
  action:
    - service: script.tts_play
      data:
        message: "Hey Jason, don't forget to take out the {{ waste_type }} today!"
        quiet_play: true
        save_message: true

    - service: script.waste_collection_alert
      data:
        waste_type: '{{ waste_type }}'

###############################################################################
## Schedule - Close Waste Collection Notification
###############################################################################
- id: schedule_close_waste_collection_notification
  alias: '[Schedule] Close Waste Collection Notification'
  description: 'Dismiss notifications on all devices.'
  mode: parallel
  variables:
    waste_type: >
      {% if 'garbage' in trigger.entity_id or trigger.id == 'garbage' %} garbage
      {% elif 'recycle' in trigger.entity_id or trigger.id == 'recycle' %} recycle
      {% elif 'yardwaste' in trigger.entity_id or trigger.id or trigger.id == 'yardwaste' %} yardwaste
      {% endif %}
  trigger:
    - platform: state
      entity_id:
        - input_boolean.garbage_alert
        - input_boolean.recycle_alert
        - input_boolean.yardwaste_alert
      to: 'off'

    - platform: state
      entity_id:
        - sensor.next_garbage_day
        - sensor.next_recycle_day
        - sensor.next_yardwaste_day
      from: Tomorrow

    - platform: event
      id: garbage
      event_type: mobile_app_notification_action
      event_data:
        action: garbage_done

    - platform: event
      id: recycle
      event_type: mobile_app_notification_action
      event_data:
        action: recycle_done

    - platform: event
      id: yardwaste
      event_type: mobile_app_notification_action
      event_data:
        action: yardwaste_done
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: 'input_boolean.{{ waste_type }}_alert'

    - service: notify.mobile
      data:
        message: clear_notification
        data:
          tag: '{{ waste_type }}_collection'
