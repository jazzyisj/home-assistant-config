###################################################################################################
## Turn Waste Collection On
###################################################################################################
- id: turn_waste_collection_on
  alias: "Turn Waste Collection On"
  description: "Turn on waste collection alert boolean."
  mode: parallel # allow multiple waste type triggers at same time
  variables:
    waste_types: "{{ ['garbage', 'organic_waste', 'recycle', 'yard_waste'] }}"
    active_types: >
      {% set types = namespace(value = []) %}
      {% for type in waste_types %}
        {% if is_state_attr('sensor.next_' ~ type ~ '_day', 'display', 'Tomorrow') %}
          {% set types.value = types.value + [type] %}
        {% endif %}
      {% endfor %}
      {{ types.value }}
  triggers:
    #NOTE triggred by template reload
    - trigger: state
      entity_id:
        - sensor.next_garbage_day
        - sensor.next_organic_waste_day
        - sensor.next_recycle_day
        - sensor.next_yard_waste_day
      attribute: display
      to: Tomorrow

    - trigger: state
      entity_id:
        - sensor.next_garbage_day
        - sensor.next_organic_waste_day
        - sensor.next_recycle_day
        - sensor.next_yard_waste_day
      attribute: display
      from: Tomorrow
  actions:
    - repeat:
        count: "{{ waste_types | count }}"
        sequence:
          - variables:
              waste_type: "{{ waste_types[repeat.index - 1] }}"

          - if: "{{ waste_type in active_types }}"
            then:
              - action: "input_boolean.turn_{{ iif(waste_type in active_types, 'on', 'off') }}"
                target:
                  entity_id: "input_boolean.{{ waste_type }}_alert"

###################################################################################################
## Waste Collection Notification
###################################################################################################
- id: waste_collection_notification
  alias: "Waste Collection Notification"
  description: "Play TTS announcement."
  triggers:
    - trigger: time
      at: "11:00"

    - trigger: time
      at: "17:00"

    - trigger: time
      at: "21:00"
  actions:
    - variables:
        waste_types: "{{ ['garbage', 'organic_waste', 'recycle', 'yard_waste'] }}"
        active_types: >
          {% set types = namespace(value = []) %}
          {% for type in waste_types %}
            {% if is_state_attr('sensor.next_' ~ type ~ '_day', 'display', 'Tomorrow')
                and is_state('input_boolean.' ~ type ~ 'alert', 'on') %}
              {% set types.value = types.value + [type] %}
            {% endif %}
          {% endfor %}
          {{ types.value }}

    - if: "{{ active_types | count > 0 }}"
      then:
        - action: script.turn_on
          target:
            entity_id: script.tts_play
          data:
            variables:
              message: >
                {% from 'speech_helpers.jinja' import array_to_clist %}
                Hey Jason, don't forget to take out the {{ array_to_clist(active_types) | replace('_', ' ') }} today!
              provider: "HASS"
              language: "English (USA)"
              voice: "Jenny:angry"
              quiet_play: true
              save_message: true
          continue_on_error: true

    - condition: state
      entity_id: input_boolean.schedule_alerts
      state: "on"

    - repeat:
        count: "{{ active_types | count }}"
        sequence:
          - variables:
              waste_type: "{{ active_types[repeat.index - 1] }}"

          - if:
              - alias: "Waste alert boolean is on"
                condition: template
                value_template: "{{ is_state('input_boolean.' ~ waste_type ~ '_alert', 'on') }}"
            then:
              - action: notify.jason
                data:
                  message: "{{ waste_type | title ~' Day is tomorrow!' }}"
                  data:
                    tag: "{{ waste_type }}_collection"
                    group: Reminder
                    channel: General
                    visibility: public
                    persistent: true
                    sticky: false
                    timeout: 86400
                    notification_icon: "{{ state_attr('sensor.next_' ~ waste_type ~ '_day', 'icon') }}"
                    icon_url: "/local/images/notification/{{ waste_type }}_icon.png"
                    image: "/local/images/notification/{{ waste_type }}_image.png"
                    clickAction: !secret WASTE_SCHEDULE
                    actions:
                      - title: "{{ waste_type | title }} Done"
                        action: "{{ waste_type }}_done"

###################################################################################################
## Yard Waste Warning
###################################################################################################
- id: yard_waste_warning
  alias: "Yard Waste Warning"
  description: "Notification of yard waste day this week."
  triggers:
    - trigger: state
      entity_id: sensor.next_yard_waste_day
      attribute: warning
      to: true
  conditions:
    - condition: state
      entity_id: input_boolean.schedule_alerts
      state: "on"
  actions:
    - action: notify.jason
      data:
        message: "Yard Waste collection is this week!"
        data:
          tag: yard_waste_collection
          group: Reminder
          channel: General
          visibility: public
          persistent: false
          sticky: false
          timeout: 86400
          notification_icon: "{{ state_attr('sensor.next_yard_waste_day', 'icon') }}"
          icon_url: "/local/images/notification/yard_waste_icon.png"
          image: "/local/images/notification/yard_waste_image.png"
          clickAction: !secret WASTE_SCHEDULE
          actions:
            - title: "Yard Waste Done"
              action: yard_waste_done

###################################################################################################
## Clear Waste Collection Notification
###################################################################################################
- id: clear_waste_collection_notification
  alias: "Clear Waste Collection Notification"
  description: "Turn off alert, clear notification."
  mode: parallel # allow multiple waste type triggers at same time
  variables:
    waste_types: "{{ ['garbage', 'organic_waste', 'recycle', 'yard_waste'] }}"
    waste_type: >
      {% if trigger.id in waste_types %} {{ trigger.id }}
      {% elif trigger.entity_id is defined %}
        {% if 'garbage' in trigger.entity_id %} garbage
        {% elif 'organic_waste' in trigger.entity_id %} organic_waste
        {% elif 'recycle' in trigger.entity_id %} recycle
        {% elif 'yard_waste' in trigger.entity_id %} yard_waste
        {% endif %}
      {% endif %}
  triggers:
    - trigger: state
      id: alert
      entity_id:
        - input_boolean.garbage_alert
        - input_boolean.organic_waste_alert
        - input_boolean.recycle_alert
        - input_boolean.yard_waste_alert
      to: "off"

    - trigger: state
      id: sensor
      entity_id:
        - sensor.next_garbage_day
        - sensor.next_organic_waste_day
        - sensor.next_recycle_day
        - sensor.next_yard_waste_day
      attribute: display
      from: Tomorrow
      not_to:
        - unknown
        - unavailable

    - trigger: event
      id: garbage
      event_type: mobile_app_notification_action
      event_data:
        action: garbage_done

    - trigger: event
      id: organic_waste
      event_type: mobile_app_notification_action
      event_data:
        action: organic_waste_done

    - trigger: event
      id: recycle
      event_type: mobile_app_notification_action
      event_data:
        action: recycle_done

    - trigger: event
      id: yard_waste
      event_type: mobile_app_notification_action
      event_data:
        action: yard_waste_done
  conditions:
    - condition: state
      entity_id: input_boolean.schedule_alerts
      state: "on"
  actions:
    - if: "{{ trigger.id in ['sensor', 'alert'] or trigger.id in waste_types }}"
      then:
        - if: "{{ trigger.id != 'alert' }}"
          then:
            - action: input_boolean.turn_off
              target:
                entity_id: "input_boolean.{{ waste_type }}_alert"

        - action: notify.jason
          data:
            message: clear_notification
            data:
              tag: "{{ waste_type }}_collection"
      else:
        - repeat:
            count: "{{ waste_types | count }}"
            sequence:
              - variables:
                  waste_type: "{{ waste_types[repeat.index - 1] }}"

              - if:
                  - alias: "Waste sensor is off"
                    condition: template
                    value_template: "{{ not is_state_attr('sensor.next_' ~ waste_type ~ '_day', 'display', 'Tomorrow') }}"
                then:
                  - action: input_boolean.turn_off
                    target:
                      entity_id: "input_boolean.{{ waste_type }}_alert"

                  - action: notify.jason
                    data:
                      message: clear_notification
                      data:
                        tag: "{{ waste_type }}_collection"
