###############################################################################
## Schedule - Waketime
###############################################################################
- id: schedule_waketime
  alias: '[Schedule] Waketime'
  description: 'Run wake up routine.'
  trigger:
    - platform: time
      at: sensor.next_waketime
  condition:
    - condition: state
      entity_id:
        - input_boolean.schedule_automation
        - binary_sensor.someone_home
      state: 'on'

    - condition: state
      entity_id: input_select.occupancy_mode
      state: Night

    - condition: template
      alias: 'Wake up enabled.'
      value_template: >
        {% if is_state('binary_sensor.owner_home','off') %}
          {{ is_state('input_boolean.guest_morning','on') }}
        {% else %}
          {{ is_state('input_boolean.workday_morning','on') if is_state('binary_sensor.work_today','on')
              else is_state('input_boolean.weekend_morning','on') }}
        {% endif %}
  action:
    # wait for alarm clock to turn on (auto, manual, nap)
    - wait_template: "{{ is_state('binary_sensor.alarm_clock','on') }}"
      timeout: 60

    # wake house up after an hour even if alarm clock still on/snoozed
    - wait_template: "{{ is_state('binary_sensor.alarm_clock','off') }}"
      timeout:
        minutes: "{{ states('input_number.waketime_timeout')|int }}"

    - service: script.waketime

###############################################################################
## Schedule - Manual Wake Up
###############################################################################
- id: schedule_manual_wake_up #OCC
  alias: '[Schedule] Manual Wake Up'
  description: 'Someone is up before alarm and has manually selected Home/Guest mode.'
  trigger:
    - platform: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from: Night
  condition:
    - condition: state
      entity_id: input_boolean.schedule_automation
      state: 'on'

    - condition: state
      entity_id: script.waketime
      state: 'off'

    - condition: time
      after: input_datetime.day_reset

    - condition: template
      alias: 'Before waketime today'
      value_template: >
        {% if states('sensor.waketime_today')|lower not in ['unknown','unavailable','none'] %}
          {{ now() < states('sensor.waketime_today')|as_datetime }}
        {% endif %}

    - condition: template
      value_template: >
        {{ (is_state('input_boolean.weekend_morning','on') and is_state('binary_sensor.work_today','on'))
          or (is_state('binary_sensor.work_today','off') and is_state('input_boolean.weekend_morning','on'))
          or (is_state('binary_sensor.owner_home','off') and is_state('input_boolean.guest_morning','on')) }}
  action:
    - service: script.waketime
