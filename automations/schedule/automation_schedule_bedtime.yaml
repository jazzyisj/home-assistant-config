#######################################################################################################################
## Schedule - Bedtime
#######################################################################################################################
- id: schedule_bedtime
  alias: "[Schedule] Bedtime"
  description: Run bed time routine.
  trigger:
    - platform: template
      value_template: "{{ is_state('sensor.time',states('sensor.bedtime_today')) }}"
  condition:
    - condition: state
      entity_id:
        - input_boolean.schedule_automation
        - binary_sensor.someone_home
      state: 'on'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: template
      alias: Run if workday/weekend/guest routine enabled, defaults to house waketime if waketime_today is Off
      value_template: >
        {% if is_state('binary_sensor.owner_home','off') %}{{ is_state('input_boolean.guest_night','on') }}
        {% elif states('sensor.time') > (states('sensor.waketime_today') if is_state('sensor.waketime_today','Off') else states('input_datetime.house_waketime')[0:5]) %}
          {{ is_state('input_boolean.workday_night','on') if is_state('binary_sensor.work_tomorrow','on') else is_state('input_boolean.weekend_night','on') }}
        {% else %}{{ is_state('input_boolean.workday_night','on') if is_state('binary_sensor.work_today','on') else is_state('input_boolean.weekend_night','on') }}
        {% endif %}
  action:
    - service: script.turn_on
      entity_id: script.scene_bedtime

#######################################################################################################################
## Schedule - Bedtime Clear Notification
#######################################################################################################################
- id: schedule_bedtime_clear_notification
  alias: "[Schedule] Bedtime Clear Notification"
  description: Clear bedtime notification.
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      id: occ
      entity_id: input_select.occupancy_mode
      to: Night

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: bedtime_delay_off
  condition:
    - condition: template
      alias: Someone home if trigger is night mode. # always trigger if notification action
      value_template: "{{ is_state('binary_sensor.owner_home','on') if trigger.id == 'occ' else true }}"
  action:
    - service: >
        {% if is_state('binary_sensor.jason_home','on') and is_state('binary_sensor.sheri_home','on') %} notify.mobile
        {% elif is_state('binary_sensor.jason_home','on') %} notify.jason
        {% elif is_state('binary_sensor.sheri_home','on') %} notify.sheri
        {% endif %}
      data:
        message: clear_notification
        data:
          tag: bedtime_alert

#######################################################################################################################
## Schedule - Turn On Bedtime Delay
#######################################################################################################################
- id: schedule_turn_on_bedtime_delay
  alias: "[Schedule] Turn On Bedtime Delay"
  description: Turn on bedtime delayed boolean.
  initial_state: true
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: bedtime_delayed
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.bedtime_delayed

#######################################################################################################################
## Schedule - Bedtime Delayed On
#######################################################################################################################
- id: schedule_bedtime_delayed_on
  alias: "[Schedule] Bedtime Delayed On"
  description: Bedtime delay turned on.
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      entity_id: input_boolean.bedtime_delayed
      to: 'on'
  condition:
    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - script.scene_company
        - script.scene_movie
      state: 'off'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: input_select.occupancy_mode
              state:
                - Night
                - Away
                - Vacation
          sequence:
            - service: input_boolean.turn_off
              entity_id: input_boolean.bedtime_delayed

            - service: browser_mod.toast
              data:
                message: "Bedtime delay has been turned off. The house is in {{ states('input_select.occupancy_mode') }} mode."
                duration: 30000
      default:
        - choose:
            - conditions:
                - condition: state
                  entity_id: binary_sensor.bedtime_active # time is after bedtime but not yet night mode
                  state: 'on'
              sequence:
                - service: script.bedtime_notification

                - service: timer.start
                  data:
                    entity_id: timer.bedtime_delay
                    duration:
                      minutes: "{{ states('input_number.stay_awake_delay')|int }}"

        - service: script.turn_on
          data:
            entity_id: script.tts_play
            variables:
              play_message: |
                {%- set delay_s = states('input_number.stay_awake_delay')|int * 60 -%}
                {%- set bed_ts = as_timestamp((states('sensor.date') ~ ' ' ~ states('sensor.bedtime_today'))|as_datetime) -%}

                {%- if is_state('binary_sensor.bedtime_active','on') -%}
                {%- set date = states('sensor.date') -%}
                {%- set new_time = (as_timestamp(now()) + delay_s)|timestamp_custom('%_I:%M %p', true) -%}
                Your bedtime has been delayed by {{ states('input_number.stay_awake_delay')|int }} minutes.
                I'll check with you again at {{ new_time }}.

                {% else %}
                {%- set new_time = (bed_ts + delay_s)|timestamp_custom('%_I:%M %p', true) -%}
                You've elected to stay up past your bedtime today.
                I've delayed your bedtime by {{ states('input_number.stay_awake_delay')|int }} minutes.
                I'll check up on you at {{ new_time }} to see if you've come to your senses yet.
                {% endif %}
              quiet_play: true
              min_volume: 35

#######################################################################################################################
## Schedule - Bedtime Delay Turned Off
#######################################################################################################################
- id: schedule_bedtime_delay_turned_off
  alias: "[Schedule] Bedtime Delay Turned Off"
  description: Delay bedtime or run bedtime script.
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      entity_id:
        - input_boolean.bedtime_delayed
        - binary_sensor.bedtime_active # occ mode != home, guest turns off
      to: 'off'

    - platform: event
      id: timer_finished
      event_type: timer.finished
      event_data:
        entity_id: timer.bedtime_delay

    - platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.bedtime_delay

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: bedtime_delay_off
  condition:
    - condition: state
      entity_id:
        - input_boolean.alarm_triggered
        - script.scene_bedtime
      state: 'off'
  action:
    - choose:
        - conditions:
            - condition: state
              alias: Scene scripts are running.
              entity_id:
                - script.scene_company
                - script.scene_movie
              state: 'on'
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.bedtime_delayed

            - service: browser_mod.toast
              data:
                message: "Bedtime delay cannot be turned off in movie/company mode."
                duration: 30000
      default:
        - service: automation.turn_off
          data:
            entity_id: automation.schedule_bedtime_delay_turned_off
            stop_actions: false

        - service: input_boolean.turn_off
          entity_id: input_boolean.bedtime_delayed

        - service: automation.turn_on
          entity_id: automation.schedule_bedtime_delay_turned_off

        - choose:
            - conditions:
                - condition: state # time is after bedtime but not night mode
                  entity_id: binary_sensor.bedtime_active
                  state: 'on'
              sequence:
                - choose:
                    - conditions: "{{ trigger.id == 'timer_finished' }}"
                      sequence:
                        - service: script.turn_on
                          data:
                            entity_id: script.tts_play
                            variables:
                              play_message: |
                                Are you still awake? I'm going to turn the lights off soon!
                                Let me know if you'd like to stay up a while longer.
                              quiet_play: true
                              min_volume: 35

                        - delay: # last chance to turn on bedtime delay
                            minutes: "{{ states('input_number.bedtime_delay')|int }}"

                        - condition: state
                          entity_id: input_boolean.bedtime_delayed
                          state: 'off'

                - service: script.turn_on
                  entity_id: script.scene_bedtime



