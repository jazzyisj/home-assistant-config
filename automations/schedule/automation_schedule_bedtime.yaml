###############################################################################
## Schedule - Bedtime
###############################################################################
- id: schedule_bedtime
  alias: '[Schedule] Bedtime'
  description: 'Run bed time routine.'
  trigger:
    - platform: time
      at: sensor.next_bedtime
  condition:
    - condition: state
      entity_id:
        - input_boolean.schedule_automation
        - binary_sensor.someone_home
      state: 'on'

    - condition: state
      entity_id: input_select.occupancy_mode
      state:
        - Home
        - Guest

    - condition: state
      entity_id: input_boolean.alarm_triggered
      state: 'off'

    - condition: template
      alias: 'Workday/weekend/guest routine enabled, defaults to house waketime if next_waketime is none'
      value_template: >
        {% if is_state('binary_sensor.owner_home','off') %}
          {{ is_state('input_boolean.guest_night','on') }}
        {% elif (now() > today_at(states('input_datetime.house_waketime'))
            if states('sensor.next_waketime')|lower in ['unknown','unavailable','none']
              else now() > states('sensor.next_waketime')|as_datetime) %}
            {{ is_state('input_boolean.workday_night','on')
                if is_state('binary_sensor.work_tomorrow','on')
                  else is_state('input_boolean.weekend_night','on') }}
        {% else %}
          {{ is_state('input_boolean.workday_night','on') if is_state('binary_sensor.work_today','on')
              else is_state('input_boolean.weekend_night','on') }}
        {% endif %}
  action:
    - service: script.bedtime
      data:
        warning: true

###############################################################################
## Schedule - Bedtime Clear Notification
###############################################################################
- id: schedule_bedtime_clear_notification
  alias: '[Schedule] Bedtime Clear Notification'
  description: 'Clear notification.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: delay
      entity_id: input_boolean.bedtime_delayed
      to: 'off'
      from: 'on'

    - platform: state
      id: occ
      entity_id: input_select.occupancy_mode
      to: Night

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: bedtime_delay_off
  action:
    - service: "notify.{{ states('sensor.notify_service_home') }}"
      data:
        message: clear_notification
        data:
          tag: bedtime_alert

###############################################################################
## Schedule - Bedtime Delay Turned On
###############################################################################
- id: schedule_bedtime_delay_turned_on
  alias: '[Schedule] Bedtime Delay Turned On'
  description: 'Bedtime delay turned on.'
  max_exceeded: silent
  variables:
    bedtime_delay: "{{ states('input_number.bedtime_delay')|int }}"
  trigger:
    - platform: state
      entity_id: input_boolean.bedtime_delayed
      to: 'on'
      from: 'off'
  condition:
    # not if turned on by scene active
    - condition: state
      entity_id: binary_sensor.scene_active
      state: 'off'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: input_select.occupancy_mode
              state:
                - Night
                - Away
                - Vacation
          sequence:
            - service: input_boolean.turn_off
              target:
                entity_id: input_boolean.bedtime_delayed

            - service: browser_mod.toast
              data:
                message: >
                  Bedtime delay has been turned off.
                  The house is in {{ states('input_select.occupancy_mode') }} mode.
                duration: 30000
      default:
        - choose:
            - conditions:
                - condition: state
                  entity_id: binary_sensor.bedtime_active
                  state: 'on'
                  for: 30 # detect if bedtime off, not just turned on (force default at bedtime)
              sequence:
                - service: timer.start
                  target:
                    entity_id: timer.bedtime_delay
                  data:
                    duration:
                      minutes: '{{ bedtime_delay }}'

                # wait for timer active so timer delayed bedtime can be calculated
                - wait_template: "{{ states('timer.bedtime_delay') == 'active' }}"
                  timeout: 5
                  continue_on_timeout: false

                - service: script.tts_play
                  data:
                    message: >
                      Your bedtime has been delayed by {{ bedtime_delay }} minutes.
                      I'll check on you again at {{ state_attr('sensor.bedtime_today','12hour') }}
                      to see if you've come to your senses yet.
                    quiet_play: true
          default:
            - delay: 1 # allow delayed_bedtime to be calculated

            - service: script.tts_play
              data:
                message: >
                  You've elected to stay up past your bedtime today.
                  Your bedtime has been delayed by {{ bedtime_delay }} minutes.
                quiet_play: true

    - condition: template
      alias: Just before or after bedtime
      value_template: >
        {% set bedtime = states('sensor.bedtime_today')|as_datetime %}
        {{ now() > bedtime - timedelta(hours=2) }}

    - service: script.bedtime_notification

###############################################################################
## Schedule - Bedtime Delay Turned Off
###############################################################################
- id: schedule_bedtime_delay_turned_off
  alias: '[Schedule] Bedtime Delay Turned Off'
  description: 'Turn bedtime delay back on if scene active.'
  max_exceeded: silent
  trigger:
    - platform: state
      id: delay_off
      entity_id: input_boolean.bedtime_delayed
      to: 'off'
      from: 'on'
  action:
    - choose:
        - conditions:
            - condition: state
              alias: 'Scene is active'
              entity_id: binary_sensor.scene_active
              state: 'on'
          sequence:
            - service: input_boolean.turn_on
              target:
                entity_id: input_boolean.bedtime_delayed

            - service: browser_mod.toast
              data:
                message: 'Bedtime delay cannot be turned off when a scene is active.'
                duration: 30000
      default:
        - condition: not
          conditions:
            - condition: state
              entity_id: timer.bedtime_delay
              state: idle

        - service: timer.cancel
          target:
            entity_id: timer.bedtime_delay

###############################################################################
## Schedule - Bedtime Delay Timer Finished
###############################################################################
- id: schedule_bedtime_delay_timer finished
  alias: '[Schedule] Bedtime Delay Timer Finished'
  description: 'Wait for delay back on or run bedtime.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.bedtime_delay
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.bedtime_delayed

    - service: script.turn_on
      target:
        entity_id: script.tts_play
      data:
        variables:
          message: >
            Are you still awake? I'm going to turn the lights off soon!
            Let me know if you'd like to stay up a while longer.
          quiet_play: true

    - service: script.bedtime_notification

    - delay:
        minutes: "{{ states('input_number.bedtime_warning_delay')|int }}"

    - condition: state
      entity_id: input_boolean.bedtime_delayed
      state: 'off'

    - service: script.bedtime

###############################################################################
## Schedule - Turn On Bedtime Delay
###############################################################################
- id: schedule_turn_on_bedtime_delay
  alias: '[Schedule] Turn On Bedtime Delay'
  description: 'Turn on bedtime delay boolean.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: timer.start
      event_data:
        entity_id: timer.bedtime_delay

    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: bedtime_delayed
  action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.bedtime_delayed

###############################################################################
## Schedule - Turn Off Bedtime Delay
###############################################################################
- id: schedule_turn_off_bedtime_delay
  alias: '[Schedule] Turn Off Bedtime Delay'
  description: 'Turn off bedtime delay boolean.'
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: bedtime_delay_off

    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.bedtime_delay

    - platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.bedtime_delay
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.bedtime_delayed

    - condition: not
      conditions:
        - condition: state
          entity_id: timer.bedtime_delay
          state: idle

    - service: timer.cancel
      target:
        entity_id: timer.bedtime_delay
