###############################################################################
## Schedule - Waketime
###############################################################################
- id: schedule_waketime
  alias: "[Schedule] Waketime"
  description: "Run wake up routine."
  triggers:
    #NOTE phone alarms can trigger a couple seconds early forcing next_waktime to jump to next day
    # before it ever gets triggered - so back up trigger by 1 minute
    - trigger: template
      value_template: >
        {% if has_value('sensor.next_waketime') %}
          {{ now().replace(second=0, microsecond=0) == (states('sensor.next_waketime') | as_datetime)
              - timedelta(minutes=1) }}
        {% endif %}
  conditions:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"

    - condition: state
      entity_id: input_select.occupancy_mode
      state: Night
  actions:
    - action: script.waketime
      data:
        delay: true

###############################################################################
## Schedule - Manual Wake Up
###############################################################################
- id: schedule_manual_wake_up
  alias: "[Schedule] Manual Wake Up"
  description: "Someone is up before alarm and has manually selected Home/Guest mode."
  triggers:
    - trigger: state
      entity_id: input_select.occupancy_mode
      to:
        - Home
        - Guest
      from: Night
  conditions:
    - condition: state
      entity_id:
        - script.waketime
        - input_boolean.occupancy_override
      state: "off"

    - condition: time
      after: input_datetime.day_reset

    - condition: template
      alias: "Before waketime today"
      value_template: >
        {% if has_value('sensor.waketime_today') %}
          {{ now() < states('sensor.waketime_today') | as_datetime }}
        {% endif %}

    - condition: or
      alias: "Wake up routine enabled."
      conditions:
        - condition: and
          conditions:
            - condition: state
              entity_id: binary_sensor.work_today
              state: "on"

            - condition: state
              entity_id: input_boolean.workday_morning
              state: "on"

        - condition: and
          conditions:
            - condition: state
              entity_id: binary_sensor.work_today
              state: "off"

            - condition: state
              entity_id: input_boolean.weekend_morning
              state: "on"

        - condition: and
          conditions:
            - condition: state
              entity_id: binary_sensor.owner_home
              state: "off"

            - condition: state
              entity_id: input_boolean.guest_morning
              state: "on"
  actions:
    - action: script.waketime
