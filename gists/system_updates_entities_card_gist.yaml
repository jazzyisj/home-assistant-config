#######################################################################################################################
## Lovelace - System Updates Entities Card
#######################################################################################################################

#NOTE - this card works well with my custom theme, you may have to fidget with it for usability in yours

#REQUIRED the following lovelace plugins are required
# - template-entity-row  https://github.com/thomasloven/lovelace-template-entity-row
# - fold-entity-row  https://github.com/thomasloven/lovelace-fold-entity-row
# - lovelace-hui-element https://github.com/thomasloven/lovelace-hui-element

#OPTIONAL the following integration is optional, delete the relevant entity row if not used
# - breaking changes https://github.com/custom-components/breaking_changes

#OPTIONAL - add the following variables to your loevelace theme, remove them from card styles if not added
# --entity-critical-color
# --entity-warning-color

type: entities
title: System Updates
icon: mdi:cloud-upload
show_header_toggle: false
state_color: true
entities:
  - type: custom:template-entity-row
    entity: sensor.home_assistant_version
    active: "{{ is_state('sensor.updater_core','on') }}"
    secondary: >
      {% if is_state('sensor.updater_core','on') %}
      Version {{ state_attr('sensor.updater_core','newest_version') }} is available.
      {% endif %}
    tap_action:
      action: none
    double_tap_action:
      action: navigate
      navigation_path: /hassio/dashboard
    hold_action:
      action: none
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
        --paper-item-icon-active-color:
          {%- if states('sensor.breaking_change_warnings')|int > 0 %} var(--entity-critical-color)
          {%- elif is_state('sensor.updater_core','on') %} var(--entity-warning-color)
          {%- else %} var(--state-icon-active-color)
          {%- endif -%}
          ;
        --secondary-text-color: var(--entity-warning-color);
      }

  - type: custom:template-entity-row
    entity: binary_sensor.updater_hassos
    name: HASS OS
    icon: "{{ 'mdi:alert-rhombus' if is_state('binary_sensor.updater_hassos','on') else 'mdi:home-assistant' }}"
    state: "{{ states('sensor.hassos_current_version') }}"
    active: "{{ is_state('binary_sensor.updater_hassos','on') }}"
    secondary: >
      {% if is_state('binary_sensor.updater_hassos','on') %}
      Version {{ states('sensor.hassos_newest_version') }} is available.
      {% endif %}
    tap_action:
      action: navigate
      navigation_path: https://github.com/home-assistant/operating-system/releases/
    double_tap_action:
      action: navigate
      navigation_path: /hassio/dashboard
    hold_action:
      action: navigate
      navigation_path: /hassio/dashboard
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
        --paper-item-icon-active-color: var(--entity-warning-color);
        --secondary-text-color: var(--entity-warning-color);
      }

  - type: custom:template-entity-row
    entity: binary_sensor.updater_supervisor
    name: HASS Supervisor
    icon: "{{ 'mdi:alert-rhombus' if is_state('binary_sensor.updater_supervisor','on') else 'mdi:layers' }}"
    state: "{{ state_attr('sensor.updater_supervisor','current_version') }}"
    active: "{{ is_state('binary_sensor.updater_supervisor','on') }}"
    secondary: >
      {% if is_state('binary_sensor.updater_supervisor','on') %}
      Version {{ state_attr('sensor.updater_supervisor','newest_version') }} is available.
      {% endif %}
    tap_action:
      action: none
    double_tap_action:
      action: navigate
      navigation_path: /hassio/dashboard
    hold_action:
      action: none
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
        --paper-item-icon-active-color: var(--entity-warning-color);
        --secondary-text-color: var(--entity-warning-color);
      }

  - type: custom:template-entity-row
    entity: sensor.updater_cli
    name: HASS CLI
    icon: "{{ 'mdi:alert-rhombus' if is_state('sensor.updater_cli','on') else 'mdi:menu-open' }}"
    state: "{{ state_attr('sensor.updater_cli','current_version') }}"
    active: "{{ is_state('sensor.updater_cli','on') }}"
    secondary: >
      {% if is_state('sensor.updater_cli','on') %}
      Version {{ state_attr('sensor.updater_cli','newest_version') }} is available.
      {% endif %}
    tap_action:
      action: none
    double_tap_action:
      action: navigate
      navigation_path: /hassio/dashboard
    hold_action:
      action: none
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
        --paper-item-icon-active-color: var(--entity-warning-color);
        --secondary-text-color: var(--entity-warning-color);
      }

  - type: custom:template-entity-row
    entity: sensor.updater_audio
    name: HASS Audio
    icon: "{{ 'mdi:alert-rhombus' if is_state('sensor.updater_audio','on') else 'mdi:volume-medium' }}"
    state: "{{ state_attr('sensor.updater_audio','current_version') }}"
    active: "{{ is_state('sensor.updater_audio','on') }}"
    secondary: >
      {% if is_state('sensor.updater_audio','on') %}
      Version {{ state_attr('sensor.updater_audio','newest_version') }} is available.
      {% endif %}
    tap_action:
      action: none
    double_tap_action:
      action: navigate
      navigation_path: /hassio/dashboard
    hold_action:
      action: none
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
        --paper-item-icon-active-color: var(--entity-warning-color);
        --secondary-text-color: var(--entity-warning-color);
      }

  - type: custom:template-entity-row
    entity: binary_sensor.updater_multicast
    name: HASS Multicast
    icon: "{{ 'mdi:alert-rhombus' if is_state('binary_sensor.updater_multicast','on') else 'mdi:dns' }}"
    state: "{{ state_attr('sensor.updater_dns','current_version') }}"
    active: "{{ is_state('binary_sensor.updater_multicast','on') }}"
    secondary: >
      {% if is_state('binary_sensor.updater_multicast','on') %}
      Version {{ state_attr('binary_sensor.updater_multicast','newest_version') }} is available.
      {% endif %}
    tap_action:
      action: none
    double_tap_action:
      action: navigate
      navigation_path: /hassio/dashboard
    hold_action:
      action: none
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
        --paper-item-icon-active-color: var(--entity-warning-color):
        --secondary-text-color: var(--entity-warning-color);
      }

  - type: custom:template-entity-row
    entity: sensor.updater_dns
    name: HASS DNS
    icon: "{{ 'mdi:alert-rhombus' if is_state('sensor.updater_dns','on') else 'mdi:dns' }}"
    state: "{{ state_attr('sensor.updater_dns','current_version') }}"
    active: "{{ is_state('sensor.updater_dns','on') }}"
    secondary: >
      {% if is_state('sensor.updater_dns','on') %}
      Version {{ state_attr('sensor.updater_dns','newest_version') }} is available.
      {% endif %}
    tap_action:
      action: none
    double_tap_action:
      action: navigate
      navigation_path: /hassio/dashboard
    hold_action:
      action: none
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
        --paper-item-icon-active-color: var(--entity-warning-color);
        --secondary-text-color: var(--entity-warning-color);
      }

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: binary_sensor.updater_addons
      name: HASS Addons
      icon: "{{ 'mdi:alert-rhombus' if is_state('binary_sensor.updater_addons','on') else 'mdi:star-plus' }}"
      state: >
        {{ states.sensor.updater_supervisor.attributes.addons|length ~ ' pending update(s)'
              if is_state('binary_sensor.updater_addons','on') }}
      tap_action:
        action: none
      double_tap_action:
        action: navigate
        navigation_path: /hassio/dashboard
      hold_action:
        action: none
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.updater_addons','on') %} var(--entity-warning-color)
            {% else %} var(--state-icon-active-color)
            {% endif %}
            ;
        }
    entities:
      - type: custom:hui-element
        card_type: markdown
        content: |
          {%- if is_state('binary_sensor.updater_addons','off') -%}
          No updates available.
          {%- elif states.sensor.updater_supervisor.attributes.addons is defined -%}
            {%- for repository in state_attr('sensor.updater_supervisor','addons') %}
            Addon: {{ states.sensor.updater_supervisor.attributes['addons'][loop.index0].name }}
            Installed Version: {{ states.sensor.updater_supervisor.attributes['addons'][loop.index0].installed }}
            Current Version: {{ states.sensor.updater_supervisor.attributes['addons'][loop.index0].version }}

            {% endfor -%}
          {%- endif -%}

  - type: custom:fold-entity-row
    head:
      entity: sensor.hacs
      tap_action:
        action: navigate
        navigation_path: /hacs/entry
      double_tap_action:
        action: navigate
        navigation_path: /hacs/entry
      hold_action:
        action: none
      style: |
        :host {
          --paper-item-icon-color:
            {% if states('sensor.hacs')|int > 0 %} var(--entity-warning-color)
            {% else %} var(--state-icon-active-color)
            {% endif %}
            ;
        }
    entities:
      - type: custom:hui-element
        card_type: markdown
        content: |
          {%- if states('sensor.hacs')|int == 0 -%}
          No updates available.
          {%- elif states.sensor.hacs.attributes.repositories is defined -%}
          {%- for repository in state_attr('sensor.hacs','repositories') -%}
          Repository: {{ states.sensor.hacs.attributes.repositories[loop.index0].display_name }}
          Installed: {{ states.sensor.hacs.attributes.repositories[loop.index0].installed_version }}
          Available: {{ states.sensor.hacs.attributes.repositories[loop.index0].available_version }}
        
          {% endfor -%}
          {%- endif -%}

  # delete this entity if you do not have the breaking changes integration installed
  - type: custom:fold-entity-row
    head:
      entity: sensor.breaking_change_warnings
      tap_action:
        action: none
      double_tap_action:
        action: url
        url_path: https://www.home-assistant.io/blog/categories/release-notes/
      hold_action:
        action: none
      style: |
        :host {
          --paper-item-icon-color:
            {%- if states('sensor.breaking_change_warnings')|int > 0 %} var(--entity-critical-color)
            {%- else %} var(--state-icon-active-color)
            {%- endif -%}
            ;
          --secondary-text-color: var(--entity-warning-color);
        }
    entities:
      - type: custom:hui-element
        card_type: markdown
        content: |
          {%- if states('sensor.breaking_change_warnings')|int == 0 %}
            No breaking changes.
          {%- else -%}
            {%- for change in state_attr('sensor.breaking_change_warnings','changes') %}
              [{{ states.sensor.breaking_change_warnings.attributes['changes'][loop.index0].title }}]({{ states.sensor.breaking_change_warnings.attributes['changes'][loop.index0].doclink }})
              [{{ states.sensor.breaking_change_warnings.attributes['changes'][loop.index0].integration }}]({{ states.sensor.breaking_change_warnings.attributes['changes'][loop.index0].prlink }})
              {{ states.sensor.breaking_change_warnings.attributes['changes'][loop.index0].description }}
        
            {%- endfor -%}
          {%- endif -%}