>-
  <ul>
  {%- if is_state('sensor.updater_core','on') -%}
  <li>Home Assistant verion {{ state_attr('sensor.updater_core','current_version') }} is installed.<br/>
  Version {{ state_attr('sensor.updater_core','newest_version') }} is available.
  {% endif -%}
  {%- if is_state('binary_sensor.updater_supervisor','on') -%}
  <li>Supervisor version {{ state_attr('sensor.updater_supervisor','current_version') }} is installed.<br/>
  Version {{ state_attr('sensor.updater_supervisor','newest_version') }} is available.
  {% endif -%}
  {%- if is_state('binary_sensor.home_assistant_operating_system_update_available','on') -%}
  <li>HASS OS version {{ states('sensor.home_assistant_operating_system_version') }} is installed.<br/>
  Version {{ states('sensor.home_assistant_operating_system_newest_version') }} is available.
  {% endif -%}
  {%- if is_state('sensor.updater_audio','on') -%}
  <li>Audio version {{ state_attr('sensor.updater_audio','current_version') }} is installed.<br/>
  Version {{ state_attr('sensor.updater_audio','newest_version') }} is available.
  {% endif -%}
  {%- if is_state('sensor.updater_dns','on') -%}
  <li>DNS version {{ state_attr('sensor.updater_dns','current_version') }} is installed.<br/>
  Version {{ state_attr('sensor.updater_dns','newest_version') }} is available.
  {% endif -%}
  {%- if is_state('binary_sensor.updater_cli','on') -%}
  <li>CLI version {{ state_attr('sensor.updater_cli','current_version') }} is installed.<br/>
  Version {{ state_attr('sensor.updater_cli','newest_version') }} is available.
  {% endif -%}
  {%- if is_state('binary_sensor.updater_multicast','on') -%}
  <li>Multicast version {{ state_attr('sensor.updater_multicast','current_version') }} is installed.<br/>
  Version {{ state_attr('sensor.updater_multicast','newest_version') }} is available.
  {% endif -%}
  {%- if is_state('binary_sensor.hass_addon_update_available','on') -%} {#VERIFY #}
  {%- set count = expand('group.addon_update_sensors')|selectattr('state','eq','on')|map(attribute='entity_id')|list|count -%}
  {{- count ~ ' pending update' -}}{{- 's' if count > 1 if is_state('binary_sensor.hass_addon_update_available','on') else '' }}
  {% set addons = expand('group.addon_update_sensors')|selectattr('state','eq','on') %}
  {%- for item in addons %}
  Hass Addon: {{ item.name|replace(': Update Available','') }}
  Installed Version: {{ states('sensor.' ~ item.entity_id.split('.')[1]|replace('_update_available','') ~ '_version') }}
  Neweset Version: {{ states('sensor.' ~ item.entity_id.split('.')[1]|replace('_update_available','') ~ '_newest_version') }}
  {% endfor -%}
  {%- endif -%}
  {%- if states('sensor.hacs')|int(0) > 0 -%}
  There {{ 'is' if states('sensor.hacs')|int(0) == 1  else 'are'}} {{ states('sensor.hacs') }} HACS {{ 'update' if states('sensor.hacs')|int(0) == 1  else 'updates'}} available.{% endif -%}
  {%- for item in state_attr('sensor.hacs','repositories') %}
  <li>{{ state_attr('sensor.hacs','repositories')[loop.index0]['display_name'] ~' v(' ~ state_attr('sensor.hacs','repositories')[loop.index0]['available_version'] ~ ')' }}
  {%- endfor -%}
  {%- if is_state('binary_sensor.jphone_app_update','on') -%}
  <li>Jason Mobile App: v{{ states('sensor.jphone_current_version') }}.<br/>
  <span color="orange">Version {{ states('sensor.ha_companion_latest_version') }} is available.</span>
  {%- endif -%}
  {%- if is_state('binary_sensor.sphone_app_update','on') -%}
  <li>Sheri Mobile App: v{{ states('sensor.sphone_current_version') }}.<br/>
  <span color="orange">Mobile App Version {{ states('sensor.ha_companion_latest_version') }} is available.</span>
  {%- endif -%}
  </ul>
