#######################################################################################################################
## Media Preset Play
#######################################################################################################################
media_preset_play:
  alias: Media Preset Play
  description: Start timers, play media.
  mode: restart
  fields:
    preset:
      description: Play media preset.
      example: sleep
  variables:
    media_type: >
      {% if preset == 'wake' %}{{ states('input_select.media_preset_type_wake') }}
      {% elif preset == 'morning' %}{{ states('input_select.media_preset_type_morning') }}
      {% elif preset == 'sleep' %}{{ states('input_select.media_preset_type_sleep') }}
      {% elif preset == 'jason' %}{{ states('input_select.media_preset_type_jason') }}
      {% elif preset == 'sheri' %}{{ states('input_select.media_preset_type_sheri') }}
      {% elif preset == 'shower' %}{{ states('input_select.media_preset_type_shower') }}
      {% elif preset == 'company' %}{{ states('input_select.media_preset_type_company') }}
      {% endif %}
  sequence:
    - choose:
        - conditions: "{{ preset == 'sleep' }}"
          sequence:
            # cancel sleep timer if active  and sleep preset boolean is not
            - choose:
                - conditions:
                    - condition: state
                      entity_id: timer.media_preset_sleep
                      state: active

                    - condition: state
                      entity_id: input_boolean.media_preset_sleep
                      state: 'off'

                  sequence:
                    - service: timer.cancel
                      entity_id: timer.media_preset_sleep

            # make sure preset boolean is now on
            - service: input_boolean.turn_on
              entity_id: input_boolean.media_preset_sleep

        - conditions: "{{ preset == 'wake' }}"
          sequence:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: timer.media_preset_wake
                      state: active

                    - condition: state
                      entity_id: input_boolean.media_preset_wake
                      state: 'off'

                  sequence:
                    - service: timer.cancel
                      entity_id: timer.media_preset_wake

            - service: input_boolean.turn_on
              entity_id: input_boolean.media_preset_wake

        - conditions: "{{ preset not in ['wake','sleep'] }}"
          sequence:
            - service: input_boolean.turn_off
              data:
                entity_id: "input_boolean.media_preset_{{ preset }}"

    - choose:
        - conditions: "{{ media_type == 'radio' }}"
          sequence:
            # turn radio power button on to keep in sync if radio_play was called by script
            - service: script.radio_play
              data:
                preset: "{{ preset }}"

            - wait_template: "{{ is_state(states('sensor.radio_media_player','playing')) }}"
              timeout:
                seconds: 60
              continue_on_timeout: false

        - conditions: "{{ media_type == 'spotify' }}"
          sequence:
            - service: script.spotify_play
              data:
                preset: "{{ preset }}"

            - wait_template: "{{ is_state(states('sensor.spotify_media_player','playing')) }}"
              timeout:
                seconds: 60
              continue_on_timeout: false

        #IDEA add netflix, youtube

    - choose:
      # wake preset and timer is idle - start timer
      - conditions:
          - condition: template
            value_template: "{{ preset == 'wake' }}"

          - condition: state
            entity_id: timer.media_preset_wake
            state: idle

        sequence:
          - service: timer.start
            data:
              entity_id: timer.media_preset_wake
              duration:
                minutes: "{{ states('input_number.media_preset_morning_delay')|int }}"


      # sleep preset and timer is idle - start timer
      - conditions:
          - condition: template
            value_template: "{{ preset == 'sleep' }}"

          - condition: state
            entity_id: timer.media_preset_sleep
            state: idle

        sequence:
          - service: timer.start
            data:
              entity_id: timer.media_preset_sleep
              duration:
                minutes: "{{ states('input_number.media_preset_sleep_time')|int }}"


