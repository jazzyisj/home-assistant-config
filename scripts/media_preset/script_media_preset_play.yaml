#######################################################################################################################
## Media Preset Play  #IDEA add netflix, youtube
#######################################################################################################################
media_preset_play:
  alias: Media Preset Play
  description: Turn on media preset.
  mode: queued
  fields:
    preset:
      description: Play media preset.
      example: sleep
  variables:
    media_type: "{{ states('input_select.media_preset_type_' ~ preset)|lower }}"
  sequence:
    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.mute_all
              state: 'on'
          sequence:
            - service: browser_mod.toast
              data:
                message: Media preset cannot not be played. System is muted.
      default:
        - choose: # cancel sleep timer if active and not sleep preset
            - conditions: "{{ preset != 'sleep' and not is_state('timer.media_preset_sleep','idle') }}"
              sequence:
                - service: timer.cancel
                  entity_id: timer.media_preset_sleep

        - service: automation.turn_off
          data:
            entity_id: &media_automations
              - automation.media_player_media_auto_resume
              - automation.media_player_media_volume_changed
            stop_actions: false

        - service: input_select.select_option # set media player options to preset values
          data:
            entity_id: "input_select.{{ media_type }}_media_player"
            option: "{{ states('input_select.media_preset_speaker_' ~ preset) }}"

        - service: input_select.select_option
          data:
            entity_id: >
              {% if media_type == 'radio' %} input_select.radio_station
              {% elif media_type == 'spotify' %} input_select.spotify_playlist_hassio
              {% endif %}
            option: "{{ states('input_select.media_preset_' ~ media_type ~ '_' ~ preset) }}"

        - service: input_number.set_value
          data:
            entity_id: "input_number.{{ media_type }}_volume"
            value: "{{ states('input_number.media_preset_volume_' ~ preset)|float }}"

        - service: automation.turn_on
          entity_id: *media_automations

        - service: script.turn_on
          data:
            entity_id: script.media_play
            variables:
              media_type: "{{ media_type }}"
              account: >
                {% if preset == 'jason' %} jazzyisj
                {% elif preset == 'sheri' %} sherigagnon
                {% else %} hassio
                {% endif %}

        - choose: #SPOTIFY - redo spotify account logic
            - conditions: "{{ media_type == 'spotify' and preset in ['jason','sheri'] }}"
              sequence:
                - service: automation.turn_off
                  data:
                    entity_id: automation.media_player_media_turned_off
                    stop_actions: false

                - service: input_boolean.turn_off
                  entity_id: input_boolean.spotify

                - service: automation.turn_on
                  entity_id: automation.media_player_media_turned_off

        - wait_template: "{{ is_state(states('sensor.' ~ media_type ~ '_media_player'),'playing') }}"
          timeout: 60 # wait for radio to start play
          continue_on_timeout: false # don't start timers if media doesn't play

        - choose: # if sleep preset and sleep timer is idle start timer
            - conditions: "{{ preset == 'sleep' and is_state('timer.media_preset_sleep','idle') }}"
              sequence:
                - service: timer.start
                  data:
                    entity_id: timer.media_preset_sleep
                    duration:
                      minutes: "{{ states('input_number.media_preset_sleep_time')|int }}"