###############################################################################
## Turn Fan On
###############################################################################
turn_fan_on:
  alias: "Turn Fan On"
  description: "Turn fan on."
  icon: mdi:fan
  mode: queued
  fields:
    fans:
      description: "List of fan entity ids"
      example: "['fan.bedroom_fan','fan.living_room_fan']"
    activate_timer:
      description: "Activate fan in use timer"
      example: "true"
    bypass_timer:
      description: "Bypass fan in use timer"
      example: "false"
    cancel_timer:
      description: "Cancel fan in use timer"
    percentage:
      description: "Fan speed percentage"
      example: "50"
  variables:
    entities: "{{ expand(fans|default('group.fans'))|map(attribute='entity_id')|list}}"
  sequence:
    - if:
        - condition: template
          value_template: "{{ entities == none or entities|count == 0 }}"
      then:
        - service: system_log.write
          data:
            logger: "{{ this.entity_id }}"
            level: error
            message: "No valid entities."

        - stop: "No valid entities."
          error: true

    - service: automation.turn_off
      target:
        entity_id: automation.fan_in_use_timer

    - repeat:
        for_each: "{{ entities }}"
        sequence:
          - variables:
              timer: >
                {% set timer = 'timer.' ~ repeat.item.split('.')[1]|default('') %}
                {{ timer if has_value(timer) else none }}

          - if:
              - condition: template
                alias: "Timer bypassed or no timer, or timer is idle"
                value_template: "{{ (bypass_timer|default(false) or timer == none) or is_state(timer,'idle') }}"
            then:
              - service: fan.turn_on
                target:
                  entity_id: "{{ repeat.item }}"
                data:
                  percentage: "{{ percentage|default(50) }}"
                continue_on_error: true

          - if: "{{ timer != none and (activate_timer|default(false)) }}"
            then:
              - service: timer.start
                target:
                  entity_id: "{{ timer }}"
                continue_on_error: true
            else:
              - if: "{{ cancel_timer|default(false) }}"
                then:
                  - service: timer.cancel
                    target:
                      entity_id: "{{ timer }}"
    - wait_template: >
        {{ states.fan|selectattr('entity_id','in',entities)
            |selectattr('state','eq','off')|list|count == 0 }}
      timeout: 30

    - service: automation.turn_on
      target:
        entity_id: automation.fan_in_use_timer
