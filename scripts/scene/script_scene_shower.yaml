##################################################################################################
# Shower Toggle
##################################################################################################
toggle_shower:
  alias: Toggle Shower
  description: Toggle shower script.
  icon: mdi:shower-head
  mode: restart
  sequence:
    - choose:
        - conditions:
            - condition: state
              entity_id: script.start_shower
              state: 'on'
          sequence:
            - service: script.stop_shower

      default:
        - service: script.start_shower

##################################################################################################
# Start Shower
##################################################################################################
start_shower:
  alias: Start Shower
  description: Turn on shower lights, start spotify shower playlist.
  icon: mdi:shower-head
  mode: restart
  sequence:
    - service: switch.turn_off
      entity_id: switch.light_flux_bathroom

    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.light_automation
              state: 'on'

          sequence:
            - service: light.turn_on
              data:
                entity_id: light.upstairs_bathroom_vanity_rgb_light
                profile: warm_max  #ISSUE flickers

            - service: light.turn_on
              data:
                entity_id: light.upstairs_bathroom_shower_light
                profile: warm_max

    - choose:
        - conditions:
            - condition: state
              entity_id:
                - input_boolean.media_preset_enabled_shower
                - input_boolean.media_player_automation
              state: 'on'

            - condition: not
              conditions:
                - condition: state
                  entity_id: input_select.occupancy_mode
                  state: Night

          sequence:
            - choose:
                - conditions: #
                    - condition: or
                      alias: Radio/Spotify already playing in bathroom
                      conditions:
                        - condition: template
                          value_template: >
                            {{ is_state('input_boolean.radio','on') and expand(state_attr('sensor.radio_media_player','players'))
                              |selectattr('entity_id','eq','media_player.bathroom_speaker')|list|count > 0 }}

                        - condition: template
                          value_template: >
                            {{ is_state('input_boolean.spotify','on') and expand(state_attr('sensor.spotify_media_player','players'))
                              |selectattr('entity_id','eq','media_player.bathroom_speaker')|list|count > 0 }}

                  sequence:
                    - service: media_player.volume_set
                      data:
                        entity_id: media_player.bathroom_speaker
                        volume_level: "{{ states('input_number.media_preset_volume_shower')|float/100 }}"
              default:
                - service: script.media_preset_play
                  data:
                    preset: shower

    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.vent_fan_automation
              state: 'on'
          sequence:
            - service: automation.turn_off # turn off automation so we don't trigger device in use timer
              entity_id: automation.vent_fan_upstairs_bathroom_fan_in_use

            - service: fan.turn_on
              data:
                entity_id: fan.upstairs_bathroom_fan
                percentage: 100

            - delay: # delay to allow devices to change state
                seconds: 30  #ZWAVE fans are slow to change

            - service: automation.turn_on # turn off automation so we don't trigger device in use timer
              entity_id: automation.vent_fan_upstairs_bathroom_fan_in_use

    - delay: # delay to keep bathrom light motion off from running
        minutes: 45

    - service: script.stop_shower

##################################################################################################
# Stop Shower
##################################################################################################
stop_shower:
  alias: Stop Shower
  description: Turn off shower lights, stop spotify.
  mode: restart
  max_exceeded: silent
  sequence:
    - service: script.turn_off
      entity_id: script.start_shower

    - choose:
        - conditions: "{{ is_state('timer.upstairs_bathroom_vanity_light','idle') }}"
          sequence:
            - service: switch.turn_on
              entity_id: switch.light_flux_bathroom

    - choose: # if shower media player is only bathroom speaker, turn it off
        - conditions:
            - condition: state
              entity_id:
                - input_boolean.media_preset_enabled_shower
                - input_boolean.media_player_automation
              state: 'on'
          sequence:
            - choose: # if shower media player is only bathroom speaker, turn it off
                - conditions:
                    - condition: state
                      entity_id: media_player.bathroom_speaker
                      state:
                        - playing
                        - paused
                        - idle

                    - condition: or
                      conditions:
                        - condition: and
                          conditions:
                            - condition: state
                              entity_id: input_boolean.radio
                              state: 'on'

                            - condition: state
                              entity_id: sensor.radio_media_player
                              state: media_player.bathroom_speaker

                        - condition: and
                          conditions:
                            - condition: state
                              entity_id: input_boolean.spotify
                              state: 'on'

                            - condition: state
                              entity_id: sensor.spotify_media_player
                              state: media_player.bathroom_speaker
                  sequence:
                    - service: media_player.turn_off
                      entity_id: media_player.bathroom_speaker

              default:
                - choose:
                    - conditions:
                        - condition: template
                          value_template: >
                            {{ is_state('input_boolean.radio','on') and expand(state_attr('sensor.radio_media_player','players'))
                              |selectattr('entity_id','eq','media_player.bathroom_speaker')|list|count > 0 }}
                      sequence:
                        - service: media_player.volume_set
                          data:
                            entity_id: media_player.bathroom_speaker
                            volume_level: "{{ states('input_number.radio_volume')|float / 100 }}"

                    - conditions:
                        - condition: template
                          value_template: >
                            {{ is_state('input_boolean.spotify','on') and expand(state_attr('sensor.spotify_media_player','players'))
                              |selectattr('entity_id','eq','media_player.bathroom_speaker')|list|count > 0 }}
                      sequence:
                        - service: media_player.volume_set
                          data:
                            entity_id: media_player.bathroom_speaker
                            volume_level: "{{ states('input_number.spotify_volume')|float / 100 }}"

                  default:
                    - service: media_player.volume_set
                      data:
                        entity_id: media_player.bathroom_speaker
                        volume_level: "{{ states('input_number.laundry_room_speaker_current_volume')|float }}"

    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.light_automation
              state: 'on'
          sequence:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: binary_sensor.auto_light_on
                      state: 'on'
                  sequence:
                    - service: light.turn_on # no motion will turn it off
                      data:
                        entity_id: light.upstairs_bathroom_vanity_rgb_light
                        profile: warm
                        transition: 2
              default:
                - service: light.turn_off
                  data:
                    entity_id: light.upstairs_bathroom_vanity_rgb_light
                    transition: 2

            - service: light.turn_off
              data:
                entity_id: light.upstairs_bathroom_shower_light
                transition: 2
