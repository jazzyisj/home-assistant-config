#######################################################################################################################
## Alarm Clock Stop
#######################################################################################################################
alarm_clock_stop:
  alias: Alarm Clock Stop
  description: Turn off alarm, snooze media player, reset timers.
  icon: mdi:alarm-note-off
  mode: single
  #max_exceeded: silent
  variables:
    speaker_groups: "{{ state_attr('group.media_players','entity_id') }}"
  sequence:
    - service: script.turn_off
      entity_id: script.alarm_clock_play

    - service: timer.cancel
      entity_id:
        - timer.alarm_clock_snooze
        - timer.alarm_clock_nap

    # if radio is on and any member of alarm clock speaker group is in the radio speaker group just stop players or radio will turn off
    - choose:
        - conditions:
            # valid media player (if failed not populated)
            - condition: template
              value_template: "{{ states('input_text.active_media_player_alarm_clock') in speaker_groups }}"

            - condition: template
              value_template: >
                {% set radio = states('sensor.radio_media_player') %}
                {% set alarm = states('sensor.alarm_clock_media_player') %}
                {% set radio_group = states.media_player|selectattr('attributes.' ~ radio.split('.')[1],'eq',true)|map(attribute='entity_id')|list %}
                {% set alarm_group = states.media_player|selectattr('attributes.' ~ alarm.split('.')[1],'eq',true)|map(attribute='entity_id')|list %}
                {% if is_state('input_boolean.radio_on','on') %}
                  {% set found = namespace(value=0) %}
                  {% if radio in speaker_groups %}
                    {% for radio_player in radio_group %}
                      {% if alarm in speaker_groups %}
                        {% for alarm_player in alarm_group %}
                          {% if radio_player == alarm_player %}{% set found.value = 1 %}{% endif %}
                        {% endfor %}
                      {% elif radio_player == alarm %}
                        {% set found.value = 1 %}
                      {% endif %}
                    {% endfor %}
                    {{ found.value == 1 }}
                  {% else %}
                    {% set found = namespace(value=0) %}
                    {% if alarm in speaker_groups %}
                      {% for alarm_player in alarm_group %}
                        {% if radio_player == alarm_player %}{% set found.value = 1 %}{% endif %}
                      {% endfor %}
                    {% elif radio == alarm %}
                      {% set found.value = 1 %}
                    {% endif %}
                    {{ found == 1 }}
                  {% endif %}
                {% else %} false
                {% endif %}

          sequence:
            - service: media_player.media_stop
              data:
                entity_id: "{{ states('input_text.active_media_player_alarm_clock') }}"

            - service: input_text.set_value
              data:
                entity_id: input_text.active_media_player_alarm_clock
                value: cleared

      default:
        # media player not needed for radio, turn it off
        - service: script.alarm_clock_active_media_player_off

    - service: script.set_media_player_volumes
      data:
        media_player: "{{ states('sensor.alarm_clock_media_player') }}"
        source: alarm_clock_off

    # don't turn off booleans until end so binary_sensor.alarm_clock_active doesn't turn off and resume radio before we're done here
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.alarm_clock_active_auto
        - input_boolean.alarm_clock_active_manual
        - input_boolean.alarm_clock_active_nap
        - input_boolean.alarm_clock_nap
        - input_boolean.alarm_clock_snooze

    - service: input_boolean.turn_off
      entity_id: input_boolean.alarm_clock_test_play