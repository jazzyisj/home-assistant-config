###################################################################################################
## Waketime
###################################################################################################
waketime:
  alias: "Waketime"
  description: "Run morning wake up routine."
  icon: mdi:sun-clock
  mode: single
  max_exceeded: silent
  fields:
    delay:
      description: "Delay script execution for early trigger."
      example: "true"
  sequence:
    - if:
        - condition: not
          conditions:
            - condition: state
              entity_id: input_select.occupancy_mode
              state: Night
      then:
        - action: browser_mod.notification
          data:
            duration: 10000
            message: |
              The house is in {{ states('input_select.occupancy_mode') }} mode.
              Waketime routine cannot run if occupancy mode is not Night.

        - stop: "Waketime routine cannot run if occupancy mode is not Night."

    - action: script.turn_off
      target:
        entity_id: script.bedtime

    - if:
        - condition: state
          alias: "Waketime was run when alarm clock is active"
          entity_id: binary_sensor.alarm_clock
          state: "on"
      then:
        - action: switch.turn_off
          target:
            entity_id: "switch.alarm_clock_{{ states('input_select.alarm_clock_type') }}"
      else:
        - if:
            - condition: state
              entity_id: input_boolean.alarm_clock_skip_next
              state: "off"
          then:
            - if: "{{ delay | default(false) }}"
              then:
                - delay: 60 # compensate for early trigger in automation

                # wait for alarm clock to turn on (auto, manual, nap)
                - wait_template: "{{ is_state('binary_sensor.alarm_clock', 'on') }}"
                  timeout: 30

                # wait for alarm clock to be turned off
                - wait_template: "{{ is_state('binary_sensor.alarm_clock', 'off') }}"
                  timeout:
                    minutes: 60
                  continue_on_timeout: false

    - condition: state
      alias: "Someone is still home"
      entity_id: binary_sensor.someone_home
      state: "on"

    - action: input_select.select_option
      target:
        entity_id: input_select.occupancy_mode
      data:
        option: >
          {% from 'presence.jinja' import occupancy_mode %}
          {{ occupancy_mode() }}
      continue_on_error: true

    - action: script.arm_alarm
      data:
        mode: home
        override: true
      continue_on_error: true

    - parallel:
        - sequence:
            - if:
                - condition: state
                  entity_id:
                    - binary_sensor.daytime_illuminance
                    - binary_sensor.nighttime_illuminance
                  match: any
                  state: "on"
              then:
                - action: script.turn_light_on
                  data:
                    entity_id:
                      - light.bedroom_fan_light
                      - light.bathroom_vanity_light_rgb
                      - light.dining_room_light_rgb
                      - light.kitchen_potlights
                      - light.kitchen_cabinet_lights
                    profile: default_min
                    transition: 10
                    activate_timer: false
                  continue_on_error: true

                - delay: # wait for next set of lights
                    minutes: 10

                - action: script.turn_light_on
                  data:
                    entity_id:
                      - light.bedroom_fan_light
                      - light.bathroom_vanity_light_rgb
                      - light.dining_room_light_rgb
                      - light.kitchen_potlights
                      - light.kitchen_potlights
                      - light.kitchen_cabinet_lights
                      - light.laundry_room_cabinet_lights
                    profile: default_low
                    transition: 120
                    activate_timer: false
                  continue_on_error: true

                - action: script.turn_light_on
                  data:
                    entity_id:
                      - light.back_house_potlights
                    profile: default_max
                    activate_timer: false

                - delay: # wait for next set of lights
                    minutes: 10

                - action: script.turn_light_on
                  data:
                    entity_id:
                      - light.bedroom_fan_light
                      - light.bedroom_potlights
                      - light.bathroom_vanity_light_rgb
                      - light.dining_room_light_rgb
                      - light.kitchen_potlights
                      - light.kitchen_potlights
                      - light.kitchen_cabinet_lights
                      - light.laundry_room_cabinet_lights
                      - light.kitchen_sink_light
                    profile: default
                    transition: 120
                    activate_timer: false
                  continue_on_error: true

        - sequence:
            - if:
                - condition: state
                  entity_id:
                    - input_boolean.occupancy_announcements
                    - input_boolean.alarm_announcements
                  match: any
                  state: "on"
              then:
                - wait_for_trigger:
                    - trigger: event
                      event_type: occupancy_notification
                  timeout: 60

            - if:
                - condition: state
                  entity_id: input_boolean.media_enabled_wake
                  state: "on"
              then:
                - action: script.media_play
                  data:
                    preset: wake
                  continue_on_error: true

                - delay:
                    minutes: "{{ states('input_number.media_wake_time') | int }}"

                - variables:
                    stop_player: >
                      {{ expand('group.media_players')
                          | selectattr('name', 'eq', states('select.media_speaker_wake'))
                          | map(attribute='entity_id') | join }}

                - if: "{{ stop_player != '' }}"
                  then:
                    - action: script.turn_media_player_off
                      data:
                        entity_id: "{{ stop_player }}"
                      continue_on_error: true
              else:
                - delay:
                    minutes: "{{ states('input_number.media_wake_time') | int }}"

            - if:
                - condition: state
                  entity_id: binary_sensor.jason_home
                  state: "on"
              then:
                - if:
                    - condition: state
                      entity_id: input_boolean.calendar_announcements
                      state: "on"
                  then:
                    - action: button.press
                      target:
                        entity_id: button.announce_calendar_events_jason
                      continue_on_error: true

            - action: button.press
              target:
                entity_id: button.tts_play_saved_messages
              continue_on_error: true

            - if:
                - condition: state
                  entity_id: input_boolean.morning_weather_enabled
                  state: "on"
              then:
                - action: button.press
                  target:
                    entity_id: button.weather_report
                  continue_on_error: true

            - delay: 5 # allow weather report to start

            - wait_template: "{{ is_state('input_boolean.tts', 'off') }}"

            - if:
                - condition: state
                  entity_id: input_boolean.media_enabled_morning
                  state: "on"
              then:
                - action: script.media_play
                  data:
                    preset: morning
                  continue_on_error: true
