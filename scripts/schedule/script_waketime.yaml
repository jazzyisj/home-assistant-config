###############################################################################
## Waketime
###############################################################################
waketime:
  alias: 'Waketime'
  description: 'Turn off alarm clock, Turn on lights, set occupancy mode to home/guest, play morning radio & weather.'
  icon: mdi:weather-sunset-up
  sequence:
    - choose:
        - conditions:
            - or:
                - condition: state
                  entity_id: binary_sensor.someone_home
                  state: 'off'

                - not:
                    - condition: state
                      entity_id: input_select.occupancy_mode
                      state: Night

                - condition: state
                  entity_id: input_boolean.alarm_triggered # disarms alarm
                  state: 'on'
          sequence:
            - service: browser_mod.toast
              data:
                message: 'Wake up routine cannot be run.'
                duration: 30000
      default:
        - service: script.turn_off
          target:
            entity_id: script.bedtime

        - choose:
            - conditions: "{{ is_state('switch.alarm_clock_auto','on') }}"
              sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.alarm_clock_auto

        - choose:
            - conditions: "{{ is_state('switch.alarm_clock_manual','on') }}"
              sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.alarm_clock_manual

        - choose:
            - conditions: "{{ is_state('switch.alarm_clock_nap','on') }}"
              sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.alarm_clock_nap

        # set occuancy mode and alarm in case alarm is disabled
        - service: input_select.select_option
          target:
            entity_id: input_select.occupancy_mode
          data:
            option: >
              {% if is_state('binary_sensor.owner_home','on') %} Home
              {% elif is_state('input_boolean.guest_home','on') %} Guest
              {% else %} Away
              {% endif %}

        - service: script.arm_alarm
          data:
            mode: home
            override: true

        - choose:
            - conditions:
                - condition: state
                  entity_id: binary_sensor.nighttime_illuminance_lights
                  state: 'on'
              sequence:
                - service: script.turn_on
                  target:
                    entity_id: script.morning_lights

        - delay: 60 # wait for alarm to disarm/tts

        - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.media_preset_enabled_wake
                  state: 'on'
              sequence:
                - service: script.media_preset_play
                  data:
                    preset: wake

        - delay:
            minutes: >
              {{ states('input_number.waketime_duration')|int(0) if is_state('binary_sensor.work_today','on')
                  else states('input_number.waketime_duration_weekend')|int(0) }}

        - service: script.media_stop # don't resume wake preset back on after tts
          data:
            media_type: "{{ states('input_select.media_preset_type_wake')|slugify }}"

        - delay: 15 # wait for media to stop

        - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.morning_weather_enabled
                  state: 'on'
              sequence:
                - service: script.weather_report
                - delay: 5 # allow weather tts to start playing
                - wait_template: "{{ is_state('binary_sensor.tts','off') }}"

        - choose:
            - conditions:
                - condition: numeric_state
                  entity_id: variable.tts_saved_messages
                  above: 0
              sequence:
                - service: script.tts_play_saved_messages

                - delay: 1 # let saved messages start

                - wait_template: "{{ is_state('script.tts_play_saved_messages','off') }}"
                  timeout:
                    minutes: 5

        - condition: state
          entity_id: input_boolean.media_preset_enabled_morning
          state: 'on'

        - service: script.media_preset_play
          data:
            preset: morning

###############################################################################
## Wake Up Switch # for zwave scenes
###############################################################################
waketime_switch:
  alias: 'Waketime Switch'
  description: 'Turn off alarm clock or run waketime scene.'
  max_exceeded: silent
  mode: restart
  sequence:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.alarm_clock
              state: 'on'
          sequence:
            - service: switch.turn_off
              target:
                entity_id: "switch.alarm_clock_{{ state_attr('binary_sensor.alarm_clock','alarm_type') }}"
      default:
        - service: script.toggle
          target:
            entity_id: script.waketime
