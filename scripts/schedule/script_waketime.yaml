###############################################################################
## Waketime
###############################################################################
waketime:
  alias: "Waketime"
  description: "Turn off alarm clock, Turn on lights, set occupancy mode to home/guest, play morning media & weather."
  icon: mdi:weather-sunset-up
  sequence:
    - if:
        - or:
            - condition: state
              entity_id: binary_sensor.someone_home
              state: "off"

            - not:
                - condition: state
                  entity_id: input_select.occupancy_mode
                  state: Night

            - condition: state
              entity_id: input_boolean.alarm_triggered # disarms alarm
              state: "on"
      then:
        - service: browser_mod.notification
          data:
            duration: 30000
            message: "Wake up routine cannot be run."
      else:
        - service: script.turn_off
          target:
            entity_id: script.bedtime

        - choose:
            - conditions: "{{ is_state('switch.alarm_clock_auto','on') }}"
              sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.alarm_clock_auto

            - conditions: "{{ is_state('switch.alarm_clock_manual','on') }}"
              sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.alarm_clock_manual

            - conditions: "{{ is_state('switch.alarm_clock_nap','on') }}"
              sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.alarm_clock_nap

        # set occuancy mode and alarm in case alarm is disabled
        - service: input_select.select_option
          target:
            entity_id: input_select.occupancy_mode
          data:
            option: >
              {% if is_state('binary_sensor.owner_home','on') %} Home
              {% elif is_state('input_boolean.guest_home','on') %} Guest
              {% else %} Away
              {% endif %}

        - service: script.arm_alarm
          data:
            mode: home
            override: true

        - if:
            - condition: state
              entity_id: binary_sensor.nighttime_illuminance_lights
              state: "on"
          then:
            - service: script.turn_on
              target:
                entity_id: script.morning_lights

        - delay: 60 # wait for alarm to disarm/tts

        - if:
            - condition: state
              entity_id: input_boolean.media_preset_enabled_wake
              state: "on"
          then:
            - service: script.media_play
              data:
                preset: wake

        - delay:
            minutes: >
              {{ states('input_number.waketime_duration')|int(0) if is_state('binary_sensor.work_today','on')
                  else states('input_number.waketime_duration_weekend')|int(0) }}

        - service: media_player.media_stop
          target:
            entity_id: >
              {{ expand(state_attr('group.alarm_clock_media_players','entity_id'))
                  |selectattr('name','eq',states('select.media_preset_speaker_wake'))
                  |map(attribute='entity_id')|join('') }}

        - delay: 15 # wait for media to stop

        - if:
            - condition: state
              entity_id: input_boolean.morning_weather_enabled
              state: "on"
          then:
            - service: script.weather_report
            - delay: 5 # allow weather tts to start playing
            - wait_template: "{{ is_state('input_boolean.tts','off') }}"

        - if:
            - condition: numeric_state
              entity_id: variable.tts_saved_messages
              above: 0
          then:
            - service: script.tts_play_saved_messages

            - delay: 1 # let saved messages start

            - wait_template: "{{ is_state('script.tts_play_saved_messages','off') }}"
              timeout:
                minutes: 5

        - condition: state
          entity_id: input_boolean.media_preset_enabled_morning
          state: "on"

        - service: script.media_play
          data:
            preset: morning

###############################################################################
## Wake Up Switch - for zwave scenes
###############################################################################
waketime_switch:
  alias: "Waketime Switch"
  description: "Turn off alarm clock or run waketime scene."
  max_exceeded: silent
  mode: restart
  sequence:
    - if:
        - condition: state
          entity_id: binary_sensor.alarm_clock
          state: "on"
      then:
        - service: switch.turn_off
          target:
            entity_id: "switch.alarm_clock_{{ state_attr('binary_sensor.alarm_clock','alarm_type') }}"
      else:
        - service: script.toggle
          target:
            entity_id: script.waketime
