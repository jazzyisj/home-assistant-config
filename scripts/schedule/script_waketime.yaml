###############################################################################
## Waketime
###############################################################################
waketime:
  alias: "Waketime"
  description: "Turn off alarm clock, Turn on lights, set occupancy mode to home/guest, play morning media & weather."
  icon: mdi:weather-sunset-up
  sequence:
    - if:
        - or:
            - condition: state
              entity_id: binary_sensor.someone_home
              state: "off"

            - not:
                - condition: state
                  entity_id: input_select.occupancy_mode
                  state: Night

            - condition: state
              entity_id: input_boolean.alarm_triggered # disarms alarm
              state: "on"
      then:
        - service: browser_mod.notification
          data:
            duration: 30000
            message: "Wake up routine cannot be run."

        - stop: "Wake up routine cannot be run."

    - choose:
        - conditions: "{{ is_state('switch.alarm_clock_auto','on') }}"
          sequence:
            - service: switch.turn_off
              target:
                entity_id: switch.alarm_clock_auto

        - conditions: "{{ is_state('switch.alarm_clock_manual','on') }}"
          sequence:
            - service: switch.turn_off
              target:
                entity_id: switch.alarm_clock_manual

        - conditions: "{{ is_state('switch.alarm_clock_nap','on') }}"
          sequence:
            - service: switch.turn_off
              target:
                entity_id: switch.alarm_clock_nap

    - if:
        - condition: state
          entity_id:
            - binary_sensor.daytime_illuminance_lights
            - binary_sensor.nighttime_illuminance_lights
          match: any
          state: "on"
      then:
        - service: script.turn_on # don't hold up script
          target:
            entity_id: script.waketime_lights
          continue_on_error: true

    - service: script.arm_alarm
      data:
        mode: home
        override: true

    - if:
        - condition: state
          entity_id: input_boolean.alarm_auto_arming
          state: "off"
      then:
        - service: input_select.select_option
          target:
            entity_id: input_select.occupancy_mode
          data:
            option: >
              {% if is_state('binary_sensor.owner_home','on') %} Home
              {% elif is_state('input_boolean.guest_home','on') %} Guest
              {% else %} Away
              {% endif %}

    - if:
        - condition: state
          entity_id:
            - input_boolean.occupancy_announcements
            - input_boolean.alarm_announcements
          match: any
          state: "on"
      then:
        - wait_for_trigger:
            - platform: event
              event_type: occupancy_notification
          timeout: 60

    - if:
        - condition: state
          entity_id: input_boolean.media_preset_enabled_wake
          state: "on"
      then:
        - service: script.media_play
          data:
            preset: wake
          continue_on_error: true #ISSUE #MASS script does not continue if mass fails

        - wait_template: "{{ is_state('timer.media_preset_wake','idle') }}"

        - variables:
            stop_player: >
              {{ expand(state_attr('group.media_players','entity_id'))
                  |selectattr('name','eq',states('select.media_preset_speaker_wake'))
                  |map(attribute='entity_id')|join('') }}

        - if: "{{ stop_player != '' }}"
          then:
            - service: script.turn_media_player_off
              data:
                entity_id: "{{ stop_player }}"
              continue_on_error: true
      else:
        - delay:
            minutes: "{{ states('input_number.media_preset_wake_time')|int }}"

    - service: calendar.list_events
      target:
        entity_id: calendar.jazzyisj
      data:
        duration:
          days: 2
      response_variable: agenda

    - if:
        - condition: state
          entity_id: input_boolean.calendar_notifications_jason
          state: "on"
      then:
        - variables:
            message: >
              Good {{ states('sensor.tod_greeting') }}!
              {% if agenda.events|count > 0 %}
                Here are your upcoming calendar events.
                {% for event in agenda.events %}
                {% if (event.start|as_datetime).day == now().day %}
                  {{ event.start|as_timestamp|timestamp_custom('Today at %-I:%M %p') }}: {{ event.summary }}
                {% else %}
                  {{ event.start|as_timestamp|timestamp_custom('%A at %-I:%M %p') }}: {{ event.summary }}
                {% endif %}
                {% if event.description is defined %}, {{ event.description }}{% endif %},
                {% endfor %}.
              {% else %}
                There are no events on your calendar today!
              {% endif %}
              {% set battery = states('sensor.jphone_battery_level')|int(-1) %}
              {% if battery < 50 %}
                Also, just a heads up, your mobile phone battery level is only {{ battery }} percent.
              {% endif %}

        - service: script.tts_play
          data:
            message: "{{ message }}"
            quiet_play: true

        - wait_template: "{{ is_state('input_boolean.tts','off') }}"

    - if:
        - condition: numeric_state
          entity_id: sensor.tts_saved_messages
          above: 0
      then:
        - service: script.tts_play_saved_messages
          continue_on_error: true

        - wait_template: "{{ is_state('input_boolean.tts','off') }}"

    - if:
        - condition: state
          entity_id: input_boolean.morning_weather_enabled
          state: "on"
      then:
        - service: script.weather_report
          continue_on_error: true

        - wait_template: "{{ is_state('input_boolean.tts','off') }}"

    - if:
        - condition: state
          entity_id: input_boolean.media_preset_enabled_morning
          state: "on"
      then:
        - service: script.media_play
          data:
            preset: morning
          continue_on_error: true

###############################################################################
## Wake Up Switch - for zwave scenes
###############################################################################
waketime_switch:
  alias: "Waketime Switch"
  description: "Turn off alarm clock or run waketime scene."
  max_exceeded: silent
  mode: restart
  sequence:
    - if:
        - condition: state
          entity_id: binary_sensor.alarm_clock
          state: "on"
      then:
        - service: switch.turn_off
          target:
            entity_id: "switch.alarm_clock_{{ state_attr('binary_sensor.alarm_clock','alarm_type') }}"
      else:
        - service: script.toggle
          target:
            entity_id: script.waketime
