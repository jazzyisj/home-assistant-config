###################################################################################################
## Bedtime
###################################################################################################
bedtime:
  alias: "Bedtime"
  description: "Bedtime announcements, turn on night mode."
  icon: mdi:bed-clock
  max_exceeded: silent
  fields:
    warning:
      description: "Enable the bedtime warning."
      example: "true"
  variables:
    bedtime_delay: "{{ states('input_number.bedtime_delay') | int }}"
    warn_time: "{{ states('input_number.bedtime_warning_time') | int }}"
    night_delay: "{{ states('input_number.night_mode_delay') | int }}"
  sequence:
    - if:
        - condition: not
          conditions:
            - condition: state
              entity_id: input_select.occupancy_mode
              state:
                - Home
                - Guest
      then:
        - action: browser_mod.notification
          data:
            duration: 10000
            message: |
              The house is in {{ states('input_select.occupancy_mode') }} mode.
              Betime routine cannot run if occupancy mode is not Home or Guest.

        - stop: "Betime routine cannot run if occupancy mode is not Home or Guest."

    - action: script.turn_off
      target:
        entity_id: script.waketime

    - action: input_boolean.turn_off
      target:
        entity_id: input_boolean.bedtime_delayed

    - if: "{{ warning | default(true) }}"
      then:
        - action: script.bedtime_notification
          continue_on_error: true

        - action: calendar.get_events
          target:
            entity_id: calendar.jazzyisj
          data:
            duration:
              days: 2
          response_variable: agenda

        - action: script.turn_on
          target:
            entity_id: script.tts_play
          data:
            variables:
              quiet_play: true
              media_player: media_player.night_speakers
              min_volume: 30
              message: !include /config/include/bedtime_report.yaml
          continue_on_error: true

        - wait_template: "{{ is_state('input_boolean.bedtime_delayed', 'on') }}"
          timeout:
            minutes: "{{ warn_time }}"

    - condition: state
      entity_id: input_boolean.bedtime_delayed
      state: "off"

    - action: script.turn_on
      target:
        entity_id: script.tts_play
      data:
        variables:
          message: >
            {% from 'speech_helpers.jinja' import plural %}
            Heads Up! Lights out in {{ plural('minute', night_delay) }}!
          media_player: media_player.living_area_speakers
          min_volume: 30
          quiet_play: true
          save_message: false
      continue_on_error: true

    - if:
        - condition: state
          entity_id: timer.dining_room_light
          state: idle

        - condition: template
          alias: "Dining Room Light is off or low"
          value_template: >
            {% set brightness = state_attr('light.dining_room_light_rgb', 'brightness') | int(none) %}
            {% set brightness_pct = state_attr('switch.adaptive_lighting_rgb_lights', 'brightness_pct') | int(none) %}
            {{ brightness < brightness_pct * 2.55 if brightness != none and brightness_pct != none else true }}
      then:
        - action: script.turn_light_on
          data:
            entity_id: light.dining_room_light_rgb
            brightness: 50
            transition: 3
          continue_on_error: true

    # delay before night mode, last chance to turn bedtime delay on
    - wait_template: "{{ is_state('input_boolean.bedtime_delayed', 'on') }}"
      timeout:
        minutes: "{{ night_delay }}"

    - condition: state
      entity_id: input_boolean.bedtime_delayed
      state: "off"

    - action: script.turn_media_player_off
      data:
        ignore_players:
          - media_player.living_room_tv
          - media_player.bedroom_tv
      continue_on_error: true

    - action: script.turn_on
      target:
        entity_id: script.tts_play
      data:
        variables:
          message: "Good night!"
          media_player: media_player.inside_speakers
          volume: 20
          quiet_play: true
          save_message: false
      continue_on_error: true

    - delay: 15 # let tts play

    - action: input_select.select_option
      target:
        entity_id: input_select.occupancy_mode
      data:
        option: Night
