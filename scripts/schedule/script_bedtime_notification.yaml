###############################################################################
## Bedtime Notification
###############################################################################
bedtime_notification:
  alias: 'Bedtime Notification'
  description: 'Send bedtime notification.'
  icon: mdi:bed
  variables:
    today_bedtime: "{{ state_attr('sensor.bedtime_today','delayed_bedtime') }}"
    delayed_bedtime: >
      {{ today_bedtime if now() <= today_bedtime|as_datetime
          else state_attr('timer.bedtime_delay','finishes_at')
          if not is_state('timer.bedtime_delay','idle') else now() }}
    bedtime_delay: "{{ states('input_number.bedtime_warning_delay') if now().replace(second=0) <= today_bedtime|as_datetime else 0 }}"
    night_mode: >
      {% if today_bedtime != none %}
        {% set bed = now() if now().replace(second=0) >= today_bedtime|as_datetime else today_bedtime|as_datetime %}
        {{ bed + timedelta(minutes=bedtime_delay|int + states('input_number.night_mode_delay')|int) }}
      {% endif %}
  sequence:
    - condition: state
      entity_id:
        - binary_sensor.owner_home
        - input_boolean.schedule_alerts
      state: 'on'

    - service: "notify.{{ states('sensor.notify_service_home') }}"
      data:
        title: "{{ 'Bedtime Delayed' if is_state('input_boolean.bedtime_delayed','on') else 'Time For Bed!' }}"
        message: >
          {% set time = states('sensor.time') %}
          {% set next_alarm = state_attr('sensor.alarm_clock_next_alarm','12hour') %}
          {% set waketime = state_attr('sensor.next_waketime','12hour') %}
          {% set src = state_attr('sensor.alarm_clock_next_alarm','source') %}
          Wake Time: {{ waketime }}
          {% if waketime == next_alarm -%}
            <br/>Alarm Source: {{ state_attr('sensor.alarm_clock_next_alarm','source_name') }}
            {% if src in ['auto','manual','nap'] %}
              <br/>Alarm Player:
              {% if src == 'auto' %} {{ states('input_select.alarm_clock_media_player_auto') }}
              {% elif src == 'manual' %} {{ states('input_select.alarm_clock_media_player_manual') }}
              {% elif src == 'nap' %} {{ states('input_select.alarm_clock_media_player_nap') }}
              {% else %} {{ src|replace('_',' ')|title -}}
              {% endif %}
            {% endif %}
          {% else %}<br/>Alarm Clock: None
          {% endif %}
          <br/>Bedtime: {{ state_attr('sensor.bedtime_today','12hour') -}}
          <br/>Bedtime {{ 'Delayed:' if is_state('input_boolean.bedtime_delayed','on')
            else 'Delay:' }} {{ states('input_number.bedtime_delay')|int }} minutes
        data:
          tag: bedtime_alert
          group: General
          channel: General
          importance: max
          ttl: 0
          priority: high
          persistent: "{{ true if is_state('binary_sensor.bedtime_active','on') else false }}"
          sticky: "{{ true if is_state('binary_sensor.bedtime_active','on') else false }}"
          timeout: "{{ iif(now() < today_bedtime|as_datetime or is_state('input_select.occupancy_mode','Night'),300,0) }}"
          chronometer: true #VERIFY
          when: '{{ night_mode|as_timestamp(now().timestamp())|int }}'
          notification_icon: '{{ states.script.bedtime_notification.attributes.icon }}'
          icon_url: !secret BEDTIME_ICON
          ledColor: !secret NOTIFY_COLOR
          color: !secret NOTIFY_COLOR
          vibrationPattern: !secret GENERAL_VIBRATION
          clickAction: /lovelace-mobile/presence
          actions:
            - title: 'Stay Up'
              action: bedtime_delayed

            - title: "{{ 'To Bed' if now() > today_bedtime|as_datetime else 'Delay Off' }}"
              action: bedtime_delay_off

            - title: 'Alarm Off'
              action: next_alarm_off
