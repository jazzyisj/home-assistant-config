###############################################################################
## Turn Media Player Off
###############################################################################
turn_media_player_off:
  alias: "Turn Media Player Off"
  description: "Stop/turn off media players."
  mode: parallel
  fields:
    entity_id:
      description: "List of media players to turn off"
      example: "media_player.dining_room_hub"
    ignore_players:
      description: "List of media players to ignore"
      example: "['media_player.bedroom_tv','media_player.office_tv']"
    reset_volume:
      description: "Reset player volumes to default"
      example: "true"
    mass:
      description: "MASS players only"
      example: "true"
  variables:
    media_players: >
      {{ expand(entity_id
          |default(state_attr(iif(mass|default(false)
            ,'binary_sensor.mass_media','group.single_media_players'),'entity_id')))
          |selectattr('state','in',['playing','paused','buffering','on','idle'])
          |rejectattr('entity_id','in',ignore_players|default([]))
          |map(attribute='entity_id')|list }}
  sequence:
    - if: "{{ media_players|count > 0 }}"
      then:
        - variables:
            players_off: > #BITWISE
              {% set players = namespace(entity_id=[]) %}
              {% for item in expand(media_players) %}
                {% if item.attributes.supported_features|bitwise_and(256) %}
                  {% set players.entity_id = players.entity_id + [item.entity_id] %}
                {% endif %}
              {% endfor %}
              {{ players.entity_id }}

        - if: "{{ players_off|count > 0 }}"
          then:
            - service: media_player.turn_off
              target:
                entity_id: "{{ players_off }}"

            - wait_template: >
                {{ expand(players_off)|selectattr('state','in',['playing','paused','buffering','on','idle'])
                    |map(attribute='entity_id')|list|count == 0 }}
              timeout: # let players turn off
                seconds: 2

            - variables:
                players_stop: > #BITWISE
                  {% set players = namespace(entity_id=[]) %}
                  {% for item in expand(media_players)|selectattr('state','in',['playing','paused','buffering','on']) %}
                    {% if item.attributes.supported_features|bitwise_and(4096) %}
                      {% set players.entity_id = players.entity_id + [item.entity_id] %}
                    {% endif %}
                  {% endfor %}
                  {{ players.entity_id }}

            # stop players (req for vlc, browser players)
            - if: "{{ players_stop|count > 0 }}"
              then:
                - service: media_player.media_stop
                  target:
                    entity_id: "{{ players_stop }}"

        # prevent volume jump, wait until all players are off
        - wait_template: >
            {{ expand(media_players)|selectattr('state','in',['playing','paused','buffering','on'])
                |map(attribute='entity_id')|list|count == 0 }}
          timeout: 10

        - if: "{{ reset_volume|default(true) }}"
          then:
            - service: script.media_player_set_volumes
              data:
                entity_id: "{{ media_players }}"
                source: reset
