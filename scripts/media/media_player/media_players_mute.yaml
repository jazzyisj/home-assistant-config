###################################################################################################
## Mute Media Players
###################################################################################################
media_players_mute:
  alias: "Media Players Mute"
  description: "Mute media players."
  icon: mdi:volume-mute
  mode: restart
  fields:
    entity_id:
      description: "Media players to mute."
      example: "media_player.dining_room_hub"
    mute:
      description: "Mute true/false."
      example: "true"
  variables:
    mute: "{{ mute | default(true) }}"
    media_players: > #BITWISE
      {% from 'media.jinja' import single_players %}
      {% set entities = single_players(entity_id) | from_json %}
      {% set mute_players = namespace(entity_id=[]) %}
      {% set off_tvs = expand('group.tv_media_players')
          | selectattr('state', 'in', ['off', 'standby'])
          | map(attribute='entity_id') | list %}
      {% for item in expand(entities) | rejectattr('entity_id', 'in', off_tvs) %}
        {% if item.attributes.supported_features | bitwise_and(8) %}
          {% set mute_players.entity_id = mute_players.entity_id + [item.entity_id] %}
        {% endif %}
      {% endfor %}
      {{ mute_players.entity_id }}
    dnd_switches: >
      {{ states.switch | selectattr('entity_id', 'in', integration_entities('google_home'))
          | selectattr('entity_id', 'contains', '_do_not_disturb')
          | map(attribute='entity_id') | list }}
  sequence:
    - if: "{{ media_players | count > 0 }}"
      then:
        - action: media_player.volume_mute
          target:
            entity_id: "{{ media_players }}"
          data:
            is_volume_muted: "{{ mute }}"

    - if: "{{ mute and media_players | count > 0 }}"
      then:
        - action: timer.start
          target:
            entity_id: timer.timed_mute_duration
          data:
            duration:
              minutes: >
                {% set min = states('input_number.timed_mute_duration') | int %}
                {{ min if min > 0 else 480 }}
      else:
        - action: timer.cancel
          target:
            entity_id: timer.timed_mute_duration

        # reset timer duration value - must be reset for mute on
        - action: input_number.set_value
          target:
            entity_id: input_number.timed_mute_duration
          data:
            value: 0 # this is default mute duration time - 0 == inf

    - if: "{{ dnd_switches | count > 0 }}"
      then:
        - action: "{{ 'switch.turn_' ~ iif(mute, 'on', 'off') }}"
          target:
            entity_id: "{{ dnd_switches }}"

    - action: browser_mod.notification
      data:
        duration: 10000
        message: "Media mute has been turned {{ iif(mute, 'on', 'off') }}."
