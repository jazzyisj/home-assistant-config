###############################################################################
## Turn Media Player On
###############################################################################
turn_media_player_on:
  alias: "Turn Media Player On"
  description: "Turn on media players, avoid google bloop."
  mode: queued
  fields:
    entity_id:
      description: "List of media players to turn on"
      example: "media_player.dining_room_hub"
    ignore_players:
      description: "List of media players to ignore"
      example: "['media_player.bedroom_tv', 'media_player.office_tv']"
  variables:
    media_players: >
      {% set entities = entity_id | default(state_attr('group.single_media_players', 'entity_id')) %}
      {% if entities is iterable and (entities is string and entities is not mapping) %}
        {% if is_state_attr(entity_id, 'type', 'group') %}
          {% set entities = state_attr('sensor.' ~ entity_id.split('.')[1], 'entity_id') %}
        {% else %}
          {% set entities = [entities] %}
        {% endif %}
      {% endif %}
      {{ entities }}
    group_players: >
      {% set groups = namespace(entity_id=[]) %}
      {% for player in media_players %}
        {% if is_state_attr(player, 'type', 'group') %}
          {% set groups.entity_id = groups.entity_id
            + state_attr('sensor.' ~ states[player].object_id, 'entity_id') %}
        {% endif %}
      {% endfor %}
      {{ groups.entity_id }}
    all_players: > #TV can't set volume on LG tvs when off
      {{ (expand(media_players) + expand(group_players))
          | rejectattr('attributes.device_class', 'eq', 'tv')
          | rejectattr('entity_id', 'in', ignore_players | default([]))
          | map(attribute='entity_id') | unique | list }}
  sequence:
    - if: "{{ all_players | count > 0 }}"
      then:
        - action: media_player.volume_set
          target:
            entity_id: "{{ all_players }}"
          data:
            volume_level: 0
          continue_on_error: true

        - delay: 1 # allow volumes to set

        #ISSUE all_players - script stalls if group players are included in media_player.turn_on
        - variables:
            players_on: > #BITWISE
              {% set players = namespace(entity_id=[]) %}
              {% for item in expand(media_players)
                  | rejectattr('entity_id', 'search', '_internal|_external')
                  | rejectattr('state', 'ne', 'off') %}
                {% if item.attributes.supported_features | bitwise_and(128) %}
                  {% set players.entity_id = players.entity_id + [item.entity_id] %}
                {% endif %}
              {% endfor %}
              {{ players.entity_id }}

        - if: "{{ players_on | count > 0 }}"
          then:
            - action: media_player.turn_on
              target:
                entity_id: "{{ players_on }}"
              continue_on_error: true

        # keep script on until all players are on, volumes are 0
        - wait_template: "{{ expand(media_players) | selectattr('state', 'eq', 'off') | list | count == 0 }}"
          timeout: 5

        - wait_template: "{{ expand(media_players) | selectattr('attributes.volume_level', 'ne', 0) | list | count == 0 }}"
          timeout: 5
