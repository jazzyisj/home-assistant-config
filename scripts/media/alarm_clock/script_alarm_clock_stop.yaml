###############################################################################
## Alarm Clock Stop
###############################################################################
alarm_clock_stop:
  alias: "Alarm Clock Stop"
  description: "Turn off alarm clock."
  icon: mdi:alarm-note-off
  max_exceeded: silent
  fields:
    alarm_type:
      description: "Alam clock type."
      example: "nap"
  variables:
    alarm_type: "{{ alarm_type|default(state_attr('binary_sensor.alarm_clock','alarm_type')) }}"
    alarm_types: "{{ ['auto','manual','nap'] }}"
    alarm_player: "{{ states('sensor.alarm_clock_media_player') }}"
    media_players: "{{ state_attr('sensor.alarm_clock_media_player','entity_id') }}"
  sequence:
    - if:
        - condition: template
          alias: "Alarm type is valid"
          value_template: "{{ alarm_type in alarm_types }}"
      then:
        - if:
            - condition: template
              alias: "Alarm type is not active alarm"
              value_template: "{{ alarm_type != state_attr('binary_sensor.alarm_clock','alarm_type') }}"
          then:
            - service: switch.turn_off
              alias: "Turn off not active alarm clock switch"
              target:
                entity_id: "switch.alarm_clock_{{ alarm_type }}"
          else:
            - if: "{{ alarm_type == 'nap' }}"
              then:
                - service: timer.cancel
                  target:
                    entity_id: timer.alarm_clock_nap

                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.alarm_clock_nap

            - service: script.media_players_off
              data:
                entity_id: "{{ media_players }}"
            #VERIFY Alarm Clock Stop: If at step 1: If at step 1: Error executing script. Error for call_service at pos 3: Template rendered invalid entity IDs: unknown
            # remove alarm clock playlist from queue
            - service: mass.queue_command
              target:
                entity_id: "{{ alarm_player }}"
              data:
                command: clear

            - service: timer.cancel
              target:
                entity_id: timer.alarm_clock_snooze

            - service: input_boolean.turn_off
              target:
                entity_id: input_boolean.alarm_clock_test_play

            - service: switch.turn_off
              target:
                entity_id: switch.alarm_clock_snooze

            - service: input_text.set_value
              target:
                entity_id: input_text.active_alarm_clock_media_player
              data:
                value: "off"

            - service: script.media_player_set_volumes
              data:
                source: alarm_clock_off

            # turn off at end so binary_sensor.alarm_clock doesn't turn off and resume media before we're done
            - service: switch.turn_off
              target:
                entity_id: "switch.alarm_clock_{{ alarm_type }}"

            - if: "{{ alarm_type == 'manual' and is_state('input_boolean.alarm_clock_manual_repeat','off') }}"
              then:
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.alarm_clock_manual
      else:
        - service: system_log.write
          data:
            logger: "{{ this.entity_id }}"
            level: warning
            message: "No active alarm or invalid alarm type."
