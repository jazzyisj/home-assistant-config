###############################################################################
## Arm Alarm
###############################################################################
arm_alarm:
  alias: "Arm Alarm"
  description: "Arm house alarm."
  icon: mdi:alarm-bell
  mode: parallel
  fields:
    zone:
      description: "Alarm zone."
      example: "master"
    mode:
      description: "Alarm arm mode."
      example: "away"
    code:
      description: "Alarm arm code."
      example: "1111"
    override:
      description: "Bypass open sensors."
      example: "true"
    skip_delay:
      description: "Skip arming delay."
      example: "true"
  variables:
    zone: "{{ zone|default('master') }}"
    mode: "{{ mode|default('away') }}"
    hass_code: !secret ALARMO_HA
    code: "{{ code|default(hass_code) }}"
    override: "{{ override|default(false) }}"
    skip_delay: "{{ skip_delay|default(false) }}"
    alarm_mode: "armed_{{ mode }}"
  sequence:
    - condition: state
      alias: "Alarm is enabled"
      entity_id: input_boolean.alarm_enabled
      state: "on"

    - condition: template
      alias: "Alarm not already armed"
      value_template: "{{ not is_state('alarm_control_panel.' ~ zone,alarm_mode) }}"

    - if: "{{ override }}"
      then:
        - service: alarmo.arm # does not support target!
          data:
            entity_id: "alarm_control_panel.{{ zone }}"
            mode: "{{ mode }}"
            code: "{{ code }}"
            force: true
            skip_delay: true
      else:
        - if: "{{ zone in ['garage','master'] }}"
          then:
            - if:
                - condition: state
                  entity_id: binary_sensor.garage_occupied
                  state: "on"
              then:
                - if: "{{ zone == 'master' }}"
                  then:
                    # arm house right away
                    - service: alarmo.arm
                      data:
                        entity_id: alarm_control_panel.house
                        mode: "{{ mode }}"
                        code: "{{ code }}"
                        skip_delay: "{{ skip_delay }}"

                # arm garage if unoccupied or house not disarmed within 5 minutes, else notify
                - wait_template: >
                    {{ is_state('binary_sensor.garage_occupied','off')
                        or is_state('alarm_control_panel.garage',alarm_mode)
                        or is_state('alarm_control_panel.house','disarmed') }}
                  timeout:
                    minutes: 5

                - if: >
                    {{ is_state('binary_sensor.garage_occupied','off')
                        and not is_state('alarm_control_panel.garage',alarm_mode)
                        and not is_state('alarm_control_panel.house','disarmed') }}
                  then:
                    - service: alarmo.arm
                      data:
                        entity_id: alarm_control_panel.garage
                        mode: "{{ mode }}"
                        code: "{{ code }}"
                        skip_delay: "{{ skip_delay }}"
                  else:
                    # create and store security camera snapshot filenames
                    - service: input_text.set_value
                      target:
                        entity_id: "input_text.{{ 'cam1_snapshot1' }}"
                      data:
                        value: "/alarm_snapshots/cam1_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg"
                      continue_on_error: true

                    # create camera snapshots
                    - service: camera.snapshot
                      target:
                        entity_id: camera.garage_inside_frigate
                      data:
                        filename: "/config/www{{ states('input_text.cam1_snapshot1') }}"
                      continue_on_error: true

                    - service: notify.jason
                      data:
                        title: "Garage Not Armed"
                        message: "The garage alarm could not be armed because the garage is still occupied."
                        data:
                          tag: garage_alarm_occupied
                          group: Alarm
                          channel: Alert
                          importance: max
                          ttl: 0
                          priority: high
                          visibility: public
                          image: "/local{{ states('input_text.cam1_snapshot1') }}"
                          notification_icon: mdi:shield-alert
                          icon_url: !secret ALARM_ICON
                          ledColor: !secret SEVERE_COLOR
                          color: !secret SEVERE_COLOR
                          vibrationPattern: !secret ALERT_VIBRATION
                          clickAction: /ui-mobile/alarm
                          actions:
                            - title: "Arm Garage"
                              action: arm_garage_alarm

                            - title: "Alarm"
                              action: URI
                              uri: !secret ALARM_URI

                            - title: "Cameras"
                              action: URI
                              uri: !secret LOREX_URI

                    # arm garage if master not disarmed
                    - wait_template: >
                        {{ is_state('binary_sensor.garage_occupied','off')
                            or is_state('alarm_control_panel.garage',alarm_mode)
                            or is_state('alarm_control_panel.house','disarmed') }}
                      timeout:
                        minutes: 15

                    - condition: template
                      value_template: >
                        {{ not is_state('alarm_control_panel.garage',alarm_mode)
                            and not is_state('alarm_control_panel.house','disarmed') }}

                    - service: alarmo.arm
                      data:
                        entity_id: alarm_control_panel.garage
                        mode: "{{ mode }}"
                        code: "{{ code }}"
                        skip_delay: "{{ skip_delay }}"
                        force: true

                    - wait_template: "{{ is_state('alarm_control_panel.garage',alarm_mode) }}"
                      timeout: 120

                    # create and store security camera snapshot filenames
                    - service: input_text.set_value
                      target:
                        entity_id: "input_text.{{ 'cam1_snapshot1' }}"
                      data:
                        value: "/alarm_snapshots/cam1_{{ now ().year }}_{{ now ().month }}_{{ now ().day }}_{{ now ().hour }}_{{ now ().minute }}.jpg"
                      continue_on_error: true

                    # create camera snapshots
                    - service: camera.snapshot
                      target:
                        entity_id: camera.garage_inside_frigate
                      data:
                        filename: "/config/www{{ states('input_text.cam1_snapshot1') }}"
                      continue_on_error: true

                    - service: notify.jason
                      data:
                        title: "Garage Alarm Armed"
                        message: >
                          The garage occupied sensor is {{ states('binary_sensor.garage_occupied') }} and the garage is {{ states('alarm_control_panel.garage')|replace('_',' ') }}.
                        data:
                          tag: garage_alarm_armed
                          group: Alarm
                          channel: Alert
                          importance: max
                          ttl: 0
                          priority: high
                          visibility: public
                          image: "/local{{ states('input_text.cam1_snapshot1') }}"
                          notification_icon: mdi:shield-alert
                          icon_url: !secret ALARM_ICON
                          ledColor: !secret SEVERE_COLOR
                          color: !secret SEVERE_COLOR
                          vibrationPattern: !secret ALERT_VIBRATION
                          clickAction: /ui-mobile/alarm
                          actions:
                            - title: "Arm Garage"
                              action: arm_garage_alarm

                            - title: "Alarm"
                              action: URI
                              uri: !secret ALARM_URI

                            - title: "Cameras"
                              action: URI
                              uri: !secret LOREX_URI
              else:
                - service: alarmo.arm
                  data:
                    entity_id: "alarm_control_panel.{{ zone }}"
                    mode: "{{ mode }}"
                    code: "{{ code }}"
                    skip_delay: "{{ skip_delay }}"
          else:
            - service: alarmo.arm
              data:
                entity_id: "alarm_control_panel.{{ zone }}"
                mode: "{{ mode }}"
                code: "{{ code }}"
                skip_delay: "{{ skip_delay }}"
