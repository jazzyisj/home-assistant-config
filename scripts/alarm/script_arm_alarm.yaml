###############################################################################
## Arm Alarm
###############################################################################
arm_alarm:
  alias: 'Arm Alarm'
  description: 'Arm house alarm.'
  icon: mdi:alarm-bell
  fields:
    zone:
      description: 'Alarm zone.'
      example: 'master'
    mode:
      description: 'Alarm arm mode.'
      example: 'away'
    code:
      description: 'Alarm arm code.'
      example: '1111'
    override:
      description: 'Bypass open sensors.'
      example: 'true'
  variables:
    zone: "{{ zone|default('master') }}"
    mode: "{{ mode|default('away') }}"
    hass_code: !secret ALARMO_HA
    code: '{{ code|default(hass_code) }}'
    alarm_mode: 'armed_{{ mode }}'
  sequence:
    - condition: template
      alias: 'Alarm not already armed'
      value_template: "{{ not is_state('alarm_control_panel.' ~ zone,alarm_mode) }}"

    - choose:
        - conditions:
            - condition: not
              alias: 'Alarm zone is not disarmed'
              conditions: "{{ not is_state('alarm_control_panel.' ~ zone,'disarmed') }}"
          sequence:
            - service: script.disarm_alarm
              data:
                zone: '{{ zone }}'
                person: temp

    - choose:
        - conditions: '{{ override|default(false) }}'
          sequence:
            - service: alarmo.arm #NOTE does not support target!
              data:
                entity_id: alarm_control_panel.master
                mode: '{{ mode }}'
                code: '{{ code }}'
                force: true
                skip_delay: true

      default:
        - wait_template: "{{ is_state('binary_sensor.garage_door_lock','off') }}"
          timeout:
            minutes: 1

        - service: alarmo.arm
          data:
            entity_id: >
              {% if mode == 'home' and is_state('binary_sensor.garage_occupied','on') %} alarm_control_panel.house
              {% else %} alarm_control_panel.master
              {% endif %}
            mode: '{{ mode }}'
            code: '{{ code }}'
