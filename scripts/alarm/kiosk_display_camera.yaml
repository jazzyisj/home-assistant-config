kiosk_display_camera:
  alias: "Kisok Display Camera"
  mode: restart
  fields:
    camera:
      description: "Camera slug"
      example: "front_door"
  variables:
    camera_title: "{{ camera | replace('_', ' ') | title }}"
  sequence:
    - if: "{{ is_state('binary_sensor.fully_kiosk_connected', 'off') }}"
      then:
        - stop: "Kiosk not connected."

    - if: "{{ is_state('switch.kiosk_tablet_screen', 'off') }}"
      then:
        # turn kiosk screen on, turn off screensaver
        - action: switch.turn_on
          target:
            entity_id: switch.kiosk_tablet_screen

    - if: "{{ is_state('switch.kiosk_tablet_screensaver', 'on') }}"
      then:
        - action: switch.turn_off
          target:
            entity_id: switch.kiosk_tablet_screensaver

    - if: "{{ states('sensor.kiosk_tablet_foreground_app') != 'de.ozerov.fully' }}"
      then:
        - action: button.press
          target:
            entity_id: button.kiosk_tablet_bring_to_foreground

    - action: browser_mod.navigate
      data:
        browser_id:
          - !secret KIOSK_BROWSER
        path: "{{ camera | replace('_', '-') }}-camera"

    - delay: 90

    - wait_template: "{{ is_state('sensor.' ~ camera ~ '_all_count', 0) }}"
      timeout: 120

    - action: browser_mod.navigate
      data:
        browser_id:
          - !secret KIOSK_BROWSER
        path: /ui-kiosk/home