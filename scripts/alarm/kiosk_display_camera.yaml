kiosk_display_camera:
  alias: "Kisok Display Camera"
  mode: restart
  fields:
    camera:
      description: "Camera slug"
      example: "front_door"
  variables:
    camera_title: "{{ camera | replace('_', ' ') | title }}"
  sequence:
    - if: "{{ is_state('binary_sensor.fully_kiosk_connected', 'off') }}"
      then:
        - stop: "Kiosk not connected."

    - if: "{{ is_state('switch.kiosk_tablet_screen', 'off') }}"
      then:
        # turn kiosk screen on, turn off screensaver
        - action: switch.turn_on
          target:
            entity_id: switch.kiosk_tablet_screen

    - if: "{{ is_state('switch.kiosk_tablet_screensaver', 'on') }}"
      then:
        - action: switch.turn_off
          target:
            entity_id: switch.kiosk_tablet_screensaver

    - if: "{{ states('sensor.kiosk_tablet_foreground_app') != 'de.ozerov.fully' }}"
      then:
        - action: button.press
          target:
            entity_id: button.kiosk_tablet_bring_to_foreground

    - service: browser_mod.popup
      data:
        size: fullscreen
        timeout: 120000
        browser_id:
          - kiosk
        title: "{{ camera_title }} Camera"
        content:
          type: custom:frigate-card
          frigate_url: /ccab4aaf_frigate-fa/dashboard
          cameras:
            - camera_entity: "camera.{{ camera }}"
              title: "{{ camera_title }}"
        card_mod:
          style:
            ha-dialog$: >
              {% from 'style.jinja' import popup_style %}
              {{ popup_style() }}
