#######################################################################################################################
## Someone Arrives Home
#######################################################################################################################
scene_someone_arrives_home:
  alias: "Someone Arrives Home"
  description: "Turn on lights, set occupancy mode to home/guest, play morning radio & weather."
  fields:
    trigger_entity:
      description: "Entity id of entity that triggered script."
      example: binary_sensor.jason_home
    first_home:
      description: "Person arriving is first person home (nobody else home)."
      example: binary_sensor.jason_home
  icon: mdi:white-balance-sunny
  mode: parallel
  sequence:
    # set previous occupancy mode variable
    - service: variable.set_variable
      data:
        variable: previous_occupancy_mode
        value: "{{ states('input_select.occupancy_mode') }}"

    # clear last_person_to_arrive variable so last_changed attribute gets updated if even if set value doesn't change
    - service: variable.set_variable
      data:
        variable: last_person_to_arrive
        value: cleared

    - service: variable.set_variable
      data:
        variable: last_person_to_arrive
        value: >
          {% if trigger_entity == 'binary_sensor.jason_home' %} Jason
          {% elif trigger_entity == 'binary_sensor.sheri_home' %} Sheri
          {% elif trigger_entity == 'input_boolean.guest_home' %} Guest
          {% endif %}

    - choose:
        - conditions:
            - condition: template
              value_template: "{{ trigger_entity != 'input_boolean.guest_home' }}"

          sequence:
            # update traffic sensors to ensure time to home is zeroed out
            # required because traffic updates don't run when home
            - service: script.update_traffic_sensors

    # not in conditions so variables are set
    - condition: state
      entity_id: input_boolean.presence_automation
      state: 'on'

    - choose:
        - conditions:
            - condition: state
              entity_id: variable.alarm_triggered
              state: 'true'

          sequence:
            - condition: state
              entity_id: alarm_control_panel.house
              state: disarmed

            # start alarm triggered timer if it's not already running
            - choose:
                - conditions:
                    - condition: state
                      entity_id: timer.alarm_triggered_reset
                      state: idle

                  sequence:
                    - service: timer.start
                      entity_id: timer.alarm_triggered_reset

    # if already in selected mode, state won't change, occupancy automations won't trigger
    - service: input_select.select_option
      data:
        entity_id: input_select.occupancy_mode
        option: >
          {% if is_state('input_select.occupancy_mode','Night') %} Night
          {% elif is_state('binary_sensor.owner_home','on') %} Home
          {% else %} Guest
          {% endif %}

    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.occupancy_announcements
              state: 'on'

          sequence:
            - service: script.tts_announcement
              data:
                play_message: >
                  {% if trigger_entity == 'binary_sensor.jason_home' %} Jason is home.
                  {% elif trigger_entity == 'binary_sensor.sheri_home' %} Sheri is home.
                  {% else %} A guest has arrived.
                  {% endif %}

            #IDEA change this delay to wait template for door open/ motion sensor, back ,side, and front doors
            # wait until person is inside house, then welcome them home, play saved messages
            - delay:
                minutes: 5

            - service: script.tts_announcement
              data:
                play_message: >
                  Welcome
                    {% if trigger_entity == 'binary_sensor.jason_home' %} home Jason.
                    {% elif trigger_entity == 'binary_sensor.sheri_home' %} home Sheri.
                    {% else %} to our home.
                    {% endif %}

      default:
        #IDEA change this delay to wait template for door open/ motion sensor, back ,side, and front doors
        # wait until person is inside house, then welcome them home, play saved messages
        - delay:
            minutes: 5

    # before owner check so msgs play for guest
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ first_home }}"

            - condition: numeric_state
              entity_id: variable.tts_saved_messages
              above: 0

          sequence:
            - service: script.tts_play_saved_messages

    - wait_template: "{{ is_state('script.tts_play_saved_messages','off') }}"
      timeout:
        minutes: 5
      continue_on_timeout: true # radio might shut back off

    - condition: template
      value_template: "{{ first_home }}"

    - condition: template
      value_template: >
        {{ (trigger_entity == 'binary_sensor.jason_home' and is_state('input_boolean.radio_enabled_jason','on'))
          or (trigger_entity == 'binary_sensor.sheri_home' and is_state('input_boolean.radio_enabled_sheri','on')) }}

    - condition: state
      entity_id:
        - binary_sensor.quiet_hours
        - input_boolean.radio_on
      state: 'off'

    - service: script.turn_on
      data:
        entity_id: script.radio_play
        variables:
          preset: "{{ 'Jason' if trigger_entity == 'binary_sensor.jason_home' else 'Sheri' }}"