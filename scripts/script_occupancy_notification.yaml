#######################################################################################################################
## Occupancy Notification
#######################################################################################################################
occupancy_notification:
  alias: Occupancy Notification
  description: Send occupancy mode notification, tts announcement.
  icon: mdi:home
  mode: queued
  max: 5
  sequence:
    # minimum delay to ensure correct alarm status if armed direct (no pending state)
    - delay:
        seconds: 15

    # wait for alarm to finish pending so notification shows new alarmed state
    - wait_template: "{{ not is_state('alarm_control_panel.house','pending') }}"
      timeout:
        seconds: >
          {{ 0 if is_state('alarm_control_panel.house','disarmed')
                else (states.alarm_control_panel.house.attributes['states'][state_attr('alarm_control_panel.house','arm_state')]['pending_time'] )|int }}
      continue_on_timeout: true

    - service: script.turn_on
      data:
        entity_id: script.tts_play
        variables:
          play_message: |
            {%- set occ = is_state('input_boolean.occupancy_announcements','on') and states('input_select.previous_occupancy_mode') != states('input_select.occupancy_mode') -%}
            {%- set alm = states('input_select.previous_alarm_state') != states('alarm_control_panel.house') -%}

            {{- 'The house is in ' ~ states('input_select.occupancy_mode') ~ ' mode' if occ -}}
            {{- ', and ' if occ and alm else '.' if occ }}
            {{- 'The house alarm is ' ~ states('sensor.alarm_status') ~ '.' if alm }}
            {{ 'Personalized occupant automations are disabled in Guest mode.' if occ and is_state('input_select.occupancy_mode','Guest') }}
          ignore_away: true
          min_volume: "{{ 20 if states('sensor.tts_media_player') in state_attr('group.google_speaker_groups','entity_id') else 30 }}"

    - condition: state
      entity_id: input_boolean.occupancy_notifications
      state: 'on'

    # wait for alarm to finish pending so notification shows new alarmed state
    - wait_template: "{{ is_state('alarm_control_panel.house','disarmed') }}"
      timeout:
        seconds: 600
      continue_on_timeout: true

    - choose:
        - conditions:
            - condition: state
              entity_id: alarm_control_panel.house
              state: disarmed

            - condition: state
              entity_id: input_boolean.alarm_triggered
              state: 'on'

          sequence:
            - delay:
                seconds: 2 # allow disarmed input text value to populate

            - service: notify.mobile
              data:
                title: House Alarm Disarmed
                message: >
                  Last Alert: {{ states('input_text.current_alarm') }}
                  <br/>Disarmed by: {{ states('input_text.alarm_disarmed_by') }}
                  <br/>{% if is_state('binary_sensor.jason_home','on') %} Jason is home. {% endif %}
                  <br/>{% if is_state('binary_sensor.sheri_home','on') %} Sheri is home. {% endif %}
                  <br/>{% if is_state('input_boolean.guest_home','on') %} A guest is home. {% endif %}
                data:
                  subject: House alarm was triggered.
                  tag: alarm_triggered_reset
                  group: Alarm
                  channel: General
                  importance: high
                  ledColor: !secret NOTIFY_COLOR
                  clickAction: /lovelace/alarm
                  color: !secret CRITICAL_COLOR
                  icon_url: !secret ALERT_ICON
                  actions:
                    - title: Cameras
                      action: URI
                      uri: app://com.flir.consumer.flir.lorexcloud

    # delay to allow occupant to disarm alarm before general notification sent
    - delay:
        minutes: 10

    - service: notify.mobile_app_jphone
      data:
        title: Home Occupancy Mode
        message: "Mode: {{ states('input_select.occupancy_mode') }} | Alarm: {{ states('sensor.alarm_status') }}."
        data:
          tag: occupancy_notification
          group: General
          channel: General
          importance: normal
          timeout: 3600
          persistent: false
          sticky: false
          clickAction: /lovelace/presence
          color: !secret NOTIFY_COLOR
          icon_url: !secret OCCUPANCY_ICON_TEMPLATE
          actions:
            - title: Turn Alerts Off
              action: turn_off_occupancy_notifications


