###############################################################################
## Alarm LED
###############################################################################
alarm_led:
  alias: "Alarm LED"
  description: "Set led notification."
  mode: queued
  max: 20
  fields:
    reset:
      description: "Reset LED"
      example: "true"
  variables:
    reset: "{{ reset | default(false) }}"
    entities: "{{ state_attr('group.alarm_led', 'entity_id') }}"
    quiet: "{{ is_state('binary_sensor.quiet_time', 'on') }}"
    alert_state: >
      {% if is_state('input_boolean.alarm_enabled', 'off') %} off
      {% elif is_state('input_boolean.alarm_triggered', 'on') %}
        {% if alert_state == 'triggered' %} triggered
        {% else %} was_triggered
        {% endif %}
      {% elif is_state('binary_sensor.alarm_open_sensor_alert', 'on') %} open_sensor
      {% elif is_state('binary_sensor.alarm_bypassed_sensor_alert', 'on') %} bypassed_sensor
      {% elif is_state('alert.door_lock_jammed', 'on') %} lock_jammed
      {% elif is_state('alert.door_lock_failed', 'on') %} lock_failed
      {% else %} {{ states('alarm_control_panel.house') }}
      {% endif %}
    arm_mode: "{{ state_attr('alarm_control_panel.house', 'arm_mode') }}"
    duration: >
      {% if alert_state == 'arming' and arm_mode == 'armed_home' %} 62 {# 2min #}
      {% elif alert_state == 'arming' and arm_mode == 'armed_night' %} 62 {# 2min #}
      {% elif alert_state == 'arming' and arm_mode == 'armed_away' %} 62 {# 2min #}
      {% elif alert_state == 'arming' and arm_mode == 'armed_vacation' %} 62 {# 2min #}
      {% elif alert_state == 'pending' %} 62 {# 2min #}
      {% else %} 255
      {% endif %}
    color: >
      {% if alert_state == 'disconnected' %} 30
      {% elif alert_state == 'triggered' %} 0
      {% elif alert_state == 'open_sensor' %} 30
      {% elif alert_state == 'bypassed_sensor' %} 30
      {% elif alert_state == 'was_triggered' %} 0
      {% elif alert_state == 'lock_jammed' %} 30
      {% elif alert_state == 'lock_failed' %} 30
      {% elif alert_state == 'alarm_sync' %} 20
      {% elif alert_state == 'arming' and arm_mode == 'armed_home' %} 150
      {% elif alert_state == 'arming' and arm_mode == 'armed_night' %} 180
      {% elif alert_state == 'arming' and arm_mode == 'armed_away' %} 230
      {% elif alert_state == 'arming' and arm_mode == 'armed_vacation' %} 230
      {% elif alert_state == 'pending' %} 10
      {% elif alert_state == 'disarmed' %} 90
      {% elif alert_state == 'armed_home' %} 150
      {% elif alert_state == 'armed_night' %} 180
      {% elif alert_state == 'armed_away' %} 230
      {% elif alert_state == 'armed_vacation' %} 210
      {% else %} 170
      {% endif %}
    brightness: >
      {% if alert_state == 'disconnected' %} {{ 2 if quiet else 7 }}
      {% elif alert_state == 'triggered' %} 10
      {% elif alert_state == 'open_sensor' %} 10
      {% elif alert_state == 'bypassed_sensor' %} 10
      {% elif alert_state == 'was_triggered' %} 10
      {% elif alert_state == 'lock_jammed' %} 10
      {% elif alert_state == 'lock_failed' %} 10
      {% elif alert_state == 'alarm_sync' %} {{ 2 if quiet else 4 }}
      {% elif alert_state == 'arming' and arm_mode == 'armed_home' %} {{ 2 if quiet else 7 }}
      {% elif alert_state == 'arming' and arm_mode == 'armed_night' %} {{ 2 if quiet else 7 }}
      {% elif alert_state == 'arming' and arm_mode == 'armed_away' %} {{ 2 if quiet else 7 }}
      {% elif alert_state == 'arming' and arm_mode == 'armed_vacation' %} {{ 2 if quiet else 7 }}
      {% elif alert_state == 'pending' %} 10
      {% elif alert_state == 'disarmed' %} {{ 2 if quiet else 4 }}
      {% elif alert_state == 'armed_home' %} {{ 2 if quiet else 4 }}
      {% elif alert_state == 'armed_night' %} {{ 2 if quiet else 4 }}
      {% elif alert_state == 'armed_away' %} {{ 2 if quiet else 4 }}
      {% elif alert_state == 'armed_vacation' %} {{ 2 if quiet else 4 }}
      {% else %} 3
      {% endif %}
    effect: >
      {% if alert_state == 'disconnected' %} Slow blink
      {% elif alert_state == 'triggered' %} Fast blink
      {% elif alert_state == 'open_sensor' %} Fast blink
      {% elif alert_state == 'bypassed_sensor' %} Fast blink
      {% elif alert_state == 'was_triggered' %} Solid
      {% elif alert_state == 'lock_jammed' %} Pulse
      {% elif alert_state == 'lock_failed' %} Pulse
      {% elif alert_state == 'alarm_sync' %} Pulse
      {% elif alert_state == 'arming' and arm_mode == 'armed_home' %} Chase
      {% elif alert_state == 'arming' and arm_mode == 'armed_home' %} Chase
      {% elif alert_state == 'arming' and arm_mode == 'armed_night' %} Chase
      {% elif alert_state == 'arming' and arm_mode == 'armed_away' %} Chase
      {% elif alert_state == 'arming' and arm_mode == 'armed_vacation' %} Chase
      {% elif alert_state == 'pending' %} Fast blink
      {% elif alert_state == 'disarmed' %} Solid
      {% elif alert_state == 'armed_home' %} Solid
      {% elif alert_state == 'armed_night' %} Solid
      {% elif alert_state == 'armed_away' %} Solid
      {% elif alert_state == 'armed_vacation' %} Solid
      {% else %} Off
      {% endif %}
  sequence:
    - if: "{{ entities == none or entities | count == 0 }}"
      then:
        - action: system_log.write
          data:
            logger: "{{ this.entity_id }}"
            level: warning
            message: "Stop: No valid entities."

        - stop: "No valid entities."

    - if: "{{ alert_state == 'off' and not reset }}"
      then:
        - action: script.turn_on
          target:
            entity_id: script.led_reset
          data:
            variables:
              entities: "{{ entities }}"
      else:
        - action: script.turn_on
          target:
            entity_id: script.inovelli_led_control
          data:
            variables:
              entities: "{{ entities }}"
              duration: "{{ duration }}"
              color: "{{ color }}"
              brightness: "{{ brightness }}"
              effect: "{{ effect }}"
