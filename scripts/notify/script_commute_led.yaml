###############################################################################
## Commute LED
###############################################################################
commute_led:
  alias: "Commute LED"
  description: "Set led notification."
  mode: queued
  fields:
    reset:
      description: "Reset LED"
      example: "true"
  variables:
    reset: "{{ reset|default(false) }}"
    entities: "{{ state_attr('group.weather_led','entity_id') }}"
    quiet: "{{ is_state('binary_sensor.quiet_time','on') }}"
    alert_state: >
      {% if is_state('binary_sensor.late_for_work_jason_alert','on') %} jason_late
      {% elif is_state('binary_sensor.work_commute_jason_alert','on') %} work
      {% elif is_state('binary_sensor.home_commute_jason_alert','on') %} home
      {% else %} off
      {% endif %}
    duration: 255
    color: "{{ iif(alert_state == 'off',170,10) }}"
    brightness: "{{ iif(alert_state == 'off',3,10) }}"
    effect: "{{ iif(alert_state == 'off','off','chase') }}"
  sequence:
    - if:
        - condition: template
          value_template: "{{ entities == none or entities|count == 0 }}"
      then:
        - service: system_log.write
          data:
            logger: "{{ this.entity_id }}"
            level: warning
            message: "No valid entities."

        - stop: "No valid entities."

    - if: "{{ alert_state == 'off' and not reset }}"
      then:
        - service: script.turn_on
          target:
            entity_id: script.led_reset
          data:
            variables:
              entities: "{{ entities }}"
      else:
        - service: script.turn_on
          target:
            entity_id: script.inovelli_led_control
          data:
            variables:
              entities: "{{ entities }}"
              duration: "{{ duration }}"
              color: "{{ color }}"
              brightness: "{{ brightness }}"
              effect: "{{ effect }}"
