###############################################################################
## LED Reset
###############################################################################
led_reset:
  alias: "LED Notification Reset"
  description: "Reset all led notifcations to current values."
  mode: queued
  fields:
    entities:
      description: "List of one or more LED notification entities to reset."
      example: "light.front_porch_light"
  sequence:
    - variables:
        entities: > # convert to list
          {% set entities = entities|default(state_attr('group.notify_led','entity_id')) %}
          {% set entities = expand(entities)|map(attribute='entity_id')|list %}
          {{ entities }}

    - condition: template
      value_template: "{{ entities|count > 0 }}"

    - repeat:
        count: "{{ entities|count }}"
        sequence:
          - variables:
              entity: "{{ entities[repeat.index-1] }}"
              alert_type: > # priority order
                {% if is_state('binary_sensor.alarm_clock_led_alert','on') and is_state_attr(entity,'alarm_clock_led',true)%} alarm_clock
                {% elif is_state('binary_sensor.media_led_alert','on') and is_state_attr(entity,'media_led',true) %} media
                {% elif is_state('binary_sensor.garage_led_alert','on') and is_state_attr(entity,'garage_led',true) %} garage
                {% elif is_state('input_boolean.shower_scene','on') and is_state_attr(entity,'shower_led',true) %} shower
                {% elif is_state('binary_sensor.reminder_led_alert','on') and is_state_attr(entity,'reminder_led',true) %} reminder
                {% elif is_state('binary_sensor.scene_led_alert','on') and is_state_attr(entity,'scene_led',true) %} scene
                {% elif is_state('binary_sensor.presence_led_alert','on') and is_state_attr(entity,'presence_led',true) %} presence
                {% elif is_state('binary_sensor.weather_led_alert','on') and is_state_attr(entity,'weather_led',true) %} weather
                {% elif is_state_attr(entity,'alarm_led',true) %} alarm
                {% else %} off
                {% endif %}

          - delay:
              milliseconds: 500

          - if: "{{ alert_type == 'off' }}"
            then:
              - service: script.inovelli_led_control
                continue_on_error: true
                data:
                  entities: "{{ entity }}"
                  duration: 255
                  color: 170
                  brightness: 5
                  effect: "off"
            else:
              - service: "script.{{ alert_type }}_led"
                continue_on_error: true
                data:
                  entities: "{{ entity }}"
                  reset: true
