###############################################################################
## Reminder LED
###############################################################################
reminder_led:
  alias: "Reminder LED"
  description: "Set led notification."
  mode: queued
  fields:
    reset:
      description: "Reset LED"
      example: "true"
  variables:
    reset: "{{ reset | default(false) }}"
    entities: "{{ state_attr('group.reminder_led', 'entity_id') }}"
    alert_state: >
      {% if is_state('binary_sensor.reminder_active', 'on') %} reminder
      {% elif is_state('input_boolean.garbage_alert', 'on') %} garbage
      {% elif is_state('input_boolean.recycle_alert', 'on') %} recycle
      {% elif is_state('input_boolean.yardwaste_alert', 'on') %} yardwaste
      {% else %} off
      {% endif %}
    duration: 255
    color: >
      {% if alert_state == 'reminder' %} 110
      {% elif alert_state == 'garbage' %} 25
      {% elif alert_state == 'recycle' %} 145
      {% elif alert_state == 'yardwaste' %} 85
      {% else %} blue
      {% endif %}
    brightness: "{{ 3 if is_state('binary_sensor.quiet_time', 'on') else 10 if alert_state != 'off' else 3 }}"
    effect: "{{ iif(alert_state == 'off', 'off', 'slow blink') }}"
  sequence:
    - if: "{{ entities == none or entities | count == 0 }}"
      then:
        - service: system_log.write
          data:
            logger: "{{ this.entity_id }}"
            level: warning
            message: "Stop: No valid entities."

        - stop: "No valid entities."

    - if: "{{ alert_state == 'off' and not reset }}"
      then:
        - service: script.turn_on
          target:
            entity_id: script.led_reset
          data:
            variables:
              entities: "{{ entities }}"
      else:
        - service: script.turn_on
          target:
            entity_id: script.inovelli_led_control
          data:
            variables:
              entities: "{{ entities }}"
              duration: "{{ duration }}"
              color: "{{ color }}"
              brightness: "{{ brightness }}"
              effect: "{{ effect }}"
