###############################################################################
## Alarm Clock LED
###############################################################################
alarm_clock_led:
  alias: "Alarm CLock LED"
  description: "Set led notification."
  mode: queued
  fields:
    reset:
      description: "Reset LED"
      example: "true"
  variables:
    reset: "{{ reset | default(false) }}"
    entities: "{{ state_attr('group.alarm_clock_led', 'entity_id') }}"
    quiet: "{{ is_state('binary_sensor.quiet_time', 'on') }}"
    alert_state: "{{ states('binary_sensor.alarm_clock_led_alert') }}"
    duration: 255
    color: >
      {% if is_state('input_boolean.alarm_clock_failed', 'on') %} orange
      {% else %} {{ iif(alert_state == 'on', 'yellow', 'blue') }}
      {% endif %}
    brightness: >
      {% if is_state('input_boolean.alarm_clock_failed', 'on') %} 10
      {% else %} {{ iif(alert_state == 'on', 10, 3) }}
      {% endif %}
    effect: >
      {% if is_state('input_boolean.alarm_clock_failed', 'on') %} chase
      {% else %} {{ iif(alert_state == 'on', 'fast blink', 'off') }}
      {% endif %}
  sequence:
    - if: "{{ entities == none or entities | count == 0 }}"
      then:
        - service: system_log.write
          data:
            logger: "{{ this.entity_id }}"
            level: warning
            message: "Stop: No valid entities."

        - stop: "No valid entities."

    - if: "{{ alert_state == 'off' and not reset }}"
      then:
        - service: script.turn_on
          target:
            entity_id: script.led_reset
          data:
            variables:
              entities: "{{ entities }}"
      else:
        - service: script.turn_on
          target:
            entity_id: script.inovelli_led_control
          data:
            variables:
              entities: "{{ entities }}"
              duration: "{{ duration }}"
              color: "{{ color }}"
              brightness: "{{ brightness }}"
              effect: "{{ effect }}"
