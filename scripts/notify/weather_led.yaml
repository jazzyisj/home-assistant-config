###############################################################################
## Weather LED
###############################################################################
weather_led:
  alias: "Weather LED"
  description: "Set led notification."
  mode: queued
  fields:
    reset:
      description: "Reset LED"
      example: "true"
  variables:
    reset: "{{ reset | default(false) }}"
    entities: "{{ state_attr('group.weather_led', 'entity_id') }}"
    quiet: "{{ is_state('binary_sensor.quiet_time', 'on') }}"
    alert_state: >
      {% if is_state('alert.precipitation', 'on') %} rain
      {% elif is_state('binary_sensor.envcan_weather_alert', 'on') %}
        {{ state_attr('binary_sensor.envcan_weather_alert', 'severity') }}
      {% elif is_state('binary_sensor.outdoor_high_temperature_alert', 'on') %} high_temp
      {% elif is_state('binary_sensor.outdoor_low_temperature_alert', 'on') %} low_temp
      {% else %} off
      {% endif %}
    duration: 255
    color: >
      {% if alert_state == 'rain' %} 170
      {% elif alert_state == 'warning' %} 0
      {% elif alert_state == 'watch' %} 10
      {% elif alert_state == 'advisory' %} 35
      {% elif alert_state == 'statement' %} 50
      {% elif alert_state == 'high_temp' %} 20
      {% elif alert_state == 'low_temp' %} 150
      {% else %} 170
      {% endif %}
    brightness: >
      {% if alert_state in ['rain', 'warning'] %} 10
      {% elif quiet %} 3
      {% elif alert_state != 'off' %} 5
      {% else %} 3
      {% endif %}
    effect: >
      {% if alert_state == 'rain' %} Fast blink
      {% elif alert_state == 'warning' %} Slow blink
      {% elif alert_state == 'watch' %} Solid
      {% elif alert_state == 'advisory' %} Solid
      {% elif alert_state == 'statement' %} Solid
      {% elif alert_state == 'high_temp' %} Solid
      {% elif alert_state == 'low_temp' %} Solid
      {% else %} Off
      {% endif %}
  sequence:
    - if: "{{ entities == none or entities | count == 0 }}"
      then:
        - service: system_log.write
          data:
            logger: "{{ this.entity_id }}"
            level: warning
            message: "Stop: No valid entities."

        - stop: "No valid entities."

    - if: "{{ alert_state == 'off' and not reset }}"
      then:
        - service: script.turn_on
          target:
            entity_id: script.led_reset
          data:
            variables:
              entities: "{{ entities }}"
      else:
        - service: script.turn_on
          target:
            entity_id: script.inovelli_led_control
          data:
            variables:
              entities: "{{ entities }}"
              duration: "{{ duration }}"
              color: "{{ color }}"
              brightness: "{{ brightness }}"
              effect: "{{ effect }}"
