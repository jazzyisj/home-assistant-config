###############################################################################
## Lock All Locks
###############################################################################
lock_all_locks:
  alias: 'Lock All Locks'
  description: 'Lock all door locks.'
  icon: mdi:lock
  mode: restart
  fields:
    tts:
      description: 'Play tts message.'
      example: 'false'
  variables:
    tts: '{{ tts|default(false) }}'
  sequence:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.door_lock_jammed
              state: 'on'
          sequence:
            - service: input_boolean.turn_off
              target:
                entity_id: >
                  {{ states.input_boolean|selectattr('entity_id','search','_door_lock_jammed')
                    |selectattr('state','eq','on')|map(attribute='entity_id')|list }}

    - repeat: # try 3 times if unlocked locks
        while: "{{ state_attr('sensor.door_locks','unlocked')|count > 0 and repeat.index < 4 }}"
        sequence:
          - service: lock.lock
            target:
              entity_id: "{{ state_attr('sensor.door_locks','unlocked') }}"

          - wait_template: "{{ state_attr('sensor.door_locks','unlocked')|count > 0 }}"
            timeout: 30

    - choose:
        - conditions: "{{ state_attr('sensor.door_locks','unlocked')|count != 0 }}"
          sequence:
            - service: input_boolean.turn_on
              target: # turn on jammed boolean for any locks that didn't ock
                entity_id: >
                  {{ state_attr('sensor.door_locks','unlocked')
                      |replace('lock.','input_boolean.')|replace('_door_lock','_door_lock_jammed') }}
      default:
        - choose:
            - conditions: '{{ tts }}'
              sequence:
                - service: script.tts_play
                  data:
                    message: 'All entry doors are locked.'
                    quiet_play: true
                    ignore_away: true
