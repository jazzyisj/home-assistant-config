###############################################################################
## UnLock All Locks
###############################################################################
unlock_all_locks:
  alias: 'Unlock All Locks'
  description: 'Unlock all door locks.'
  icon: mdi:lock
  mode: restart
  fields:
    override:
      description: 'Override alarm.'
      example: 'true'
  sequence:
    - choose:
        - conditions:
            - condition: or
              conditions:
                - '{{ override|default(false) }}'
                - condition: state
                  entity_id: alarm_control_panel.master
                  state:
                    - disarmed
                    - armed_home
          sequence:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: binary_sensor.door_lock_jammed
                      state: 'on'
                  sequence:
                    - service: input_boolean.turn_off
                      target:
                        entity_id: >
                          {{ states.input_boolean|selectattr('entity_id','search','_door_lock_jammed')
                            |selectattr('state','eq','on')|map(attribute='entity_id')|list }}

            - repeat: # try 3 times if a lock is still locked
                while: "{{ state_attr('sensor.door_locks','locked')|count > 0 and repeat.index < 4 }}"
                sequence:
                  - service: lock.unlock
                    target:
                      entity_id: "{{ state_attr('sensor.door_locks','locked') }}"

                  - wait_template: "{{ state_attr('sensor.door_locks','locked')|count == 0 }}"
                    timeout: 30
            - choose:
                - conditions: "{{ state_attr('sensor.door_locks','locked')|count != 0 }}"
                  sequence:
                    - service: input_boolean.turn_on
                      target: # turn on jammed boolean for any locks that didn't ock
                        entity_id: >
                          {% set msg = namespace(value='[') %}
                          {% for item in state_attr('sensor.door_locks','locked') %}
                          {% if not loop.first %}{% set msg.value = msg.value ~ ',' %}{% endif %}
                          {% set msg.value = msg.value ~ "'input_boolean." ~ item.split('.')[1] ~ "_jammed'" %}
                          {% endfor %}
                          {% set msg.value = msg.value ~ ']' %}
                          {{ msg.value }}
              default:
                - service: script.tts_play
                  data:
                    message: 'All entry doors are now unlocked.'
                    quiet_play: true
                    ignore_away: true
      default:
        - service: script.tts_play
          data:
            message: 'Doors cannot be unlocked while the house alarm is armed!  Disarm the alarm and try again.'
            quiet_play: true
            ignore_away: true
