{%- macro arm_alarm_check() -%}
{{- is_state('binary_sensor.garage_occupied', 'off')
    and is_state('binary_sensor.side_entrance_motion', 'off')
    and is_state('group.door_locks', 'locked')
    and is_state('group.entry_doors', 'off') -}}
{%- endmacro -%}

{%- macro disarm_alarm_check() -%}
{{ is_state('binary_sensor.jphone_device_locked','off')
      or is_state('binary_sensor.jason_home','on')
      or is_state('binary_sensor.jason_almost_home','on') }}
{%- endmacro -%}

{%- macro alarm_tile_icon_style(entity) -%}
{%- set entity_slug = entity.split('.')[1] if has_value(entity) else '' %}
{%- set open = state_attr('alarm_control_panel.house', 'open_sensors')
  if state_attr('alarm_control_panel.house', 'open_sensors') != none else '' %}
{%- set bypassed = state_attr('alarm_control_panel.house', 'bypassed_sensors')
  if state_attr('alarm_control_panel.house', 'bypassed_sensors') != none else '' %}
ha-tile-icon {
  --tile-color:
    {%- if not has_value(entity) %} var(--disabled-color)
    {%- elif is_state('input_boolean.alarm_triggered', 'on')
          and entity in open %} var(--entity-critical-color)
    {%- elif (entity in open or entity in bypassed) %} var(--entity-severe-color)
    {%- elif is_state('input_boolean.' ~ entity_slug, 'off') %} var(--entity-warning-color)
    {%- elif is_state(entity, 'on') %} var(--entity-active-color)
    {%- else %} var(--state-inactive-color)
    {%- endif %} !important;
}
{%- endmacro -%}

{%- macro alarm_sensor_tile_style(entity, check_wan=false) -%}
{%- from 'alarm.jinja' import alarm_tile_icon_style %}
{%- set open = state_attr('alarm_control_panel.house', 'open_sensors')
  if state_attr('alarm_control_panel.house', 'open_sensors') != none else '' %}
{%- set bypassed = state_attr('alarm_control_panel.house', 'bypassed_sensors')
  if state_attr('alarm_control_panel.house', 'bypassed_sensors') != none else '' %}
ha-card {
  border-width:
    {%- if (is_state('input_boolean.alarm_triggered', 'on') and entity in open)
      or (entity in open or entity in bypassed) %}  3px
    {%- else %} 0px
    {%- endif %} !important;
  background:
  {%- set trigger = state_attr('alarm_control_panel.house', 'open_sensors')
    if state_attr('alarm_control_panel.house', 'open_sensors') else '' %}
  {%- if not has_value(entity)
    or (check_wan and is_state('binary_sensor.wan', 'off'))
    or (is_state('input_boolean.alarm_triggered', 'on') and entity in trigger) %} var(--background-critical-color)
  {%- else %} var(--card-background-color)
  {%- endif %} !important;
}
{{ alarm_tile_icon_style(entity) }}
{%- endmacro -%}

{%- macro window_door_tile_style(entity) -%}
{%- from 'alarm.jinja' import alarm_tile_icon_style %}
{%- set alert_entity = entity ~ '_open_alert' %}
{%- set open = state_attr('alarm_control_panel.house', 'open_sensors')
  if state_attr('alarm_control_panel.house', 'open_sensors') != none else '' %}
{%- set bypassed = state_attr('alarm_control_panel.house', 'bypassed_sensors')
  if state_attr('alarm_control_panel.house', 'bypassed_sensors') != none else '' %}
ha-card {
  border-width:
    {%- if (is_state('input_boolean.alarm_triggered', 'on') and entity in open)
      or (entity in open or entity in bypassed) %}  3px
    {%- else %} 0px
    {%- endif %} !important;
  background:
  {%- set trigger = state_attr('alarm_control_panel.house', 'open_sensors') if state_attr('alarm_control_panel.house', 'open_sensors') else '' %}
  {%- if is_state('input_boolean.alarm_triggered', 'on') and entity ~ '_open_alert' in trigger %} var(--background-critical-color)
  {%- elif is_state(entity, 'on') and not is_state('alert.climate_window_door_open', 'idle') %} var(--background-severe-color)
  {%- else %} var(--card-background-color)
  {%- endif %} !important;
}
{{ alarm_tile_icon_style(entity) }}
{%- endmacro -%}
