{% macro twelve_hour(entity) %}
{{ states(entity)|as_timestamp(none)|timestamp_custom('%-I:%M %p',true,none) }}
{% endmacro %}

{% macro cardinal_direction(bearing) %}
{% set directions = ['North','North-Northeast','Northeast','East-Northeast','East','East-Southeast',
    'Southeast','South-Southeast','South','South-Southwest','Southwest','West-Southwest','West',
    'West-Northwest','Northwest','North-Northwest','North'] %}
{{ iif(is_number(bearing),directions[((bearing|float(-1)/360)|float*16)|round],'unknown') }}
{% endmacro %}

{% macro clist_locks(locks) %}
{%- set msg = namespace(value='') %}
{%- set qty = namespace(value=0) %}
{%- for item in locks %}
{%- set qty.value = qty.value|int(0) + 1 %}
{%- if not loop.first %}{% set msg.value = msg.value ~ ', ' %}{% endif %}
{%- set msg.value = msg.value ~ item.split('.')[1]|replace('_door_lock','')|replace('_',' ')|title %}
{%- endfor %}
{%- set clist = ', and ' if msg.value.split(', ')|count > 2 else ' and ' %}
{%- set plural = 's have' if qty.value|int(0) > 1 else ' has' %}
{{ clist.join(msg.value.rsplit(', ', 1)) }}
{% endmacro %}

{% macro occupancy_mode() %}
{% set house = today_at(states('input_datetime.house_waketime')) %}
{% set waketime = states('sensor.next_waketime')|as_datetime
  if has_value('sensor.waketime_today') else house %}
{% set bedtime = states('sensor.bedtime_today')|as_datetime
  if has_value('sensor.bedtime_today') else today_at(states('input_datetime.days_bedtime')) %}
{% if is_state('binary_sensor.someone_home','off') %}
{% set mode = 'Vacation' if is_state('input_select.occupancy_mode','Vacation') else 'Away' %}
{% elif bedtime == none or waketime == none %}
  {% set mode = 'Home' if is_state('binary_sensor.owner_home','on') else 'Guest' %}
{% elif bedtime < now() < waketime %}
  {% set mode = 'Night' if is_state('input_boolean.bedtime_delayed','off')
    else ('Home' if is_state('binary_sensor.owner_home','on') else 'Guest') %}
{% else %}
  {% set mode = 'Home' if is_state('binary_sensor.owner_home','on') else 'Guest' %}
{% endif %}
{{ mode }}
{% endmacro %}