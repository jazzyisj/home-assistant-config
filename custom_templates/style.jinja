{%- macro alert_switch(entity) -%}
{%- set active_alert = states.alert | selectattr('attributes.category', 'eq',
        states[entity].object_id | replace('_alerts', '')) | selectattr('state', 'ne', 'idle')
      | list | count > 0 if states[entity] != none else false -%}
:host {
  --paper-item-icon-color:
    {%- if active_alert %} var(--entity-severe-color)
    {%- elif is_state(entity, 'off') %} var(--entity-warning-color)
    {%- else %} var(--state-icon-color)
    {%- endif -%}
  ;
  --state-active-color:
    {%- if active_alert %} var(--entity-severe-color)
    {%- else %} var(--state-active-color)
    {%- endif -%}
  ;
  --switch-unchecked-button-color: var(--entity-warning-color);
  --switch-unchecked-track-color: var(--entity-warning-color);
}
{%- endmacro -%}

{%- macro popup_style() -%}
div.mdc-dialog__scrim {
  backdrop-filter: grayscale(100%) brightness(25%) !important;
  -webkit-backdrop-filter: grayscale(100%) brightness(25%) !important;
}
div.mdc-dialog__surface {
  background: transparent !important;
}
{%- endmacro -%}

{%- macro alert_zero_style(entity) -%}
:host {
  --paper-item-icon-color:
    {%- set state = states(entity) | int(-1) %}
    {%- if state < 0 %} var(--entity-disabled-color)
    {%- elif state == 0 %} var(--entity-warning-color)
    {%- else %} var(--state-icon-color)
    {%- endif -%}
  ;
}
{%- endmacro -%}

{%- macro alert_non_zero_style(entity) -%}
:host {
  --paper-item-icon-color:
    {%- set state = states(entity) | int(-1) %}
    {%- if state < 0 %} var(--entity-disabled-color)
    {%- elif state == 0 %} var(--state-icon-color)
    {%- else %} var(--entity-warning-color)
    {%- endif -%}
  ;
}
{%- endmacro -%}

{%- macro status_sensor_style(value, base, minor, warning, severe, critical) -%}
:host {
  --paper-item-icon-color:
    {%- set value = value | float(-1) -%}
    {%- if value < base | float(-1) %} var(--entity-disabled-color)
    {%- elif value == base | float or value < minor | float(-1) %} var(--state-icon-color)
    {%- elif minor != base and value < warning | float(-1) %} var(--entity-minor-color)
    {%- elif warning != base and value < severe | float(-1) %} var(--entity-warning-color)
    {%- elif severe != base and value < critical | float(-1) %} var(--entity-severe-color)
    {%- else %} var(--entity-critical-color)
    {%- endif -%}
  ;
}
{%- endmacro -%}

{%- macro summary_status_sensor_style(entity) -%}
:host {
  --paper-item-icon-color:
    {% set value = states(entity) %}
    {% if value == 'ok' %} var(--entity-ok-color)
    {% elif value == 'minor' %} var(--entity-minor-color)
    {% elif value == 'warning' %} var(--entity-warning-color)
    {% elif value == 'severe' %} var(--entity-severe-color)
    {% elif value == 'critical' %} var(--entity-critical-color)
    {% else %} var(--entity-disabled-color)
    {% endif %}
  ;
}
{%- endmacro -%}

{%- macro status_alert_color(value, base, minor, warning, severe, critical) -%}
:host {
  --state-alert-on-color:
    {%- set value = value | float(-1) -%}
    {%- if value < base | float(-1) %} var(--entity-disabled-color)
    {%- elif value == base | float or value < minor | float(-1) %} var(--state-icon-color)
    {%- elif value != base and value < warning | float(-1) %} var(--entity-minor-color)
    {%- elif value != base and value < severe | float(-1) %} var(--entity-warning-color)
    {%- elif value != base and value < critical | float(-1) %} var(--entity-severe-color)
    {%- else %} var(--entity-critical-color)
    {%- endif -%}
  ;
}
{%- endmacro -%}