{%- macro twelve_hour(entity) -%}
{{- states(entity) | as_timestamp(none) | timestamp_custom('%-I:%M %p', true, none) -}}
{%- endmacro -%}

{%- macro cardinal_direction(bearing) %}
{%- set bearing = bearing | int(-1) %}
{%- set directions = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S',
    'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW', 'N'] %}
{{- iif(bearing >= 0, directions[((bearing | float(-1)/360) | float*16) | round], 'unknown') -}}
{%- endmacro -%}

{%- macro full_cardinal_direction(bearing) -%}
{%- set bearing = bearing | int(-1) %}
{%- set directions = ['North', 'North-Northeast', 'Northeast', 'East-Northeast', 'East', 'East-Southeast',
    'Southeast', 'South-Southeast', 'South', 'South-Southwest', 'Southwest', 'West-Southwest', 'West',
    'West-Northwest', 'Northwest', 'North-Northwest', 'North'] %}
{{- iif(bearing >= 0, directions[((bearing | float(-1)/360) | float*16) | round], 'unknown') -}}
{%- endmacro -%}

{%- macro array_to_clist(arr, title) -%}
{%- from 'speech_helpers.jinja' import plural_word %}
{%- set clist = ', and ' if arr | count > 2 else ' and ' -%}
{%- set text = arr | join(', ') %}
{%- if title %}{{ clist.join((text | title).rsplit(', ', 1)) -}}
{%- else %}{{ clist.join(text.rsplit(', ', 1)) -}}
{%- endif %}
{%- endmacro -%}

{%- macro clist_suffix(arr, title, suffix, word) -%}
{%- from 'speech_helpers.jinja' import array_to_clist %}
{%- from 'speech_helpers.jinja' import plural_word %}
{{- array_to_clist(arr, title) }}
{%- if suffix or word != '' %} {{ plural_word(word, arr | count, suffix) }}
{%- endif %}
{%- endmacro -%}

{%- macro iarticle(word) -%}
{%- if is_number(word) %}
  {%- set word = number_words(word) %}
{%- endif %}
{%- if word | regex_match('one|uni') -%} {{ 'a ' }}
{%- elif word | regex_match('heir|hour|honor|honest|homage') %} {{ 'an ' }}
{%- else -%} {{ iif(word[0] in ['a', 'e', 'i' , 'o', 'u'], 'an ', 'a ') }}
{%- endif -%}
{{- word -}}
{%- endmacro -%}

{%- macro number_words(number) -%}
{%- if is_number(number) %}
  {%- from 'speech_helpers.jinja' import number_words %}
  {%- set number = number | int %}
  {%- set units = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven ', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'] %}
  {%- set tens = ['', '', 'twenty ', 'thirty ', 'forty ', 'fifty ', 'sixty ', 'seventy ', 'eighty ', 'ninety '] %}
  {%- if number == 0 -%} zero
  {%- else %}
    {%- if number < 0 -%} negative {% endif %}
    {%- if number < 20 -%} {{ units[number] }}
    {%- elif number < 100 -%} {{ tens[number // 10] ~ units[number % 10] }}
    {%- elif number < 1000 -%} {{ number_words(number // 100) ~ ' hundred ' ~ iif(number % 100 > 0, number_words(number % 100), '') }}
    {%- elif number < 1000000 -%} {{ number_words(number // 1000) ~ ' thousand ' ~ iif(number % 1000 > 0, number_words(number % 1000), '') }}
    {%- elif number < 1000000000 -%} {{ number_words(number // 1000000) ~ ' million ' ~ iif(number % 1000000 > 0, number_words(number % 1000000), '') }}
    {%- elif number < 1000000000000 -%} {{ number_words(number // 1000000000) ~ ' billion ' ~ iif(number % 1000000000 > 0, number_words(number % 1000000000), '') }}
    {%- else -%} {{ number_words(number // 1000000000000) ~ ' trillion ' ~ iif(number % 1000000000000 > 0, number_words(number % 1000000000000), '') }}
    {%- endif %}
  {%- endif %}
{%- endif -%}
{%- endmacro -%}

{%- macro plural_word(word, qty, suffix) -%}
{%- if is_number(qty) %}
{{- word ~ iif(word != '', iif(qty | abs == 1, '', 's'),'') ~ iif(suffix, iif(qty | abs == 1, ' is', ' are'),'') }}
{%- endif -%}
{%- endmacro -%}

{%- macro plural_qty(word, qty, suffix) -%}
{%- from 'speech_helpers.jinja' import plural_word -%}
{{ qty }} {{ plural_word(word, qty, suffix) }}
{%- endmacro -%}