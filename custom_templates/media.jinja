{%- macro player_state(entity) -%}
{%- set sensor = namespace(state='off') %}
{%- set media_types = ['tts', 'alarm_clock'] %}
{%- set group_players = state_attr('group.group_media_players', 'entity_id') %}
{%- if is_state(entity, ['playing', 'paused', 'buffering', 'on', 'idle', 'off']) %}
  {%- for type in media_types %}
    {%- set type_sensor = 'sensor.' ~ type ~ '_media_player' %}
    {%- set type_player = states(type_sensor) %}
    {%- set type_players = state_attr(type_sensor, 'entity_id') %}
    {%- if is_state('binary_sensor.' ~ type, 'on') or is_state('input_boolean.' ~ type, 'on') %}
      {%- if has_value(type_sensor) %}
        {%- if entity == type_player %}
          {%- set sensor.state = type %}
        {%- elif entity in type_players %}
          {%- set sensor.state = type ~'_group' %}
          {%- break %}
        {%- endif %}
      {%- endif %}
    {%- endif %}
  {%- endfor %}
  {%- if sensor.state == 'off' and group_players != none %}
    {%- for player in group_players %}
      {%- set sensor_players = state_attr('sensor.' ~ states[player].object_id, 'entity_id') %}
      {%- if sensor_players != none %}
        {%- if entity in sensor_players and (is_state(player, ['playing', 'paused', 'buffering', 'on'])) %}
          {%- set sensor.state = 'group' %}
          {%- break %}
        {%- endif %}
      {%- endif %}
    {%- endfor %}
  {%- endif %}
  {%- set sensor.state = 'on' if is_state(entity, ['playing', 'paused', 'buffering', 'on'])
        and sensor.state == 'off' else sensor.state %}
{%- endif %}
{{- sensor.state -}}
{%- endmacro -%}

{%- macro player_state_options() -%}
{{- ['on', 'off', 'group', 'alarm_clock_group', 'tts_group'] -}}
{%- endmacro -%}

{%- macro group_state(entity) -%}
{%- set sensor = namespace(state='off') %}
{%- set media_types = ['tts', 'alarm_clock'] %}
{%- if is_state(entity, ['playing', 'paused', 'buffering', 'on', 'idle', 'off']) %}
{%- for type in media_types %}
{%- if (is_state('binary_sensor.' ~ type, 'on') or is_state('input_boolean.' ~ type, 'on'))
      and entity == states('sensor.' ~ type ~ '_active_media_player') %}
{%- set sensor.state = type %}
{%- break %}
{%- endif %}
{%- endfor %}
{%- set sensor.state = 'on' if is_state(entity, ['playing', 'paused', 'buffering', 'on'])
      and sensor.state == 'off' else sensor.state %}
{%- endif %}
{{- sensor.state -}}
{%- endmacro -%}

{%- macro group_state_options() -%}
{{- ['on', 'off'] -}}
{%- endmacro -%}

{%- macro entity_id_attribute(attribute) -%}
{{ expand('group.single_media_players')
 | selectattr('attributes.' ~ attribute, 'defined')
 | selectattr('attributes.' ~ attribute, 'eq', true)
 | map(attribute='entity_id') | list | sort }}
{%- endmacro -%}

{%- macro player_status(entity) -%}
{%- set state = states('sensor.' ~ states[entity].object_id) if states[entity] != none else '' %}
{%- set mass = expand('group.mass_media_players')
    | selectattr('name', 'eq', state_attr(entity, 'friendly_name'))
    | map(attribute='entity_id') | join %}
{%- set mass_players = state_attr('group.mass_media_players', 'entity_id')
      if state_attr('group.mass_media_players', 'entity_id') != none else [] %}
{%- if mass != '' and mass in mass_players and not is_state_attr(mass, 'mass_player_type', none)
      and not is_state(mass, ['unknown', 'unavailable']) %}
  {%- if 'group' in state %} mass_off
  {%- elif state in ['playing', 'paused', 'buffering', 'on'] %} mass_on
  {%- else %} mass_off
  {%- endif %}
{%- elif 'group' in state %} media_off
{%- elif is_state(entity, ['playing', 'paused', 'buffering', 'on']) %} media_on
{%- else %} media_off
{%- endif %}
{%- endmacro -%}

{%- macro group_player_status(entity) -%}
{%- set mass = expand('group.mass_media_players')
    | selectattr('name', 'eq', state_attr(entity, 'friendly_name'))
    | map(attribute='entity_id') | join %}
{%- set mass_players = state_attr('group.mass_media_players', 'entity_id')
      if state_attr('group.mass_media_players', 'entity_id') != none else [] %}
{%- if mass != '' and mass in mass_players and not is_state_attr(mass, 'mass_player_type', none)
      and not is_state(mass, ['off', 'idle', 'standby', 'unknown', 'unavailable']) %}
  {%- if is_state(mass, ['playing', 'paused', 'buffering', 'on']) %} mass_on
  {%- else %} mass_off
  {%- endif %}
{%- elif is_state(entity, ['playing', 'paused', 'buffering', 'on']) %} media_on
{%- else %} media_off
{%- endif %}
{%- endmacro -%}

{%- macro alarm_clock_state(entity) -%}
{%- set time = state_attr(entity, '12hour') %}
{{- time if time != none else 'OFF' }}
{%- endmacro %}

{%- macro alarm_clock_icon(entity) -%}
{%- if is_state_attr(entity, 'status', 'failed') %} mdi:alarm-note-off
{%- elif is_state_attr(entity, 'status', 'snoozed') %} mdi:alarm-snooze
{%- elif is_state_attr(entity, 'status', 'pending') %} mdi:alarm-check
{%- elif state_attr(entity, 'status') in ['playing', 'testing'] %} mdi:alarm-note
{%- elif is_state_attr(entity, 'status', 'off') %} mdi:alarm-off
{%- else %} mdi:alarm
{%- endif -%}
{%- endmacro %}

{%- macro alarm_clock_style(entity) -%}
:host {
  --paper-item-icon-color:
    {%- if is_state_attr(entity, 'status', 'failed') %} var(--entity-critical-color)
    {%- elif state_attr(entity, 'status') in ['playing', 'testing', 'snoozed', 'pending'] %} var(--state-active-color)
    {%- else %} var(--state-icon-color)
    {%- endif -%}
  ;
}
{%- endmacro %}

{%- macro alarm_clock_other_style(entity) -%}
:host {
  --paper-item-icon-color:
    {%- if states(entity) == 'unknown' %} var(--state-icon-color)
    {%- else %} var(--state-active-color)
    {%- endif -%}
  ;
}
{%- endmacro %}