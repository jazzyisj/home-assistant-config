{%- macro valid_locks(entities) -%}
{{- expand(entities | default(state_attr('group.door_locks', 'entity_id')))
    | map(attribute='entity_id') | select('has_value') | list | to_json }}
{%- endmacro -%}

{%- macro list_locks(entities, word) -%}
{%- from 'speech_helpers.jinja' import array_to_clist %}
{%- from 'speech_helpers.jinja' import plural %}
{%- set entities = expand(entities) | map(attribute='object_id') | list %}
{{- array_to_clist(entities) | replace('_door_lock', '') | replace('_', ' ') }} door
{{- ' ' ~ plural(word, entities | count, false) }}
{%- endmacro -%}

{%- macro lock_user(userID) -%}
{%- set users = ['Keypad','Hassio', 'Jason', 'Sheri', 'Sheia', 'Cleaner', 'Guest', 'Guest', 'Guest', 'Guest', 'Guest'] %}
{{- users[userID] }}
{%- endmacro -%}

{%- macro lock_tile_style(lock) -%}
ha-card {
  background:
  {% if not has_value(lock)  %} var(--background-critical-color)
  {% else %} var(--ha-card-background)
  {% endif %}
  ;
  :host {
    --state-lock-unlocked-color:
      {% if is_state('binary_sensor.' ~ lock ~ '_lock_intrusion', 'on') %} var(--entity-critical-color)
      {% elif is_state('binary_sensor.' ~ lock ~ '_lock_system_hardware_failure', 'on') %} var(--entity-critical-color)
      {% elif is_state('binary_sensor.' ~ lock ~ '_lock_lock_jammed', 'on') %} var(--entity-critical-color)
      {% elif is_state('binary_sensor.' ~ lock ~ '_lock_keypad_temporary_disabled', 'on') %} var(--entity-severe-color)
      {% else %} var(--state-active-color)
      {% endif %}
    ;
    --state-lock-locked-color:
      {% if is_state('binary_sensor.' ~ lock ~ '_lock_intrusion', 'on') %} var(--entity-critical-color)
      {% elif is_state('binary_sensor.' ~ lock ~ '_lock_system_hardware_failure', 'on') %} var(--entity-critical-color)
      {% elif is_state('binary_sensor.' ~ lock ~ '_lock_lock_jammed', 'on') %} var(--entity-critical-color)
      {% elif is_state('binary_sensor.' ~ lock ~ '_lock_keypad_temporary_disabled', 'on') %} var(--entity-severe-color)
      {% else %} var(--state-inactive-color)
      {% endif %}
    ;
  }
{%- endmacro -%}
