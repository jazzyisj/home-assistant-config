{% macro occupancy_mode() %}
{% set house = today_at(states('input_datetime.house_waketime')) %}
{% set waketime = states('sensor.next_waketime')|as_datetime
  if has_value('sensor.waketime_today') else house %}
{% set bedtime = states('sensor.bedtime_today')|as_datetime
  if has_value('sensor.bedtime_today') else today_at(states('input_datetime.days_bedtime')) %}
{% if is_state('binary_sensor.someone_home','off') %}
{% set mode = 'Vacation' if is_state('input_select.occupancy_mode','Vacation') else 'Away' %}
{% elif bedtime == none or waketime == none %}
  {% set mode = 'Home' if is_state('binary_sensor.owner_home','on') else 'Guest' %}
{% elif bedtime < now() < waketime %}
  {% set mode = 'Night' if is_state('input_boolean.bedtime_delayed','off')
    else ('Home' if is_state('binary_sensor.owner_home','on') else 'Guest') %}
{% else %}
  {% set mode = 'Home' if is_state('binary_sensor.owner_home','on') else 'Guest' %}
{% endif %}
{{ mode }}
{% endmacro %}

{% macro rain_soon_text() %}
{%- set time = state_attr('binary_sensor.rain_soon','start_time') -%}
{%- set cond = states('sensor.current_condition') -%}
{%- set dist = states('sensor.nearest_storm_distance')|int(-1) -%}
{%- set dir = state_attr('sensor.nearest_storm_bearing','cardinal') %}
{%- if dist > -1 -%}
There is a {{ states('sensor.precipitation_type')|replace('none','') }}storm
{{- iif(dist >= 1,dist|int ~ iif(dist|int == 1,' kilometer',' kilometers') ~ ' away',' in the immediate vicinity') }}
{{- iif(dir != none,' approaching from the ' ~ dir,'') }}.
It is currently {{ cond|replace('partlycloudy','partly cloudy') }}.
{%- if time != none and cond not in ['rainy','pouring','lightning-rainy','snowy'] -%}
{% if time == 'now' %} It will begin raining soon.
{%- else %} Rain is expected at {{ time }}.
{%- endif -%}
{%- endif -%}
{%- endif -%}
{% endmacro %}