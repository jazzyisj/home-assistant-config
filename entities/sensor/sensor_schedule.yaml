#######################################################################################################################
## Time_Date Sensor
#######################################################################################################################
- platform: time_date
  display_options:
    - time
    - date
    - date_time

- platform: template
  sensors:
#######################################################################################################################
## Waketime Today
## - defaults to days if shift unknown or none
#######################################################################################################################
    waketime_today:
      friendly_name: Wake Time Today
      unique_id: waketime_today
      icon_template: mdi:white-balance-sunny
      value_template: >
        {% set alm = states('sensor.alarm_clock_next_alarm') %}
        {% set day = states('input_datetime.days_waketime')[0:5] %}
        {% set aft = states('input_datetime.afternoons_waketime')[0:5] %}
        {% set wkd = states('input_datetime.weekend_waketime')[0:5] %}
        {% set gst = states('input_datetime.guest_waketime')[0:5] %}

        {% if is_state('binary_sensor.someone_home','on') and is_state('binary_sensor.owner_home','off') and is_state('input_boolean.guest_morning','on') %}
          {% set wake = gst %}
        {% else %}
          {% if is_state('binary_sensor.work_today','on') and is_state('input_boolean.workday_morning','on')%}
              {% set wake = aft if is_state('sensor.current_shift','Afternoons') else day %}
          {% elif is_state('binary_sensor.work_today','off') and is_state('input_boolean.weekend_morning','on')%}
              {% set wake = wkd %}
          {% else %} {% set wake = 'Off' %}
          {% endif %}
        {% endif %}
        {{ wake if alm == 'Off' else wake if wake == 'Off' else [alm,wake]|min }}

    waketime_today_display:
      friendly_name: Wake Time Today
      unique_id: waketime_today_display
      icon_template: mdi:white-balance-sunny
      value_template: >
        {{ states('sensor.waketime_today') if states('sensor.waketime_today') in ['Off','unknown','unavailable','none']
            else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.waketime_today'))|timestamp_custom('%-I:%M %p') }}

#######################################################################################################################
## Waketime Tomorrow
## - bedtime before noon and time < bedtime check  work today, else check work tomorrow to account for bedtimes after midnight
## - defaults to days if shift unknown or none
#######################################################################################################################
    waketime_tomorrow:
      friendly_name: Waketime Tomorrow
      unique_id: waketime_tomorrow
      icon_template: mdi:weather-sunset-up
      value_template: >
        {% if is_state('binary_sensor.someone_home','on') and is_state('binary_sensor.owner_home','off') and is_state('input_boolean.guest_morning','on') %}
          {{ states('input_datetime.guest_waketime')[0:5] }}
        {% else %}
          {% if is_state('sensor.bedtime_today','Off') or states('sensor.time') < states('sensor.bedtime_today') < '12:00' %}
            {% if is_state('binary_sensor.work_today','on') and is_state('input_boolean.workday_morning','on') %}
              {% if is_state('sensor.current_shift','Afternoons') %}{{ states('input_datetime.afternoons_waketime')[0:5] }}
              {% else %}{{ states('input_datetime.days_waketime')[0:5] }}
              {% endif %}
            {% elif is_state('input_boolean.weekend_morning','on')%}{{ states('input_datetime.weekend_waketime')[0:5] }}
            {% else %} Off
            {% endif %}
          {% else %}
            {% if is_state('binary_sensor.work_tomorrow','on') and is_state('input_boolean.workday_morning','on') %}
              {% if is_state('sensor.tomorrow_shift','Afternoons') %}{{ states('input_datetime.afternoons_waketime')[0:5] }}
              {% else %}{{ states('input_datetime.days_waketime')[0:5] }}
              {% endif %}
            {% elif is_state('input_boolean.weekend_morning','on') %}{{ states('input_datetime.weekend_waketime')[0:5] }}
            {% else %} Off
            {% endif %}
          {% endif %}
        {% endif %}

    waketime_tomorrow_display:
      friendly_name: Wake Time Today
      unique_id: waketime_tomorrow_display
      icon_template: mdi:weather-sunset-up
      value_template: >
        {{ states('sensor.waketime_tomorrow') if states('sensor.waketime_tomorrow') in ['Off','unknown','unavailable','none']
            else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.waketime_tomorrow'))|timestamp_custom('%-I:%M %p') }}

#######################################################################################################################
## Bedtime Today
## - accounts for bedtimes after midnight
## - defaults to days if shift unknown or none, weekends if work schedule off
#######################################################################################################################
    bedtime_today:
      friendly_name: Bedtime Today
      unique_id: bedtime_today
      icon_template: mdi:bed
      value_template: >
        {% set day = states('input_datetime.days_bedtime')[0:5] %}
        {% set aft = states('input_datetime.afternoons_bedtime')[0:5] %}
        {% set wkd = states('input_datetime.weekend_bedtime')[0:5] %}
        {% set bed = [day,aft,wkd]|reject('>','12:00')|max if [day,aft,wkd]|min < '12:00' else [day,aft,wkd]|max %}
        {% if is_state('binary_sensor.someone_home','on') and is_state('binary_sensor.owner_home','off') and is_state('input_boolean.guest_night','on') %}
          {{ states('input_datetime.guest_bedtime')[0:5] }}
        {% else %}
          {% if is_state('sensor.current_shift','Afternoons') and (states('sensor.time') < bed) %}
            {% if is_state('binary_sensor.work_today','on') and is_state('input_boolean.workday_night','on') %} {{ aft }}
            {% elif is_state('input_boolean.weekend_night','on') %} {{ wkd }}
            {% else %} Off
            {% endif %}
          {% elif is_state('sensor.tomorrow_shift','Afternoons') %}
            {% if is_state('binary_sensor.work_tomorrow','on') and is_state('input_boolean.workday_night','on') %} {{ aft }}
            {% elif is_state('input_boolean.weekend_night','on') %} {{ wkd }}
            {% else %} Off
            {% endif %}
          {% elif is_state('sensor.current_shift','Days') and (states('sensor.time') < bed) %}
            {% if is_state('binary_sensor.work_today','on') and is_state('input_boolean.workday_night','on') %} {{ day }}
            {% elif is_state('input_boolean.weekend_night','on') %} {{ wkd }}
            {% else %} Off
            {% endif %}
          {% elif is_state('sensor.tomorrow_shift','Days') %}
            {% if is_state('binary_sensor.work_tomorrow','on') and is_state('input_boolean.workday_night','on') %} {{ day }}
            {% elif is_state('input_boolean.weekend_night','on') %} {{ wkd }}
            {% else %} Off
            {% endif %}
          {% else %}
            {% if is_state('input_boolean.work_schedule','off') and is_state('input_boolean.weekend_night','on') %} {{ wkd }}
            {% elif is_state('input_boolean.workday_night','on') %} {{ day }}
            {% else %} Off
            {% endif %}
          {% endif %}
        {% endif %}

    bedtime_today_display:
      friendly_name: Bedtime Today
      unique_id: bedtime_today_display
      icon_template: mdi:bed
      value_template: >
          {{ states('sensor.bedtime_today') if states('sensor.bedtime_today')|lower in ['off','unknown','unavailable','none']
              else as_timestamp(states('sensor.date') ~ ' ' ~ states('sensor.bedtime_today'))|timestamp_custom('%-I:%M %p') }}
