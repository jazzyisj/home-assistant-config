#######################################################################################################################
## Season Sensor  https://www.home-assistant.io/integrations/season/
#######################################################################################################################
- platform: season

#######################################################################################################################
## Moon Sensor  https://www.home-assistant.io/integrations/moon/
#######################################################################################################################
- platform: moon

#######################################################################################################################
## World Air Quality Sensor  https://www.home-assistant.io/components/sensor.waqi/
## http://aqicn.org/
#######################################################################################################################
- platform: waqi
  token: !secret AQICN_APIKEY
  locations:
    - Windsor

#######################################################################################################################
## Template Sensors
#######################################################################################################################
- platform: template
  sensors:
#######################################################################################################################
## Moon Phases
#######################################################################################################################
    moon_phases:
      friendly_name: Moon
      unique_id: moon_phases
      entity_picture_template: >
        {% if is_state('sensor.moon','new_moon') %} /local/images/moon_phases/new_moon.jpg
        {% elif is_state('sensor.moon','waxing_crescent') %} /local/images/moon_phases/waxing_crescent.jpg
        {% elif is_state('sensor.moon','first_quarter') %} /local/images/moon_phases/first_quarter.jpg
        {% elif is_state('sensor.moon','waxing_gibbous') %} /local/images/moon_phases/waxing_gibbous.jpg
        {% elif is_state('sensor.moon','full_moon') %} /local/images/moon_phases/full_moon.jpg
        {% elif is_state('sensor.moon','waning_gibbous') %} /local/images/moon_phases/waning_gibbous.jpg
        {% elif is_state('sensor.moon','last_quarter') %} /local/images/moon_phases/last_quarter.jpg
        {% elif is_state('sensor.moon','waning_crescent') %} /local/images/moon_phases/waning_crescent.jpg
        {% endif %}
      value_template: "{{ states('sensor.moon') }}"

#######################################################################################################################
## Allergy Risk Today https://www.home-assistant.io/integrations/iqvia/
#######################################################################################################################
    allergy_risk_today:
      friendly_name: Allergy Risk
      unique_id: allergy_risk_today
      icon_template: mdi:flower
      value_template: >
        {% set level = states('sensor.allergy_index_today')|float %}
        {% if level < 2.5 %} Low
        {% elif level < 4.9 %} Low-Medium
        {% elif level < 7.3 %} Medium
        {% elif level < 9.7 %} Medium-High
        {% else %} High
        {% endif %}
      availability_template: "{{ is_state('binary_sensor.pollen_connected','on') and not states('sensor.allergy_index_today') in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Allergy Risk Tomorrow
#######################################################################################################################
    allergy_risk_tomorrow:
      friendly_name: Allergy Risk Tomorrow
      unique_id: allergy_risk_tomorrow
      icon_template: mdi:flower
      value_template: >
        {% set level = states('sensor.allergy_index_tomorrow')|float %}
        {% if level < 2.5 %} Low
        {% elif level < 4.9 %} Low-Medium
        {% elif level < 7.3 %} Medium
        {% elif level < 9.7 %} Medium-High
        {% else %} High
        {% endif %}
      availability_template: "{{ is_state('binary_sensor.pollen_connected','on') and not states('sensor.allergy_index_tomorrow') in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Asthma Risk Today
#######################################################################################################################
    asthma_risk_today:
      friendly_name: Asthma Risk
      unique_id: asthma_risk_today
      icon_template: mdi:lungs
      value_template: >
        {% set level = states('sensor.asthma_index_today')|float %}
        {% if level < 2.5 %} Low
        {% elif level < 4.9 %} Low-Medium
        {% elif level < 7.3 %} Medium
        {% elif level < 9.7 %} Medium-High
        {% else %} High
        {% endif %}
      availability_template: "{{ is_state('binary_sensor.pollen_connected','on') and not states('sensor.asthma_index_today') in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Asthma Risk Tomorrow
#######################################################################################################################
    asthma_risk_tomorrow:
      friendly_name: Asthma Risk Tomorrow
      unique_id: asthma_risk_tomorrow
      icon_template: mdi:lungs
      value_template: >
        {% set level = states('sensor.asthma_index_tomorrow')|float %}
        {% if level < 2.5 %} Low
        {% elif level < 4.9 %} Low-Medium
        {% elif level < 7.3 %} Medium
        {% elif level < 9.7 %} Medium-High
        {% else %} High
        {% endif %}
      availability_template: "{{ is_state('binary_sensor.pollen_connected','on') and not states('sensor.asthma_index_tomorrow') in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## Open UV Sensor  https://www.openuv.io/uvindex
#######################################################################################################################
    uv_max_level:
      friendly_name: UV Risk Today
      unique_id: uv_max_level
      icon_template: mdi:weather-sunny
      value_template: >
        {% set level = states('sensor.max_uv_index')|int %}
        {% if level < 3 %} Low
        {% elif level < 7 %} Moderate
        {% elif level < 9 %} High
        {% else %} Very High
        {% endif %}
      availability_template: "{{ is_state('binary_sensor.openuv_connected','on') and not states('sensor.max_uv_index') in ['unknown','unavailable','none'] }}"

#######################################################################################################################
## WAQI Risk Level Sensor
#######################################################################################################################
    aqi_risk_level:
      friendly_name: AQI Risk Level
      unique_id: aqi_risk_level
      icon_template: mdi:smog
      value_template: >
        {% set level = states('sensor.waqi_windsor')|int %}
        {% if level < 51 %} Good
        {% elif level < 101 %} Moderate
        {% elif level < 101 %} Unhealthy Sensitive Groups
        {% elif level < 201 %} Unhealthy
        {% elif level < 301 %} Very Unhealthy
        {% else %} Hazardous
        {% endif %}
      availability_template: "{{ is_state('binary_sensor.waqi_connected','on') and not states('sensor.waqi_windsor') in ['unknown','unavailable','none'] }}"
