#######################################################################################################################
## Climate Binary Sensors
#######################################################################################################################

#######################################################################################################################
## Humidity Level In Range   https://www.home-assistant.io/components/binary_sensor.threshold/
#######################################################################################################################
- platform: threshold
  name: Humidity Level In Range
  entity_id: sensor.upstairs_thermostat_humidity
  lower: 30
  upper: 70
  hysteresis: 1.5

- platform: template
  sensors:
#######################################################################################################################
## Nest Integration Connected
#NOTE if any nest devices is connected then Nest is online
#######################################################################################################################
    nest_connected:
      friendly_name: Nest Connected
      unique_id: nest_connected
      icon_template: "{{ 'mdi:smoke-detector' if is_state('binary_sensor.nest_connected','on') else 'mdi:alert-circle' }}"
      device_class: connectivity
      value_template: >
        {{ is_state('binary_sensor.upstairs_thermostat_online','on')
            or is_state('binary_sensor.upstairs_nest_protect_online','on')
            or is_state('binary_sensor.upstairs_nest_protect_online','on') }}

    nest_connected_alert:
      friendly_name: Nest
      unique_id: nest_connected_alert
      icon_template: mdi:alert-circle
      value_template: "{{ is_state('binary_sensor.nest_connected','off') and is_state('binary_sensor.alerts_enabled','on') }}"

#######################################################################################################################
## Indoor Low Temperature
#NOTE can't use availability template because of separate sensors
#######################################################################################################################
    indoor_low_temperature_alert:
      unique_id: indoor_low_temperature_alert
      delay_on:
        minutes: 15 # let temp stabalize, avoid false alerts
      value_template: >
         {{ ((states('sensor.upstairs_thermostat_temperature')|int < states('input_number.low_temperature_threshold')|int)
                and not states('sensor.upstairs_thermostat_temperature') in ['unknown','unavailable','none'])
              or ((states('sensor.upstairs_bathroom_temperature')|int < states('input_number.low_temperature_threshold')|int )
                and not states('sensor.upstairs_bathroom_temperature') in ['unknown','unavailable','none'])
              and is_state('binary_sensor.alerts_enabled','on') }}

#######################################################################################################################
## Indoor High Temperature
#NOTE add bathroom temp differential to temp threshold to reduce false alerts
#NOTE can't use availability template because of separate sensors
#######################################################################################################################
    indoor_high_temperature_alert:
      unique_id: indoor_high_temperature_alert
      delay_on:
        minutes: 15 # let temp stabalize, avoid false alerts
      value_template: >
        {{ (states('sensor.upstairs_thermostat_temperature')|int > states('input_number.high_temperature_threshold')|int
              and not states('sensor.upstairs_thermostat_temperature') in ['unknown','unavailable','none'])
            or (( states('sensor.upstairs_bathroom_temperature')|int > (states('input_number.high_temperature_threshold')|int
                  + states('input_number.bathroom_temperature_differential')|int ))
              and not states('sensor.upstairs_bathroom_temperature') in ['unknown','unavailable','none'])
            and is_state('binary_sensor.alerts_enabled','on') }}

#######################################################################################################################
## Indoor High Humidity
#NOTE can't use availability template because of separate sensors
#######################################################################################################################
    indoor_high_humidity_alert:
      unique_id: indoor_high_humidity_alert
      delay_on:
        minutes: 30 # let humidity stabalize, avoid false alerts
      value_template: >
        {{ (states('sensor.upstairs_thermostat_humidity')|int > states('input_number.high_humidity_threshold')|int
              and not states('sensor.upstairs_thermostat_humidity') in ['unknown','unavailable','none'] )
            or (states('sensor.upstairs_bathroom_humidity')|int > states('input_number.high_humidity_threshold')|int
              and not states('sensor.upstairs_bathroom_humidity') in ['unknown','unavailable','none'])
            and is_state('binary_sensor.alerts_enabled','on') }}

#######################################################################################################################
## Upstairs Bathroom Mold Risk
#######################################################################################################################
    upstairs_bathroom_mold_risk_alert:
      unique_id: upstairs_bathroom_mold_risk_alert
      delay_on:
        minutes: 60 # let temp/humidity stabalize, avoid false alerts
      value_template: "{{ states('sensor.upstairs_bathroom_mold_indicator')|int > states('input_number.mold_risk_threshold')|int and is_state('binary_sensor.alerts_enabled','on') }}"
      availability_template: "{{ states('sensor.upstairs_bathroom_mold_indicator') not in ['unknown','unavailable','none'] }}"