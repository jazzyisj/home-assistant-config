###############################################################################
## Sump Button
###############################################################################
type: custom:button-card
template: menu_button
entity: binary_sensor.sump_active
show_name: true
name: 'OUTDOOR'
show_state: false
show_label: true
label: "[[[ return states['sensor.outdoor_sump_count'].state + ' CYCLES'; ]]]"
styles:
  card:
    #TEMP until switch hooked up or abandon
    #  else if (states['binary_sensor.outdoor_sump_input'].state == 'off')
    #   return 'var(--entity-button-warning-color)';
    - background-color: >
        [[[
          if (states['binary_sensor.outdoor_sump'].state == 'unavailable')
            return 'var(--entity-button-critical-color)';
          else if (states['binary_sensor.outdoor_sump'].state == 'unavailable')
            return 'var(--entity-button-critical-color)';
          else if (states['device_tracker.outdoor_sump'].state != 'home')
            return 'var(--entity-button-severe-color)';
          else if (states['binary_sensor.outdoor_sump_overheating'].state == 'on')
            return 'var(--entity-button-severe-color)';
          else if (states['binary_sensor.outdoor_sump_overpowering'].state == 'on')
            return 'var(--entity-button-severe-color)';
          else if (states['switch.outdoor_sump'].state == 'off')
            return 'var(--entity-button-warning-color)';
          else if (states['binary_sensor.outdoor_sump_cloud'].state == 'off')
            return 'var(--entity-button-minor-color)';
          else if (states['binary_sensor.outdoor_sump_firmware_update'].state == 'on')
            return 'var(--entity-button-minor-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: fire-dom-event
  browser_mod:
    command: popup
    deviceID: this
    hide_header: true
    title: 'Outdoor Sump Monitor'
    card: !include /config/lovelace/card/sensor/outdoor_sump_monitor.yaml
double_tap_action:
  action: url
  url_path: !secret SHELLY_CLOUD
