###############################################################################
## TTS Announcement Button
###############################################################################
type: custom:button-card
template: menu_button
entity: binary_sensor.tts
name: 'Announcement'
show_state: >
  [[[
    if (states['variable.tts_saved_messages'].state != '0')
      return true;
    else
      return false;
  ]]]
state_display: >
  [[[
      if (states['variable.tts_saved_messages'].state != '0')
        return states['variable.tts_saved_messages'].state + ' MESSAGES';
      else
        return ' ';
  ]]]
icon: >
  [[[
    if (states['input_boolean.tts_enabled'].state == 'on')
      return 'mdi:account-voice';
    else
      return 'mdi:account-voice-off';
  ]]]
styles:
  card: #STYLE flashing background for msgs
    - background-color: >
        [[[
          if (states['variable.tts_saved_messages'].state != '0')
            return 'var(--entity-button-primary-color)';
          else if (states['input_boolean.media_launcher_tts'].state == 'on')
            return 'var(--entity-button-selected-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
  icon:
    - color: >
        [[[
          if (states['binary_sensor.tts'].state == 'on')
            return 'var(--state-icon-active-color)';
          else if (states['switch.system_mute'].state == 'on')
            return 'var(--entity-warning-color)';
          else if (states['input_boolean.tts_enabled'].state == 'off')
            return 'var(--entity-warning-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
# extra_styles: > #STYLE
#   [[[
#     if (states['variable.tts_saved_messages'].state != '0')
#       return '@keyframes blink { 50% { --paper-item-icon-color: var(--alarm-arming-color); }} animation: blink 1s linear infinite;'
#   ]]]
tap_action:
  action: call-service
  service: input_boolean.toggle
  service_data:
    entity_id: input_boolean.media_launcher_tts
double_tap_action:
  action: call-service
  service: script.tts_play_saved_messages
hold_action:
  action: call-service
  service: script.tts_play_last_message
  service_data:
    skip_none: false
