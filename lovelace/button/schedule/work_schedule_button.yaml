###############################################################################
## Work Schedule Button
###############################################################################
type: custom:button-card
template: menu_button
entity: input_boolean.work_schedule
name: 'Work Schedule'
icon: >
  [[[
    if (states['binary_sensor.commute_active'].state == 'on')
      return states['binary_sensor.commute_active'].attributes.icon;
    else if (states['binary_sensor.work_today'].state == 'on')
      return states['binary_sensor.work_today'].attributes.icon;
    else if (states['calendar.work_holiday'].state == 'on')
      return states['calendar.work_holiday'].attributes.icon;
    else
      return states['input_boolean.work_schedule'].attributes.icon;
  ]]]
show_state: true
state_display: >
  [[[
    if (states['input_boolean.work_schedule'].state == 'off')
      return 'OFF';
    if (states['binary_sensor.work_vacation'].state == 'on')
      return 'VACATION';
    else if (states['binary_sensor.work_layoff'].state == 'on')
      return 'LAYOFF';
    else if (states['binary_sensor.work_commute_active'].state == 'on')
      return states['sensor.leave_home_time'].attributes['12hour'];
    else
      return ' ';
  ]]]
styles:
  icon:
    - color: >
        [[[
          if (states['input_boolean.work_schedule'].state == 'off')
            return 'var(--entity-warning-color)';
          else if (states['binary_sensor.late_for_work_jason_alert'].state == 'on'
              || states['binary_sensor.late_for_work_sheri_alert'].state == 'on')
            return 'var(--entity-critical-color)';
          else if (states['binary_sensor.work_commute_jason_alert'].state == 'on'
              || states['binary_sensor.work_commute_sheri_alert'].state == 'on')
            return 'var(--entity-severe-color)';
          else if (states['binary_sensor.commute_active'].state == 'on')
              return 'var(--state-icon-active-color)';
          else if (states['alert.shift_selection'].state == 'on')
            return 'var(--entity-warning-color)';
          else if (states['sensor.next_work_holiday'].state == 'Today')
            return 'var(--entity-work-holiday-color)';
          else if (states['binary_sensor.work_today'].state == 'off')
            return 'var(--state-icon-color)';
          else if (states['sensor.work_shift_today'].state == 'Days')
            return 'var(--entity-dayshift-color)';
          else if (states['sensor.work_shift_today'].state == 'Afternoons')
            return 'var(--entity-afternoonshift-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
  card:
    - background-color: >
        [[[
          if (states['input_boolean.work_today_off'].state == 'on')
            return 'var(--entity-button-minor-color)';
          else if (states['input_boolean.work_tomorrow_off'].state == 'on')
            return 'var(--entity-button-warning-color)';
          else
            return 'var(--ha-card-background)';
        ]]]
tap_action:
  action: fire-dom-event
  browser_mod:
    command: popup
    deviceID: this
    hide_header: true
    title: 'Work Schedule Settings'
    card: !include /config/lovelace/card/schedule/work_schedule_settings.yaml
double_tap_action:
  action: fire-dom-event
  browser_mod:
    command: popup
    deviceID: this
    title: 'Work Traffic'
    hide_header: true
    large: true
    card: !include /config/lovelace/card/schedule/commute/traffic_map.yaml
hold_action:
  action: call-service
  service: input_boolean.toggle
  service_data:
    entity_id: input_boolean.work_tomorrow_off
