type: entities
entities:
  - entity: binary_sensor.alarm_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.alarm_connected','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: binary_sensor.nvr_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.nvr_connected','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: counter.alarm_code_error_count
    tap_action:
      action: call-service
      service: counter.reset
      confirmation:
        text: Are you sure you want to reset the counter?
      service_data:
        entity_id: counter.alarm_code_error_count


  - !include /config/lovelace/include/entity/alarm/house_alarm.yaml

  - entity: input_boolean.alarm_auto_arming
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.alarm_auto_arming','off') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: input_boolean.alarm_announcements
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.alarm_announcements','off') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: input_boolean.alarm_emails
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.alarm_emails','off') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: input_boolean.alarm_triggered

  - type: custom:fold-entity-row
    head:
      type: section
      label: Alarm Timers
    entities:
      - entity: timer.alarm_arming
        state_color: true

      - entity: timer.alarm_pending
        state_color: true

      - entity: timer.alarm_triggered_reset
        state_color: true

  - type: divider

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','alarm')|map(attribute='entity_id')|list }}"
      options:
        state_color: true #STYLE doesn't work
        card_mod:
          style: | #STYLE doesn't work
            :host {
              --paper-item-icon-color:
                {% if is_state(config.entity,'idle') %} var(--state-icon-color)
                {% else %} var(--entity-warning-color)
                {% endif %}
              ;
              --paper-item-icon-active-color:
                {% if is_state(config.entity,'idle') %} var(--state-icon-color)
                {% else %} var(--entity-critical-color)
                {% endif %}
              ;
            }
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.alarm_alerts
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.alarm_alerts','on') and states.alert|selectattr('attributes.category','eq','alarm')
                      |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-critical-color)
                  {% elif is_state('input_boolean.alarm_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
            }
      padding: 5

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: "automation.alarm_*"
      exclude:
        - entity_id: "automation.alarm_clock*"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.alarm_automation
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.alarm_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }
      padding: 5

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: "automation.lock_*"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.lock_automation
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.lock_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }
      padding: 5

card_mod:
  class: popup