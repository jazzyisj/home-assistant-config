type: entities
state_color: true
entities:
  - entity: binary_sensor.google_traffic_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color: var(--entity-critical-color)
        }

  - entity: binary_sensor.commute_active
    card_mod:
      style: |
        :host {
          --paper-item-icon-active-color:
            {% if is_state('alert.work_commute_jason','on') %} var(--entity-warning-color)
            {% elif is_state('alert.work_commute_sheri','on') %} var(--entity-warning-color)
            {% elif is_state('binary_sensor.commute_active','on') %} var(--entity-minor-color)
            {% else %} var(--state-icon-active-color)
            {% endif %}
            ;
        }

  - entity: input_boolean.commute_times_enabled # recursive with entity include
    style: |
      :host {
        --paper-item-icon-active-color:
          {% if is_state('alert.work_commute_jason','on') %} var(--entity-warning-color)
          {% elif is_state('alert.work_commute_sheri','on') %} var(--entity-warning-color)
          {% elif is_state('binary_sensor.commute_active','on') %} var(--entity-minor-color)
          {% else %} var(--state-icon-active-color)
          {% endif %}
          ;
      }

  - entity: input_number.commute_warning_threshold
    name: "Warning Threshold"
  - entity: input_number.commute_predeparture
    name: "Commute Predeparture"

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      name: "Days Commute Times"
      icon: mdi:clock
    entities:
      - entity: input_datetime.days_leave_home_time
      - entity: input_datetime.days_arrive_work_time
      - entity: input_datetime.days_leave_work_time
      - entity: input_datetime.days_arrive_home_time

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      name: "Afternoons Commute Times"
      icon: mdi:clock
    entities:
      - entity: input_datetime.afternoons_leave_home_time
      - entity: input_datetime.afternoons_arrive_work_time
      - entity: input_datetime.afternoons_leave_work_time
      - entity: input_datetime.afternoons_arrive_home_time

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','commute')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: input_boolean.commute_alerts
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-active-color:
                  {% if states.alert|selectattr('attributes.category','eq','commute')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-warning-color)
                  {% else %} var(--state-icon-active-color)
                  {% endif %}
                ;
            }

  - type: custom:auto-entities
    card:
      type: custom:fold-entity-row
      head:
        entity: sensor.dummy
        name: "Commute Automations"
        icon: mdi:car-multiple
      padding: 0
    filter:
      include:
        - entity_id: "automation.commute_*"
    sort:
      method: name
      ignore_case: true

  - type: call-service
    name: "Update Traffic Sensors"
    service: script.update_traffic_sensors
    action_name: UPDATE
card_mod:
  class: popup