type: entities
entities:
  - entity: binary_sensor.nest_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.nest_connected','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: binary_sensor.upstairs_thermostat_online
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.upstairs_thermostat_online','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: climate.upstairs_thermostat
    state_color: true

  - entity: automation.climate_occupancy_mode_control
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('automation.climate_occupancy_mode_control','off') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      icon: mdi:thermometer
      name: Thermostat Temperatures
    padding: 5
    entities:
      - entity: input_number.home_heat_temperature
      - entity: input_number.home_cool_temperature
      - entity: input_number.night_heat_temperature
      - entity: input_number.night_cool_temperature
      - entity: input_number.guest_heat_temperature
      - entity: input_number.guest_cool_temperature

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      icon: mdi:thermometer-alert
      name: Climate Alert Thresholds
    padding: 5
    entities:
      - entity: input_number.low_temperature_threshold
      - entity: input_number.high_temperature_threshold
      - entity: input_number.high_humidity_threshold
      - entity: input_number.spa_low_temperature_threshold

  - type: custom:fold-entity-row
    head:
      entity: sensor.dummy
      icon: mdi:fan
      name: Fan Settings
    entities:
      - entity: input_boolean.hvac_fan_control

      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.upstairs_bathroom_humidity_fan
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state('binary_sensor.upstairs_bathroom_humidity_fan','on') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
              }
        padding: 5
        entities:
          - entity: sensor.upstairs_bathroom_sensor_humidity
          - entity: input_number.bathroom_humidity_fan_threshold
            name: Humidity Alert

      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.upstairs_bathroom_mold_fan
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state('binary_sensor.upstairs_bathroom_mold_fan','on') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
              }
        padding: 5
        entities:
          - entity: sensor.upstairs_bathroom_mold_indicator
          - entity: input_number.mold_risk_threshold
            name: Mold Alert

      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.upstairs_bathroom_temperature_fan
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state('binary_sensor.upstairs_bathroom_temperature_fan','on') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
              }
        padding: 5
        entities:
          - entity: sensor.upstairs_bathroom_sensor_temperature
          - entity: input_number.bathroom_temperature_differential
            name: Temperature Alert

      - type: custom:auto-entities
        filter:
          include:
            - domain: timer
              attributes:
                type: ceiling_fan
        sort:
          method: name
          ignore_case: true
        card:
          type: custom:fold-entity-row
          head:
            entity: binary_sensor.ceiling_fan_in_use
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if is_state('binary_sensor.ceiling_fan_in_use','on') %} var(--state-icon-active-color)
                    {% else %} var(--state-icon-color)
                    {% endif %}
                  ;
                }
          padding: 5
          group_config:
            secondary_info: last-changed

      - type: custom:auto-entities
        filter:
          include:
            - domain: timer
              attributes:
                type: vent_fan
        sort:
          method: name
          ignore_case: true
        card:
          type: custom:fold-entity-row
          head:
            entity: binary_sensor.vent_fan_in_use
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if is_state('binary_sensor.vent_fan_in_use','on') %} var(--state-icon-active-color)
                    {% else %} var(--state-icon-color)
                    {% endif %}
                  ;
                }
          padding: 5
          group_config:
            secondary_info: last-changed

      - type: custom:auto-entities
        filter:
          include:
            - entity_id: "automation.vent_fan_*"
        sort:
          method: name
          ignore_case: true
        card:
          type: custom:fold-entity-row
          head:
            entity: input_boolean.vent_fan_automation
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if is_state('input_boolean.vent_fan_automation','off') %} var(--entity-warning-color)
                    {% else %} var(--state-icon-color)
                    {% endif %}
                  ;
                }
          padding: 5

      - type: custom:auto-entities
        filter:
          include:
            - entity_id: "automation.ceiling_fan_*"
        sort:
          method: name
          ignore_case: true
        card:
          type: custom:fold-entity-row
          head:
            entity: input_boolean.ceiling_fan_automation
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if is_state('input_boolean.ceiling_fan_automation','off') %} var(--entity-warning-color)
                    {% else %} var(--state-icon-color)
                    {% endif %}
                  ;
                }
          padding: 5

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','climate')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.climate_alerts
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.climate_alerts','on') and states.alert|selectattr('attributes.category','eq','climate')
                      |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-critical-color)
                  {% elif is_state('input_boolean.climate_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
            }
      padding: 5
  - type: custom:auto-entities
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.climate_automation
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.climate_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }
      padding: 5
    filter:
      include:
        - entity_id: "automation.climate_*"

    sort:
      method: name
      ignore_case: true

  - type: custom:slider-entity-row
    entity: input_number.climate_history_hours
    full_row: false
card_mod:
  class: popup

