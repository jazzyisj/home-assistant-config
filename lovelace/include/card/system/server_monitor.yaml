type: entities
title: Server Monitor
icon: mdi:server
card_mod:
  class: basic
entities:
  - type: custom:template-entity-row
    name: "RPi Uptime: {{ states('sensor.rpi_uptime') }}"
    secondary: "Last Boot: {{ states('sensor.last_boot_date_time') }}"
    icon: mdi:clock-start

  - entity: sensor.local_ip
    name: IPV4

  - entity: sensor.ipv6_address_eth0
    name: IPV6

  - entity: sensor.processor_use_percent
    card_mod:
      style: |
        {% if is_state('binary_sensor.processor_use_alert','on') %}
        @keyframes blink {
          50% {
            --paper-item-icon-color: var(--entity-warning-color);
          }
        }
        {% endif %}
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.processor_use_alert','on') %} var(--entity-critical-color)
            {% elif states('sensor.processor_use_percent')|int < 40 %} var(--entity-ok-color)
            {% elif states('sensor.processor_use_percent')|int < 50 %} var(--entity-minor-color)
            {% elif states('sensor.processor_use_percent')|int < 70 %} var(--entity-warning-color)
            {% elif states('sensor.processor_use_percent')|int < 80 %} var(--entity-severe-color)
            {% else %} var(--entity-critical-color)
            {% endif %}
          ;
        }
        {% if is_state('binary_sensor.processor_use_alert','on') %}animation: blink 2s linear infinite;{% endif %}

#STYLE
  - entity: sensor.memory_use_percent
    card_mod:
      style: |
        {% if is_state('binary_sensor.memory_use_alert','on') %}
        @keyframes blink {
          50% {
            --paper-item-icon-color: var(--entity-warning-color);
          }
        }
        {% endif %}
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.memory_use_alert','on') %} var(--entity-critical-color)
            {% elif states('sensor.memory_use_percent')|int < 40 %} var(--entity-ok-color)
            {% elif states('sensor.memory_use_percent')|int < 50 %} var(--entity-minor-color)
            {% elif states('sensor.memory_use_percent')|int < 70 %} var(--entity-warning-color)
            {% elif states('sensor.memory_use_percent')|int < 80 %} var(--entity-severe-color)
            {% else %} var(--entity-critical-color)
            {% endif %}
          ;
        }
        {% if is_state('binary_sensor.memory_use_alert','on') %}animation: blink 2s linear infinite;{% endif %}

  - entity: sensor.swap_use_percent
    card_mod:
      style: |
        {% if is_state('binary_sensor.swap_use_alert','on') %}
        @keyframes blink {
          50% {
            --paper-item-icon-color: var(--entity-warning-color);
          }
        }
        {% endif %}
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.swap_use_alert','on') %} var(--entity-critical-color)
            {% elif states('sensor.swap_use_percent')|int < 40 %} var(--entity-ok-color)
            {% elif states('sensor.swap_use_percent')|int < 50 %} var(--entity-minor-color)
            {% elif states('sensor.swap_use_percent')|int < 70 %} var(--entity-warning-color)
            {% elif states('sensor.swap_use_percent')|int < 80 %} var(--entity-severe-color)
            {% else %} var(--entity-critical-color)
            {% endif %}
          ;
        }
        {% if is_state('binary_sensor.swap_use_alert','on') %}animation: blink 2s linear infinite;{% endif %}

  - entity: sensor.cpu_temperature
    card_mod:
      style: |
        {% if is_state('binary_sensor.cpu_temperature_alert','on') %}
        @keyframes blink {
          50% {
            --paper-item-icon-color: var(--entity-warning-color);
          }
        }
        {% endif %}
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.cpu_temperature_alert','on') %} var(--entity-critical-color)
            {% elif states('sensor.cpu_temperature')|int < 40 %} var(--entity-ok-color)
            {% elif states('sensor.cpu_temperature')|int < 50 %} var(--entity-minor-color)
            {% elif states('sensor.cpu_temperature')|int < 70 %} var(--entity-warning-color)
            {% elif states('sensor.cpu_temperature')|int < 80 %} var(--entity-severe-color)
            {% else %} var(--entity-critical-color)
            {% endif %}
          ;
        }
        {% if is_state('binary_sensor.cpu_temperature_alert','on') %}animation: blink 2s linear infinite;{% endif %}

  - type: custom:fold-entity-row
    head:
      entity: sensor.disk_use_percent_home
    padding: 5
    card_mod:
      style: |
        {% if is_state('binary_sensor.disk_use_alert','on') %}
        @keyframes blink {
          50% {
            --paper-item-icon-color: var(--entity-warning-color);
          }
        }
        {% endif %}
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.disk_use_alert','on') %} var(--entity-critical-color)
            {% elif states('sensor.disk_use_percent_home')|int < 40 %} var(--entity-ok-color)
            {% elif states('sensor.disk_use_percent_home')|int < 50 %} var(--entity-minor-color)
            {% elif states('sensor.disk_use_percent_home')|int < 70 %} var(--entity-warning-color)
            {% elif states('sensor.disk_use_percent_home')|int < 80 %} var(--entity-severe-color)
            {% else %} var(--entity-critical-color)
            {% endif %}
          ;
        }
        {% if is_state('binary_sensor.disk_use_alert','on') %}animation: blink 2s linear infinite;{% endif %}

    entities:
      - type: custom:template-entity-row
        name: Snapshot Backup Disk Use
        icon: mdi:folder-sync
        state: "{{ state_attr('sensor.snapshot_backup','size_in_home_assistant') }}"
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if states('sensor.alarm_snapshots')|int > 5 %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
                ;
            }

      - type: custom:fold-entity-row
        head:
          entity: sensor.alarm_snapshots
          name: Alarm Snapshot Disk Use
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if states('sensor.alarm_snapshots')|int > 100 %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                  ;
              }
        padding: 5
        entities:
          - type: call-service
            service: shell_command.alarm_snapshots_purge_all
            icon: mdi:database-sync
            name: Purge Motion Capture
            action_name: PURGE

      - type: custom:fold-entity-row
        head:
          entity: sensor.tts
          name: TTS Cache Disk Use
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if states('sensor.tts')|int > 100 %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                  ;
              }
        padding: 5
        entities:
          - type: call-service
            service: shell_command.tts_purge_all
            icon: mdi:database-sync
            name: Purge TTS Cache
            action_name: PURGE