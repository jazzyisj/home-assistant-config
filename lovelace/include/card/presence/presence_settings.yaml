type: entities
entities:
  - entity: input_select.occupancy_mode
  - entity: input_boolean.occupancy_notifications
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.occupancy_notifications','off') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: input_boolean.occupancy_announcements
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.occupancy_announcements','off') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','presence')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.presence_alerts
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.presence_alerts','on') and states.alert|selectattr('attributes.category','eq','presence')
                      |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-critical-color)
                  {% elif is_state('input_boolean.presence_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
            }
      padding: 5

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','mobile')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.mobile_alerts
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.mobile_alerts','on') and states.alert|selectattr('attributes.category','eq','mobile')
                      |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-critical-color)
                  {% elif is_state('input_boolean.mobile_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
            }
      padding: 5

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: "automation.presence_*"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.presence_automation
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.presence_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }
    padding: 5
card_mod:
  class: popup