###############################################################################
## Button - Work Schedule
###############################################################################
type: custom:button-card
template: menu_button
entity: input_boolean.work_schedule
name: Work Schedule
icon: >
  [[[
    if (states['binary_sensor.commute_active'].state == 'on')
      return states['binary_sensor.commute_active'].attributes.icon;
    else if (states['input_boolean.work_schedule'].state == 'off')
      return states['input_boolean.work_schedule'].attributes.icon;
    else if (states['calendar.work_holiday'].state == 'on')
      return states['calendar.work_holiday'].attributes.icon;
    else if (states['binary_sensor.work_today'].state == 'on')
      return states['binary_sensor.work_today'].attributes.icon;
    else return 'mdi:factory';
  ]]]
show_state: true
state_display: >
  [[[
    if (states['binary_sensor.prework_active'].state == 'on'
        && states['binary_sensor.jason_home'].state == 'on')
      return states['sensor.leave_home_time_jason'].attributes['12hour'];
    else if (states['binary_sensor.prework_active'].state == 'on'
        && states['binary_sensor.sheri_home'].state == 'on')
      return states['sensor.leave_home_time_sheri'].attributes['12hour'];
    else
      return ' ';
  ]]]
styles:
  icon:
    - color: >
        [[[
          if (states['binary_sensor.leave_home_jason_alert'].state == 'on'
              || states['binary_sensor.leave_home_sheri_alert'].state == 'on')
            return 'var(--entity-critical-color)';
          else if (states['binary_sensor.work_commute_jason_alert'].state == 'on'
              || states['binary_sensor.work_commute_sheri_alert'].state == 'on')
            return 'var(--entity-warning-color)';
          else if (states['binary_sensor.commute_active'].state == 'on')
              return 'var(--state-icon-active-color)';
          else if (states['binary_sensor.prework_active'].state == 'on')
            return 'var(--entity-minor-color)';
          else if (states['alert.shift_selection'].state == 'on')
            return 'var(--entity-warning-color)';
          else if (states['sensor.next_work_holiday'].state == 'Today')
            return 'var(--entity-work-holiday-color)';
          else if (states['binary_sensor.work_today'].state == 'off')
            return 'var(--state-icon-color)';
          else if (states['sensor.current_shift'].state == 'Days')
            return 'var(--entity-dayshift-color)';
          else if (states['sensor.current_shift'].state == 'Afternoons')
            return 'var(--entity-afternoonshift-color)';
          else if (states['input_boolean.work_schedule'].state == 'on')
            return 'var(--state-icon-active-color)';
          else return 'var(--state-icon-color)';
        ]]]
tap_action:
  action: fire-dom-event
  browser_mod:
    command: popup
    deviceID: this
    title: 'Work Schedule Settings'
    card: !include /config/lovelace/include/card/schedule/work_schedule_settings.yaml
double_tap_action:
  action: navigate
  navigation_path: /lovelace/schedule
hold_action:
  action: toggle
