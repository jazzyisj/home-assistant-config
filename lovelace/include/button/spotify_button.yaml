type: custom:button-card
template: menu_button
entity: switch.spotify
name: Spotify
icon: mdi:spotify
styles:
  icon:
    - color: >
        [[[
          var on_states = ['playing','paused'];
          var spotify_player = states['sensor.spotify_media_player'].state;
          var spotify_on = states['switch.spotify'].state == 'on';

          if (spotify_player != 'off')
            var spotify_state = states[spotify_player].state;
          else
            var spotify_state = 'off';

          if (states['binary_sensor.spotify_failed'].state == 'on')
            return 'var(--entity-critical-color)';
          else if (states['input_boolean.mute_all'].state == 'on'
              || spotify_state == 'unknown'
              || spotify_state == 'unavailable')
            return 'var(--entity-warning-color)';  // system muted
          else if (spotify_on && spotify_state == 'paused')
            return 'rgb(255,255,255)'; // spotify paused
          else if (spotify_on
              && states['script.scene_wake_up'].state == 'on'
              && states['input_select.media_preset_type_wake'].state == 'Spotify')
            return 'rgb(255,165,0)'; // wake radio is spotify
          else if (spotify_on
              && states['timer.media_preset_sleep'].state == 'active'
              && states['input_select.media_preset_type_sleep'].state == 'Spotify')
            return 'rgb(17,0,102)'; // sleep radio is spotify
          else if (spotify_on && spotify_state == 'playing')
            return 'var(--entity-spotify-color)'; // spotify playing
          else if (states['binary_sensor.spotify_active'].state == 'on')
            return 'var(--state-icon-active-color)';  // spotify playing on other accounts
          else
            return 'var(--state-icon-color)';  // spotify off
        ]]]
tap_action: !include /config/lovelace/include/action/open_media_launcher.yaml
double_tap_action:
  action: call-service
  service: script.media_player_toggle_pause
  service_data:
    media_type: spotify
hold_action:
  action: toggle
