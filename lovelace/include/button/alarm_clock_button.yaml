type: custom:button-card
template: menu_button
entity: sensor.dummy
show_state: true
icon: >
  [[[
    if (states['sensor.alarm_clock_status'].state == 'off')
      return 'mdi:alarm-off';
    else if (states['sensor.alarm_clock_status'].state == 'playing')
      return 'mdi:alarm-note';
    else if (states['sensor.alarm_clock_status'].state == 'snoozed')
      return 'mdi:alarm-snooze';
    else if (states['sensor.alarm_clock_status'].state == 'failed')
      return 'mdi:alert-circle';
    else if (states['sensor.alarm_clock_status'].state == 'pending')
      return 'mdi:alarm';
    else
      return 'mdi:alarm';
  ]]]
state_display: >
  [[[
    if (states['sensor.alarm_clock_status'].state == 'pending')
      return (states['sensor.alarm_clock_next_alarm_display'].state);
    else
      return ' ';
  ]]]
styles:
  icon:
    - color: >
        [[[
          if (states['sensor.alarm_clock_status'].state == 'off')
            return 'var(--state-icon-color)';
          else if (states['sensor.alarm_clock_status'].state == 'playing')
            return 'var(--entity-minor-color)';
          else if (states['sensor.alarm_clock_status'].state == 'snoozed')
            return 'var(--entity-warning-color)';
          else if (states['sensor.alarm_clock_status'].state == 'failed')
            return 'var(--entity-critical-color)';
          else if (states['sensor.alarm_clock_status'].state == 'pending')
            return 'var(--state-icon-active-color)';
          else
            return 'var(--entity-disabled-color)';
        ]]]
tap_action:
  action: call-service
  service: browser_mod.popup
  service_data:
    deviceID: this
    title: Waketime Settings
    large: false
    card:
      !include /config/lovelace/include/entities/waketime_settings.yaml
double_tap_action:
  action: navigate
  navigation_path: /lovelace/schedule
hold_action:
  action: none