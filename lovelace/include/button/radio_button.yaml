type: custom:button-card
template: menu_button
entity: switch.radio
name: Radio
icon: mdi:radio
styles:
  icon:
    - color: >
        [[[
          var radio_player = states['sensor.radio_media_player'].state;

          if (radio_player != '')
              var radio_state = states[radio_player].state;
            else
              var radio_state = 'error';

          if (states['input_boolean.radio_failed'].state == 'on'
              || states['binary_sensor.wan_connected_alert'].state == 'on'
              || radio_state == 'unknown'
              || radio_state == 'unavailable'
              || radio_state == 'error')
            return 'var(--entity-critical-color)';
          else if (states['input_boolean.mute_all'].state == 'on')
            return 'var(--entity-warning-color)';  // system muted
          else if (radio_state == 'paused')
            return 'var(--entity-minor-color)';
          else if (states['script.scene_wake_up'].state == 'on'
              && states['input_select.media_preset_type_wake'].state == 'Radio')
            return 'rgb(255,165,0)';
          else if (states['timer.media_preset_sleep'].state == 'active'
              && states['input_select.media_preset_type_sleep'].state == 'Radio')
            return 'rgb(17,0,102)';
          else if (states['switch.radio'].state == 'on')
            return 'var(--state-icon-active-color)';
          else
            return 'var(--state-icon-color)';
        ]]]
tap_action: !include /config/lovelace/include/action/open_media_launcher.yaml
double_tap_action:
  action: call-service
  service: script.media_player_toggle_pause
  service_data:
    media_type: radio
hold_action:
  action: toggle