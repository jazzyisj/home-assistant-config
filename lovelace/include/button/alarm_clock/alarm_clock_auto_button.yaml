type: custom:button-card
entity: input_boolean.alarm_clock_launcher_auto
template: alarm_cock_button
show_name: true
name: "AUTO"
icon: "[[[ return states['sensor.alarm_clock_auto'].attributes.icon; ]]]"
show_state: true
state_display: "[[[ return states['sensor.alarm_clock_auto'].state; ]]]"
styles:
  icon:
    - color: >
        [[[
          if (states['sensor.alarm_clock_auto'].state == 'Off')
            return 'var(--state-icon-color)';
          else if (states['sensor.alarm_clock_auto'].state == 'Active')
            return 'var(--alarm-clock-active-color)';
          else if (states['sensor.alarm_clock_auto'].state == 'Failed')
            return 'var(--entity-critical-color)';
          else if (states['sensor.alarm_clock_auto'].state == 'Snoozed')
            return 'var(--alarm-clock-snooze-color)';
          else if (states['sensor.alarm_clock_auto'].state == 'Paused')
            return 'var(--entity-warning-color)';
          else
            return 'var(--alarm-clock-pending-color)';
        ]]]
tap_action:
  action: toggle
double_tap_action:
  action: call-service
  service: script.alarm_clock_stop
  service_data:
    reset_volume: true
hold_action:
  action: call-service
  service: script.alarm_clock_auto_toggle

