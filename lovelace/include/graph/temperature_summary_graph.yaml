#######################################################################################################################
## Temperature Summary Graph
# https://github.com/RomRider/apexcharts-card
# https://apexcharts.com/docs/installation/
#######################################################################################################################

type: custom:apexcharts-card
config_templates: weather_graph
apex_config:
  title:
    text: Temperature
yaxis:
  - id: temperature
    show: true
    apex_config:
      tickAmount: 5
      decimalsInFloat: 0
      forceNiceScale: true
      title:
        text: Temperature
        rotate: -90

  - id: percent
    show: true
    opposite: true
    min: 0
    max: 100
    apex_config:
      tickAmount: 5
      decimalsInFloat: 0
      labels:
        show: true
      title:
        text: Perecent
        rotate: -90

all_series_config:
  type: area
  float_precision: 0 # legend/toolip
  curve: smooth
  stroke_width: 1
  group_by:
    func: max
    duration: 1h
series:
  - entity: sensor.climacell_temperature
    yaxis_id: temperature
    type: area
    name: Temperature
    stroke_width: 1
    opacity: 0.5
    color: '#FFBF00'
    color_threshold:
      - value: -20
        color: '#978FC3'
      - value: -10
        color: '#928FBB'
      - value: 0
        color: '#97C4D8'
      - value: 10
        color: '#8BCDCF'
      - value: 20
        color: '#72B9BB'
      - value: 30
        color: '#708FA9'
      - value: 40
        color: '#2BD59F'
      - value: 50
        color: '#47BC4E'
      - value: 60
        color: '#85B619'
      - value: 65
        color: '#B8C00D'
      - value: 70
        color: '#F4CC01'
      - value: 80
        color: '#F7B409'
      - value: 85
        color: '#F29F0D'
      - value: 90
        color: '#ED8B14'
      - value: 95
        color: '#EC7215'
      - value: 100
        color: '#F14A12'
      - value: 110
        color: '#DB240D'

  - entity: sensor.climacell_feels_like
    yaxis_id: temperature
    name: RealFeel
    type: line
    fill_raw: 'null'
    transform: "if (isNaN(x)) return hass.states['sensor.climacell_temperature'].state; else return x;"
    stroke_width: 2
    opacity: 1
    color: '#FF0000'
    color_threshold:
      - value: -20
        color: '#978FC3'
      - value: -10
        color: '#928FBB'
      - value: 0
        color: '#97C4D8'
      - value: 10
        color: '#8BCDCF'
      - value: 20
        color: '#72B9BB'
      - value: 30
        color: '#708FA9'
      - value: 40
        color: '#2BD59F'
      - value: 50
        color: '#47BC4E'
      - value: 60
        color: '#85B619'
      - value: 65
        color: '#B8C00D'
      - value: 70
        color: '#F4CC01'
      - value: 80
        color: '#F7B409'
      - value: 85
        color: '#F29F0D'
      - value: 90
        color: '#ED8B14'
      - value: 95
        color: '#EC7215'
      - value: 100
        color: '#F14A12'
      - value: 110
        color: '#DB240D'

  - entity: sensor.climacell_temperature
    yaxis_id: temperature
    type: line
    name: AVG
    stroke_width: 3
    opacity: 0.8
    color: '#FF00C7'
    group_by:
      func: avg
      duration: 12h

  - entity: sensor.climacell_dew_point
    yaxis_id: temperature
    name: Dewpoint
    type: line
    stroke_width: 1
    opacity: 1
    color: '#00FF00'

  - entity: sensor.climacell_humidity
    yaxis_id: percent
    name: Humidity
    type: line
    stroke_width: 3
    opacity: 0.6
    color: '#0000FF'
    color_threshold:
      - value: 0
        color: '#FFFFFF'
      - value: 100
        color: '#0C00FF'