type: entities
card_mod:
  style: |
    .card-header {
      font-size: 18px;
      font-variant: small-caps;
    }
entities:
  - entity: input_boolean.work_schedule
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.work_schedule','on') %} var(--state-icon-active-color)
            {% else %} var(--state-icon-color)
            {% endif %}
            ;
        }

  - type: custom:fold-entity-row
    head:
      entity: sensor.current_shift
      tap_action:
        action: none
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.work_schedule','off') %} var(--state-icon-color)
                {% elif is_state('input_boolean.shift_override','on') %} var(--entity-warning-color)
                {% elif is_state('sensor.current_shift','Off') %} var(--entity-warning-color)
                {% elif is_state('sensor.current_shift','Days') %} var(--entity-dayshift-color)
                {% elif is_state('sensor.current_shift','Afternoons') %} var(--entity-afternoonshift-color)
                {% else %} var(--disabled-text-color)
                {% endif %}
                ;
            }
    entities:
      - entity: input_boolean.shift_override
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.shift_override','on') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
                ;
            }

      - entity: input_select.shift_selection
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.work_schedule','off') %} var(--state-icon-color)
                {% elif is_state('input_select.shift_selection','Off') %} var(--entity-warning-color)
                {% elif is_state('input_select.shift_selection','Days') %} var(--entity-dayshift-color)
                {% elif is_state('input_select.shift_selection','Afternoons') %} var(--entity-afternoonshift-color)
                {% else %} var(--disabled-text-color)
                {% endif %}
                ;
            }

  - entity: input_boolean.saturday_workday
    tap_action:
      action: none
    double_tap_action:
      action: none
    hold_action:
      action: none
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.saturday_workday','on') %} var(--state-icon-active-color)
            {% else %} var(--state-icon-color)
            {% endif %}
            ;
        }

  - entity: input_boolean.sunday_workday
    tap_action:
      action: none
    double_tap_action:
      action: none
    hold_action:
      action: none
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.sunday_workday','on') %} var(--state-icon-active-color)
            {% else %} var(--state-icon-color)
            {% endif %}
            ;
        }

  - type: custom:template-entity-row # don't use entity include - recursive popup
    entity: binary_sensor.work_today
    state: "{{ states('binary_sensor.work_today')|title }}"
    state_color: true
    tap_action:
      action: none
    double_tap_action:
      action: none
    hold_action:
      action: none
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
              {% if is_state('input_boolean.work_schedule','off') %} var(--state-icon-color)
              {% elif is_state('binary_sensor.work_today','on') %}
                {% if is_state('input_boolean.shift_override','on') %} var(--entity-warning-color)
                {% elif is_state('sensor.current_shift','Days') %} var(--entity-dayshift-color)
                {% elif is_state('sensor.current_shift','Afternoons') %} var(--entity-afternoonshift-color)
                {% else %} var(--entity-warning-color)
                {% endif %}
              {% else %} var(--disabled-text-color)
              {% endif %}
            ;
        }

  - type: custom:template-entity-row # don't use entity include - recursive popup
    entity: binary_sensor.work_tomorrow
    tap_action:
      action: none
    double_tap_action:
      action: none
    hold_action:
      action: none
    state: "{{ states('binary_sensor.work_tomorrow')|title }}"
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
              {% if is_state('input_boolean.work_schedule','off') %} var(--state-icon-color)
              {% elif is_state('binary_sensor.work_tomorrow','on') %}
                {% if is_state('input_boolean.shift_override','on') %} var(--entity-warning-color)
                {% elif is_state('sensor.tomorrow_shift','Days') %} var(--entity-dayshift-color)
                {% elif is_state('sensor.tomorrow_shift','Afternoons') %} var(--entity-afternoonshift-color)
                {% else %} var(--entity-warning-color)
                {% endif %}
              {% else %} var(--disabled-text-color)
              {% endif %}
            ;
        }

  - type: custom:template-entity-row # don't use entity include - recursive popup
    entity: sensor.work_holiday
    tap_action:
      action: none
    double_tap_action:
      action: none
    hold_action:
      action: none
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
              {% if is_state('sensor.work_holiday','Off') %} var(--state-icon-color)
              {% else %} var(--entity-work-holiday-color);
              {% endif %}
            ;
        }

  - !include /config/lovelace/include/entity/commute/commute_settings.yaml

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      name: Work Schedule Alerts
      icon: mdi:alert
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
                {% if not is_state('alert.shift_selection','idle') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
          }
    entities:
      - entity: alert.shift_selection
        state_color: true
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none