type: entities
title: Home Assistant
icon: mdi:home-assistant
show_header_toggle: false
style: |
  .card-header {
    font-size: 22px;
    font-variant: small-caps;
  }
entities:
  - type: custom:template-entity-row
    entity: sensor.uptime
    name: "Home Assistant Uptime"
    secondary: "{{ states('sensor.ha_uptime') }}"
    tap_action:
      action: none
    double_tap_action:
      action: none
    hold_action:
      action: none
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
      }

  - type: custom:auto-entities
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.integration_connected
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
        style: |
          :host {
            --paper-item-icon-color:
              {%- if is_state('binary_sensor.integration_connected','on') %} var(--state-icon-active-color)
              {%- else %} var(--entity-critical-color)
              {%- endif -%}
              ;
          }
      padding: 5
    sort:
      method: name
      ignore_case: true
    filter:
      include:
        - group: group.integration_connected_sensors
          options:
            secondary_info: last-changed
            style: |
              :host {
                --paper-item-icon-color:
                  {%- if is_state(config.entity,'on') %} var(--state-icon-active-color)
                  {%- else %} var(--entity-warning-color)
                  {%- endif -%}
                  ;
              }

  - type: custom:auto-entities
    filter:
      include:
        - domain: zwave
          options:
            secondary_info: last-changed
            #STYLE
            style: |
              :host {
                --paper-item-icon-color:
                  {%- if is_state(config.entity,'ready') %} var(--state-icon-active-color)
                  {%- elif is_state(config.entity,'initializing') %} var(--state-icon-warning-color)
                  {%- else %} var(--entity-critical-color)
                  {%- endif -%}
                  ;
              }
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: sensor.zwave_unavailable_devices
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
        style: |
          :host {
            --paper-item-icon-color:
              {%- if is_state('sensor.zwave_unavailable_devices','0') %} var(--state-icon-active-color)
              {%- else %} var(--entity-critical-color)
              {%- endif -%}
              ;
          }
      padding: 0
    entities:
      - type: button
        icon: mdi:medical-bag
        name: Heal ZWave Network
        action_name: HEAL
        tap_action:
          action: call-service
          service: zwave.heal_network

      - type: button
        icon: mdi:restart
        name: Reset ZWave Network
        action_name: RESET
        tap_action:
          action: call-service
          service: zwave.soft_reset

  - type: custom:fold-entity-row
    head:
      entity: sensor.offline_devices
      tap_action:
        action: none
      double_tap_action:
        action: none
      hold_action:
        action: none
      style: |
        :host {
          --paper-item-icon-color:
            {%- if is_state('sensor.offline_devices','0') %} var(--state-icon-active-color)
            {%- else %} var(--entity-critical-color)
            {%- endif -%}
            ;
        }
      padding: 0
    entities:
      - type: custom:hui-element
        card_type: markdown
        content: !include /config/include/template/offline_devices_markdown.yaml

  - type: custom:auto-entities
    card:
      type: custom:fold-entity-row
      head:
        entity: sensor.unavailable_sensors
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
        style: |
          :host {
            --paper-item-icon-color:
              {%- if is_state('sensor.unavailable_sensors','0') %} var(--state-icon-active-color)
              {%- else %} var(--entity-warning-color)
              {%- endif -%}
              ;
          }
        padding: 0
      entities:
        - type: custom:hui-element
          card_type: markdown
          content: !include /config/include/template/unavailable_sensors_markdown.yaml

  - entity: binary_sensor.remote_ui
    tap_action:
      action: none
    double_tap_action:
      action: none
    hold_action:
      action: none
    style: |
      :host {
        --paper-item-icon-color:
          {%- if is_state('binary_sensor.remote_ui','on') %} var(--state-icon-active-color)
          {%- else %} var(--entity-critical-color)
          {%- endif -%}
          ;
      }

  - !include /config/lovelace/include/entity/browser_monitor_entity.yaml

  - entity: sensor.last_successful_authentication
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
      }

  - type: custom:fold-entity-row
    head:
      entity: binary_sensor.system_update
      state_color: true
      tap_action:
        action: none
      double_tap_action:
        action: none
      hold_action:
        action: navigate
        navigation_path: /hassio/dashboard
      style: |
        :host {
          --paper-item-icon-color: var(--state-icon-active-color)
          --paper-item-icon-active-color: {%- 'var(--entity-critical-color)' if states('sensor.breaking_change_warnings')|int > else 'var(--entity-warning-color)' %};
        }
    padding: 0
    entities:
      - type: custom:hui-element
        card_type: entities
        show_header_toggle: false
        state_color: true
        entities: !include /config/lovelace/include/entities/system_updates.yaml
        #STYLE
        style: |
          :host {
            left: 0
            top: 0
            border: 5px solid green;
            --ha-card-background-color: rgba(0, 0, 0, 0)
            --ha-card-drop-shadow: none
          }
          .card-content {
            padding: 5px;
            margin: 0px;
          }
  - entity: input_select.log_level
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
      }

  - entity: sensor.unavailable_entities
    style: |
      :host {
        --paper-item-icon-color:
          {% if states('sensor.unavailable_entities')|int == 0 %} var(--state-icon-active-color)
          {% else %} var(--entity-warning-color)
          {% endif %}
          ;
      }