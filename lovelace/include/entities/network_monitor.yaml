type: entities
title: Network
icon: mdi:check-network
show_header_toggle: false
state_color: true
style: |
  .card-header {
    font-size: 22px;
    font-variant: small-caps;
  }
entities:
  - entity: binary_sensor.wan_connected
    style: |
      :host {
        --paper-item-icon-color:
          {% if is_state('binary_sensor.wan_connected','on')%} var(--state-icon-active-color)
          {% else %} var(--entity-warning-color)
          {% endif %}
          ;
      }

  - entity: sensor.myip
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
      }

  #DISABLED - type: custom:fold-entity-row
  #   head:
  #     entity: sensor.cert_expiry_jazzyisj_duckdns_org
  #     style: |
  #       :host {
  #         --paper-item-icon-color:
  #           {% if states('sensor.cert_expiry_jazzyisj_duckdns_org') in ['unavailable','unknown'] %} var(--disabled-text-color)
  #           {% elif states('sensor.cert_expiry_jazzyisj_duckdns_org')|int == 0 %} var(--entity-critical-color)
  #           {% elif states('sensor.cert_expiry_jazzyisj_duckdns_org')|int < 30 %} var(--entity-warning-color)
  #           {% else %} var(--state-icon-active-color)
  #           {% endif %}
  #           ;
  #       }
  #   entities:
  #     - entity: sensor.cert_expiry_timestamp_jazzyisj_duckdns_org
  #       style: |
  #         :host {
  #           --paper-item-icon-color:
  #             {% if states('sensor.cert_expiry_timestamp_jazzyisj_duckdns_org') in ['unavailable','unknown'] %} var(--disabled-text-color)
  #             {% elif state_attr('sensor.cert_expiry_timestamp_jazzyisj_duckdns_org','is_valid')|lower != 'true'
  #               or state_attr('sensor.cert_expiry_timestamp_jazzyisj_duckdns_org','error')|lower != 'none' %} var(--entity-critical-color)
  #             {% elif ( as_timestamp(states('sensor.cert_expiry_timestamp_jazzyisj_duckdns_org')) - as_timestamp( now() ) ) < 604800 %} var(--entity-warning-color)
  #             {% else %} var(--state-icon-active-color)
  #             {% endif %}
  #             ;
  #         }

  - type: custom:fold-entity-row
    head:
      entity: sensor.j_router_kib_s_received
      name: Router Traffic
      icon: mdi:router-network
    padding: 10
    style: |
      :host {
        --paper-item-icon-color: var(--state-icon-active-color);
      }
    entities:
      - entity: sensor.j_router_b_sent
      - entity: sensor.j_router_b_received
      - entity: sensor.j_router_packets_sent
      - entity: sensor.j_router_kib_s_received
      - entity: sensor.j_router_kib_s_sent
      - entity: sensor.j_router_packets_s_received
      - entity: sensor.j_router_packets_s_sent

  - type: custom:auto-entities
    card:
      type: custom:fold-entity-row
      head:
        entity: sensor.online_network_devices
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('binary_sensor.network_device','on')%} var(--entity-warning-color)
              {% else %} var(--state-icon-active-color)
              {% endif %}
              ;
          }
      padding: 10
    sort:
      method: state
      ignore_case: true
    filter:
      include:
        - domain: device_tracker
          options:
            secondary_info: last-changed
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state(config.entity,'home')%} var(--state-icon-active-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                  ;
              }
      # devices on network, exlude bluetooth, ping, location trackers
      exclude:
        # - state: Away
        # - state: unknown
        # - state: not_home
        - domain: person
        - entity_id: "*_bt"
        - entity_id: "*_ping"
        - entity_id: "*google_maps*"
        - entity_id: device_tracker.jason_tracker
        - entity_id: device_tracker.sheri_tracker
        - entity_id: device_tracker.jphone
        - entity_id: device_tracker.sphone
    entities:
      - entity: variable.known_network_devices
        style: |
          :host {
            --paper-item-icon-color: var(--state-icon-active-color);
          }

      - type: button
        icon: mdi:layers-plus
        name: Add Device
        action_name: ADD
        tap_action:
          action: call-service
          service: script.network_device_add

      - type: button
        icon:  mdi:layers-minus
        name: Remove Device
        action_name: REMOVE
        tap_action:
          action: call-service
          service: script.network_device_delete

      - type: divider

  - type: custom:auto-entities
    card:
      type: custom:fold-entity-row
      head:
        type: custom:template-entity-row
        name: Bluetooth Devices
        icon: "{{ 'mdi:bluetooth' if is_state('binary_sensor.bluetooth_alert','off') else 'mdi:bluetooth-off' }}"
        #IDEA number of active bluetooth devices - same issue as unknown browser alert
        state: "{{ '' if is_state('binary_sensor.bluetooth_alert','off') else 'Disconnected' }}"
        active: "{{ is_state('binary_sensor.bluetooth_alert','on') }}"
        state_color: true
        style: |
          :host {
            --paper-item-icon-color: var(--state-icon-active-color);
            --paper-item-icon-active-color: var(--entity-critical-color);
          }
      padding: 10
    sort:
      method: state
      ignore_case: true
    filter:
      include:
        - entity_id: "*_bt"
          options:
            secondary_info: last-changed
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state(config.entity,'home')%} var(--state-icon-active-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                  ;
              }