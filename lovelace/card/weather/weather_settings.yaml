###############################################################################
## Weather Settings Card
###############################################################################
type: entities
title: Weather Settings
icon: mdi:weather-partly-snowy-rainy
show_header_toggle: false
state_color: true
entities:
  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      name: Weather API Connected
      icon: mdi:weather-partly-snowy-rainy
    entities:
      - entity: binary_sensor.climacell_connected
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.climacell_connected','off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: binary_sensor.envcan_connected
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.envcan_connected','off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: binary_sensor.noaa_connected
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.noaa_connected','off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: binary_sensor.dark_sky_connected #DARKSKY
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.dark_sky_connected','off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: binary_sensor.openuv_connected
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.openuv_connected','off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: binary_sensor.iqvia_connected
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.iqvia_connected','off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

      - entity: binary_sensor.waqi_connected
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('binary_sensor.waqi_connected','off') %} var(--entity-critical-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      icon: mdi:thermometer-lines
      name: Temp Alert Thresholds
    padding: 5
    entities:
      - type: custom:numberbox-card
        entity: input_number.outdoor_low_temperature_threshold

      - type: custom:numberbox-card
        entity: input_number.outdoor_high_temperature_threshold

  - entity: input_boolean.morning_weather_enabled
  - entity: input_boolean.display_gdacs

  - type: button
    entity: script.weather_report
    name: Weather Report
    action_name: PLAY

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','weather')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.weather_alerts
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.weather_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
              ;
              --paper-item-icon-active-color:
                {% if states.alert|selectattr('attributes.category','eq','weather')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                {% else %} var(--state-icon-active-color).
                {% endif %}
              ;
            }
      padding: 5

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: 'automation.weather_*'
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.weather_automation
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.weather_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }
      padding: 5
card_mod:
  class: basic
