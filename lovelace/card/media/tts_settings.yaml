###############################################################################
## TTS Settings
###############################################################################
type: entities
title: "TTS Announcement Settings"
show_header_toggle: false
state_color: true
entities:
  - type: custom:fold-entity-row
    padding: 5
    head:
      entity: input_boolean.tts_enabled
    entities:
      - entity: input_boolean.hass_tts_enabled
      - entity: input_boolean.kiosk_tts_enabled
      - entity: input_boolean.jason_phone_tts_enabled
      - entity: input_boolean.sheri_phone_tts_enabled

  - entity: variable.tts_saved_messages
    name: "Saved Messages"

  - type: buttons
    entities:
      - entity: script.tts_play_saved_messages
        name: "Play Messages"
        tap_action:
          action: call-service
          service: script.tts_play_saved_messages
          serivce_data:
            skip_none: false

      - entity: script.tts_clear_saved_messages
        name: "Delete Messages"
        tap_action:
          action: call-service
          service: script.tts_clear_saved_messages
    card_mod:
      style:
        hui-buttons-base $: |
          .ha-scrollbar {
            justify-content: center;
          }

  - type: conditional
    conditions:
      - entity: variable.tts_saved_messages
        state_not: "0"
    row:
      type: custom:hui-element
      card_type: markdown
      title: "Saved Messages"
      content: |
        {%- if states('variable.tts_saved_messages')|int(-1) > 0 %}
          {%- set msgnum = namespace(value=0) %}
          {%- for key,value in states.variable.tts_saved_messages.attributes.items() %}
            {%- if loop.index % 2 == 1 %}
              {{ value }}
            {%- elif loop.index % 2 == 0 %}
              <sup>{{ as_local(value|as_datetime).strftime('%A, %B %-d at %-I:%M %p') }}</sup>
            {%- endif %}
          {%- endfor %}
          {%- else %} No messages.
        {%- endif %}

  - entity: button.tts_last_message

  - type: custom:fold-entity-row
    padding: 5
    head:
      type: custom:template-entity-row
      name: "TTS Services"
      icon: mdi:account-voice
    entities:
      - type: section
        label: Normal TTS

      - entity: input_select.tts_service
        name: "TTS Service"

      - type: conditional
        conditions:
          - entity: input_select.tts_service
            state: "Nabu Casa"
        row:
          entity: input_select.tts_cloud_voice

      - entity: select.tts_media_player
        name: "Announcement Media Player"
      - entity: input_number.tts_volume
        name: "Announcement Volume"

      - type: section
        label: Quiet Time TTS

      - entity: select.tts_media_player_quiet
        name: "Quiet Time Media Player"
      - entity: input_number.tts_volume_quiet
        name: "Quiet Time Volume"

      - type: section
        label: Night Time TTS

      - entity: select.tts_media_player_night
        name: "Night Mode Media Player"
      - entity: input_number.tts_volume_night
        name: "Night Mode Volume"

      - type: section
        label: Alert TTS

      - entity: select.tts_media_player_alert
      - entity: input_number.tts_volume_alert

      - type: section
        label: Manual TTS (Override)

      - entity: input_boolean.tts_override
      - entity: select.tts_media_player_manual
      - entity: input_number.tts_volume_manual

  - entity: input_boolean.tts

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','tts')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.tts_alerts
        card_mod:
          style: |
            :host {
              --paper-item-icon-color: var(--entity-warning-color);
              --paper-item-icon-active-color:
                {% if states.alert|selectattr('attributes.category','eq','tts')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                {% else %} var(--state-icon-active-color)
                {% endif %}
              ;
            }

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: "automation.tts_*"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: sensor.dummy
        name: "TTS Automations"
        icon: mdi:sync-alert
        state: ""
        tap_action:
          action: none

card_mod:
  class: basic
