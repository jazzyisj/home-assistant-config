###############################################################################
## Alarm Settings Card
###############################################################################
type: entities
title: Alarm Settings
icon: mdi:alarm-light
show_header_toggle: false
state_color: true
entities:
  - entity: binary_sensor.alarm_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.alarm_connected','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: binary_sensor.nvr_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.nvr_connected','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - !include /config/lovelace/card/alarm/include/house_alarm.yaml

  - entity: alarm_control_panel.master
  - entity: alarm_control_panel.house
  - entity: alarm_control_panel.garage

  - entity: input_boolean.alarm_auto_arming
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.alarm_auto_arming','off') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: input_boolean.alarm_announcements
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.alarm_announcements','off') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: input_boolean.alarm_emails
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('input_boolean.alarm_emails','off') %} var(--entity-warning-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: input_boolean.camera_notifications
    card_mod:
      style: |
        :host {
          --paper-item-icon-color: var(--entity-warning-color);
        }

  - entity: input_boolean.alarm_triggered

  - entity: counter.alarm_code_error_count
    hold_action:
      action: call-service
      service: counter.reset
      confirmation:
        text: Are you sure you want to reset the counter?
      service_data:
        entity_id: counter.alarm_code_error_count

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: sensor.dummy
      name: 'Alarm Timers'
      icon: mdi:timer
      tap_action:
        action: none
    entities:
      - entity: timer.alarm_arming
        state_color: true

      - entity: timer.alarm_pending
        state_color: true

      - entity: timer.alarm_triggered_reset
        state_color: true

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','alarm')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      state_color: true
      padding: 5
      head:
        entity: input_boolean.alarm_alerts
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color: var(--entity-warning-color);
              --paper-item-icon-active-color:
                {% if states.alert|selectattr('attributes.category','eq','alarm')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                {% else %} var(--state-icon-active-color)
                {% endif %}
              ;
            }

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: 'automation.alarm_*'
      exclude:
        - entity_id: 'automation.alarm_clock*'
      options:
        state_color: true
        card_mod:
          style: | #STYLE doesn't work is_state(config.entity,'idle')
            :host {
              --paper-item-icon-color: var(--entity-warning-color);
            }
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      state_color: true
      padding: 5
      head:
        entity: input_boolean.alarm_automation
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color: var(--entity-warning-color);
            }

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: 'automation.lock_*'
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      state_color: true
      padding: 5
      head:
        entity: input_boolean.lock_automation
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color: var(--entity-warning-color);
            }
card_mod:
  class: basic
