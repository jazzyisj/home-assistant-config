###############################################################################
## NVR Cameras
###############################################################################
type: entities
title: "Lorex Camera Settings"
state_color: true
entities:
  - type: custom:auto-entities
    filter:
      include:
        - domain: camera
          attributes:
            type: nvr
          options:
            icon: mdi:cctv-off
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color: var(--entity-warning-color);
                }
      exclude:
        - state: idle
    sort:
      method: name
      ignore_case: true
    show_empty: false
    card:
      type: entities
      title: "Offline Cameras"
      state_color: true
      card_mod:
        class: basic

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: "binary_sensor.*tamper_detection"
          options:
            card_mod:
              style: |
                :host {
                  --paper-item-icon-active-color: var(--entity-warning-color);
                }
      exclude:
        - state: "off"
    sort:
      method: name
      ignore_case: true
    show_empty: false
    card:
      type: entities
      title: "Camera Tamper Detection"
      state_color: true
      card_mod:
        class: basic

  - entity: binary_sensor.lorex_nvr_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.lorex_nvr_connected','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: button.lorex_reboot
  - entity: button.lorex_set_system_date_and_time

  - type: button
    name: "View Cameras"
    icon: mdi:cctv
    action_name: "VIEW"
    tap_action:
      action: navigate
      navigation_path: nvr-cameras

  - entity: input_boolean.camera_notifications
    card_mod:
      style: |
        :host {
          --paper-item-icon-color: var(--entity-warning-color);
        }

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','camera')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.camera_alerts
        card_mod:
          style: |
            :host {
              --paper-item-icon-color: var(--entity-warning-color);
              --paper-item-icon-active-color:
                {% if states.alert|selectattr('attributes.category','eq','camera')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                {% else %} var(--state-icon-active-color)
                {% endif %}
              ;
            }

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: "automation.camera_*"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: sensor.dummy
        name: "Camera Automations"
        icon: mdi:sync-alert
        state: ""
        tap_action:
          action: none
card_mod:
  class: basic
