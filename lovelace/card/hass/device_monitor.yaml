###############################################################################
## Device and Sensor Monitor Card
###############################################################################
type: entities
title: 'Devices and Sensors'
icon: mdi:home-assistant
show_header_toggle: false
entities:
  - type: custom:fold-entity-row
    head:
      entity: sensor.offline_devices
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('sensor.offline_devices','0') %} var(--entity-ok-color)
              {% else %} var(--entity-warning-color)
              {% endif %}
            ;
          }
      padding: 0
    entities:
      - type: custom:hui-element
        card_type: markdown
        content: >
          {%- if states('sensor.offline_devices')|int(0) == 0 -%}
            No offline devices.
          {%- else -%}
            {%- for device in expand(state_attr('sensor.offline_devices','entities')) -%}
            - {{ device.name }}{%- if not loop.last -%}{{ '\n' }}{%- endif -%}
            {%- endfor -%}
          {%- endif -%}
        card_mod:
          class: sub_card

  - type: custom:fold-entity-row
    head:
      entity: sensor.offline_zwave_devices
      tap_action:
        action: fire-dom-event
        browser_mod:
          command: popup
          deviceID: this
          title: Wired Network Devices
          hide_header: true
          card: !include /config/lovelace/card/zwave/zwave_devices.yaml
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('binary_sensor.zwave_netowrk','off') %} var(--entity-critical-color)
              {% elif states('sensor.offline_zwave_devices')|int(-1) > 0 %} var(--entity-warning-color)
              {% else %} var(--entity-ok-color)
              {% endif -%}
            ;
          }
    padding: 0
    entities:
      - type: custom:hui-element
        card_type: markdown
        content: >
          {%- if is_state('binary_sensor.zwave_netowrk','off') %}
            The Z-Wave network is offline.
          {%- elif states('sensor.offline_zwave_devices')|int(-1) > 0 %}
            {%- for device in expand(state_attr('sensor.offline_zwave_devices','entities')) %}
            - {{ device.name|replace(': Node Status','') }}{% if not loop.last -%}{{ '\n' }}{% endif %}
            {%- endfor %}
          {%- else %}
            No offline ZWave devices.
          {%- endif %}
        card_mod:
          class: sub_card

  - type: custom:fold-entity-row
    head:
      entity: sensor.unavailable_sensors
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {%- if is_state('sensor.unavailable_sensors','0') %} var(--entity-ok-color)
              {%- else %} var(--entity-warning-color)
              {%- endif -%}
              ;
          }
      padding: 0
    entities:
      - type: custom:hui-element
        card_type: markdown
        content: >
          {%- if states('sensor.unavailable_sensors')|int(0) == 0 -%}
            No unavailable sensors.
          {%- else -%}
            {%- for sensor in expand(state_attr('sensor.unavailable_sensors','entities')) -%}
            - {{ sensor.name }}{%- if not loop.last -%}{{ '\n' }}{%- endif -%}
            {%- endfor -%}
          {%- endif -%}
        card_mod:
          class: sub_card

  - type: custom:fold-entity-row
    head:
      entity: sensor.unavailable_entities
      tap_action:
        action: none
      double_tap_action:
        action: more-info
      hold_action:
        action: more-info
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {%- if is_state('sensor.unavailable_entities','0') %} var(--entity-ok-color)
              {%- else %} var(--entity-warning-color)
              {%- endif -%}
              ;
          }
      padding: 0
    entities:
      - type: custom:hui-element
        card_type: markdown
        content: >
          {%- if states('sensor.unavailable_entities')|lower not in ['unknown','unavailable','none'] -%}
            {%- if states('sensor.unavailable_entities')|int(0) == 0 -%}
              No unavailable entities.
            {%- else -%}
              {%- for entity in state_attr('sensor.unavailable_entities','entities') -%}
              - {{ entity }}{%- if not loop.last -%}{{ '\n' }}{%- endif -%}
              {%- endfor -%}
            {%- endif -%}
          {%- endif -%}
        card_mod:
          class: sub_card

  - type: custom:fold-entity-row
    head:
      entity: binary_sensor.low_battery_alert
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('binary_sensor.low_battery_alert','on') %} var(--entity-critical-color)
              {% else %} var(--state-icon-color)
              {% endif %}
              ;
          }
    entities:
      - entity: input_number.battery_alert_threshold
card_mod:
  class: basic
