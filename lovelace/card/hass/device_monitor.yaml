###############################################################################
## Device and Sensor Monitor Card
###############################################################################
type: entities
title: 'Devices and Sensors'
icon: mdi:devices
show_header_toggle: false
state_color: true
entities:
  - type: custom:auto-entities
    show_empty: true
    unique: true
    sort:
      method: last-changed
    card:
      type: custom:fold-entity-row
      padding: 10
      head:
        entity: sensor.offline_devices
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.offline_devices')|int(0) > 0 %} var(--entity-severe-color)
              {% else %} var(--entity-ok-color)
              {% endif %}
            ;
          }
    filter:
      template: "{{ state_attr('sensor.offline_devices','entities') }}"

  - type: custom:auto-entities
    show_empty: true
    unique: true
    sort:
      method: last-changed
    card:
      type: custom:fold-entity-row
      padding: 10
      head:
        entity: sensor.offline_zwave_devices
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.offline_zwave_devices')|int(0) > 0 %} var(--entity-warning-color)
              {% else %} var(--entity-ok-color)
              {% endif %}
            ;
          }
    filter:
      template: "{{ state_attr('sensor.offline_zwave_devices','entities') }}"

  - type: custom:auto-entities
    show_empty: true
    unique: true
    sort:
      method: last-changed
    card:
      type: custom:fold-entity-row
      padding: 10
      head:
        entity: sensor.unavailable_sensors
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.unavailable_sensors')|int(0) > 0 %} var(--entity-warning-color)
              {% else %} var(--entity-ok-color)
              {% endif %}
            ;
          }
    filter:
      template: "{{ state_attr('sensor.unavailable_sensors','entities') }}"

  - type: custom:auto-entities
    show_empty: true
    unique: true
    sort:
      method: last-changed
    card:
      type: custom:fold-entity-row
      padding: 10
      head:
        entity: sensor.unavailable_entities
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.unavailable_entities')|int(0) > 0 %} var(--entity-warning-color)
              {% else %} var(--entity-ok-color)
              {% endif %}
            ;
          }
    filter:
      template: "{{ state_attr('sensor.unavailable_entities','entities') }}"

  - type: custom:fold-entity-row
    head:
      entity: binary_sensor.low_battery_alert
      card_mod:
        style: |
          :host {
            --paper-item-icon-color: var(--entity-ok-color);
            --paper-item-icon-active-color: var(--entity-warning-color);
          }
    entities:
      - entity: input_number.battery_alert_threshold
card_mod:
  class: basic
