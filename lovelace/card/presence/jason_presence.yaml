###############################################################################
# Presence Jason
###############################################################################
type: entities
state_color: true
entities:
  - type: custom:fold-entity-row
    head:
      entity: person.jason
      secondary_info: last-updated
      double_tap_action:
        action: fire-dom-event
        browser_mod:
          command: popup
          deviceID: this
          hide_header: true
          title: 'Jason Location'
          card: !include /config/lovelace/card/presence/jason_location.yaml
    entities:
      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.jason_home
          name: 'Jason Home'
          secondary_info: last-updated
          state_color: true
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {%- if is_state('input_boolean.home_override_jason','on') %} var(--entity-warning-color)
                  {%- elif is_state('binary_sensor.jason_home','on') %} var(--state-icon-active-color)
                  {%- else %} var(--state-icon-color)
                  {%- endif -%}
                ;
              }
        open_template: "{{ is_state('input_boolean.home_override_jason','on') }}"
        group_config:
          secondary_info: last-updated
        entities:
          - type: custom:multiple-entity-row
            entity: input_boolean.jason_home
            name: 'Toggle Home'
            state_header: Home
            state_color: true
            toggle: true
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {%- if is_state('input_boolean.home_override_jason','on') %} var(--entity-warning-color)
                    {%- else%} var(--state-icon-color)
                    {%- endif -%}
                    ;
                  --paper-item-icon-active-color:
                    {%- if is_state('input_boolean.home_override_jason','on') %} var(--entity-warning-color)
                    {%- else%} var(--state-icon-active-color)
                    {%- endif -%}
                  ;
                }
            entities:
              - entity: input_boolean.home_override_jason
                name: 'Override'
                state_color: true
                toggle: true
                card_mod:
                  style: |
                    :host {
                      --paper-item-icon-active-color: var(--entity-warning-color);
                    }

              - entity: input_boolean.jason_almost_home
                name: 'Almost Home'
                state_color: true
                toggle: true

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          entity: device_tracker.jason_tracker
          state: "{{ states('device_tracker.jason_tracker')|title }}"
          secondary: >
            {% if state_attr('device_tracker.jason_tracker','last_seen')|lower != 'none' %}
              {% set time = state_attr('device_tracker.jason_tracker','last_seen')|as_local %}
              Last Update: {{ time.strftime('Today at %-I:%M %p') if now().day == time.day else time.strftime('%A, %-I:%M %p') }}
            {% endif %}
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {%- if states('device_tracker.jason_tracker') =='home' %} var(--state-icon-active-color)
                  {%- else%} var(--state-icon-color)
                  {%- endif -%}
                ;
              }
        group_config:
          secondary_info: last-changed
        entities:
          - entity: device_tracker.jphone
            name: 'Phone Tracker'
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if states('device_tracker.jphone') =='home' %} var(--state-icon-active-color)
                    {% else%} var(--state-icon-color)
                    {% endif %}
                  ;
                }

          - entity: device_tracker.jphone_bt
            name: 'Phone Bluetooth'
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if states('device_tracker.jphone_bt') =='home' %} var(--state-icon-active-color)
                    {% else%} var(--state-icon-color)
                    {% endif %}
                  ;
                }

          - type: custom:fold-entity-row
            head:
              entity: binary_sensor.jason_phone_wifi_connected
            group_config:
              secondary_info: last-changed
            entities:
              - entity: device_tracker.jphone_wifi
                name: 'Phone WIFI - AP'
                card_mod:
                  style: |
                    :host {
                      --paper-item-icon-color:
                        {% if states('device_tracker.jphone_wifi') =='home' %} var(--state-icon-active-color)
                        {% else%} var(--state-icon-color)
                        {% endif %}
                      ;
                    }

              - entity: device_tracker.jphone_router_wifi
                name: 'Phone WIFI - Router'
                card_mod:
                  style: |
                    :host {
                      --paper-item-icon-color:
                        {% if states('device_tracker.jphone_router_wifi') =='home' %} var(--state-icon-active-color)
                        {% else%} var(--state-icon-color)
                        {% endif %}
                      ;
                    }

          - entity: device_tracker.jphone
            name: 'Phone Tracker'
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if states('device_tracker.jphone') =='home' %} var(--state-icon-active-color)
                    {% else%} var(--state-icon-color)
                    {% endif %}
                  ;
                }

          - type: custom:fold-entity-row
            head: switch.jason_phone_high_accuracy
            entities:
              - entity: binary_sensor.jphone_high_accuracy_mode

          - entity: button.jason_phone_update_location

  - !include /config/lovelace/bar/jason_time_bar_hui.yaml

  - type: conditional
    conditions:
      - entity: binary_sensor.jason_home
        state: 'off'
    row:
      entity: proximity.jphone_home
      name: 'Distance From Home'
      secondary_info: last-updated
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('proximity.jphone_home','not_set') %} var(--entity-warning-color)
              {% else %} var(--state-icon-active-color)
              {% endif %}
            ;
          }

  - type: conditional
    conditions:
      - entity: binary_sensor.jason_home
        state: 'off'
    row:
      type: custom:template-entity-row
      name: 'Current Address'
      icon: mdi:map-marker-radius
      secondary: "{{ states('sensor.jphone_geocoded_location') }}"
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if states('sensor.jphone_geocoded_location')|lower in ['unknown','unavailable','none'] %} var(--entity-warning-color)
              {% else %} var(--state-icon-active-color)
              {% endif %}
            ;
          }

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: binary_sensor.jason_phone_connected
      state: "{{ states('binary_sensor.jason_phone_connected')|title }}"
      secondary: >
        {% set time = state_attr('sensor.jason_phone_last_update','display_time') %}
        {% set minutes = state_attr('sensor.jason_phone_last_update','minutes_since_update')|int(-1) %}
        Last Update: {{ time }} ({{ minutes }} {{ 'minute' if minutes == 1 else 'minutes' }})
      tap_action:
        action: none
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {%- if is_state('binary_sensor.jason_phone_connected','on') %} var(--state-icon-active-color)
              {%- else %} var(--entity-warning-color)
              {%- endif -%}
            ;
          }
    state_color: true
    group_config:
      secondary_info: last-updated
    entities:
      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.jphone_wifi_state
          name: 'WIFI Connection'
          state_color: true
        group_config:
          secondary_info: last-updated
        entities:
          - entity: sensor.jphone_wifi_connection
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if not is_state('sensor.jphone_wifi_connection','<not connected>') %} var(--state-icon-active-color)
                    {% else %} var(--state-icon-color)
                    {% endif %}
                  ;
                }

          - entity: sensor.jphone_wifi_ip_address
            name: 'WIFI IP Address'

      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.jphone_mobile_data
          name: 'Mobile Data'
          secondary_info: last-updated
        group_config:
          secondary_info: last-updated
        entities:
          - entity: sensor.jphone_public_ip_address
            name: 'Public IP'

      - entity: switch.jason_phone_bluetooth

      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.jphone_bluetooth_state
          name: 'Bluetooth'
          state_color: true
        group_config:
          secondary_info: last-updated
        entities:
          - entity: sensor.jphone_bluetooth_connection
            name: 'Connected Devices(s)'

      - type: custom:fold-entity-row
        head:
          entity: sensor.jphone_phone_state
          name: 'Phone State'
          secondary_info: last-updated
        group_config:
          secondary_info: last-updated
        entities:
          - entity: sensor.jphone_ringer_mode
          - entity: select.jason_phone_ringer_mode

          - entity: sensor.jphone_volume_level_ringer
          - entity: number.jason_phone_ringer_volume

          - entity: sensor.jphone_volume_level_call
          #IDEA - entity: number.jason_phone_call_volume

          - entity: binary_sensor.jphone_speakerphone
          - entity: binary_sensor.jphone_mic_muted

      - type: custom:fold-entity-row
        head:
          entity: sensor.jphone_audio_mode
          name: 'Audio'
          secondary_info: last-updated
        group_config:
          secondary_info: last-updated
        entities:
          - entity: select.jason_phone_dnd
          - entity: sensor.jphone_do_not_disturb_sensor
            name: 'Do Not Disturb'
          - entity: binary_sensor.jphone_music_active

          - entity: sensor.jphone_volume_level_music
          - entity: number.jason_phone_media_volume

          - entity: binary_sensor.jphone_headphones
          - entity: sensor.jphone_media_session

      #TEMP until update entity
      - type: custom:fold-entity-row
        head:
          entity: binary_sensor.jason_phone_app_update_alert
          name: 'Phone App Update'
          secondary_info: last-updated
          tap_action:
            action: none
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {%- if is_state('binary_sensor.jason_phone_app_update_alert','off') %} var(--state-icon-active-color)
                  {%- else %} var(--entity-warning-color)
                  {%- endif -%}
                ;
              }
        group_config:
          secondary_info: last-updated
        entities:
          - entity: sensor.jphone_current_version
            name: 'Current Version'

      - type: custom:template-entity-row
        entity: binary_sensor.jphone_device_locked
        state: "{{ states('binary_sensor.jphone_device_locked')|title }}"
        name: 'Device Locked'
        secondary: >
          {% if states.binary_sensor.jphone_device_locked.last_changed is defined %}
            {{ states.binary_sensor.jphone_device_locked.last_changed|relative_time }} ago
          {% endif %}

      - type: custom:fold-entity-row
        head:
          type: custom:template-entity-row
          name: 'Other Sensors'
          icon: mdi:cellphone
        group_config:
          secondary_info: last-updated
        entities:
          - entity: sensor.jphone_last_reboot
            name: 'Last Reboot'

          - entity: sensor.jphone_last_update_trigger
            name: 'Last Update Trigger'

  - type: custom:fold-entity-row
    state_color: true
    head:
      type: custom:battery-state-entity
      entity: sensor.jphone_battery_level
      name: 'Battery Level'
      secondary_info: charging # only appears when charging is detected
      charging_state:
        entity_id: binary_sensor.jphone_is_charging
        state: 'on'
        secondary_info_text: 'Charging'
      tap_action:
        action: more-info
    group_config:
      secondary_info: last-updated
    entities:
      - entity: binary_sensor.jphone_is_charging

      - entity: sensor.jphone_battery_temperature
        name: 'Battery Temperature'

      - entity: sensor.jphone_battery_state
        name: 'Battery State'

      - entity: sensor.jphone_charger_type
        name: 'Charger Type'

      - entity: sensor.jphone_battery_health
        name: 'Battery Health'

      - entity: binary_sensor.jphone_power_save
        name: 'Power Saving'

  - type: custom:fold-entity-row
    head:
      type: custom:template-entity-row
      entity: sensor.jason_phone_next_alarm
      state: "{{ state_attr('sensor.jason_phone_next_alarm','12hour') }}"
      name: 'Next Alarm'
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {%- if not is_state('sensor.jason_phone_next_alarm','off') %} var(--state-icon-active-color)
              {%- else %} var(--state-icon-color)
              {%- endif -%}
            ;
          }
    group_config:
      secondary_info: last-updated
    entities:
      - entity: input_boolean.jason_phone_alarm_clock_enabled
      - entity: input_boolean.jason_phone_alarm_clock_notifications
      - entity: input_number.mobile_waketime_volume_jason
      - entity: sensor.jphone_volume_level_alarm
      - entity: number.jason_phone_alarm_volume

  - entity: input_boolean.media_preset_enabled_jason
  - entity: input_boolean.jason_phone_tts_enabled
  - entity: button.jason_phone_open_mobile_app
