###############################################################################
## Sensor Settings Card
###############################################################################
type: entities
title: Sensor Settings
icon: mdi:smoke-detector
show_header_toggle: false
state_color: true
entities:
  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','sensor')|map(attribute='entity_id')|list }}"
      options:
        state_color: true
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.sensor_alerts
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.sensor_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
              ;
              --paper-item-icon-active-color:
                {% if states.alert|selectattr('attributes.category','eq','sensor')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                {% else %} var(--state-icon-active-color)
                {% endif %}
              ;
            }
      padding: 5

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: 'automation.sensor_*'
          options:
            state_color: true
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: input_boolean.sensor_automation
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.sensor_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }
      padding: 5
card_mod:
  class: basic
