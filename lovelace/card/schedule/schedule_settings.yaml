###############################################################################
## Schedule Settings Card
###############################################################################
type: entities
title: 'Schedule Settings'
icon: mdi:calendar
show_header_toggle: false
state_color: true
entities:
  - entity: binary_sensor.google_calendar_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color: var(--entity-critical-color);
        }

  - type: buttons
    entities:
      - entity: sensor.dummy
        name: 'Update Calendar'
        icon: mdi:calendar
        tap_action:
          action: call-service
          service: homeassistant.update_entity
          service_data:
            entity_id:
              - calendar.days
              - calendar.afternoons
              - calendar.work_holiday
              - calendar.garbage
              - calendar.recycle
              - calendar.yardwaste
              - calendar.work_layoff
              - calendar.work_vacation_jason
              - calendar.work_vacation_sheri
    card_mod:
      style:
        hui-buttons-base $: |
          .ha-scrollbar {
            justify-content: center;
          }

  - type: attribute
    entity: sensor.next_waketime
    attribute: 12hour
    name: 'Next Wake Time'
    tap_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        deviceID: this
        title: 'Waketime Settings'
        hide_header: true
        card: !include /config/lovelace/card/schedule/waketime_settings.yaml
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if states('sensor.waketime_today')|lower in ['unknown','unavailable','none'] %} var(--state-icon-color)
            {% else %} var(--state-icon-active-color)
            {% endif %}
            ;
        }

  - type: attribute
    entity: sensor.next_bedtime
    attribute: 12hour
    name: 'Next Bed Time'
    tap_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        deviceID: this
        title: 'Bedtime Settings'
        hide_header: true
        card: !include /config/lovelace/card/schedule/bedtime_settings.yaml
    style: |
      :host {
        --paper-item-icon-color:
          {% if is_state('sensor.next_bedtime','off') %} var(--state-icon-color)
          {% else %} var(--state-icon-active-color)
          {% endif %}
          ;
      }

  - entity: binary_sensor.quiet_time
    tap_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        deviceID: this
        title: 'Quiet Time Settings'
        hide_header: true
        card: !include /config/lovelace/card/schedule/quiet_time_settings.yaml

  - entity: binary_sensor.work_schedule
    tap_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        deviceID: this
        title: 'Work Schedule Settings'
        hide_header: true
        card: !include /config/lovelace/card/schedule/work_schedule_settings.yaml

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','schedule')|map(attribute='entity_id')|list }}"
      options:
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state(config.entity,'on') %} var(--state-icon-active-color)
                {% else %} var(--state-icon-color)
                {% endif %}
                ;
            }
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 0
      head:
        entity: input_boolean.schedule_alerts
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.schedule_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
              ;
              --paper-item-icon-active-color:
                {% if states.alert|selectattr('attributes.category','eq','schedule')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                {% else %} var(--state-icon-active-color)
                {% endif %}
              ;
            }

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: 'automation.schedule_*'
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.schedule_automation
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.schedule_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }
card_mod:
  class: basic
