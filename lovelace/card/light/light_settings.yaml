###############################################################################
## Light Settings Card
###############################################################################
type: entities
title: Light Settings
icon: mdi:lightbulb
show_header_toggle: false
state_color: true
entities:
  - entity: binary_sensor.lutron_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.lutron_connected','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: binary_sensor.lutron_bridge_connected
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if is_state('binary_sensor.lutron_bridge_connected','off') %} var(--entity-critical-color)
            {% else %} var(--state-icon-color)
            {% endif %}
          ;
        }

  - entity: sensor.day_night

  - type: custom:auto-entities
    filter:
      include:
        - domain: light
      exclude:
        - state: 'off'
        - attributes: #BUG attributes must be separated or they don't work
            light_group: true
        - attributes:
            rgb_control: true
        - attributes:
            rgb_light: slave
        - attributes:
            type: volume
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.lights_on
        state_color: true

  - type: custom:auto-entities
    filter:
      include:
        - domain: timer
          attributes:
            type: light
      exclude:
        - state: idle
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.light_in_use
        state_color: true
      group_config:
        secondary_info: last-changed

  - type: custom:fold-entity-row
    state_color: true
    padding: 5
    head:
      entity: binary_sensor.nighttime_auto_light
      state_color: true
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('input_boolean.auto_light_enabled','off')
                  or is_state('input_boolean.auto_light_override','on') %} var(--entity-warning-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: input_boolean.auto_light_enabled
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.auto_light_enabled','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }
      - entity: input_boolean.auto_light_override
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.auto_light_override','on') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }
      - type: conditional
        conditions:
          - entity: input_boolean.auto_light_enabled
            state: 'on'
        row:
          entity: sensor.windsor_elevation
          name: 'Sun Elevation'

      - type: conditional
        conditions:
          - entity: input_boolean.auto_light_enabled
            state: 'on'
        row:
          type: custom:numberbox-card
          entity: input_number.lighting_on_sun_elevation
          name: Lights on
          unit: false
          icon_plus: mdi:plus-box-outline
          icon_minus: mdi:minus-box-outline

      - type: conditional
        conditions:
          - entity: input_boolean.auto_light_enabled
            state: 'on'
        row:
          type: custom:numberbox-card
          entity: input_number.lighting_off_sun_elevation
          name: Lights off
          unit: false
          icon_plus: mdi:plus-box-outline
          icon_minus: mdi:minus-box-outline

  - type: custom:fold-entity-row
    state_color: true
    padding: 5
    head:
      entity: binary_sensor.daytime_illuminance_light
      state_color: true
      card_mod:
        style: |
          :host {
            --paper-item-icon-color:
              {% if is_state('input_boolean.illuminance_light_enabled','off') %} var(--entity-warning-color)
              {% elif is_state('binary_sensor.daytime_illuminance_light','on') %} var(--state-icon-active-color)
              {% else %} var(--state-icon-color)
              {% endif %}
            ;
          }
    entities:
      - entity: input_boolean.illuminance_light_enabled
      - type: conditional
        conditions:
          - entity: input_boolean.illuminance_light_enabled
            state: 'on'
        row:
          entity: sensor.outdoor_illuminance

      - type: conditional
        conditions:
          - entity: input_boolean.illuminance_light_enabled
            state: 'on'
        row:
          type: custom:numberbox-card
          entity: input_number.illuminance_threshold
          name: 'Outdoor Lux Threshold'
          unit: false
          icon_plus: mdi:plus-box-outline
          icon_minus: mdi:minus-box-outline

  - type: custom:numberbox-card
    entity: input_number.bathroom_illuminance_threshold
    unit: false
    icon_plus: mdi:plus-box-outline
    icon_minus: mdi:minus-box-outline

  - type: custom:fold-entity-row
    head:
      entity: sensor.dummy
      name: 'Scene Settings'
      icon: mdi:movie-filter
    state_color: true
    entities:
      - type: custom:numberbox-card
        entity: input_number.chill_mode_duration
        unit: time
        icon_plus: mdi:plus-box-outline
        icon_minus: mdi:minus-box-outline

      - type: custom:numberbox-card
        entity: input_number.company_mode_duration
        unit: time
        icon_plus: mdi:plus-box-outline
        icon_minus: mdi:minus-box-outline

      - type: custom:numberbox-card
        entity: input_number.movie_mode_duration
        unit: time
        icon_plus: mdi:plus-box-outline
        icon_minus: mdi:minus-box-outline

      - type: custom:numberbox-card
        entity: input_number.shower_mode_duration
        unit: time
        icon_plus: mdi:plus-box-outline
        icon_minus: mdi:minus-box-outline

      - entity: timer.chill_mode
      - entity: timer.company_mode
      - entity: timer.movie_mode
      - entity: timer.shower_mode

  - type: custom:fold-entity-row
    state_color: true
    head:
      entity: switch.light_flux_dining_room
      state_color: true
    entities:
      - entity: switch.light_flux_dining_room
        name: Dining Room Light Flux
        style: |
          :host {
            --paper-item-icon-color: {{ states('sensor.flux_color_general') }};
            --paper-item-icon-active-color: {{ states('sensor.flux_color_general') }};
          }

      - entity: switch.light_flux_bathroom
        name: Bathroom Light Flux
        style: |
          :host {
            --paper-item-icon-color: {{ states('sensor.flux_color_bathroom') }};
            --paper-item-icon-active-color: {{ states('sensor.flux_color_bathroom') }};
          }

      - entity: switch.light_flux_bedroom
        name: Bedroom Light Flux
        style: |
          :host {
            --paper-item-icon-color: {{ states('sensor.flux_color_bedroom') }};
            --paper-item-icon-active-color: {{ states('sensor.flux_color_bedroom') }};
          }

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','light')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      state_color: true
      padding: 5
      head:
        entity: input_boolean.light_alerts
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.light_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
              ;
              --paper-item-icon-active-color:
                {% if states.alert|selectattr('attributes.category','eq','light')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                {% else %} var(--state-icon-active-color)
                {% endif %}
              ;
            }

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: 'automation.light_*'
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      state_color: true
      padding: 5
      head:
        entity: input_boolean.light_automation
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.light_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

  - type: custom:paper-buttons-row
    buttons:
      - entity: script.lights_on
        name: Lights On
        icon: mdi:lightbulb-multiple
        style:
          button:
            color: var(--state-icon-active-color)
            background-color: var(--table-row-alternative-background-color)
            border-radius: 40px
            padding: 10px
            font-size: 1.2rem
        tap_action:
          action: call-service
          service: script.lights_on

      - entity: script.lights_off
        name: Lights Off
        icon: mdi:lightbulb-multiple-off-outline
        style:
          button:
            color: var(--state-icon-active-color)
            background-color: var(--table-row-alternative-background-color)
            border-radius: 40px
            padding: 10px
            font-size: 1.2rem
        tap_action:
          action: call-service
          service: script.lights_off
card_mod:
  class: basic
