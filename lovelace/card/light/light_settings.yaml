###############################################################################
## Light Settings
###############################################################################
type: entities
title: 'Light Settings'
icon: mdi:lightbulb
show_header_toggle: false
state_color: true
entities:
  - entity: sensor.day_night

  - type: custom:auto-entities
    filter:
      include:
        - domain: light
          attributes:
            type: dimmer
        - domain: light
          attributes:
            type: switch
        - domain: light
          attributes:
            type: bulb
      exclude:
        - state: 'off'
        - attributes:
            rgb_light: control
        - attributes:
            rgb_light: slave
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.lights_on
        state_color: true

  - type: custom:auto-entities
    filter:
      include:
        - domain: timer
          attributes:
            type: light
      exclude:
        - state: idle
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      head:
        entity: binary_sensor.light_in_use
        state_color: true
      group_config:
        secondary_info: last-changed

  - type: custom:fold-entity-row
    padding: 0
    head:
      type: custom:template-entity-row
      entity: binary_sensor.nighttime_illuminance_lights
      name: 'Illuminance Settings'
      state: >
        {% if is_state('binary_sensor.nighttime_illuminance_lights','on') %} Nightime
        {% elif is_state('binary_sensor.daytime_illuminance_lights','on') %} Daytime
        {% elif is_state('binary_sensor.bathroom_illuminance_light','on') %} Bathroom
        {% else %} Off
        {% endif %}
    entities:
      - type: custom:fold-entity-row
        padding: 10
        head:
          entity: binary_sensor.nighttime_illuminance_lights
          state_color: true
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state('input_boolean.night_lights_enabled','off')
                      or is_state('input_boolean.night_lights_override','on') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
              }
        entities:
          - entity: input_boolean.night_lights_enabled
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if is_state('input_boolean.night_lights_enabled','off') %} var(--entity-warning-color)
                    {% else %} var(--state-icon-color)
                    {% endif %}
                  ;
                }

          - entity: input_boolean.night_lights_override
            card_mod:
              style: |
                :host {
                  --paper-item-icon-color:
                    {% if is_state('input_boolean.night_lights_override','on') %} var(--entity-warning-color)
                    {% else %} var(--state-icon-color)
                    {% endif %}
                  ;
                }

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: 'on'
            row:
              type: section
              label: Illuminance Sensor

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: 'on'
            row:
              entity: sensor.outdoor_illuminance

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: 'on'
            row:
              type: custom:numberbox-card
              entity: input_number.night_illuminance_threshold
              name: 'Lights Off'
              unit: false
              icon_plus: mdi:plus-box-outline
              icon_minus: mdi:minus-box-outline

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: 'on'
            row:
              type: section
              label: Sun Elevation Backup

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: 'on'
            row:
              type: attribute
              entity: sun.sun
              attribute: elevation
              name: 'Sun Elevation'

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: 'on'
            row:
              type: custom:numberbox-card
              entity: input_number.lights_on_sun_elevation
              name: 'Lights On'
              unit: false
              icon_plus: mdi:plus-box-outline
              icon_minus: mdi:minus-box-outline

          - type: conditional
            conditions:
              - entity: input_boolean.night_lights_enabled
                state: 'on'
            row:
              type: custom:numberbox-card
              entity: input_number.lights_off_sun_elevation
              name: 'Lights Off'
              unit: false
              icon_plus: mdi:plus-box-outline
              icon_minus: mdi:minus-box-outline

      - type: custom:fold-entity-row
        state_color: true
        padding: 10
        head:
          entity: binary_sensor.daytime_illuminance_lights
          state_color: true
          card_mod:
            style: |
              :host {
                --paper-item-icon-color:
                  {% if is_state('input_boolean.day_lights_enabled','off') %} var(--entity-warning-color)
                  {% elif is_state('binary_sensor.daytime_illuminance_lights','on') %} var(--state-icon-active-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
                ;
              }
        entities:
          - entity: input_boolean.day_lights_enabled
          - type: conditional
            conditions:
              - entity: input_boolean.day_lights_enabled
                state: 'on'
            row:
              entity: sensor.outdoor_illuminance

          - type: conditional
            conditions:
              - entity: input_boolean.day_lights_enabled
                state: 'on'
            row:
              type: custom:numberbox-card
              entity: input_number.day_illuminance_threshold
              name: 'Outdoor Lux Threshold'
              unit: false
              icon_plus: mdi:plus-box-outline
              icon_minus: mdi:minus-box-outline

      - type: custom:fold-entity-row
        state_color: true
        padding: 10
        head:
          entity: binary_sensor.bathroom_illuminance_light
          state_color: true
        entities:
          - entity: sensor.bathroom_sensor_illuminance
            name: 'Current Illuminance'

          - type: custom:numberbox-card
            entity: input_number.bathroom_illuminance_threshold
            unit: false
            icon_plus: mdi:plus-box-outline
            icon_minus: mdi:minus-box-outline

  - entity: switch.adaptive_lighting
    tap_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        deviceID: this
        hide_header: true
        title: 'Adaptive Light Settings'
        card: !include /config/lovelace/card/light/adaptive_light_settings.yaml

  - !include /config/lovelace/card/include/scene_settings.yaml
  - entity: button.reset_notification_leds

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','light')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      state_color: true
      padding: 5
      head:
        entity: input_boolean.light_alerts
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.light_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
              ;
              --paper-item-icon-active-color:
                {% if states.alert|selectattr('attributes.category','eq','light')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                {% else %} var(--state-icon-active-color)
                {% endif %}
              ;
            }

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: 'automation.light_*'
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      state_color: true
      padding: 5
      head:
        entity: input_boolean.light_automation
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.light_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

  - type: buttons
    entities:
      - entity: script.lights_on
        name: 'Lights On'
        tap_action:
          action: call-service
          service: script.lights_on

      - entity: script.lights_off
        name: 'Lights Off'
        tap_action:
          action: call-service
          service: script.lights_off
    card_mod:
      style:
        hui-buttons-base $: |
          .ha-scrollbar {
            justify-content: center;
          }
card_mod:
  class: basic
