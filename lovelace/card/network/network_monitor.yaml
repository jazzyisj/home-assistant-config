###############################################################################
## Network Monitor
###############################################################################
type: entities
title: 'Network Monitor'
icon: mdi:check-network
state_color: true
show_header_toggle: false
entities:
  - entity: sensor.myip
    card_mod:
      style: |
        :host {
          --paper-item-icon-color:
            {% if states('sensor.myip')|lower in ['unknown','unavailable','none'] %} var(--entity-critical-color)
            {% else %} var(--entity-ok-color)
            {% endif %}
          ;
        }

  - entity: binary_sensor.wan_connected
    card_mod:
      style: |
        @keyframes blink {
          50% {
            --paper-item-icon-color: var(--entity-warning-color);
          }
        }
        :host {
          --paper-item-icon-active-color: var(--entity-ok-color) ;
          --paper-item-icon-color: var(--entity-critical-color);
          {% if is_state('alert.wan_connected','on') %}animation: blink 0.5s linear infinite;{% endif %}
        }

  - !include /config/lovelace/card/network/include/network_connected_devices.yaml

  - type: custom:auto-entities
    filter:
      template: "{{ states.alert|selectattr('attributes.category','eq','network')|map(attribute='entity_id')|list }}"
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.network_alerts
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                  {% if is_state('input_boolean.network_alerts','off') %} var(--entity-warning-color)
                  {% else %} var(--state-icon-color)
                  {% endif %}
              ;
              --paper-item-icon-active-color:
                {% if states.alert|selectattr('attributes.category','eq','network')
                    |selectattr('state','ne','idle')|list|count > 0 %} var(--entity-severe-color)
                {% else %} var(--state-icon-active-color)
                {% endif %}
              ;
            }

  - type: custom:auto-entities
    filter:
      include:
        - entity_id: 'automation.network_*'
    sort:
      method: name
      ignore_case: true
    card:
      type: custom:fold-entity-row
      padding: 5
      head:
        entity: input_boolean.network_automation
        state_color: true
        card_mod:
          style: |
            :host {
              --paper-item-icon-color:
                {% if is_state('input_boolean.network_automation','off') %} var(--entity-warning-color)
                {% else %} var(--state-icon-color)
                {% endif %}
              ;
            }

  - type: buttons
    entities:
      - entity: sensor.speedtest_download
        name: 'WAN Speedtest'
        tap_action:
          action: call-service
          service: speedtestdotnet.speedtest
    card_mod:
      style:
        hui-buttons-base $: |
          .ha-scrollbar {
            justify-content: center;
          }
card_mod:
  class: basic
